<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1478" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1461.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1461.00"> </text><svg id="frames" x="10" width="1180" total_samples="15187"><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (7 samples, 0.05%)</title><rect x="0.0329%" y="997" width="0.0461%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="7"/><text x="0.2829%" y="1007.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (7 samples, 0.05%)</title><rect x="0.0329%" y="981" width="0.0461%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="7"/><text x="0.2829%" y="991.50"></text></g><g><title>exp (7 samples, 0.05%)</title><rect x="0.0329%" y="965" width="0.0461%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="7"/><text x="0.2829%" y="975.50"></text></g><g><title>[libm-2.31.so] (5 samples, 0.03%)</title><rect x="0.0461%" y="949" width="0.0329%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="5"/><text x="0.2961%" y="959.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (8 samples, 0.05%)</title><rect x="0.0329%" y="1013" width="0.0527%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="8"/><text x="0.2829%" y="1023.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (10 samples, 0.07%)</title><rect x="0.0329%" y="1061" width="0.0658%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="10"/><text x="0.2829%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.07%)</title><rect x="0.0329%" y="1045" width="0.0658%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="10"/><text x="0.2829%" y="1055.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (10 samples, 0.07%)</title><rect x="0.0329%" y="1029" width="0.0658%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="10"/><text x="0.2829%" y="1039.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.01%)</title><rect x="0.0856%" y="1013" width="0.0132%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="2"/><text x="0.3356%" y="1023.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::max (2 samples, 0.01%)</title><rect x="0.1054%" y="1061" width="0.0132%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="2"/><text x="0.3554%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="0.1054%" y="1045" width="0.0132%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="2"/><text x="0.3554%" y="1055.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::max::{{closure}} (2 samples, 0.01%)</title><rect x="0.1054%" y="1029" width="0.0132%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="2"/><text x="0.3554%" y="1039.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::max (2 samples, 0.01%)</title><rect x="0.1054%" y="1013" width="0.0132%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="2"/><text x="0.3554%" y="1023.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::max (2 samples, 0.01%)</title><rect x="0.1054%" y="997" width="0.0132%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="2"/><text x="0.3554%" y="1007.50"></text></g><g><title>criterion::kde::sweep (14 samples, 0.09%)</title><rect x="0.0329%" y="1093" width="0.0922%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="14"/><text x="0.2829%" y="1103.50"></text></g><g><title>criterion::kde::sweep_and_estimate (14 samples, 0.09%)</title><rect x="0.0329%" y="1077" width="0.0922%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="14"/><text x="0.2829%" y="1087.50"></text></g><g><title>&lt;criterion::plot::plotters_backend::PlottersBackend as criterion::plot::Plotter&gt;::abs_distributions (18 samples, 0.12%)</title><rect x="0.0132%" y="1237" width="0.1185%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1247.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distributions (18 samples, 0.12%)</title><rect x="0.0132%" y="1221" width="0.1185%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.12%)</title><rect x="0.0132%" y="1205" width="0.1185%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.12%)</title><rect x="0.0132%" y="1189" width="0.1185%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.12%)</title><rect x="0.0132%" y="1173" width="0.1185%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1183.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (18 samples, 0.12%)</title><rect x="0.0132%" y="1157" width="0.1185%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 0.12%)</title><rect x="0.0132%" y="1141" width="0.1185%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1151.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distributions::{{closure}} (18 samples, 0.12%)</title><rect x="0.0132%" y="1125" width="0.1185%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1135.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distribution (18 samples, 0.12%)</title><rect x="0.0132%" y="1109" width="0.1185%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="18"/><text x="0.2632%" y="1119.50"></text></g><g><title>bench_ex14::main (19 samples, 0.13%)</title><rect x="0.0132%" y="1381" width="0.1251%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1391.50"></text></g><g><title>bench_ex14::benches (19 samples, 0.13%)</title><rect x="0.0132%" y="1365" width="0.1251%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1375.50"></text></g><g><title>bench_ex14::criterion_benchmark (19 samples, 0.13%)</title><rect x="0.0132%" y="1349" width="0.1251%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1359.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (19 samples, 0.13%)</title><rect x="0.0132%" y="1333" width="0.1251%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1343.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (19 samples, 0.13%)</title><rect x="0.0132%" y="1317" width="0.1251%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1327.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (19 samples, 0.13%)</title><rect x="0.0132%" y="1301" width="0.1251%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1311.50"></text></g><g><title>criterion::analysis::common (19 samples, 0.13%)</title><rect x="0.0132%" y="1285" width="0.1251%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1295.50"></text></g><g><title>&lt;criterion::html::Html as criterion::report::Report&gt;::measurement_complete (19 samples, 0.13%)</title><rect x="0.0132%" y="1269" width="0.1251%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1279.50"></text></g><g><title>criterion::html::Html::generate_plots (19 samples, 0.13%)</title><rect x="0.0132%" y="1253" width="0.1251%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="19"/><text x="0.2632%" y="1263.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (2 samples, 0.01%)</title><rect x="0.1514%" y="1381" width="0.0132%" height="15" fill="rgb(241,83,37)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1391.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (2 samples, 0.01%)</title><rect x="0.1514%" y="1365" width="0.0132%" height="15" fill="rgb(233,36,39)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1375.50"></text></g><g><title>criterion::analysis::common (2 samples, 0.01%)</title><rect x="0.1514%" y="1349" width="0.0132%" height="15" fill="rgb(226,3,54)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1359.50"></text></g><g><title>&lt;criterion::html::Html as criterion::report::Report&gt;::measurement_complete (2 samples, 0.01%)</title><rect x="0.1514%" y="1333" width="0.0132%" height="15" fill="rgb(245,192,40)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1343.50"></text></g><g><title>criterion::html::Html::generate_plots (2 samples, 0.01%)</title><rect x="0.1514%" y="1317" width="0.0132%" height="15" fill="rgb(238,167,29)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1327.50"></text></g><g><title>&lt;criterion::plot::plotters_backend::PlottersBackend as criterion::plot::Plotter&gt;::abs_distributions (2 samples, 0.01%)</title><rect x="0.1514%" y="1301" width="0.0132%" height="15" fill="rgb(232,182,51)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1311.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distributions (2 samples, 0.01%)</title><rect x="0.1514%" y="1285" width="0.0132%" height="15" fill="rgb(231,60,39)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="0.1514%" y="1269" width="0.0132%" height="15" fill="rgb(208,69,12)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="0.1514%" y="1253" width="0.0132%" height="15" fill="rgb(235,93,37)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="0.1514%" y="1237" width="0.0132%" height="15" fill="rgb(213,116,39)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1247.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="0.1514%" y="1221" width="0.0132%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="0.1514%" y="1205" width="0.0132%" height="15" fill="rgb(206,96,30)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1215.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distributions::{{closure}} (2 samples, 0.01%)</title><rect x="0.1514%" y="1189" width="0.0132%" height="15" fill="rgb(218,138,4)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1199.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distribution (2 samples, 0.01%)</title><rect x="0.1514%" y="1173" width="0.0132%" height="15" fill="rgb(250,191,14)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1183.50"></text></g><g><title>plotters::chart::context::ChartContext&lt;DB,CT&gt;::draw_series (2 samples, 0.01%)</title><rect x="0.1514%" y="1157" width="0.0132%" height="15" fill="rgb(239,60,40)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1167.50"></text></g><g><title>plotters::chart::context::ChartContext&lt;DB,CT&gt;::draw_series_impl (2 samples, 0.01%)</title><rect x="0.1514%" y="1141" width="0.0132%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1151.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::draw (2 samples, 0.01%)</title><rect x="0.1514%" y="1125" width="0.0132%" height="15" fill="rgb(225,35,8)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1135.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::backend_ops (2 samples, 0.01%)</title><rect x="0.1514%" y="1109" width="0.0132%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1119.50"></text></g><g><title>plotters::drawing::area::DrawingArea&lt;DB,CT&gt;::draw::{{closure}} (2 samples, 0.01%)</title><rect x="0.1514%" y="1093" width="0.0132%" height="15" fill="rgb(247,123,22)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1103.50"></text></g><g><title>&lt;plotters::element::dynelem::DynElement&lt;DB,Coord&gt; as plotters::element::Drawable&lt;DB&gt;&gt;::draw (2 samples, 0.01%)</title><rect x="0.1514%" y="1077" width="0.0132%" height="15" fill="rgb(231,138,38)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1087.50"></text></g><g><title>&lt;T as plotters::element::dynelem::DynDrawable&lt;DB&gt;&gt;::draw_dyn (2 samples, 0.01%)</title><rect x="0.1514%" y="1061" width="0.0132%" height="15" fill="rgb(231,145,46)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1071.50"></text></g><g><title>&lt;plotters::element::basic_shapes::PathElement&lt;Coord&gt; as plotters::element::Drawable&lt;DB&gt;&gt;::draw (2 samples, 0.01%)</title><rect x="0.1514%" y="1045" width="0.0132%" height="15" fill="rgb(251,118,11)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1055.50"></text></g><g><title>&lt;plotters_svg::svg::SVGBackend as plotters_backend::DrawingBackend&gt;::draw_path (2 samples, 0.01%)</title><rect x="0.1514%" y="1029" width="0.0132%" height="15" fill="rgb(217,147,25)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="0.1514%" y="1013" width="0.0132%" height="15" fill="rgb(247,81,37)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1023.50"></text></g><g><title>&lt;plotters_svg::svg::SVGBackend as plotters_backend::DrawingBackend&gt;::draw_path::{{closure}} (2 samples, 0.01%)</title><rect x="0.1514%" y="997" width="0.0132%" height="15" fill="rgb(209,12,38)" fg:x="23" fg:w="2"/><text x="0.4014%" y="1007.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.03%)</title><rect x="0.1646%" y="805" width="0.0263%" height="15" fill="rgb(227,1,9)" fg:x="25" fg:w="4"/><text x="0.4146%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.03%)</title><rect x="0.1646%" y="789" width="0.0263%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="4"/><text x="0.4146%" y="799.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="0.1910%" y="773" width="0.0132%" height="15" fill="rgb(221,10,30)" fg:x="29" fg:w="2"/><text x="0.4410%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (7 samples, 0.05%)</title><rect x="0.1646%" y="933" width="0.0461%" height="15" fill="rgb(210,229,1)" fg:x="25" fg:w="7"/><text x="0.4146%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (7 samples, 0.05%)</title><rect x="0.1646%" y="917" width="0.0461%" height="15" fill="rgb(222,148,37)" fg:x="25" fg:w="7"/><text x="0.4146%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (7 samples, 0.05%)</title><rect x="0.1646%" y="901" width="0.0461%" height="15" fill="rgb(234,67,33)" fg:x="25" fg:w="7"/><text x="0.4146%" y="911.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (7 samples, 0.05%)</title><rect x="0.1646%" y="885" width="0.0461%" height="15" fill="rgb(247,98,35)" fg:x="25" fg:w="7"/><text x="0.4146%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.05%)</title><rect x="0.1646%" y="869" width="0.0461%" height="15" fill="rgb(247,138,52)" fg:x="25" fg:w="7"/><text x="0.4146%" y="879.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.05%)</title><rect x="0.1646%" y="853" width="0.0461%" height="15" fill="rgb(213,79,30)" fg:x="25" fg:w="7"/><text x="0.4146%" y="863.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.05%)</title><rect x="0.1646%" y="837" width="0.0461%" height="15" fill="rgb(246,177,23)" fg:x="25" fg:w="7"/><text x="0.4146%" y="847.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.05%)</title><rect x="0.1646%" y="821" width="0.0461%" height="15" fill="rgb(230,62,27)" fg:x="25" fg:w="7"/><text x="0.4146%" y="831.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="0.1910%" y="805" width="0.0198%" height="15" fill="rgb(216,154,8)" fg:x="29" fg:w="3"/><text x="0.4410%" y="815.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="0.1910%" y="789" width="0.0198%" height="15" fill="rgb(244,35,45)" fg:x="29" fg:w="3"/><text x="0.4410%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (12 samples, 0.08%)</title><rect x="0.1646%" y="1141" width="0.0790%" height="15" fill="rgb(251,115,12)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1151.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.08%)</title><rect x="0.1646%" y="1125" width="0.0790%" height="15" fill="rgb(240,54,50)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1135.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.08%)</title><rect x="0.1646%" y="1109" width="0.0790%" height="15" fill="rgb(233,84,52)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.08%)</title><rect x="0.1646%" y="1093" width="0.0790%" height="15" fill="rgb(207,117,47)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.08%)</title><rect x="0.1646%" y="1077" width="0.0790%" height="15" fill="rgb(249,43,39)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.08%)</title><rect x="0.1646%" y="1061" width="0.0790%" height="15" fill="rgb(209,38,44)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.08%)</title><rect x="0.1646%" y="1045" width="0.0790%" height="15" fill="rgb(236,212,23)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (12 samples, 0.08%)</title><rect x="0.1646%" y="1029" width="0.0790%" height="15" fill="rgb(242,79,21)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (12 samples, 0.08%)</title><rect x="0.1646%" y="1013" width="0.0790%" height="15" fill="rgb(211,96,35)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.08%)</title><rect x="0.1646%" y="997" width="0.0790%" height="15" fill="rgb(253,215,40)" fg:x="25" fg:w="12"/><text x="0.4146%" y="1007.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (12 samples, 0.08%)</title><rect x="0.1646%" y="981" width="0.0790%" height="15" fill="rgb(211,81,21)" fg:x="25" fg:w="12"/><text x="0.4146%" y="991.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.08%)</title><rect x="0.1646%" y="965" width="0.0790%" height="15" fill="rgb(208,190,38)" fg:x="25" fg:w="12"/><text x="0.4146%" y="975.50"></text></g><g><title>criterion::analysis::estimates::stats (12 samples, 0.08%)</title><rect x="0.1646%" y="949" width="0.0790%" height="15" fill="rgb(235,213,38)" fg:x="25" fg:w="12"/><text x="0.4146%" y="959.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (5 samples, 0.03%)</title><rect x="0.2107%" y="933" width="0.0329%" height="15" fill="rgb(237,122,38)" fg:x="32" fg:w="5"/><text x="0.4607%" y="943.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (5 samples, 0.03%)</title><rect x="0.2107%" y="917" width="0.0329%" height="15" fill="rgb(244,218,35)" fg:x="32" fg:w="5"/><text x="0.4607%" y="927.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (5 samples, 0.03%)</title><rect x="0.2107%" y="901" width="0.0329%" height="15" fill="rgb(240,68,47)" fg:x="32" fg:w="5"/><text x="0.4607%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.03%)</title><rect x="0.2107%" y="885" width="0.0329%" height="15" fill="rgb(210,16,53)" fg:x="32" fg:w="5"/><text x="0.4607%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.03%)</title><rect x="0.2107%" y="869" width="0.0329%" height="15" fill="rgb(235,124,12)" fg:x="32" fg:w="5"/><text x="0.4607%" y="879.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.03%)</title><rect x="0.2107%" y="853" width="0.0329%" height="15" fill="rgb(224,169,11)" fg:x="32" fg:w="5"/><text x="0.4607%" y="863.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (5 samples, 0.03%)</title><rect x="0.2107%" y="837" width="0.0329%" height="15" fill="rgb(250,166,2)" fg:x="32" fg:w="5"/><text x="0.4607%" y="847.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.03%)</title><rect x="0.2173%" y="821" width="0.0263%" height="15" fill="rgb(242,216,29)" fg:x="33" fg:w="4"/><text x="0.4673%" y="831.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="0.2173%" y="805" width="0.0263%" height="15" fill="rgb(230,116,27)" fg:x="33" fg:w="4"/><text x="0.4673%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="0.2239%" y="789" width="0.0198%" height="15" fill="rgb(228,99,48)" fg:x="34" fg:w="3"/><text x="0.4739%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="0.2239%" y="773" width="0.0198%" height="15" fill="rgb(253,11,6)" fg:x="34" fg:w="3"/><text x="0.4739%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="0.2239%" y="757" width="0.0198%" height="15" fill="rgb(247,143,39)" fg:x="34" fg:w="3"/><text x="0.4739%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (2 samples, 0.01%)</title><rect x="0.2502%" y="901" width="0.0132%" height="15" fill="rgb(236,97,10)" fg:x="38" fg:w="2"/><text x="0.5002%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (2 samples, 0.01%)</title><rect x="0.2502%" y="885" width="0.0132%" height="15" fill="rgb(233,208,19)" fg:x="38" fg:w="2"/><text x="0.5002%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.01%)</title><rect x="0.2502%" y="869" width="0.0132%" height="15" fill="rgb(216,164,2)" fg:x="38" fg:w="2"/><text x="0.5002%" y="879.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (26 samples, 0.17%)</title><rect x="0.1646%" y="1205" width="0.1712%" height="15" fill="rgb(220,129,5)" fg:x="25" fg:w="26"/><text x="0.4146%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.17%)</title><rect x="0.1646%" y="1189" width="0.1712%" height="15" fill="rgb(242,17,10)" fg:x="25" fg:w="26"/><text x="0.4146%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.17%)</title><rect x="0.1646%" y="1173" width="0.1712%" height="15" fill="rgb(242,107,0)" fg:x="25" fg:w="26"/><text x="0.4146%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.17%)</title><rect x="0.1646%" y="1157" width="0.1712%" height="15" fill="rgb(251,28,31)" fg:x="25" fg:w="26"/><text x="0.4146%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.09%)</title><rect x="0.2436%" y="1141" width="0.0922%" height="15" fill="rgb(233,223,10)" fg:x="37" fg:w="14"/><text x="0.4936%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.09%)</title><rect x="0.2436%" y="1125" width="0.0922%" height="15" fill="rgb(215,21,27)" fg:x="37" fg:w="14"/><text x="0.4936%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.09%)</title><rect x="0.2436%" y="1109" width="0.0922%" height="15" fill="rgb(232,23,21)" fg:x="37" fg:w="14"/><text x="0.4936%" y="1119.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.09%)</title><rect x="0.2436%" y="1093" width="0.0922%" height="15" fill="rgb(244,5,23)" fg:x="37" fg:w="14"/><text x="0.4936%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.09%)</title><rect x="0.2436%" y="1077" width="0.0922%" height="15" fill="rgb(226,81,46)" fg:x="37" fg:w="14"/><text x="0.4936%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.09%)</title><rect x="0.2436%" y="1061" width="0.0922%" height="15" fill="rgb(247,70,30)" fg:x="37" fg:w="14"/><text x="0.4936%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.09%)</title><rect x="0.2436%" y="1045" width="0.0922%" height="15" fill="rgb(212,68,19)" fg:x="37" fg:w="14"/><text x="0.4936%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.09%)</title><rect x="0.2502%" y="1029" width="0.0856%" height="15" fill="rgb(240,187,13)" fg:x="38" fg:w="13"/><text x="0.5002%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.09%)</title><rect x="0.2502%" y="1013" width="0.0856%" height="15" fill="rgb(223,113,26)" fg:x="38" fg:w="13"/><text x="0.5002%" y="1023.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.09%)</title><rect x="0.2502%" y="997" width="0.0856%" height="15" fill="rgb(206,192,2)" fg:x="38" fg:w="13"/><text x="0.5002%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.09%)</title><rect x="0.2502%" y="981" width="0.0856%" height="15" fill="rgb(241,108,4)" fg:x="38" fg:w="13"/><text x="0.5002%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.09%)</title><rect x="0.2502%" y="965" width="0.0856%" height="15" fill="rgb(247,173,49)" fg:x="38" fg:w="13"/><text x="0.5002%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.09%)</title><rect x="0.2502%" y="949" width="0.0856%" height="15" fill="rgb(224,114,35)" fg:x="38" fg:w="13"/><text x="0.5002%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.09%)</title><rect x="0.2502%" y="933" width="0.0856%" height="15" fill="rgb(245,159,27)" fg:x="38" fg:w="13"/><text x="0.5002%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.09%)</title><rect x="0.2502%" y="917" width="0.0856%" height="15" fill="rgb(245,172,44)" fg:x="38" fg:w="13"/><text x="0.5002%" y="927.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (11 samples, 0.07%)</title><rect x="0.2634%" y="901" width="0.0724%" height="15" fill="rgb(236,23,11)" fg:x="40" fg:w="11"/><text x="0.5134%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.07%)</title><rect x="0.2634%" y="885" width="0.0724%" height="15" fill="rgb(205,117,38)" fg:x="40" fg:w="11"/><text x="0.5134%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (11 samples, 0.07%)</title><rect x="0.2634%" y="869" width="0.0724%" height="15" fill="rgb(237,72,25)" fg:x="40" fg:w="11"/><text x="0.5134%" y="879.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (10 samples, 0.07%)</title><rect x="0.2700%" y="853" width="0.0658%" height="15" fill="rgb(244,70,9)" fg:x="41" fg:w="10"/><text x="0.5200%" y="863.50"></text></g><g><title>oorandom::Rand64::rand_range (9 samples, 0.06%)</title><rect x="0.2766%" y="837" width="0.0593%" height="15" fill="rgb(217,125,39)" fg:x="42" fg:w="9"/><text x="0.5266%" y="847.50"></text></g><g><title>oorandom::Rand64::rand_u64 (6 samples, 0.04%)</title><rect x="0.2963%" y="821" width="0.0395%" height="15" fill="rgb(235,36,10)" fg:x="45" fg:w="6"/><text x="0.5463%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (3 samples, 0.02%)</title><rect x="0.3358%" y="869" width="0.0198%" height="15" fill="rgb(251,123,47)" fg:x="51" fg:w="3"/><text x="0.5858%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (3 samples, 0.02%)</title><rect x="0.3358%" y="853" width="0.0198%" height="15" fill="rgb(221,13,13)" fg:x="51" fg:w="3"/><text x="0.5858%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (3 samples, 0.02%)</title><rect x="0.3358%" y="837" width="0.0198%" height="15" fill="rgb(238,131,9)" fg:x="51" fg:w="3"/><text x="0.5858%" y="847.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (3 samples, 0.02%)</title><rect x="0.3358%" y="821" width="0.0198%" height="15" fill="rgb(211,50,8)" fg:x="51" fg:w="3"/><text x="0.5858%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="0.3358%" y="805" width="0.0198%" height="15" fill="rgb(245,182,24)" fg:x="51" fg:w="3"/><text x="0.5858%" y="815.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="0.3358%" y="789" width="0.0198%" height="15" fill="rgb(242,14,37)" fg:x="51" fg:w="3"/><text x="0.5858%" y="799.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="0.3358%" y="773" width="0.0198%" height="15" fill="rgb(246,228,12)" fg:x="51" fg:w="3"/><text x="0.5858%" y="783.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="0.3358%" y="757" width="0.0198%" height="15" fill="rgb(213,55,15)" fg:x="51" fg:w="3"/><text x="0.5858%" y="767.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="0.3424%" y="741" width="0.0132%" height="15" fill="rgb(209,9,3)" fg:x="52" fg:w="2"/><text x="0.5924%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="0.3622%" y="757" width="0.0132%" height="15" fill="rgb(230,59,30)" fg:x="55" fg:w="2"/><text x="0.6122%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="0.3622%" y="741" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="55" fg:w="2"/><text x="0.6122%" y="751.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (37 samples, 0.24%)</title><rect x="0.1646%" y="1317" width="0.2436%" height="15" fill="rgb(220,109,13)" fg:x="25" fg:w="37"/><text x="0.4146%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (37 samples, 0.24%)</title><rect x="0.1646%" y="1301" width="0.2436%" height="15" fill="rgb(232,18,1)" fg:x="25" fg:w="37"/><text x="0.4146%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.24%)</title><rect x="0.1646%" y="1285" width="0.2436%" height="15" fill="rgb(215,41,42)" fg:x="25" fg:w="37"/><text x="0.4146%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.24%)</title><rect x="0.1646%" y="1269" width="0.2436%" height="15" fill="rgb(224,123,36)" fg:x="25" fg:w="37"/><text x="0.4146%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (37 samples, 0.24%)</title><rect x="0.1646%" y="1253" width="0.2436%" height="15" fill="rgb(240,125,3)" fg:x="25" fg:w="37"/><text x="0.4146%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (37 samples, 0.24%)</title><rect x="0.1646%" y="1237" width="0.2436%" height="15" fill="rgb(205,98,50)" fg:x="25" fg:w="37"/><text x="0.4146%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (37 samples, 0.24%)</title><rect x="0.1646%" y="1221" width="0.2436%" height="15" fill="rgb(205,185,37)" fg:x="25" fg:w="37"/><text x="0.4146%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.07%)</title><rect x="0.3358%" y="1205" width="0.0724%" height="15" fill="rgb(238,207,15)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.07%)</title><rect x="0.3358%" y="1189" width="0.0724%" height="15" fill="rgb(213,199,42)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1199.50"></text></g><g><title>std::panicking::try (11 samples, 0.07%)</title><rect x="0.3358%" y="1173" width="0.0724%" height="15" fill="rgb(235,201,11)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.07%)</title><rect x="0.3358%" y="1157" width="0.0724%" height="15" fill="rgb(207,46,11)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1167.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.07%)</title><rect x="0.3358%" y="1141" width="0.0724%" height="15" fill="rgb(241,35,35)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.07%)</title><rect x="0.3358%" y="1125" width="0.0724%" height="15" fill="rgb(243,32,47)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.07%)</title><rect x="0.3358%" y="1109" width="0.0724%" height="15" fill="rgb(247,202,23)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.07%)</title><rect x="0.3358%" y="1093" width="0.0724%" height="15" fill="rgb(219,102,11)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 0.07%)</title><rect x="0.3358%" y="1077" width="0.0724%" height="15" fill="rgb(243,110,44)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.07%)</title><rect x="0.3358%" y="1061" width="0.0724%" height="15" fill="rgb(222,74,54)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1071.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.07%)</title><rect x="0.3358%" y="1045" width="0.0724%" height="15" fill="rgb(216,99,12)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.07%)</title><rect x="0.3358%" y="1029" width="0.0724%" height="15" fill="rgb(226,22,26)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.07%)</title><rect x="0.3358%" y="1013" width="0.0724%" height="15" fill="rgb(217,163,10)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.07%)</title><rect x="0.3358%" y="997" width="0.0724%" height="15" fill="rgb(213,25,53)" fg:x="51" fg:w="11"/><text x="0.5858%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.07%)</title><rect x="0.3358%" y="981" width="0.0724%" height="15" fill="rgb(252,105,26)" fg:x="51" fg:w="11"/><text x="0.5858%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.07%)</title><rect x="0.3358%" y="965" width="0.0724%" height="15" fill="rgb(220,39,43)" fg:x="51" fg:w="11"/><text x="0.5858%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (11 samples, 0.07%)</title><rect x="0.3358%" y="949" width="0.0724%" height="15" fill="rgb(229,68,48)" fg:x="51" fg:w="11"/><text x="0.5858%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (11 samples, 0.07%)</title><rect x="0.3358%" y="933" width="0.0724%" height="15" fill="rgb(252,8,32)" fg:x="51" fg:w="11"/><text x="0.5858%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (11 samples, 0.07%)</title><rect x="0.3358%" y="917" width="0.0724%" height="15" fill="rgb(223,20,43)" fg:x="51" fg:w="11"/><text x="0.5858%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.07%)</title><rect x="0.3358%" y="901" width="0.0724%" height="15" fill="rgb(229,81,49)" fg:x="51" fg:w="11"/><text x="0.5858%" y="911.50"></text></g><g><title>criterion::analysis::estimates::stats (11 samples, 0.07%)</title><rect x="0.3358%" y="885" width="0.0724%" height="15" fill="rgb(236,28,36)" fg:x="51" fg:w="11"/><text x="0.5858%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (8 samples, 0.05%)</title><rect x="0.3556%" y="869" width="0.0527%" height="15" fill="rgb(249,185,26)" fg:x="54" fg:w="8"/><text x="0.6056%" y="879.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (8 samples, 0.05%)</title><rect x="0.3556%" y="853" width="0.0527%" height="15" fill="rgb(249,174,33)" fg:x="54" fg:w="8"/><text x="0.6056%" y="863.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (8 samples, 0.05%)</title><rect x="0.3556%" y="837" width="0.0527%" height="15" fill="rgb(233,201,37)" fg:x="54" fg:w="8"/><text x="0.6056%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.3556%" y="821" width="0.0527%" height="15" fill="rgb(221,78,26)" fg:x="54" fg:w="8"/><text x="0.6056%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.3556%" y="805" width="0.0527%" height="15" fill="rgb(250,127,30)" fg:x="54" fg:w="8"/><text x="0.6056%" y="815.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.3556%" y="789" width="0.0527%" height="15" fill="rgb(230,49,44)" fg:x="54" fg:w="8"/><text x="0.6056%" y="799.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.05%)</title><rect x="0.3622%" y="773" width="0.0461%" height="15" fill="rgb(229,67,23)" fg:x="55" fg:w="7"/><text x="0.6122%" y="783.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="0.3753%" y="757" width="0.0329%" height="15" fill="rgb(249,83,47)" fg:x="57" fg:w="5"/><text x="0.6253%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="0.3819%" y="741" width="0.0263%" height="15" fill="rgb(215,43,3)" fg:x="58" fg:w="4"/><text x="0.6319%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="0.3885%" y="725" width="0.0198%" height="15" fill="rgb(238,154,13)" fg:x="59" fg:w="3"/><text x="0.6385%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="0.3885%" y="709" width="0.0198%" height="15" fill="rgb(219,56,2)" fg:x="59" fg:w="3"/><text x="0.6385%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="0.3885%" y="693" width="0.0198%" height="15" fill="rgb(233,0,4)" fg:x="59" fg:w="3"/><text x="0.6385%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="0.4082%" y="741" width="0.0132%" height="15" fill="rgb(235,30,7)" fg:x="62" fg:w="2"/><text x="0.6582%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="0.4082%" y="725" width="0.0132%" height="15" fill="rgb(250,79,13)" fg:x="62" fg:w="2"/><text x="0.6582%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="0.4412%" y="709" width="0.0132%" height="15" fill="rgb(211,146,34)" fg:x="67" fg:w="2"/><text x="0.6912%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (9 samples, 0.06%)</title><rect x="0.4082%" y="869" width="0.0593%" height="15" fill="rgb(228,22,38)" fg:x="62" fg:w="9"/><text x="0.6582%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (9 samples, 0.06%)</title><rect x="0.4082%" y="853" width="0.0593%" height="15" fill="rgb(235,168,5)" fg:x="62" fg:w="9"/><text x="0.6582%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (9 samples, 0.06%)</title><rect x="0.4082%" y="837" width="0.0593%" height="15" fill="rgb(221,155,16)" fg:x="62" fg:w="9"/><text x="0.6582%" y="847.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (9 samples, 0.06%)</title><rect x="0.4082%" y="821" width="0.0593%" height="15" fill="rgb(215,215,53)" fg:x="62" fg:w="9"/><text x="0.6582%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.06%)</title><rect x="0.4082%" y="805" width="0.0593%" height="15" fill="rgb(223,4,10)" fg:x="62" fg:w="9"/><text x="0.6582%" y="815.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.06%)</title><rect x="0.4082%" y="789" width="0.0593%" height="15" fill="rgb(234,103,6)" fg:x="62" fg:w="9"/><text x="0.6582%" y="799.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.06%)</title><rect x="0.4082%" y="773" width="0.0593%" height="15" fill="rgb(227,97,0)" fg:x="62" fg:w="9"/><text x="0.6582%" y="783.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (9 samples, 0.06%)</title><rect x="0.4082%" y="757" width="0.0593%" height="15" fill="rgb(234,150,53)" fg:x="62" fg:w="9"/><text x="0.6582%" y="767.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (7 samples, 0.05%)</title><rect x="0.4214%" y="741" width="0.0461%" height="15" fill="rgb(228,201,54)" fg:x="64" fg:w="7"/><text x="0.6714%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="0.4412%" y="725" width="0.0263%" height="15" fill="rgb(222,22,37)" fg:x="67" fg:w="4"/><text x="0.6912%" y="735.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.4543%" y="709" width="0.0132%" height="15" fill="rgb(237,53,32)" fg:x="69" fg:w="2"/><text x="0.7043%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.4543%" y="693" width="0.0132%" height="15" fill="rgb(233,25,53)" fg:x="69" fg:w="2"/><text x="0.7043%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.4543%" y="677" width="0.0132%" height="15" fill="rgb(210,40,34)" fg:x="69" fg:w="2"/><text x="0.7043%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (17 samples, 0.11%)</title><rect x="0.4082%" y="1077" width="0.1119%" height="15" fill="rgb(241,220,44)" fg:x="62" fg:w="17"/><text x="0.6582%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17 samples, 0.11%)</title><rect x="0.4082%" y="1061" width="0.1119%" height="15" fill="rgb(235,28,35)" fg:x="62" fg:w="17"/><text x="0.6582%" y="1071.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17 samples, 0.11%)</title><rect x="0.4082%" y="1045" width="0.1119%" height="15" fill="rgb(210,56,17)" fg:x="62" fg:w="17"/><text x="0.6582%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.11%)</title><rect x="0.4082%" y="1029" width="0.1119%" height="15" fill="rgb(224,130,29)" fg:x="62" fg:w="17"/><text x="0.6582%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.11%)</title><rect x="0.4082%" y="1013" width="0.1119%" height="15" fill="rgb(235,212,8)" fg:x="62" fg:w="17"/><text x="0.6582%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.11%)</title><rect x="0.4082%" y="997" width="0.1119%" height="15" fill="rgb(223,33,50)" fg:x="62" fg:w="17"/><text x="0.6582%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.11%)</title><rect x="0.4082%" y="981" width="0.1119%" height="15" fill="rgb(219,149,13)" fg:x="62" fg:w="17"/><text x="0.6582%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (17 samples, 0.11%)</title><rect x="0.4082%" y="965" width="0.1119%" height="15" fill="rgb(250,156,29)" fg:x="62" fg:w="17"/><text x="0.6582%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (17 samples, 0.11%)</title><rect x="0.4082%" y="949" width="0.1119%" height="15" fill="rgb(216,193,19)" fg:x="62" fg:w="17"/><text x="0.6582%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (17 samples, 0.11%)</title><rect x="0.4082%" y="933" width="0.1119%" height="15" fill="rgb(216,135,14)" fg:x="62" fg:w="17"/><text x="0.6582%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (17 samples, 0.11%)</title><rect x="0.4082%" y="917" width="0.1119%" height="15" fill="rgb(241,47,5)" fg:x="62" fg:w="17"/><text x="0.6582%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 0.11%)</title><rect x="0.4082%" y="901" width="0.1119%" height="15" fill="rgb(233,42,35)" fg:x="62" fg:w="17"/><text x="0.6582%" y="911.50"></text></g><g><title>criterion::analysis::estimates::stats (17 samples, 0.11%)</title><rect x="0.4082%" y="885" width="0.1119%" height="15" fill="rgb(231,13,6)" fg:x="62" fg:w="17"/><text x="0.6582%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (8 samples, 0.05%)</title><rect x="0.4675%" y="869" width="0.0527%" height="15" fill="rgb(207,181,40)" fg:x="71" fg:w="8"/><text x="0.7175%" y="879.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (8 samples, 0.05%)</title><rect x="0.4675%" y="853" width="0.0527%" height="15" fill="rgb(254,173,49)" fg:x="71" fg:w="8"/><text x="0.7175%" y="863.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (8 samples, 0.05%)</title><rect x="0.4675%" y="837" width="0.0527%" height="15" fill="rgb(221,1,38)" fg:x="71" fg:w="8"/><text x="0.7175%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.4675%" y="821" width="0.0527%" height="15" fill="rgb(206,124,46)" fg:x="71" fg:w="8"/><text x="0.7175%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.4675%" y="805" width="0.0527%" height="15" fill="rgb(249,21,11)" fg:x="71" fg:w="8"/><text x="0.7175%" y="815.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.4675%" y="789" width="0.0527%" height="15" fill="rgb(222,201,40)" fg:x="71" fg:w="8"/><text x="0.7175%" y="799.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (6 samples, 0.04%)</title><rect x="0.4807%" y="773" width="0.0395%" height="15" fill="rgb(235,61,29)" fg:x="73" fg:w="6"/><text x="0.7307%" y="783.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.04%)</title><rect x="0.4807%" y="757" width="0.0395%" height="15" fill="rgb(219,207,3)" fg:x="73" fg:w="6"/><text x="0.7307%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="0.5004%" y="741" width="0.0198%" height="15" fill="rgb(222,56,46)" fg:x="76" fg:w="3"/><text x="0.7504%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="0.5004%" y="725" width="0.0198%" height="15" fill="rgb(239,76,54)" fg:x="76" fg:w="3"/><text x="0.7504%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="0.5004%" y="709" width="0.0198%" height="15" fill="rgb(231,124,27)" fg:x="76" fg:w="3"/><text x="0.7504%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="0.5004%" y="693" width="0.0198%" height="15" fill="rgb(249,195,6)" fg:x="76" fg:w="3"/><text x="0.7504%" y="703.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (18 samples, 0.12%)</title><rect x="0.4082%" y="1141" width="0.1185%" height="15" fill="rgb(237,174,47)" fg:x="62" fg:w="18"/><text x="0.6582%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.12%)</title><rect x="0.4082%" y="1125" width="0.1185%" height="15" fill="rgb(206,201,31)" fg:x="62" fg:w="18"/><text x="0.6582%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.12%)</title><rect x="0.4082%" y="1109" width="0.1185%" height="15" fill="rgb(231,57,52)" fg:x="62" fg:w="18"/><text x="0.6582%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.12%)</title><rect x="0.4082%" y="1093" width="0.1185%" height="15" fill="rgb(248,177,22)" fg:x="62" fg:w="18"/><text x="0.6582%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.03%)</title><rect x="0.5268%" y="677" width="0.0263%" height="15" fill="rgb(215,211,37)" fg:x="80" fg:w="4"/><text x="0.7768%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.03%)</title><rect x="0.5268%" y="661" width="0.0263%" height="15" fill="rgb(241,128,51)" fg:x="80" fg:w="4"/><text x="0.7768%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (15 samples, 0.10%)</title><rect x="0.5268%" y="805" width="0.0988%" height="15" fill="rgb(227,165,31)" fg:x="80" fg:w="15"/><text x="0.7768%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.10%)</title><rect x="0.5268%" y="789" width="0.0988%" height="15" fill="rgb(228,167,24)" fg:x="80" fg:w="15"/><text x="0.7768%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (15 samples, 0.10%)</title><rect x="0.5268%" y="773" width="0.0988%" height="15" fill="rgb(228,143,12)" fg:x="80" fg:w="15"/><text x="0.7768%" y="783.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (15 samples, 0.10%)</title><rect x="0.5268%" y="757" width="0.0988%" height="15" fill="rgb(249,149,8)" fg:x="80" fg:w="15"/><text x="0.7768%" y="767.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.10%)</title><rect x="0.5268%" y="741" width="0.0988%" height="15" fill="rgb(243,35,44)" fg:x="80" fg:w="15"/><text x="0.7768%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.10%)</title><rect x="0.5268%" y="725" width="0.0988%" height="15" fill="rgb(246,89,9)" fg:x="80" fg:w="15"/><text x="0.7768%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.10%)</title><rect x="0.5268%" y="709" width="0.0988%" height="15" fill="rgb(233,213,13)" fg:x="80" fg:w="15"/><text x="0.7768%" y="719.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (15 samples, 0.10%)</title><rect x="0.5268%" y="693" width="0.0988%" height="15" fill="rgb(233,141,41)" fg:x="80" fg:w="15"/><text x="0.7768%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (11 samples, 0.07%)</title><rect x="0.5531%" y="677" width="0.0724%" height="15" fill="rgb(239,167,4)" fg:x="84" fg:w="11"/><text x="0.8031%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (6 samples, 0.04%)</title><rect x="0.5860%" y="661" width="0.0395%" height="15" fill="rgb(209,217,16)" fg:x="89" fg:w="6"/><text x="0.8360%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.04%)</title><rect x="0.5860%" y="645" width="0.0395%" height="15" fill="rgb(219,88,35)" fg:x="89" fg:w="6"/><text x="0.8360%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (6 samples, 0.04%)</title><rect x="0.5860%" y="629" width="0.0395%" height="15" fill="rgb(220,193,23)" fg:x="89" fg:w="6"/><text x="0.8360%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (6 samples, 0.04%)</title><rect x="0.5860%" y="613" width="0.0395%" height="15" fill="rgb(230,90,52)" fg:x="89" fg:w="6"/><text x="0.8360%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="0.6255%" y="693" width="0.0132%" height="15" fill="rgb(252,106,19)" fg:x="95" fg:w="2"/><text x="0.8755%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="0.6255%" y="677" width="0.0132%" height="15" fill="rgb(206,74,20)" fg:x="95" fg:w="2"/><text x="0.8755%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="0.6519%" y="613" width="0.0132%" height="15" fill="rgb(230,138,44)" fg:x="99" fg:w="2"/><text x="0.9019%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="0.6519%" y="597" width="0.0132%" height="15" fill="rgb(235,182,43)" fg:x="99" fg:w="2"/><text x="0.9019%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (22 samples, 0.14%)</title><rect x="0.5268%" y="1013" width="0.1449%" height="15" fill="rgb(242,16,51)" fg:x="80" fg:w="22"/><text x="0.7768%" y="1023.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (22 samples, 0.14%)</title><rect x="0.5268%" y="997" width="0.1449%" height="15" fill="rgb(248,9,4)" fg:x="80" fg:w="22"/><text x="0.7768%" y="1007.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (22 samples, 0.14%)</title><rect x="0.5268%" y="981" width="0.1449%" height="15" fill="rgb(210,31,22)" fg:x="80" fg:w="22"/><text x="0.7768%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.14%)</title><rect x="0.5268%" y="965" width="0.1449%" height="15" fill="rgb(239,54,39)" fg:x="80" fg:w="22"/><text x="0.7768%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.14%)</title><rect x="0.5268%" y="949" width="0.1449%" height="15" fill="rgb(230,99,41)" fg:x="80" fg:w="22"/><text x="0.7768%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.14%)</title><rect x="0.5268%" y="933" width="0.1449%" height="15" fill="rgb(253,106,12)" fg:x="80" fg:w="22"/><text x="0.7768%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.14%)</title><rect x="0.5268%" y="917" width="0.1449%" height="15" fill="rgb(213,46,41)" fg:x="80" fg:w="22"/><text x="0.7768%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (22 samples, 0.14%)</title><rect x="0.5268%" y="901" width="0.1449%" height="15" fill="rgb(215,133,35)" fg:x="80" fg:w="22"/><text x="0.7768%" y="911.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (22 samples, 0.14%)</title><rect x="0.5268%" y="885" width="0.1449%" height="15" fill="rgb(213,28,5)" fg:x="80" fg:w="22"/><text x="0.7768%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (22 samples, 0.14%)</title><rect x="0.5268%" y="869" width="0.1449%" height="15" fill="rgb(215,77,49)" fg:x="80" fg:w="22"/><text x="0.7768%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (22 samples, 0.14%)</title><rect x="0.5268%" y="853" width="0.1449%" height="15" fill="rgb(248,100,22)" fg:x="80" fg:w="22"/><text x="0.7768%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (22 samples, 0.14%)</title><rect x="0.5268%" y="837" width="0.1449%" height="15" fill="rgb(208,67,9)" fg:x="80" fg:w="22"/><text x="0.7768%" y="847.50"></text></g><g><title>criterion::analysis::estimates::stats (22 samples, 0.14%)</title><rect x="0.5268%" y="821" width="0.1449%" height="15" fill="rgb(219,133,21)" fg:x="80" fg:w="22"/><text x="0.7768%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (7 samples, 0.05%)</title><rect x="0.6255%" y="805" width="0.0461%" height="15" fill="rgb(246,46,29)" fg:x="95" fg:w="7"/><text x="0.8755%" y="815.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (7 samples, 0.05%)</title><rect x="0.6255%" y="789" width="0.0461%" height="15" fill="rgb(246,185,52)" fg:x="95" fg:w="7"/><text x="0.8755%" y="799.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (7 samples, 0.05%)</title><rect x="0.6255%" y="773" width="0.0461%" height="15" fill="rgb(252,136,11)" fg:x="95" fg:w="7"/><text x="0.8755%" y="783.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.05%)</title><rect x="0.6255%" y="757" width="0.0461%" height="15" fill="rgb(219,138,53)" fg:x="95" fg:w="7"/><text x="0.8755%" y="767.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.05%)</title><rect x="0.6255%" y="741" width="0.0461%" height="15" fill="rgb(211,51,23)" fg:x="95" fg:w="7"/><text x="0.8755%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.05%)</title><rect x="0.6255%" y="725" width="0.0461%" height="15" fill="rgb(247,221,28)" fg:x="95" fg:w="7"/><text x="0.8755%" y="735.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.05%)</title><rect x="0.6255%" y="709" width="0.0461%" height="15" fill="rgb(251,222,45)" fg:x="95" fg:w="7"/><text x="0.8755%" y="719.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="0.6387%" y="693" width="0.0329%" height="15" fill="rgb(217,162,53)" fg:x="97" fg:w="5"/><text x="0.8887%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="0.6453%" y="677" width="0.0263%" height="15" fill="rgb(229,93,14)" fg:x="98" fg:w="4"/><text x="0.8953%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.03%)</title><rect x="0.6453%" y="661" width="0.0263%" height="15" fill="rgb(209,67,49)" fg:x="98" fg:w="4"/><text x="0.8953%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.03%)</title><rect x="0.6453%" y="645" width="0.0263%" height="15" fill="rgb(213,87,29)" fg:x="98" fg:w="4"/><text x="0.8953%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.03%)</title><rect x="0.6453%" y="629" width="0.0263%" height="15" fill="rgb(205,151,52)" fg:x="98" fg:w="4"/><text x="0.8953%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (78 samples, 0.51%)</title><rect x="0.1646%" y="1381" width="0.5136%" height="15" fill="rgb(253,215,39)" fg:x="25" fg:w="78"/><text x="0.4146%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (78 samples, 0.51%)</title><rect x="0.1646%" y="1365" width="0.5136%" height="15" fill="rgb(221,220,41)" fg:x="25" fg:w="78"/><text x="0.4146%" y="1375.50"></text></g><g><title>rayon_core::registry::in_worker (78 samples, 0.51%)</title><rect x="0.1646%" y="1349" width="0.5136%" height="15" fill="rgb(218,133,21)" fg:x="25" fg:w="78"/><text x="0.4146%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (78 samples, 0.51%)</title><rect x="0.1646%" y="1333" width="0.5136%" height="15" fill="rgb(221,193,43)" fg:x="25" fg:w="78"/><text x="0.4146%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (41 samples, 0.27%)</title><rect x="0.4082%" y="1317" width="0.2700%" height="15" fill="rgb(240,128,52)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.27%)</title><rect x="0.4082%" y="1301" width="0.2700%" height="15" fill="rgb(253,114,12)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1311.50"></text></g><g><title>std::panicking::try (41 samples, 0.27%)</title><rect x="0.4082%" y="1285" width="0.2700%" height="15" fill="rgb(215,223,47)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.27%)</title><rect x="0.4082%" y="1269" width="0.2700%" height="15" fill="rgb(248,225,23)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1279.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.27%)</title><rect x="0.4082%" y="1253" width="0.2700%" height="15" fill="rgb(250,108,0)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (41 samples, 0.27%)</title><rect x="0.4082%" y="1237" width="0.2700%" height="15" fill="rgb(228,208,7)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (41 samples, 0.27%)</title><rect x="0.4082%" y="1221" width="0.2700%" height="15" fill="rgb(244,45,10)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.27%)</title><rect x="0.4082%" y="1205" width="0.2700%" height="15" fill="rgb(207,125,25)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1215.50"></text></g><g><title>rayon_core::join::join_context (41 samples, 0.27%)</title><rect x="0.4082%" y="1189" width="0.2700%" height="15" fill="rgb(210,195,18)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (41 samples, 0.27%)</title><rect x="0.4082%" y="1173" width="0.2700%" height="15" fill="rgb(249,80,12)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.27%)</title><rect x="0.4082%" y="1157" width="0.2700%" height="15" fill="rgb(221,65,9)" fg:x="62" fg:w="41"/><text x="0.6582%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.15%)</title><rect x="0.5268%" y="1141" width="0.1514%" height="15" fill="rgb(235,49,36)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.15%)</title><rect x="0.5268%" y="1125" width="0.1514%" height="15" fill="rgb(225,32,20)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1135.50"></text></g><g><title>std::panicking::try (23 samples, 0.15%)</title><rect x="0.5268%" y="1109" width="0.1514%" height="15" fill="rgb(215,141,46)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.15%)</title><rect x="0.5268%" y="1093" width="0.1514%" height="15" fill="rgb(250,160,47)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.15%)</title><rect x="0.5268%" y="1077" width="0.1514%" height="15" fill="rgb(216,222,40)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (23 samples, 0.15%)</title><rect x="0.5268%" y="1061" width="0.1514%" height="15" fill="rgb(234,217,39)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.15%)</title><rect x="0.5268%" y="1045" width="0.1514%" height="15" fill="rgb(207,178,40)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.15%)</title><rect x="0.5268%" y="1029" width="0.1514%" height="15" fill="rgb(221,136,13)" fg:x="80" fg:w="23"/><text x="0.7768%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (3 samples, 0.02%)</title><rect x="0.7177%" y="629" width="0.0198%" height="15" fill="rgb(249,199,10)" fg:x="109" fg:w="3"/><text x="0.9677%" y="639.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="0.7177%" y="613" width="0.0198%" height="15" fill="rgb(249,222,13)" fg:x="109" fg:w="3"/><text x="0.9677%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="0.7177%" y="597" width="0.0198%" height="15" fill="rgb(244,185,38)" fg:x="109" fg:w="3"/><text x="0.9677%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="0.7375%" y="613" width="0.0132%" height="15" fill="rgb(236,202,9)" fg:x="112" fg:w="2"/><text x="0.9875%" y="623.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (15 samples, 0.10%)</title><rect x="0.6848%" y="661" width="0.0988%" height="15" fill="rgb(250,229,37)" fg:x="104" fg:w="15"/><text x="0.9348%" y="671.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (13 samples, 0.09%)</title><rect x="0.6980%" y="645" width="0.0856%" height="15" fill="rgb(206,174,23)" fg:x="106" fg:w="13"/><text x="0.9480%" y="655.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (7 samples, 0.05%)</title><rect x="0.7375%" y="629" width="0.0461%" height="15" fill="rgb(211,33,43)" fg:x="112" fg:w="7"/><text x="0.9875%" y="639.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="0.7506%" y="613" width="0.0329%" height="15" fill="rgb(245,58,50)" fg:x="114" fg:w="5"/><text x="1.0006%" y="623.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="0.7506%" y="597" width="0.0329%" height="15" fill="rgb(244,68,36)" fg:x="114" fg:w="5"/><text x="1.0006%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="0.7506%" y="581" width="0.0329%" height="15" fill="rgb(232,229,15)" fg:x="114" fg:w="5"/><text x="1.0006%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.12%)</title><rect x="0.6782%" y="757" width="0.1185%" height="15" fill="rgb(254,30,23)" fg:x="103" fg:w="18"/><text x="0.9282%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.12%)</title><rect x="0.6782%" y="741" width="0.1185%" height="15" fill="rgb(235,160,14)" fg:x="103" fg:w="18"/><text x="0.9282%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (18 samples, 0.12%)</title><rect x="0.6782%" y="725" width="0.1185%" height="15" fill="rgb(212,155,44)" fg:x="103" fg:w="18"/><text x="0.9282%" y="735.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (18 samples, 0.12%)</title><rect x="0.6782%" y="709" width="0.1185%" height="15" fill="rgb(226,2,50)" fg:x="103" fg:w="18"/><text x="0.9282%" y="719.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.12%)</title><rect x="0.6782%" y="693" width="0.1185%" height="15" fill="rgb(234,177,6)" fg:x="103" fg:w="18"/><text x="0.9282%" y="703.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.12%)</title><rect x="0.6782%" y="677" width="0.1185%" height="15" fill="rgb(217,24,9)" fg:x="103" fg:w="18"/><text x="0.9282%" y="687.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="0.7836%" y="661" width="0.0132%" height="15" fill="rgb(220,13,46)" fg:x="119" fg:w="2"/><text x="1.0336%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="0.8297%" y="629" width="0.0198%" height="15" fill="rgb(239,221,27)" fg:x="126" fg:w="3"/><text x="1.0797%" y="639.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (13 samples, 0.09%)</title><rect x="0.8099%" y="677" width="0.0856%" height="15" fill="rgb(222,198,25)" fg:x="123" fg:w="13"/><text x="1.0599%" y="687.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (13 samples, 0.09%)</title><rect x="0.8099%" y="661" width="0.0856%" height="15" fill="rgb(211,99,13)" fg:x="123" fg:w="13"/><text x="1.0599%" y="671.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (10 samples, 0.07%)</title><rect x="0.8297%" y="645" width="0.0658%" height="15" fill="rgb(232,111,31)" fg:x="126" fg:w="10"/><text x="1.0797%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.05%)</title><rect x="0.8494%" y="629" width="0.0461%" height="15" fill="rgb(245,82,37)" fg:x="129" fg:w="7"/><text x="1.0994%" y="639.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (7 samples, 0.05%)</title><rect x="0.8494%" y="613" width="0.0461%" height="15" fill="rgb(227,149,46)" fg:x="129" fg:w="7"/><text x="1.0994%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (7 samples, 0.05%)</title><rect x="0.8494%" y="597" width="0.0461%" height="15" fill="rgb(218,36,50)" fg:x="129" fg:w="7"/><text x="1.0994%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (3 samples, 0.02%)</title><rect x="0.8757%" y="581" width="0.0198%" height="15" fill="rgb(226,80,48)" fg:x="133" fg:w="3"/><text x="1.1257%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (3 samples, 0.02%)</title><rect x="0.8757%" y="565" width="0.0198%" height="15" fill="rgb(238,224,15)" fg:x="133" fg:w="3"/><text x="1.1257%" y="575.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (37 samples, 0.24%)</title><rect x="0.6782%" y="1381" width="0.2436%" height="15" fill="rgb(241,136,10)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="1365" width="0.2436%" height="15" fill="rgb(208,32,45)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="1349" width="0.2436%" height="15" fill="rgb(207,135,9)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.24%)</title><rect x="0.6782%" y="1333" width="0.2436%" height="15" fill="rgb(206,86,44)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (37 samples, 0.24%)</title><rect x="0.6782%" y="1317" width="0.2436%" height="15" fill="rgb(245,177,15)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (37 samples, 0.24%)</title><rect x="0.6782%" y="1301" width="0.2436%" height="15" fill="rgb(206,64,50)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="1285" width="0.2436%" height="15" fill="rgb(234,36,40)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (37 samples, 0.24%)</title><rect x="0.6782%" y="1269" width="0.2436%" height="15" fill="rgb(213,64,8)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.24%)</title><rect x="0.6782%" y="1253" width="0.2436%" height="15" fill="rgb(210,75,36)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1263.50"></text></g><g><title>std::panicking::try (37 samples, 0.24%)</title><rect x="0.6782%" y="1237" width="0.2436%" height="15" fill="rgb(229,88,21)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.24%)</title><rect x="0.6782%" y="1221" width="0.2436%" height="15" fill="rgb(252,204,47)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.24%)</title><rect x="0.6782%" y="1205" width="0.2436%" height="15" fill="rgb(208,77,27)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="1189" width="0.2436%" height="15" fill="rgb(221,76,26)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="1173" width="0.2436%" height="15" fill="rgb(225,139,18)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.24%)</title><rect x="0.6782%" y="1157" width="0.2436%" height="15" fill="rgb(230,137,11)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (37 samples, 0.24%)</title><rect x="0.6782%" y="1141" width="0.2436%" height="15" fill="rgb(212,28,1)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (37 samples, 0.24%)</title><rect x="0.6782%" y="1125" width="0.2436%" height="15" fill="rgb(248,164,17)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="1109" width="0.2436%" height="15" fill="rgb(222,171,42)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (37 samples, 0.24%)</title><rect x="0.6782%" y="1093" width="0.2436%" height="15" fill="rgb(243,84,45)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.24%)</title><rect x="0.6782%" y="1077" width="0.2436%" height="15" fill="rgb(252,49,23)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1087.50"></text></g><g><title>std::panicking::try (37 samples, 0.24%)</title><rect x="0.6782%" y="1061" width="0.2436%" height="15" fill="rgb(215,19,7)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.24%)</title><rect x="0.6782%" y="1045" width="0.2436%" height="15" fill="rgb(238,81,41)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.24%)</title><rect x="0.6782%" y="1029" width="0.2436%" height="15" fill="rgb(210,199,37)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="1013" width="0.2436%" height="15" fill="rgb(244,192,49)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="997" width="0.2436%" height="15" fill="rgb(226,211,11)" fg:x="103" fg:w="37"/><text x="0.9282%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.24%)</title><rect x="0.6782%" y="981" width="0.2436%" height="15" fill="rgb(236,162,54)" fg:x="103" fg:w="37"/><text x="0.9282%" y="991.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (37 samples, 0.24%)</title><rect x="0.6782%" y="965" width="0.2436%" height="15" fill="rgb(220,229,9)" fg:x="103" fg:w="37"/><text x="0.9282%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (37 samples, 0.24%)</title><rect x="0.6782%" y="949" width="0.2436%" height="15" fill="rgb(250,87,22)" fg:x="103" fg:w="37"/><text x="0.9282%" y="959.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (37 samples, 0.24%)</title><rect x="0.6782%" y="933" width="0.2436%" height="15" fill="rgb(239,43,17)" fg:x="103" fg:w="37"/><text x="0.9282%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.24%)</title><rect x="0.6782%" y="917" width="0.2436%" height="15" fill="rgb(231,177,25)" fg:x="103" fg:w="37"/><text x="0.9282%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.24%)</title><rect x="0.6782%" y="901" width="0.2436%" height="15" fill="rgb(219,179,1)" fg:x="103" fg:w="37"/><text x="0.9282%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.24%)</title><rect x="0.6782%" y="885" width="0.2436%" height="15" fill="rgb(238,219,53)" fg:x="103" fg:w="37"/><text x="0.9282%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.24%)</title><rect x="0.6782%" y="869" width="0.2436%" height="15" fill="rgb(232,167,36)" fg:x="103" fg:w="37"/><text x="0.9282%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="853" width="0.2436%" height="15" fill="rgb(244,19,51)" fg:x="103" fg:w="37"/><text x="0.9282%" y="863.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="837" width="0.2436%" height="15" fill="rgb(224,6,22)" fg:x="103" fg:w="37"/><text x="0.9282%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (37 samples, 0.24%)</title><rect x="0.6782%" y="821" width="0.2436%" height="15" fill="rgb(224,145,5)" fg:x="103" fg:w="37"/><text x="0.9282%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (37 samples, 0.24%)</title><rect x="0.6782%" y="805" width="0.2436%" height="15" fill="rgb(234,130,49)" fg:x="103" fg:w="37"/><text x="0.9282%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (37 samples, 0.24%)</title><rect x="0.6782%" y="789" width="0.2436%" height="15" fill="rgb(254,6,2)" fg:x="103" fg:w="37"/><text x="0.9282%" y="799.50"></text></g><g><title>criterion::analysis::estimates::stats (37 samples, 0.24%)</title><rect x="0.6782%" y="773" width="0.2436%" height="15" fill="rgb(208,96,46)" fg:x="103" fg:w="37"/><text x="0.9282%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (19 samples, 0.13%)</title><rect x="0.7967%" y="757" width="0.1251%" height="15" fill="rgb(239,3,39)" fg:x="121" fg:w="19"/><text x="1.0467%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (19 samples, 0.13%)</title><rect x="0.7967%" y="741" width="0.1251%" height="15" fill="rgb(233,210,1)" fg:x="121" fg:w="19"/><text x="1.0467%" y="751.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (19 samples, 0.13%)</title><rect x="0.7967%" y="725" width="0.1251%" height="15" fill="rgb(244,137,37)" fg:x="121" fg:w="19"/><text x="1.0467%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.13%)</title><rect x="0.7967%" y="709" width="0.1251%" height="15" fill="rgb(240,136,2)" fg:x="121" fg:w="19"/><text x="1.0467%" y="719.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.13%)</title><rect x="0.7967%" y="693" width="0.1251%" height="15" fill="rgb(239,18,37)" fg:x="121" fg:w="19"/><text x="1.0467%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.03%)</title><rect x="0.8955%" y="677" width="0.0263%" height="15" fill="rgb(218,185,22)" fg:x="136" fg:w="4"/><text x="1.1455%" y="687.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (4 samples, 0.03%)</title><rect x="0.8955%" y="661" width="0.0263%" height="15" fill="rgb(225,218,4)" fg:x="136" fg:w="4"/><text x="1.1455%" y="671.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.9087%" y="645" width="0.0132%" height="15" fill="rgb(230,182,32)" fg:x="138" fg:w="2"/><text x="1.1587%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.9087%" y="629" width="0.0132%" height="15" fill="rgb(242,56,43)" fg:x="138" fg:w="2"/><text x="1.1587%" y="639.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.9087%" y="613" width="0.0132%" height="15" fill="rgb(233,99,24)" fg:x="138" fg:w="2"/><text x="1.1587%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.9087%" y="597" width="0.0132%" height="15" fill="rgb(234,209,42)" fg:x="138" fg:w="2"/><text x="1.1587%" y="607.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (2 samples, 0.01%)</title><rect x="0.9284%" y="757" width="0.0132%" height="15" fill="rgb(227,7,12)" fg:x="141" fg:w="2"/><text x="1.1784%" y="767.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="0.9284%" y="741" width="0.0132%" height="15" fill="rgb(245,203,43)" fg:x="141" fg:w="2"/><text x="1.1784%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.9284%" y="725" width="0.0132%" height="15" fill="rgb(238,205,33)" fg:x="141" fg:w="2"/><text x="1.1784%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="0.9284%" y="709" width="0.0132%" height="15" fill="rgb(231,56,7)" fg:x="141" fg:w="2"/><text x="1.1784%" y="719.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.9416%" y="741" width="0.0132%" height="15" fill="rgb(244,186,29)" fg:x="143" fg:w="2"/><text x="1.1916%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.9416%" y="725" width="0.0132%" height="15" fill="rgb(234,111,31)" fg:x="143" fg:w="2"/><text x="1.1916%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.9416%" y="709" width="0.0132%" height="15" fill="rgb(241,149,10)" fg:x="143" fg:w="2"/><text x="1.1916%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.9416%" y="693" width="0.0132%" height="15" fill="rgb(249,206,44)" fg:x="143" fg:w="2"/><text x="1.1916%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.9679%" y="725" width="0.0132%" height="15" fill="rgb(251,153,30)" fg:x="147" fg:w="2"/><text x="1.2179%" y="735.50"></text></g><g><title>rayon::slice::quicksort::partition (7 samples, 0.05%)</title><rect x="0.9416%" y="757" width="0.0461%" height="15" fill="rgb(239,152,38)" fg:x="143" fg:w="7"/><text x="1.1916%" y="767.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="0.9548%" y="741" width="0.0329%" height="15" fill="rgb(249,139,47)" fg:x="145" fg:w="5"/><text x="1.2048%" y="751.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="1.0338%" y="693" width="0.0132%" height="15" fill="rgb(244,64,35)" fg:x="157" fg:w="2"/><text x="1.2838%" y="703.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (11 samples, 0.07%)</title><rect x="0.9943%" y="741" width="0.0724%" height="15" fill="rgb(216,46,15)" fg:x="151" fg:w="11"/><text x="1.2443%" y="751.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (10 samples, 0.07%)</title><rect x="1.0009%" y="725" width="0.0658%" height="15" fill="rgb(250,74,19)" fg:x="152" fg:w="10"/><text x="1.2509%" y="735.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="1.0338%" y="709" width="0.0329%" height="15" fill="rgb(249,42,33)" fg:x="157" fg:w="5"/><text x="1.2838%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.0469%" y="693" width="0.0198%" height="15" fill="rgb(242,149,17)" fg:x="159" fg:w="3"/><text x="1.2969%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.0469%" y="677" width="0.0198%" height="15" fill="rgb(244,29,21)" fg:x="159" fg:w="3"/><text x="1.2969%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.0469%" y="661" width="0.0198%" height="15" fill="rgb(220,130,37)" fg:x="159" fg:w="3"/><text x="1.2969%" y="671.50"></text></g><g><title>rayon::slice::quicksort::partition (7 samples, 0.05%)</title><rect x="1.0667%" y="741" width="0.0461%" height="15" fill="rgb(211,67,2)" fg:x="162" fg:w="7"/><text x="1.3167%" y="751.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="1.0799%" y="725" width="0.0329%" height="15" fill="rgb(235,68,52)" fg:x="164" fg:w="5"/><text x="1.3299%" y="735.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.0930%" y="709" width="0.0198%" height="15" fill="rgb(246,142,3)" fg:x="166" fg:w="3"/><text x="1.3430%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.0996%" y="693" width="0.0132%" height="15" fill="rgb(241,25,7)" fg:x="167" fg:w="2"/><text x="1.3496%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.0996%" y="677" width="0.0132%" height="15" fill="rgb(242,119,39)" fg:x="167" fg:w="2"/><text x="1.3496%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.0996%" y="661" width="0.0132%" height="15" fill="rgb(241,98,45)" fg:x="167" fg:w="2"/><text x="1.3496%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (30 samples, 0.20%)</title><rect x="0.9218%" y="837" width="0.1975%" height="15" fill="rgb(254,28,30)" fg:x="140" fg:w="30"/><text x="1.1718%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (30 samples, 0.20%)</title><rect x="0.9218%" y="821" width="0.1975%" height="15" fill="rgb(241,142,54)" fg:x="140" fg:w="30"/><text x="1.1718%" y="831.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (30 samples, 0.20%)</title><rect x="0.9218%" y="805" width="0.1975%" height="15" fill="rgb(222,85,15)" fg:x="140" fg:w="30"/><text x="1.1718%" y="815.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (30 samples, 0.20%)</title><rect x="0.9218%" y="789" width="0.1975%" height="15" fill="rgb(210,85,47)" fg:x="140" fg:w="30"/><text x="1.1718%" y="799.50"></text></g><g><title>rayon::slice::quicksort::recurse (30 samples, 0.20%)</title><rect x="0.9218%" y="773" width="0.1975%" height="15" fill="rgb(224,206,25)" fg:x="140" fg:w="30"/><text x="1.1718%" y="783.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.13%)</title><rect x="0.9877%" y="757" width="0.1317%" height="15" fill="rgb(243,201,19)" fg:x="150" fg:w="20"/><text x="1.2377%" y="767.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="1.1194%" y="773" width="0.0132%" height="15" fill="rgb(236,59,4)" fg:x="170" fg:w="2"/><text x="1.3694%" y="783.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="1.1194%" y="757" width="0.0132%" height="15" fill="rgb(254,179,45)" fg:x="170" fg:w="2"/><text x="1.3694%" y="767.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="1.1194%" y="741" width="0.0132%" height="15" fill="rgb(226,14,10)" fg:x="170" fg:w="2"/><text x="1.3694%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.03%)</title><rect x="1.1325%" y="757" width="0.0263%" height="15" fill="rgb(244,27,41)" fg:x="172" fg:w="4"/><text x="1.3825%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.03%)</title><rect x="1.1325%" y="741" width="0.0263%" height="15" fill="rgb(235,35,32)" fg:x="172" fg:w="4"/><text x="1.3825%" y="751.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.05%)</title><rect x="1.1325%" y="773" width="0.0461%" height="15" fill="rgb(218,68,31)" fg:x="172" fg:w="7"/><text x="1.3825%" y="783.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="1.1589%" y="757" width="0.0198%" height="15" fill="rgb(207,120,37)" fg:x="176" fg:w="3"/><text x="1.4089%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.1589%" y="741" width="0.0198%" height="15" fill="rgb(227,98,0)" fg:x="176" fg:w="3"/><text x="1.4089%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.1655%" y="725" width="0.0132%" height="15" fill="rgb(207,7,3)" fg:x="177" fg:w="2"/><text x="1.4155%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.1655%" y="709" width="0.0132%" height="15" fill="rgb(206,98,19)" fg:x="177" fg:w="2"/><text x="1.4155%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.1655%" y="693" width="0.0132%" height="15" fill="rgb(217,5,26)" fg:x="177" fg:w="2"/><text x="1.4155%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="1.1655%" y="677" width="0.0132%" height="15" fill="rgb(235,190,38)" fg:x="177" fg:w="2"/><text x="1.4155%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="1.1655%" y="661" width="0.0132%" height="15" fill="rgb(247,86,24)" fg:x="177" fg:w="2"/><text x="1.4155%" y="671.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.03%)</title><rect x="1.1786%" y="773" width="0.0263%" height="15" fill="rgb(205,101,16)" fg:x="179" fg:w="4"/><text x="1.4286%" y="783.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (4 samples, 0.03%)</title><rect x="1.1786%" y="757" width="0.0263%" height="15" fill="rgb(246,168,33)" fg:x="179" fg:w="4"/><text x="1.4286%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="1.2313%" y="725" width="0.0132%" height="15" fill="rgb(231,114,1)" fg:x="187" fg:w="2"/><text x="1.4813%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="1.2445%" y="709" width="0.0132%" height="15" fill="rgb(207,184,53)" fg:x="189" fg:w="2"/><text x="1.4945%" y="719.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (9 samples, 0.06%)</title><rect x="1.2181%" y="757" width="0.0593%" height="15" fill="rgb(224,95,51)" fg:x="185" fg:w="9"/><text x="1.4681%" y="767.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (8 samples, 0.05%)</title><rect x="1.2247%" y="741" width="0.0527%" height="15" fill="rgb(212,188,45)" fg:x="186" fg:w="8"/><text x="1.4747%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="1.2445%" y="725" width="0.0329%" height="15" fill="rgb(223,154,38)" fg:x="189" fg:w="5"/><text x="1.4945%" y="735.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.2577%" y="709" width="0.0198%" height="15" fill="rgb(251,22,52)" fg:x="191" fg:w="3"/><text x="1.5077%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.2577%" y="693" width="0.0198%" height="15" fill="rgb(229,209,22)" fg:x="191" fg:w="3"/><text x="1.5077%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.2577%" y="677" width="0.0198%" height="15" fill="rgb(234,138,34)" fg:x="191" fg:w="3"/><text x="1.5077%" y="687.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (57 samples, 0.38%)</title><rect x="0.9218%" y="1109" width="0.3753%" height="15" fill="rgb(212,95,11)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (57 samples, 0.38%)</title><rect x="0.9218%" y="1093" width="0.3753%" height="15" fill="rgb(240,179,47)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (57 samples, 0.38%)</title><rect x="0.9218%" y="1077" width="0.3753%" height="15" fill="rgb(240,163,11)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.38%)</title><rect x="0.9218%" y="1061" width="0.3753%" height="15" fill="rgb(236,37,12)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (57 samples, 0.38%)</title><rect x="0.9218%" y="1045" width="0.3753%" height="15" fill="rgb(232,164,16)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1055.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.38%)</title><rect x="0.9218%" y="1029" width="0.3753%" height="15" fill="rgb(244,205,15)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1039.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.38%)</title><rect x="0.9218%" y="1013" width="0.3753%" height="15" fill="rgb(223,117,47)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 0.38%)</title><rect x="0.9218%" y="997" width="0.3753%" height="15" fill="rgb(244,107,35)" fg:x="140" fg:w="57"/><text x="1.1718%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.38%)</title><rect x="0.9218%" y="981" width="0.3753%" height="15" fill="rgb(205,140,8)" fg:x="140" fg:w="57"/><text x="1.1718%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.38%)</title><rect x="0.9218%" y="965" width="0.3753%" height="15" fill="rgb(228,84,46)" fg:x="140" fg:w="57"/><text x="1.1718%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (57 samples, 0.38%)</title><rect x="0.9218%" y="949" width="0.3753%" height="15" fill="rgb(254,188,9)" fg:x="140" fg:w="57"/><text x="1.1718%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (57 samples, 0.38%)</title><rect x="0.9218%" y="933" width="0.3753%" height="15" fill="rgb(206,112,54)" fg:x="140" fg:w="57"/><text x="1.1718%" y="943.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (57 samples, 0.38%)</title><rect x="0.9218%" y="917" width="0.3753%" height="15" fill="rgb(216,84,49)" fg:x="140" fg:w="57"/><text x="1.1718%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (57 samples, 0.38%)</title><rect x="0.9218%" y="901" width="0.3753%" height="15" fill="rgb(214,194,35)" fg:x="140" fg:w="57"/><text x="1.1718%" y="911.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (57 samples, 0.38%)</title><rect x="0.9218%" y="885" width="0.3753%" height="15" fill="rgb(249,28,3)" fg:x="140" fg:w="57"/><text x="1.1718%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (57 samples, 0.38%)</title><rect x="0.9218%" y="869" width="0.3753%" height="15" fill="rgb(222,56,52)" fg:x="140" fg:w="57"/><text x="1.1718%" y="879.50"></text></g><g><title>criterion::analysis::estimates::stats (57 samples, 0.38%)</title><rect x="0.9218%" y="853" width="0.3753%" height="15" fill="rgb(245,217,50)" fg:x="140" fg:w="57"/><text x="1.1718%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (27 samples, 0.18%)</title><rect x="1.1194%" y="837" width="0.1778%" height="15" fill="rgb(213,201,24)" fg:x="170" fg:w="27"/><text x="1.3694%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (27 samples, 0.18%)</title><rect x="1.1194%" y="821" width="0.1778%" height="15" fill="rgb(248,116,28)" fg:x="170" fg:w="27"/><text x="1.3694%" y="831.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (27 samples, 0.18%)</title><rect x="1.1194%" y="805" width="0.1778%" height="15" fill="rgb(219,72,43)" fg:x="170" fg:w="27"/><text x="1.3694%" y="815.50"></text></g><g><title>rayon::slice::quicksort::recurse (27 samples, 0.18%)</title><rect x="1.1194%" y="789" width="0.1778%" height="15" fill="rgb(209,138,14)" fg:x="170" fg:w="27"/><text x="1.3694%" y="799.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.09%)</title><rect x="1.2050%" y="773" width="0.0922%" height="15" fill="rgb(222,18,33)" fg:x="183" fg:w="14"/><text x="1.4550%" y="783.50"></text></g><g><title>rayon::slice::quicksort::partition (3 samples, 0.02%)</title><rect x="1.2774%" y="757" width="0.0198%" height="15" fill="rgb(213,199,7)" fg:x="194" fg:w="3"/><text x="1.5274%" y="767.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="1.2774%" y="741" width="0.0198%" height="15" fill="rgb(250,110,10)" fg:x="194" fg:w="3"/><text x="1.5274%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.2774%" y="725" width="0.0198%" height="15" fill="rgb(248,123,6)" fg:x="194" fg:w="3"/><text x="1.5274%" y="735.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.2840%" y="709" width="0.0132%" height="15" fill="rgb(206,91,31)" fg:x="195" fg:w="2"/><text x="1.5340%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.2840%" y="693" width="0.0132%" height="15" fill="rgb(211,154,13)" fg:x="195" fg:w="2"/><text x="1.5340%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.2840%" y="677" width="0.0132%" height="15" fill="rgb(225,148,7)" fg:x="195" fg:w="2"/><text x="1.5340%" y="687.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (6 samples, 0.04%)</title><rect x="1.3169%" y="693" width="0.0395%" height="15" fill="rgb(220,160,43)" fg:x="200" fg:w="6"/><text x="1.5669%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="1.3235%" y="677" width="0.0329%" height="15" fill="rgb(213,52,39)" fg:x="201" fg:w="5"/><text x="1.5735%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.3367%" y="661" width="0.0198%" height="15" fill="rgb(243,137,7)" fg:x="203" fg:w="3"/><text x="1.5867%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.3433%" y="645" width="0.0132%" height="15" fill="rgb(230,79,13)" fg:x="204" fg:w="2"/><text x="1.5933%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.3433%" y="629" width="0.0132%" height="15" fill="rgb(247,105,23)" fg:x="204" fg:w="2"/><text x="1.5933%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.3433%" y="613" width="0.0132%" height="15" fill="rgb(223,179,41)" fg:x="204" fg:w="2"/><text x="1.5933%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="1.3433%" y="597" width="0.0132%" height="15" fill="rgb(218,9,34)" fg:x="204" fg:w="2"/><text x="1.5933%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="1.3433%" y="581" width="0.0132%" height="15" fill="rgb(222,106,8)" fg:x="204" fg:w="2"/><text x="1.5933%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="1.3630%" y="661" width="0.0198%" height="15" fill="rgb(211,220,0)" fg:x="207" fg:w="3"/><text x="1.6130%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="1.3630%" y="645" width="0.0198%" height="15" fill="rgb(229,52,16)" fg:x="207" fg:w="3"/><text x="1.6130%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="1.3893%" y="645" width="0.0132%" height="15" fill="rgb(212,155,18)" fg:x="211" fg:w="2"/><text x="1.6393%" y="655.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4 samples, 0.03%)</title><rect x="1.4091%" y="629" width="0.0263%" height="15" fill="rgb(242,21,14)" fg:x="214" fg:w="4"/><text x="1.6591%" y="639.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (13 samples, 0.09%)</title><rect x="1.3630%" y="677" width="0.0856%" height="15" fill="rgb(222,19,48)" fg:x="207" fg:w="13"/><text x="1.6130%" y="687.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (10 samples, 0.07%)</title><rect x="1.3828%" y="661" width="0.0658%" height="15" fill="rgb(232,45,27)" fg:x="210" fg:w="10"/><text x="1.6328%" y="671.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (6 samples, 0.04%)</title><rect x="1.4091%" y="645" width="0.0395%" height="15" fill="rgb(249,103,42)" fg:x="214" fg:w="6"/><text x="1.6591%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.4354%" y="629" width="0.0132%" height="15" fill="rgb(246,81,33)" fg:x="218" fg:w="2"/><text x="1.6854%" y="639.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.4354%" y="613" width="0.0132%" height="15" fill="rgb(252,33,42)" fg:x="218" fg:w="2"/><text x="1.6854%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.4354%" y="597" width="0.0132%" height="15" fill="rgb(209,212,41)" fg:x="218" fg:w="2"/><text x="1.6854%" y="607.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (32 samples, 0.21%)</title><rect x="1.3037%" y="773" width="0.2107%" height="15" fill="rgb(207,154,6)" fg:x="198" fg:w="32"/><text x="1.5537%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (31 samples, 0.20%)</title><rect x="1.3103%" y="757" width="0.2041%" height="15" fill="rgb(223,64,47)" fg:x="199" fg:w="31"/><text x="1.5603%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (30 samples, 0.20%)</title><rect x="1.3169%" y="741" width="0.1975%" height="15" fill="rgb(211,161,38)" fg:x="200" fg:w="30"/><text x="1.5669%" y="751.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (30 samples, 0.20%)</title><rect x="1.3169%" y="725" width="0.1975%" height="15" fill="rgb(219,138,40)" fg:x="200" fg:w="30"/><text x="1.5669%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (30 samples, 0.20%)</title><rect x="1.3169%" y="709" width="0.1975%" height="15" fill="rgb(241,228,46)" fg:x="200" fg:w="30"/><text x="1.5669%" y="719.50"></text></g><g><title>rayon::slice::quicksort::recurse (23 samples, 0.15%)</title><rect x="1.3630%" y="693" width="0.1514%" height="15" fill="rgb(223,209,38)" fg:x="207" fg:w="23"/><text x="1.6130%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition (10 samples, 0.07%)</title><rect x="1.4486%" y="677" width="0.0658%" height="15" fill="rgb(236,164,45)" fg:x="220" fg:w="10"/><text x="1.6986%" y="687.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (8 samples, 0.05%)</title><rect x="1.4618%" y="661" width="0.0527%" height="15" fill="rgb(231,15,5)" fg:x="222" fg:w="8"/><text x="1.7118%" y="671.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="1.4881%" y="645" width="0.0263%" height="15" fill="rgb(252,35,15)" fg:x="226" fg:w="4"/><text x="1.7381%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.4947%" y="629" width="0.0198%" height="15" fill="rgb(248,181,18)" fg:x="227" fg:w="3"/><text x="1.7447%" y="639.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.4947%" y="613" width="0.0198%" height="15" fill="rgb(233,39,42)" fg:x="227" fg:w="3"/><text x="1.7447%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.4947%" y="597" width="0.0198%" height="15" fill="rgb(238,110,33)" fg:x="227" fg:w="3"/><text x="1.7447%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="1.5210%" y="677" width="0.0132%" height="15" fill="rgb(233,195,10)" fg:x="231" fg:w="2"/><text x="1.7710%" y="687.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (5 samples, 0.03%)</title><rect x="1.5210%" y="709" width="0.0329%" height="15" fill="rgb(254,105,3)" fg:x="231" fg:w="5"/><text x="1.7710%" y="719.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="1.5210%" y="693" width="0.0329%" height="15" fill="rgb(221,225,9)" fg:x="231" fg:w="5"/><text x="1.7710%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.5408%" y="677" width="0.0132%" height="15" fill="rgb(224,227,45)" fg:x="234" fg:w="2"/><text x="1.7908%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.5408%" y="661" width="0.0132%" height="15" fill="rgb(229,198,43)" fg:x="234" fg:w="2"/><text x="1.7908%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.5408%" y="645" width="0.0132%" height="15" fill="rgb(206,209,35)" fg:x="234" fg:w="2"/><text x="1.7908%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.5408%" y="629" width="0.0132%" height="15" fill="rgb(245,195,53)" fg:x="234" fg:w="2"/><text x="1.7908%" y="639.50"></text></g><g><title>rayon::slice::quicksort::partition (9 samples, 0.06%)</title><rect x="1.5540%" y="709" width="0.0593%" height="15" fill="rgb(240,92,26)" fg:x="236" fg:w="9"/><text x="1.8040%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (8 samples, 0.05%)</title><rect x="1.5605%" y="693" width="0.0527%" height="15" fill="rgb(207,40,23)" fg:x="237" fg:w="8"/><text x="1.8105%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="1.5869%" y="677" width="0.0263%" height="15" fill="rgb(223,111,35)" fg:x="241" fg:w="4"/><text x="1.8369%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.03%)</title><rect x="1.5869%" y="661" width="0.0263%" height="15" fill="rgb(229,147,28)" fg:x="241" fg:w="4"/><text x="1.8369%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.03%)</title><rect x="1.5869%" y="645" width="0.0263%" height="15" fill="rgb(211,29,28)" fg:x="241" fg:w="4"/><text x="1.8369%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.03%)</title><rect x="1.5869%" y="629" width="0.0263%" height="15" fill="rgb(228,72,33)" fg:x="241" fg:w="4"/><text x="1.8369%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="1.6198%" y="677" width="0.0132%" height="15" fill="rgb(205,214,31)" fg:x="246" fg:w="2"/><text x="1.8698%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="1.6198%" y="661" width="0.0132%" height="15" fill="rgb(224,111,15)" fg:x="246" fg:w="2"/><text x="1.8698%" y="671.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (8 samples, 0.05%)</title><rect x="1.6198%" y="693" width="0.0527%" height="15" fill="rgb(253,21,26)" fg:x="246" fg:w="8"/><text x="1.8698%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.04%)</title><rect x="1.6330%" y="677" width="0.0395%" height="15" fill="rgb(245,139,43)" fg:x="248" fg:w="6"/><text x="1.8830%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="1.6461%" y="661" width="0.0263%" height="15" fill="rgb(252,170,7)" fg:x="250" fg:w="4"/><text x="1.8961%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.03%)</title><rect x="1.6461%" y="645" width="0.0263%" height="15" fill="rgb(231,118,14)" fg:x="250" fg:w="4"/><text x="1.8961%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.03%)</title><rect x="1.6461%" y="629" width="0.0263%" height="15" fill="rgb(238,83,0)" fg:x="250" fg:w="4"/><text x="1.8961%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.03%)</title><rect x="1.6461%" y="613" width="0.0263%" height="15" fill="rgb(221,39,39)" fg:x="250" fg:w="4"/><text x="1.8961%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="1.6791%" y="661" width="0.0132%" height="15" fill="rgb(222,119,46)" fg:x="255" fg:w="2"/><text x="1.9291%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (29 samples, 0.19%)</title><rect x="1.5145%" y="773" width="0.1910%" height="15" fill="rgb(222,165,49)" fg:x="230" fg:w="29"/><text x="1.7645%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (29 samples, 0.19%)</title><rect x="1.5145%" y="757" width="0.1910%" height="15" fill="rgb(219,113,52)" fg:x="230" fg:w="29"/><text x="1.7645%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (29 samples, 0.19%)</title><rect x="1.5145%" y="741" width="0.1910%" height="15" fill="rgb(214,7,15)" fg:x="230" fg:w="29"/><text x="1.7645%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (29 samples, 0.19%)</title><rect x="1.5145%" y="725" width="0.1910%" height="15" fill="rgb(235,32,4)" fg:x="230" fg:w="29"/><text x="1.7645%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.09%)</title><rect x="1.6132%" y="709" width="0.0922%" height="15" fill="rgb(238,90,54)" fg:x="245" fg:w="14"/><text x="1.8632%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition (5 samples, 0.03%)</title><rect x="1.6725%" y="693" width="0.0329%" height="15" fill="rgb(213,208,19)" fg:x="254" fg:w="5"/><text x="1.9225%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="1.6725%" y="677" width="0.0329%" height="15" fill="rgb(233,156,4)" fg:x="254" fg:w="5"/><text x="1.9225%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.6922%" y="661" width="0.0132%" height="15" fill="rgb(207,194,5)" fg:x="257" fg:w="2"/><text x="1.9422%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (63 samples, 0.41%)</title><rect x="1.2972%" y="805" width="0.4148%" height="15" fill="rgb(206,111,30)" fg:x="197" fg:w="63"/><text x="1.5472%" y="815.50"></text></g><g><title>criterion::analysis::estimates::stats (63 samples, 0.41%)</title><rect x="1.2972%" y="789" width="0.4148%" height="15" fill="rgb(243,70,54)" fg:x="197" fg:w="63"/><text x="1.5472%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (125 samples, 0.82%)</title><rect x="0.9218%" y="1221" width="0.8231%" height="15" fill="rgb(242,28,8)" fg:x="140" fg:w="125"/><text x="1.1718%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (125 samples, 0.82%)</title><rect x="0.9218%" y="1205" width="0.8231%" height="15" fill="rgb(219,106,18)" fg:x="140" fg:w="125"/><text x="1.1718%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (125 samples, 0.82%)</title><rect x="0.9218%" y="1189" width="0.8231%" height="15" fill="rgb(244,222,10)" fg:x="140" fg:w="125"/><text x="1.1718%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (125 samples, 0.82%)</title><rect x="0.9218%" y="1173" width="0.8231%" height="15" fill="rgb(236,179,52)" fg:x="140" fg:w="125"/><text x="1.1718%" y="1183.50"></text></g><g><title>rayon_core::join::join_context (125 samples, 0.82%)</title><rect x="0.9218%" y="1157" width="0.8231%" height="15" fill="rgb(213,23,39)" fg:x="140" fg:w="125"/><text x="1.1718%" y="1167.50"></text></g><g><title>rayon_core::registry::in_worker (125 samples, 0.82%)</title><rect x="0.9218%" y="1141" width="0.8231%" height="15" fill="rgb(238,48,10)" fg:x="140" fg:w="125"/><text x="1.1718%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (125 samples, 0.82%)</title><rect x="0.9218%" y="1125" width="0.8231%" height="15" fill="rgb(251,196,23)" fg:x="140" fg:w="125"/><text x="1.1718%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (68 samples, 0.45%)</title><rect x="1.2972%" y="1109" width="0.4478%" height="15" fill="rgb(250,152,24)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (68 samples, 0.45%)</title><rect x="1.2972%" y="1093" width="0.4478%" height="15" fill="rgb(209,150,17)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1103.50"></text></g><g><title>std::panicking::try (68 samples, 0.45%)</title><rect x="1.2972%" y="1077" width="0.4478%" height="15" fill="rgb(234,202,34)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (68 samples, 0.45%)</title><rect x="1.2972%" y="1061" width="0.4478%" height="15" fill="rgb(253,148,53)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68 samples, 0.45%)</title><rect x="1.2972%" y="1045" width="0.4478%" height="15" fill="rgb(218,129,16)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (68 samples, 0.45%)</title><rect x="1.2972%" y="1029" width="0.4478%" height="15" fill="rgb(216,85,19)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (68 samples, 0.45%)</title><rect x="1.2972%" y="1013" width="0.4478%" height="15" fill="rgb(235,228,7)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (68 samples, 0.45%)</title><rect x="1.2972%" y="997" width="0.4478%" height="15" fill="rgb(245,175,0)" fg:x="197" fg:w="68"/><text x="1.5472%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (68 samples, 0.45%)</title><rect x="1.2972%" y="981" width="0.4478%" height="15" fill="rgb(208,168,36)" fg:x="197" fg:w="68"/><text x="1.5472%" y="991.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (68 samples, 0.45%)</title><rect x="1.2972%" y="965" width="0.4478%" height="15" fill="rgb(246,171,24)" fg:x="197" fg:w="68"/><text x="1.5472%" y="975.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (68 samples, 0.45%)</title><rect x="1.2972%" y="949" width="0.4478%" height="15" fill="rgb(215,142,24)" fg:x="197" fg:w="68"/><text x="1.5472%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.45%)</title><rect x="1.2972%" y="933" width="0.4478%" height="15" fill="rgb(250,187,7)" fg:x="197" fg:w="68"/><text x="1.5472%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.45%)</title><rect x="1.2972%" y="917" width="0.4478%" height="15" fill="rgb(228,66,33)" fg:x="197" fg:w="68"/><text x="1.5472%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.45%)</title><rect x="1.2972%" y="901" width="0.4478%" height="15" fill="rgb(234,215,21)" fg:x="197" fg:w="68"/><text x="1.5472%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (68 samples, 0.45%)</title><rect x="1.2972%" y="885" width="0.4478%" height="15" fill="rgb(222,191,20)" fg:x="197" fg:w="68"/><text x="1.5472%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (68 samples, 0.45%)</title><rect x="1.2972%" y="869" width="0.4478%" height="15" fill="rgb(245,79,54)" fg:x="197" fg:w="68"/><text x="1.5472%" y="879.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (68 samples, 0.45%)</title><rect x="1.2972%" y="853" width="0.4478%" height="15" fill="rgb(240,10,37)" fg:x="197" fg:w="68"/><text x="1.5472%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (68 samples, 0.45%)</title><rect x="1.2972%" y="837" width="0.4478%" height="15" fill="rgb(214,192,32)" fg:x="197" fg:w="68"/><text x="1.5472%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (68 samples, 0.45%)</title><rect x="1.2972%" y="821" width="0.4478%" height="15" fill="rgb(209,36,54)" fg:x="197" fg:w="68"/><text x="1.5472%" y="831.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (5 samples, 0.03%)</title><rect x="1.7120%" y="805" width="0.0329%" height="15" fill="rgb(220,10,11)" fg:x="260" fg:w="5"/><text x="1.9620%" y="815.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="1.7317%" y="789" width="0.0132%" height="15" fill="rgb(221,106,17)" fg:x="263" fg:w="2"/><text x="1.9817%" y="799.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (4 samples, 0.03%)</title><rect x="1.7581%" y="693" width="0.0263%" height="15" fill="rgb(251,142,44)" fg:x="267" fg:w="4"/><text x="2.0081%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.03%)</title><rect x="1.7581%" y="677" width="0.0263%" height="15" fill="rgb(238,13,15)" fg:x="267" fg:w="4"/><text x="2.0081%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.7713%" y="661" width="0.0132%" height="15" fill="rgb(208,107,27)" fg:x="269" fg:w="2"/><text x="2.0213%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="1.7910%" y="661" width="0.0132%" height="15" fill="rgb(205,136,37)" fg:x="272" fg:w="2"/><text x="2.0410%" y="671.50"></text></g><g><title>rayon::slice::quicksort::partition (6 samples, 0.04%)</title><rect x="1.7844%" y="693" width="0.0395%" height="15" fill="rgb(250,205,27)" fg:x="271" fg:w="6"/><text x="2.0344%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.04%)</title><rect x="1.7844%" y="677" width="0.0395%" height="15" fill="rgb(210,80,43)" fg:x="271" fg:w="6"/><text x="2.0344%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.8042%" y="661" width="0.0198%" height="15" fill="rgb(247,160,36)" fg:x="274" fg:w="3"/><text x="2.0542%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.8042%" y="645" width="0.0198%" height="15" fill="rgb(234,13,49)" fg:x="274" fg:w="3"/><text x="2.0542%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.8042%" y="629" width="0.0198%" height="15" fill="rgb(234,122,0)" fg:x="274" fg:w="3"/><text x="2.0542%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.8042%" y="613" width="0.0198%" height="15" fill="rgb(207,146,38)" fg:x="274" fg:w="3"/><text x="2.0542%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="1.8569%" y="661" width="0.0132%" height="15" fill="rgb(207,177,25)" fg:x="282" fg:w="2"/><text x="2.1069%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="1.8569%" y="645" width="0.0132%" height="15" fill="rgb(211,178,42)" fg:x="282" fg:w="2"/><text x="2.1069%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="1.8700%" y="645" width="0.0132%" height="15" fill="rgb(230,69,54)" fg:x="284" fg:w="2"/><text x="2.1200%" y="655.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="1.8832%" y="629" width="0.0198%" height="15" fill="rgb(214,135,41)" fg:x="286" fg:w="3"/><text x="2.1332%" y="639.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (12 samples, 0.08%)</title><rect x="1.8569%" y="677" width="0.0790%" height="15" fill="rgb(237,67,25)" fg:x="282" fg:w="12"/><text x="2.1069%" y="687.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (10 samples, 0.07%)</title><rect x="1.8700%" y="661" width="0.0658%" height="15" fill="rgb(222,189,50)" fg:x="284" fg:w="10"/><text x="2.1200%" y="671.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (8 samples, 0.05%)</title><rect x="1.8832%" y="645" width="0.0527%" height="15" fill="rgb(245,148,34)" fg:x="286" fg:w="8"/><text x="2.1332%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="1.9029%" y="629" width="0.0329%" height="15" fill="rgb(222,29,6)" fg:x="289" fg:w="5"/><text x="2.1529%" y="639.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="1.9029%" y="613" width="0.0329%" height="15" fill="rgb(221,189,43)" fg:x="289" fg:w="5"/><text x="2.1529%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="1.9029%" y="597" width="0.0329%" height="15" fill="rgb(207,36,27)" fg:x="289" fg:w="5"/><text x="2.1529%" y="607.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.9622%" y="645" width="0.0132%" height="15" fill="rgb(217,90,24)" fg:x="298" fg:w="2"/><text x="2.2122%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (35 samples, 0.23%)</title><rect x="1.7515%" y="773" width="0.2305%" height="15" fill="rgb(224,66,35)" fg:x="266" fg:w="35"/><text x="2.0015%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (35 samples, 0.23%)</title><rect x="1.7515%" y="757" width="0.2305%" height="15" fill="rgb(221,13,50)" fg:x="266" fg:w="35"/><text x="2.0015%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (35 samples, 0.23%)</title><rect x="1.7515%" y="741" width="0.2305%" height="15" fill="rgb(236,68,49)" fg:x="266" fg:w="35"/><text x="2.0015%" y="751.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (35 samples, 0.23%)</title><rect x="1.7515%" y="725" width="0.2305%" height="15" fill="rgb(229,146,28)" fg:x="266" fg:w="35"/><text x="2.0015%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (35 samples, 0.23%)</title><rect x="1.7515%" y="709" width="0.2305%" height="15" fill="rgb(225,31,38)" fg:x="266" fg:w="35"/><text x="2.0015%" y="719.50"></text></g><g><title>rayon::slice::quicksort::recurse (23 samples, 0.15%)</title><rect x="1.8305%" y="693" width="0.1514%" height="15" fill="rgb(250,208,3)" fg:x="278" fg:w="23"/><text x="2.0805%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition (6 samples, 0.04%)</title><rect x="1.9425%" y="677" width="0.0395%" height="15" fill="rgb(246,54,23)" fg:x="295" fg:w="6"/><text x="2.1925%" y="687.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="1.9490%" y="661" width="0.0329%" height="15" fill="rgb(243,76,11)" fg:x="296" fg:w="5"/><text x="2.1990%" y="671.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="1.9951%" y="709" width="0.0132%" height="15" fill="rgb(245,21,50)" fg:x="303" fg:w="2"/><text x="2.2451%" y="719.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="1.9951%" y="693" width="0.0132%" height="15" fill="rgb(228,9,43)" fg:x="303" fg:w="2"/><text x="2.2451%" y="703.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="1.9951%" y="677" width="0.0132%" height="15" fill="rgb(208,100,47)" fg:x="303" fg:w="2"/><text x="2.2451%" y="687.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="2.0083%" y="709" width="0.0198%" height="15" fill="rgb(232,26,8)" fg:x="305" fg:w="3"/><text x="2.2583%" y="719.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="2.0083%" y="693" width="0.0198%" height="15" fill="rgb(216,166,38)" fg:x="305" fg:w="3"/><text x="2.2583%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.0149%" y="677" width="0.0132%" height="15" fill="rgb(251,202,51)" fg:x="306" fg:w="2"/><text x="2.2649%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.0149%" y="661" width="0.0132%" height="15" fill="rgb(254,216,34)" fg:x="306" fg:w="2"/><text x="2.2649%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.0149%" y="645" width="0.0132%" height="15" fill="rgb(251,32,27)" fg:x="306" fg:w="2"/><text x="2.2649%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.0149%" y="629" width="0.0132%" height="15" fill="rgb(208,127,28)" fg:x="306" fg:w="2"/><text x="2.2649%" y="639.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.0346%" y="693" width="0.0132%" height="15" fill="rgb(224,137,22)" fg:x="309" fg:w="2"/><text x="2.2846%" y="703.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.0346%" y="677" width="0.0132%" height="15" fill="rgb(254,70,32)" fg:x="309" fg:w="2"/><text x="2.2846%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.0346%" y="661" width="0.0132%" height="15" fill="rgb(229,75,37)" fg:x="309" fg:w="2"/><text x="2.2846%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.0346%" y="645" width="0.0132%" height="15" fill="rgb(252,64,23)" fg:x="309" fg:w="2"/><text x="2.2846%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition (6 samples, 0.04%)</title><rect x="2.0281%" y="709" width="0.0395%" height="15" fill="rgb(232,162,48)" fg:x="308" fg:w="6"/><text x="2.2781%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="2.0478%" y="693" width="0.0198%" height="15" fill="rgb(246,160,12)" fg:x="311" fg:w="3"/><text x="2.2978%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="2.0544%" y="677" width="0.0132%" height="15" fill="rgb(247,166,0)" fg:x="312" fg:w="2"/><text x="2.3044%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="2.0741%" y="677" width="0.0132%" height="15" fill="rgb(249,219,21)" fg:x="315" fg:w="2"/><text x="2.3241%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="2.0741%" y="661" width="0.0132%" height="15" fill="rgb(205,209,3)" fg:x="315" fg:w="2"/><text x="2.3241%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="2.0939%" y="645" width="0.0132%" height="15" fill="rgb(243,44,1)" fg:x="318" fg:w="2"/><text x="2.3439%" y="655.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.05%)</title><rect x="2.0741%" y="693" width="0.0461%" height="15" fill="rgb(206,159,16)" fg:x="315" fg:w="7"/><text x="2.3241%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="2.0873%" y="677" width="0.0329%" height="15" fill="rgb(244,77,30)" fg:x="317" fg:w="5"/><text x="2.3373%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="2.0939%" y="661" width="0.0263%" height="15" fill="rgb(218,69,12)" fg:x="318" fg:w="4"/><text x="2.3439%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.1071%" y="645" width="0.0132%" height="15" fill="rgb(212,87,7)" fg:x="320" fg:w="2"/><text x="2.3571%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.1071%" y="629" width="0.0132%" height="15" fill="rgb(245,114,25)" fg:x="320" fg:w="2"/><text x="2.3571%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.1071%" y="613" width="0.0132%" height="15" fill="rgb(210,61,42)" fg:x="320" fg:w="2"/><text x="2.3571%" y="623.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (22 samples, 0.14%)</title><rect x="1.9820%" y="773" width="0.1449%" height="15" fill="rgb(211,52,33)" fg:x="301" fg:w="22"/><text x="2.2320%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (21 samples, 0.14%)</title><rect x="1.9885%" y="757" width="0.1383%" height="15" fill="rgb(234,58,33)" fg:x="302" fg:w="21"/><text x="2.2385%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (21 samples, 0.14%)</title><rect x="1.9885%" y="741" width="0.1383%" height="15" fill="rgb(220,115,36)" fg:x="302" fg:w="21"/><text x="2.2385%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (21 samples, 0.14%)</title><rect x="1.9885%" y="725" width="0.1383%" height="15" fill="rgb(243,153,54)" fg:x="302" fg:w="21"/><text x="2.2385%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.06%)</title><rect x="2.0676%" y="709" width="0.0593%" height="15" fill="rgb(251,47,18)" fg:x="314" fg:w="9"/><text x="2.3176%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (61 samples, 0.40%)</title><rect x="1.7449%" y="805" width="0.4017%" height="15" fill="rgb(242,102,42)" fg:x="265" fg:w="61"/><text x="1.9949%" y="815.50"></text></g><g><title>criterion::analysis::estimates::stats (61 samples, 0.40%)</title><rect x="1.7449%" y="789" width="0.4017%" height="15" fill="rgb(234,31,38)" fg:x="265" fg:w="61"/><text x="1.9949%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (3 samples, 0.02%)</title><rect x="2.1268%" y="773" width="0.0198%" height="15" fill="rgb(221,117,51)" fg:x="323" fg:w="3"/><text x="2.3768%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (3 samples, 0.02%)</title><rect x="2.1268%" y="757" width="0.0198%" height="15" fill="rgb(212,20,18)" fg:x="323" fg:w="3"/><text x="2.3768%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="2.1268%" y="741" width="0.0198%" height="15" fill="rgb(245,133,36)" fg:x="323" fg:w="3"/><text x="2.3768%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="2.1268%" y="725" width="0.0198%" height="15" fill="rgb(212,6,19)" fg:x="323" fg:w="3"/><text x="2.3768%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (68 samples, 0.45%)</title><rect x="1.7449%" y="1045" width="0.4478%" height="15" fill="rgb(218,1,36)" fg:x="265" fg:w="68"/><text x="1.9949%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (68 samples, 0.45%)</title><rect x="1.7449%" y="1029" width="0.4478%" height="15" fill="rgb(246,84,54)" fg:x="265" fg:w="68"/><text x="1.9949%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (68 samples, 0.45%)</title><rect x="1.7449%" y="1013" width="0.4478%" height="15" fill="rgb(242,110,6)" fg:x="265" fg:w="68"/><text x="1.9949%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (68 samples, 0.45%)</title><rect x="1.7449%" y="997" width="0.4478%" height="15" fill="rgb(214,47,5)" fg:x="265" fg:w="68"/><text x="1.9949%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (68 samples, 0.45%)</title><rect x="1.7449%" y="981" width="0.4478%" height="15" fill="rgb(218,159,25)" fg:x="265" fg:w="68"/><text x="1.9949%" y="991.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (68 samples, 0.45%)</title><rect x="1.7449%" y="965" width="0.4478%" height="15" fill="rgb(215,211,28)" fg:x="265" fg:w="68"/><text x="1.9949%" y="975.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (68 samples, 0.45%)</title><rect x="1.7449%" y="949" width="0.4478%" height="15" fill="rgb(238,59,32)" fg:x="265" fg:w="68"/><text x="1.9949%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.45%)</title><rect x="1.7449%" y="933" width="0.4478%" height="15" fill="rgb(226,82,3)" fg:x="265" fg:w="68"/><text x="1.9949%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.45%)</title><rect x="1.7449%" y="917" width="0.4478%" height="15" fill="rgb(240,164,32)" fg:x="265" fg:w="68"/><text x="1.9949%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.45%)</title><rect x="1.7449%" y="901" width="0.4478%" height="15" fill="rgb(232,46,7)" fg:x="265" fg:w="68"/><text x="1.9949%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (68 samples, 0.45%)</title><rect x="1.7449%" y="885" width="0.4478%" height="15" fill="rgb(229,129,53)" fg:x="265" fg:w="68"/><text x="1.9949%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (68 samples, 0.45%)</title><rect x="1.7449%" y="869" width="0.4478%" height="15" fill="rgb(234,188,29)" fg:x="265" fg:w="68"/><text x="1.9949%" y="879.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (68 samples, 0.45%)</title><rect x="1.7449%" y="853" width="0.4478%" height="15" fill="rgb(246,141,4)" fg:x="265" fg:w="68"/><text x="1.9949%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (68 samples, 0.45%)</title><rect x="1.7449%" y="837" width="0.4478%" height="15" fill="rgb(229,23,39)" fg:x="265" fg:w="68"/><text x="1.9949%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (68 samples, 0.45%)</title><rect x="1.7449%" y="821" width="0.4478%" height="15" fill="rgb(206,12,3)" fg:x="265" fg:w="68"/><text x="1.9949%" y="831.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.05%)</title><rect x="2.1466%" y="805" width="0.0461%" height="15" fill="rgb(252,226,20)" fg:x="326" fg:w="7"/><text x="2.3966%" y="815.50"></text></g><g><title>oorandom::Rand64::rand_range (5 samples, 0.03%)</title><rect x="2.1597%" y="789" width="0.0329%" height="15" fill="rgb(216,123,35)" fg:x="328" fg:w="5"/><text x="2.4097%" y="799.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="2.1729%" y="773" width="0.0198%" height="15" fill="rgb(212,68,40)" fg:x="330" fg:w="3"/><text x="2.4229%" y="783.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="2.1795%" y="757" width="0.0132%" height="15" fill="rgb(254,125,32)" fg:x="331" fg:w="2"/><text x="2.4295%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (2 samples, 0.01%)</title><rect x="2.1992%" y="709" width="0.0132%" height="15" fill="rgb(253,97,22)" fg:x="334" fg:w="2"/><text x="2.4492%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (2 samples, 0.01%)</title><rect x="2.1992%" y="693" width="0.0132%" height="15" fill="rgb(241,101,14)" fg:x="334" fg:w="2"/><text x="2.4492%" y="703.50"></text></g><g><title>criterion::stats::sum (2 samples, 0.01%)</title><rect x="2.1992%" y="677" width="0.0132%" height="15" fill="rgb(238,103,29)" fg:x="334" fg:w="2"/><text x="2.4492%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="2.1992%" y="661" width="0.0132%" height="15" fill="rgb(233,195,47)" fg:x="334" fg:w="2"/><text x="2.4492%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="2.1992%" y="645" width="0.0132%" height="15" fill="rgb(246,218,30)" fg:x="334" fg:w="2"/><text x="2.4492%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="2.1992%" y="629" width="0.0132%" height="15" fill="rgb(219,145,47)" fg:x="334" fg:w="2"/><text x="2.4492%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="2.1992%" y="613" width="0.0132%" height="15" fill="rgb(243,12,26)" fg:x="334" fg:w="2"/><text x="2.4492%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.01%)</title><rect x="2.1992%" y="597" width="0.0132%" height="15" fill="rgb(214,87,16)" fg:x="334" fg:w="2"/><text x="2.4492%" y="607.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.01%)</title><rect x="2.1992%" y="581" width="0.0132%" height="15" fill="rgb(208,99,42)" fg:x="334" fg:w="2"/><text x="2.4492%" y="591.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (5 samples, 0.03%)</title><rect x="2.2453%" y="629" width="0.0329%" height="15" fill="rgb(253,99,2)" fg:x="341" fg:w="5"/><text x="2.4953%" y="639.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.03%)</title><rect x="2.2519%" y="613" width="0.0263%" height="15" fill="rgb(220,168,23)" fg:x="342" fg:w="4"/><text x="2.5019%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="2.2585%" y="597" width="0.0198%" height="15" fill="rgb(242,38,24)" fg:x="343" fg:w="3"/><text x="2.5085%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.2651%" y="581" width="0.0132%" height="15" fill="rgb(225,182,9)" fg:x="344" fg:w="2"/><text x="2.5151%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.2651%" y="565" width="0.0132%" height="15" fill="rgb(243,178,37)" fg:x="344" fg:w="2"/><text x="2.5151%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.2651%" y="549" width="0.0132%" height="15" fill="rgb(232,139,19)" fg:x="344" fg:w="2"/><text x="2.5151%" y="559.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="2.2914%" y="581" width="0.0132%" height="15" fill="rgb(225,201,24)" fg:x="348" fg:w="2"/><text x="2.5414%" y="591.50"></text></g><g><title>rayon::slice::quicksort::partition (6 samples, 0.04%)</title><rect x="2.2783%" y="629" width="0.0395%" height="15" fill="rgb(221,47,46)" fg:x="346" fg:w="6"/><text x="2.5283%" y="639.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.04%)</title><rect x="2.2783%" y="613" width="0.0395%" height="15" fill="rgb(249,23,13)" fg:x="346" fg:w="6"/><text x="2.5283%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.03%)</title><rect x="2.2914%" y="597" width="0.0263%" height="15" fill="rgb(219,9,5)" fg:x="348" fg:w="4"/><text x="2.5414%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.3046%" y="581" width="0.0132%" height="15" fill="rgb(254,171,16)" fg:x="350" fg:w="2"/><text x="2.5546%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.3046%" y="565" width="0.0132%" height="15" fill="rgb(230,171,20)" fg:x="350" fg:w="2"/><text x="2.5546%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.3046%" y="549" width="0.0132%" height="15" fill="rgb(210,71,41)" fg:x="350" fg:w="2"/><text x="2.5546%" y="559.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.11%)</title><rect x="2.2124%" y="709" width="0.1119%" height="15" fill="rgb(206,173,20)" fg:x="336" fg:w="17"/><text x="2.4624%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.10%)</title><rect x="2.2256%" y="693" width="0.0988%" height="15" fill="rgb(233,88,34)" fg:x="338" fg:w="15"/><text x="2.4756%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (15 samples, 0.10%)</title><rect x="2.2256%" y="677" width="0.0988%" height="15" fill="rgb(223,209,46)" fg:x="338" fg:w="15"/><text x="2.4756%" y="687.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (15 samples, 0.10%)</title><rect x="2.2256%" y="661" width="0.0988%" height="15" fill="rgb(250,43,18)" fg:x="338" fg:w="15"/><text x="2.4756%" y="671.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.10%)</title><rect x="2.2256%" y="645" width="0.0988%" height="15" fill="rgb(208,13,10)" fg:x="338" fg:w="15"/><text x="2.4756%" y="655.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="2.3375%" y="645" width="0.0198%" height="15" fill="rgb(212,200,36)" fg:x="355" fg:w="3"/><text x="2.5875%" y="655.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="2.3375%" y="629" width="0.0198%" height="15" fill="rgb(225,90,30)" fg:x="355" fg:w="3"/><text x="2.5875%" y="639.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.3441%" y="613" width="0.0132%" height="15" fill="rgb(236,182,39)" fg:x="356" fg:w="2"/><text x="2.5941%" y="623.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.3441%" y="597" width="0.0132%" height="15" fill="rgb(212,144,35)" fg:x="356" fg:w="2"/><text x="2.5941%" y="607.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.3441%" y="581" width="0.0132%" height="15" fill="rgb(228,63,44)" fg:x="356" fg:w="2"/><text x="2.5941%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.3441%" y="565" width="0.0132%" height="15" fill="rgb(228,109,6)" fg:x="356" fg:w="2"/><text x="2.5941%" y="575.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.03%)</title><rect x="2.3573%" y="645" width="0.0263%" height="15" fill="rgb(238,117,24)" fg:x="358" fg:w="4"/><text x="2.6073%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (4 samples, 0.03%)</title><rect x="2.3573%" y="629" width="0.0263%" height="15" fill="rgb(242,26,26)" fg:x="358" fg:w="4"/><text x="2.6073%" y="639.50"></text></g><g><title>core::ops::function::Fn::call (30 samples, 0.20%)</title><rect x="2.1927%" y="741" width="0.1975%" height="15" fill="rgb(221,92,48)" fg:x="333" fg:w="30"/><text x="2.4427%" y="751.50"></text></g><g><title>criterion::analysis::estimates::stats (30 samples, 0.20%)</title><rect x="2.1927%" y="725" width="0.1975%" height="15" fill="rgb(209,209,32)" fg:x="333" fg:w="30"/><text x="2.4427%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (10 samples, 0.07%)</title><rect x="2.3244%" y="709" width="0.0658%" height="15" fill="rgb(221,70,22)" fg:x="353" fg:w="10"/><text x="2.5744%" y="719.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (10 samples, 0.07%)</title><rect x="2.3244%" y="693" width="0.0658%" height="15" fill="rgb(248,145,5)" fg:x="353" fg:w="10"/><text x="2.5744%" y="703.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (10 samples, 0.07%)</title><rect x="2.3244%" y="677" width="0.0658%" height="15" fill="rgb(226,116,26)" fg:x="353" fg:w="10"/><text x="2.5744%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.07%)</title><rect x="2.3244%" y="661" width="0.0658%" height="15" fill="rgb(244,5,17)" fg:x="353" fg:w="10"/><text x="2.5744%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="2.3902%" y="725" width="0.0132%" height="15" fill="rgb(252,159,33)" fg:x="363" fg:w="2"/><text x="2.6402%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (230 samples, 1.51%)</title><rect x="0.9218%" y="1333" width="1.5145%" height="15" fill="rgb(206,71,0)" fg:x="140" fg:w="230"/><text x="1.1718%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (230 samples, 1.51%)</title><rect x="0.9218%" y="1317" width="1.5145%" height="15" fill="rgb(233,118,54)" fg:x="140" fg:w="230"/><text x="1.1718%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (230 samples, 1.51%)</title><rect x="0.9218%" y="1301" width="1.5145%" height="15" fill="rgb(234,83,48)" fg:x="140" fg:w="230"/><text x="1.1718%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (230 samples, 1.51%)</title><rect x="0.9218%" y="1285" width="1.5145%" height="15" fill="rgb(228,3,54)" fg:x="140" fg:w="230"/><text x="1.1718%" y="1295.50"></text></g><g><title>rayon_core::join::join_context (230 samples, 1.51%)</title><rect x="0.9218%" y="1269" width="1.5145%" height="15" fill="rgb(226,155,13)" fg:x="140" fg:w="230"/><text x="1.1718%" y="1279.50"></text></g><g><title>rayon_core::registry::in_worker (230 samples, 1.51%)</title><rect x="0.9218%" y="1253" width="1.5145%" height="15" fill="rgb(241,28,37)" fg:x="140" fg:w="230"/><text x="1.1718%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (230 samples, 1.51%)</title><rect x="0.9218%" y="1237" width="1.5145%" height="15" fill="rgb(233,93,10)" fg:x="140" fg:w="230"/><text x="1.1718%" y="1247.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (105 samples, 0.69%)</title><rect x="1.7449%" y="1221" width="0.6914%" height="15" fill="rgb(225,113,19)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (105 samples, 0.69%)</title><rect x="1.7449%" y="1205" width="0.6914%" height="15" fill="rgb(241,2,18)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1215.50"></text></g><g><title>std::panicking::try (105 samples, 0.69%)</title><rect x="1.7449%" y="1189" width="0.6914%" height="15" fill="rgb(228,207,21)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (105 samples, 0.69%)</title><rect x="1.7449%" y="1173" width="0.6914%" height="15" fill="rgb(213,211,35)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1183.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (105 samples, 0.69%)</title><rect x="1.7449%" y="1157" width="0.6914%" height="15" fill="rgb(209,83,10)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (105 samples, 0.69%)</title><rect x="1.7449%" y="1141" width="0.6914%" height="15" fill="rgb(209,164,1)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (105 samples, 0.69%)</title><rect x="1.7449%" y="1125" width="0.6914%" height="15" fill="rgb(213,184,43)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (105 samples, 0.69%)</title><rect x="1.7449%" y="1109" width="0.6914%" height="15" fill="rgb(231,61,34)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1119.50"></text></g><g><title>rayon_core::join::join_context (105 samples, 0.69%)</title><rect x="1.7449%" y="1093" width="0.6914%" height="15" fill="rgb(235,75,3)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (105 samples, 0.69%)</title><rect x="1.7449%" y="1077" width="0.6914%" height="15" fill="rgb(220,106,47)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (105 samples, 0.69%)</title><rect x="1.7449%" y="1061" width="0.6914%" height="15" fill="rgb(210,196,33)" fg:x="265" fg:w="105"/><text x="1.9949%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (37 samples, 0.24%)</title><rect x="2.1927%" y="1045" width="0.2436%" height="15" fill="rgb(229,154,42)" fg:x="333" fg:w="37"/><text x="2.4427%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.24%)</title><rect x="2.1927%" y="1029" width="0.2436%" height="15" fill="rgb(228,114,26)" fg:x="333" fg:w="37"/><text x="2.4427%" y="1039.50"></text></g><g><title>std::panicking::try (37 samples, 0.24%)</title><rect x="2.1927%" y="1013" width="0.2436%" height="15" fill="rgb(208,144,1)" fg:x="333" fg:w="37"/><text x="2.4427%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.24%)</title><rect x="2.1927%" y="997" width="0.2436%" height="15" fill="rgb(239,112,37)" fg:x="333" fg:w="37"/><text x="2.4427%" y="1007.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.24%)</title><rect x="2.1927%" y="981" width="0.2436%" height="15" fill="rgb(210,96,50)" fg:x="333" fg:w="37"/><text x="2.4427%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (37 samples, 0.24%)</title><rect x="2.1927%" y="965" width="0.2436%" height="15" fill="rgb(222,178,2)" fg:x="333" fg:w="37"/><text x="2.4427%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (37 samples, 0.24%)</title><rect x="2.1927%" y="949" width="0.2436%" height="15" fill="rgb(226,74,18)" fg:x="333" fg:w="37"/><text x="2.4427%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (37 samples, 0.24%)</title><rect x="2.1927%" y="933" width="0.2436%" height="15" fill="rgb(225,67,54)" fg:x="333" fg:w="37"/><text x="2.4427%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (37 samples, 0.24%)</title><rect x="2.1927%" y="917" width="0.2436%" height="15" fill="rgb(251,92,32)" fg:x="333" fg:w="37"/><text x="2.4427%" y="927.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (37 samples, 0.24%)</title><rect x="2.1927%" y="901" width="0.2436%" height="15" fill="rgb(228,149,22)" fg:x="333" fg:w="37"/><text x="2.4427%" y="911.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (37 samples, 0.24%)</title><rect x="2.1927%" y="885" width="0.2436%" height="15" fill="rgb(243,54,13)" fg:x="333" fg:w="37"/><text x="2.4427%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.24%)</title><rect x="2.1927%" y="869" width="0.2436%" height="15" fill="rgb(243,180,28)" fg:x="333" fg:w="37"/><text x="2.4427%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.24%)</title><rect x="2.1927%" y="853" width="0.2436%" height="15" fill="rgb(208,167,24)" fg:x="333" fg:w="37"/><text x="2.4427%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.24%)</title><rect x="2.1927%" y="837" width="0.2436%" height="15" fill="rgb(245,73,45)" fg:x="333" fg:w="37"/><text x="2.4427%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.24%)</title><rect x="2.1927%" y="821" width="0.2436%" height="15" fill="rgb(237,203,48)" fg:x="333" fg:w="37"/><text x="2.4427%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (37 samples, 0.24%)</title><rect x="2.1927%" y="805" width="0.2436%" height="15" fill="rgb(211,197,16)" fg:x="333" fg:w="37"/><text x="2.4427%" y="815.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (37 samples, 0.24%)</title><rect x="2.1927%" y="789" width="0.2436%" height="15" fill="rgb(243,99,51)" fg:x="333" fg:w="37"/><text x="2.4427%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (37 samples, 0.24%)</title><rect x="2.1927%" y="773" width="0.2436%" height="15" fill="rgb(215,123,29)" fg:x="333" fg:w="37"/><text x="2.4427%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (37 samples, 0.24%)</title><rect x="2.1927%" y="757" width="0.2436%" height="15" fill="rgb(239,186,37)" fg:x="333" fg:w="37"/><text x="2.4427%" y="767.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.05%)</title><rect x="2.3902%" y="741" width="0.0461%" height="15" fill="rgb(252,136,39)" fg:x="363" fg:w="7"/><text x="2.6402%" y="751.50"></text></g><g><title>oorandom::Rand64::rand_range (5 samples, 0.03%)</title><rect x="2.4034%" y="725" width="0.0329%" height="15" fill="rgb(223,213,32)" fg:x="365" fg:w="5"/><text x="2.6534%" y="735.50"></text></g><g><title>oorandom::Rand64::rand_u64 (5 samples, 0.03%)</title><rect x="2.4034%" y="709" width="0.0329%" height="15" fill="rgb(233,115,5)" fg:x="365" fg:w="5"/><text x="2.6534%" y="719.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="2.4626%" y="693" width="0.0198%" height="15" fill="rgb(207,226,44)" fg:x="374" fg:w="3"/><text x="2.7126%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="2.4626%" y="677" width="0.0198%" height="15" fill="rgb(208,126,0)" fg:x="374" fg:w="3"/><text x="2.7126%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="2.4626%" y="661" width="0.0198%" height="15" fill="rgb(244,66,21)" fg:x="374" fg:w="3"/><text x="2.7126%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="2.4626%" y="645" width="0.0198%" height="15" fill="rgb(222,97,12)" fg:x="374" fg:w="3"/><text x="2.7126%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="2.4626%" y="629" width="0.0198%" height="15" fill="rgb(219,213,19)" fg:x="374" fg:w="3"/><text x="2.7126%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="2.4626%" y="613" width="0.0198%" height="15" fill="rgb(252,169,30)" fg:x="374" fg:w="3"/><text x="2.7126%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="2.5087%" y="661" width="0.0198%" height="15" fill="rgb(206,32,51)" fg:x="381" fg:w="3"/><text x="2.7587%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="2.5087%" y="645" width="0.0198%" height="15" fill="rgb(250,172,42)" fg:x="381" fg:w="3"/><text x="2.7587%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="2.4824%" y="693" width="0.0527%" height="15" fill="rgb(209,34,43)" fg:x="377" fg:w="8"/><text x="2.7324%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.04%)</title><rect x="2.4956%" y="677" width="0.0395%" height="15" fill="rgb(223,11,35)" fg:x="379" fg:w="6"/><text x="2.7456%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="2.5416%" y="661" width="0.0198%" height="15" fill="rgb(251,219,26)" fg:x="386" fg:w="3"/><text x="2.7916%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="2.5416%" y="645" width="0.0198%" height="15" fill="rgb(231,119,3)" fg:x="386" fg:w="3"/><text x="2.7916%" y="655.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="2.5943%" y="629" width="0.0132%" height="15" fill="rgb(216,97,11)" fg:x="394" fg:w="2"/><text x="2.8443%" y="639.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (16 samples, 0.11%)</title><rect x="2.5416%" y="677" width="0.1054%" height="15" fill="rgb(223,59,9)" fg:x="386" fg:w="16"/><text x="2.7916%" y="687.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (13 samples, 0.09%)</title><rect x="2.5614%" y="661" width="0.0856%" height="15" fill="rgb(233,93,31)" fg:x="389" fg:w="13"/><text x="2.8114%" y="671.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (8 samples, 0.05%)</title><rect x="2.5943%" y="645" width="0.0527%" height="15" fill="rgb(239,81,33)" fg:x="394" fg:w="8"/><text x="2.8443%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.04%)</title><rect x="2.6075%" y="629" width="0.0395%" height="15" fill="rgb(213,120,34)" fg:x="396" fg:w="6"/><text x="2.8575%" y="639.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (6 samples, 0.04%)</title><rect x="2.6075%" y="613" width="0.0395%" height="15" fill="rgb(243,49,53)" fg:x="396" fg:w="6"/><text x="2.8575%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (6 samples, 0.04%)</title><rect x="2.6075%" y="597" width="0.0395%" height="15" fill="rgb(247,216,33)" fg:x="396" fg:w="6"/><text x="2.8575%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="2.6338%" y="581" width="0.0132%" height="15" fill="rgb(226,26,14)" fg:x="400" fg:w="2"/><text x="2.8838%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="2.6338%" y="565" width="0.0132%" height="15" fill="rgb(215,49,53)" fg:x="400" fg:w="2"/><text x="2.8838%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (33 samples, 0.22%)</title><rect x="2.4495%" y="773" width="0.2173%" height="15" fill="rgb(245,162,40)" fg:x="372" fg:w="33"/><text x="2.6995%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (32 samples, 0.21%)</title><rect x="2.4560%" y="757" width="0.2107%" height="15" fill="rgb(229,68,17)" fg:x="373" fg:w="32"/><text x="2.7060%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (32 samples, 0.21%)</title><rect x="2.4560%" y="741" width="0.2107%" height="15" fill="rgb(213,182,10)" fg:x="373" fg:w="32"/><text x="2.7060%" y="751.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (32 samples, 0.21%)</title><rect x="2.4560%" y="725" width="0.2107%" height="15" fill="rgb(245,125,30)" fg:x="373" fg:w="32"/><text x="2.7060%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (32 samples, 0.21%)</title><rect x="2.4560%" y="709" width="0.2107%" height="15" fill="rgb(232,202,2)" fg:x="373" fg:w="32"/><text x="2.7060%" y="719.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.13%)</title><rect x="2.5351%" y="693" width="0.1317%" height="15" fill="rgb(237,140,51)" fg:x="385" fg:w="20"/><text x="2.7851%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition (3 samples, 0.02%)</title><rect x="2.6470%" y="677" width="0.0198%" height="15" fill="rgb(236,157,25)" fg:x="402" fg:w="3"/><text x="2.8970%" y="687.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="2.6470%" y="661" width="0.0198%" height="15" fill="rgb(219,209,0)" fg:x="402" fg:w="3"/><text x="2.8970%" y="671.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (2 samples, 0.01%)</title><rect x="2.6865%" y="709" width="0.0132%" height="15" fill="rgb(240,116,54)" fg:x="408" fg:w="2"/><text x="2.9365%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition (7 samples, 0.05%)</title><rect x="2.6997%" y="709" width="0.0461%" height="15" fill="rgb(216,10,36)" fg:x="410" fg:w="7"/><text x="2.9497%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="2.7128%" y="693" width="0.0329%" height="15" fill="rgb(222,72,44)" fg:x="412" fg:w="5"/><text x="2.9628%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="2.7260%" y="677" width="0.0198%" height="15" fill="rgb(232,159,9)" fg:x="414" fg:w="3"/><text x="2.9760%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.7326%" y="661" width="0.0132%" height="15" fill="rgb(210,39,32)" fg:x="415" fg:w="2"/><text x="2.9826%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.7326%" y="645" width="0.0132%" height="15" fill="rgb(216,194,45)" fg:x="415" fg:w="2"/><text x="2.9826%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.7326%" y="629" width="0.0132%" height="15" fill="rgb(218,18,35)" fg:x="415" fg:w="2"/><text x="2.9826%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="2.7787%" y="661" width="0.0132%" height="15" fill="rgb(207,83,51)" fg:x="422" fg:w="2"/><text x="3.0287%" y="671.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (8 samples, 0.05%)</title><rect x="2.7589%" y="693" width="0.0527%" height="15" fill="rgb(225,63,43)" fg:x="419" fg:w="8"/><text x="3.0089%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.04%)</title><rect x="2.7721%" y="677" width="0.0395%" height="15" fill="rgb(207,57,36)" fg:x="421" fg:w="6"/><text x="3.0221%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="2.7919%" y="661" width="0.0198%" height="15" fill="rgb(216,99,33)" fg:x="424" fg:w="3"/><text x="3.0419%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="2.7919%" y="645" width="0.0198%" height="15" fill="rgb(225,42,16)" fg:x="424" fg:w="3"/><text x="3.0419%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="2.7919%" y="629" width="0.0198%" height="15" fill="rgb(220,201,45)" fg:x="424" fg:w="3"/><text x="3.0419%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="2.7919%" y="613" width="0.0198%" height="15" fill="rgb(225,33,4)" fg:x="424" fg:w="3"/><text x="3.0419%" y="623.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (25 samples, 0.16%)</title><rect x="2.6668%" y="773" width="0.1646%" height="15" fill="rgb(224,33,50)" fg:x="405" fg:w="25"/><text x="2.9168%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (25 samples, 0.16%)</title><rect x="2.6668%" y="757" width="0.1646%" height="15" fill="rgb(246,198,51)" fg:x="405" fg:w="25"/><text x="2.9168%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (25 samples, 0.16%)</title><rect x="2.6668%" y="741" width="0.1646%" height="15" fill="rgb(205,22,4)" fg:x="405" fg:w="25"/><text x="2.9168%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (25 samples, 0.16%)</title><rect x="2.6668%" y="725" width="0.1646%" height="15" fill="rgb(206,3,8)" fg:x="405" fg:w="25"/><text x="2.9168%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.09%)</title><rect x="2.7458%" y="709" width="0.0856%" height="15" fill="rgb(251,23,15)" fg:x="417" fg:w="13"/><text x="2.9958%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition (3 samples, 0.02%)</title><rect x="2.8116%" y="693" width="0.0198%" height="15" fill="rgb(252,88,28)" fg:x="427" fg:w="3"/><text x="3.0616%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (2 samples, 0.01%)</title><rect x="2.8182%" y="677" width="0.0132%" height="15" fill="rgb(212,127,14)" fg:x="428" fg:w="2"/><text x="3.0682%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (62 samples, 0.41%)</title><rect x="2.4363%" y="805" width="0.4082%" height="15" fill="rgb(247,145,37)" fg:x="370" fg:w="62"/><text x="2.6863%" y="815.50"></text></g><g><title>criterion::analysis::estimates::stats (62 samples, 0.41%)</title><rect x="2.4363%" y="789" width="0.4082%" height="15" fill="rgb(209,117,53)" fg:x="370" fg:w="62"/><text x="2.6863%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (2 samples, 0.01%)</title><rect x="2.8314%" y="773" width="0.0132%" height="15" fill="rgb(212,90,42)" fg:x="430" fg:w="2"/><text x="3.0814%" y="783.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (67 samples, 0.44%)</title><rect x="2.4363%" y="1045" width="0.4412%" height="15" fill="rgb(218,164,37)" fg:x="370" fg:w="67"/><text x="2.6863%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (67 samples, 0.44%)</title><rect x="2.4363%" y="1029" width="0.4412%" height="15" fill="rgb(246,65,34)" fg:x="370" fg:w="67"/><text x="2.6863%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (67 samples, 0.44%)</title><rect x="2.4363%" y="1013" width="0.4412%" height="15" fill="rgb(231,100,33)" fg:x="370" fg:w="67"/><text x="2.6863%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (67 samples, 0.44%)</title><rect x="2.4363%" y="997" width="0.4412%" height="15" fill="rgb(228,126,14)" fg:x="370" fg:w="67"/><text x="2.6863%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (67 samples, 0.44%)</title><rect x="2.4363%" y="981" width="0.4412%" height="15" fill="rgb(215,173,21)" fg:x="370" fg:w="67"/><text x="2.6863%" y="991.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (67 samples, 0.44%)</title><rect x="2.4363%" y="965" width="0.4412%" height="15" fill="rgb(210,6,40)" fg:x="370" fg:w="67"/><text x="2.6863%" y="975.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (67 samples, 0.44%)</title><rect x="2.4363%" y="949" width="0.4412%" height="15" fill="rgb(212,48,18)" fg:x="370" fg:w="67"/><text x="2.6863%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.44%)</title><rect x="2.4363%" y="933" width="0.4412%" height="15" fill="rgb(230,214,11)" fg:x="370" fg:w="67"/><text x="2.6863%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 0.44%)</title><rect x="2.4363%" y="917" width="0.4412%" height="15" fill="rgb(254,105,39)" fg:x="370" fg:w="67"/><text x="2.6863%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 0.44%)</title><rect x="2.4363%" y="901" width="0.4412%" height="15" fill="rgb(245,158,5)" fg:x="370" fg:w="67"/><text x="2.6863%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (67 samples, 0.44%)</title><rect x="2.4363%" y="885" width="0.4412%" height="15" fill="rgb(249,208,11)" fg:x="370" fg:w="67"/><text x="2.6863%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (67 samples, 0.44%)</title><rect x="2.4363%" y="869" width="0.4412%" height="15" fill="rgb(210,39,28)" fg:x="370" fg:w="67"/><text x="2.6863%" y="879.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (67 samples, 0.44%)</title><rect x="2.4363%" y="853" width="0.4412%" height="15" fill="rgb(211,56,53)" fg:x="370" fg:w="67"/><text x="2.6863%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (67 samples, 0.44%)</title><rect x="2.4363%" y="837" width="0.4412%" height="15" fill="rgb(226,201,30)" fg:x="370" fg:w="67"/><text x="2.6863%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (67 samples, 0.44%)</title><rect x="2.4363%" y="821" width="0.4412%" height="15" fill="rgb(239,101,34)" fg:x="370" fg:w="67"/><text x="2.6863%" y="831.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (5 samples, 0.03%)</title><rect x="2.8445%" y="805" width="0.0329%" height="15" fill="rgb(226,209,5)" fg:x="432" fg:w="5"/><text x="3.0945%" y="815.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="2.8577%" y="789" width="0.0198%" height="15" fill="rgb(250,105,47)" fg:x="434" fg:w="3"/><text x="3.1077%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;criterion::stats::univariate::percentiles::Percentiles&lt;f64&gt;&gt; (2 samples, 0.01%)</title><rect x="2.8775%" y="709" width="0.0132%" height="15" fill="rgb(230,72,3)" fg:x="437" fg:w="2"/><text x="3.1275%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[f64]&gt;&gt; (2 samples, 0.01%)</title><rect x="2.8775%" y="693" width="0.0132%" height="15" fill="rgb(232,218,39)" fg:x="437" fg:w="2"/><text x="3.1275%" y="703.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.01%)</title><rect x="2.8775%" y="677" width="0.0132%" height="15" fill="rgb(248,166,6)" fg:x="437" fg:w="2"/><text x="3.1275%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="2.8775%" y="661" width="0.0132%" height="15" fill="rgb(247,89,20)" fg:x="437" fg:w="2"/><text x="3.1275%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="2.8775%" y="645" width="0.0132%" height="15" fill="rgb(248,130,54)" fg:x="437" fg:w="2"/><text x="3.1275%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (2 samples, 0.01%)</title><rect x="2.8972%" y="709" width="0.0132%" height="15" fill="rgb(234,196,4)" fg:x="440" fg:w="2"/><text x="3.1472%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (2 samples, 0.01%)</title><rect x="2.8972%" y="693" width="0.0132%" height="15" fill="rgb(250,143,31)" fg:x="440" fg:w="2"/><text x="3.1472%" y="703.50"></text></g><g><title>criterion::stats::sum (2 samples, 0.01%)</title><rect x="2.8972%" y="677" width="0.0132%" height="15" fill="rgb(211,110,34)" fg:x="440" fg:w="2"/><text x="3.1472%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="2.8972%" y="661" width="0.0132%" height="15" fill="rgb(215,124,48)" fg:x="440" fg:w="2"/><text x="3.1472%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="2.8972%" y="645" width="0.0132%" height="15" fill="rgb(216,46,13)" fg:x="440" fg:w="2"/><text x="3.1472%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="2.8972%" y="629" width="0.0132%" height="15" fill="rgb(205,184,25)" fg:x="440" fg:w="2"/><text x="3.1472%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="2.8972%" y="613" width="0.0132%" height="15" fill="rgb(228,1,10)" fg:x="440" fg:w="2"/><text x="3.1472%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.01%)</title><rect x="2.8972%" y="597" width="0.0132%" height="15" fill="rgb(213,116,27)" fg:x="440" fg:w="2"/><text x="3.1472%" y="607.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.01%)</title><rect x="2.8972%" y="581" width="0.0132%" height="15" fill="rgb(241,95,50)" fg:x="440" fg:w="2"/><text x="3.1472%" y="591.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="2.9367%" y="629" width="0.0198%" height="15" fill="rgb(238,48,32)" fg:x="446" fg:w="3"/><text x="3.1867%" y="639.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="2.9367%" y="613" width="0.0198%" height="15" fill="rgb(235,113,49)" fg:x="446" fg:w="3"/><text x="3.1867%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.9433%" y="597" width="0.0132%" height="15" fill="rgb(205,127,43)" fg:x="447" fg:w="2"/><text x="3.1933%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.9433%" y="581" width="0.0132%" height="15" fill="rgb(250,162,2)" fg:x="447" fg:w="2"/><text x="3.1933%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.9433%" y="565" width="0.0132%" height="15" fill="rgb(220,13,41)" fg:x="447" fg:w="2"/><text x="3.1933%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.9433%" y="549" width="0.0132%" height="15" fill="rgb(249,221,25)" fg:x="447" fg:w="2"/><text x="3.1933%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="2.9433%" y="533" width="0.0132%" height="15" fill="rgb(215,208,19)" fg:x="447" fg:w="2"/><text x="3.1933%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="2.9433%" y="517" width="0.0132%" height="15" fill="rgb(236,175,2)" fg:x="447" fg:w="2"/><text x="3.1933%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="2.9696%" y="597" width="0.0132%" height="15" fill="rgb(241,52,2)" fg:x="451" fg:w="2"/><text x="3.2196%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="2.9828%" y="581" width="0.0132%" height="15" fill="rgb(248,140,14)" fg:x="453" fg:w="2"/><text x="3.2328%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.12%)</title><rect x="2.9104%" y="709" width="0.1185%" height="15" fill="rgb(253,22,42)" fg:x="442" fg:w="18"/><text x="3.1604%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.11%)</title><rect x="2.9170%" y="693" width="0.1119%" height="15" fill="rgb(234,61,47)" fg:x="443" fg:w="17"/><text x="3.1670%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (16 samples, 0.11%)</title><rect x="2.9236%" y="677" width="0.1054%" height="15" fill="rgb(208,226,15)" fg:x="444" fg:w="16"/><text x="3.1736%" y="687.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (16 samples, 0.11%)</title><rect x="2.9236%" y="661" width="0.1054%" height="15" fill="rgb(217,221,4)" fg:x="444" fg:w="16"/><text x="3.1736%" y="671.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.11%)</title><rect x="2.9236%" y="645" width="0.1054%" height="15" fill="rgb(212,174,34)" fg:x="444" fg:w="16"/><text x="3.1736%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition (11 samples, 0.07%)</title><rect x="2.9565%" y="629" width="0.0724%" height="15" fill="rgb(253,83,4)" fg:x="449" fg:w="11"/><text x="3.2065%" y="639.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (10 samples, 0.07%)</title><rect x="2.9631%" y="613" width="0.0658%" height="15" fill="rgb(250,195,49)" fg:x="450" fg:w="10"/><text x="3.2131%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (7 samples, 0.05%)</title><rect x="2.9828%" y="597" width="0.0461%" height="15" fill="rgb(241,192,25)" fg:x="453" fg:w="7"/><text x="3.2328%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="2.9960%" y="581" width="0.0329%" height="15" fill="rgb(208,124,10)" fg:x="455" fg:w="5"/><text x="3.2460%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="2.9960%" y="565" width="0.0329%" height="15" fill="rgb(222,33,0)" fg:x="455" fg:w="5"/><text x="3.2460%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="2.9960%" y="549" width="0.0329%" height="15" fill="rgb(234,209,28)" fg:x="455" fg:w="5"/><text x="3.2460%" y="559.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (3 samples, 0.02%)</title><rect x="3.0289%" y="645" width="0.0198%" height="15" fill="rgb(224,11,23)" fg:x="460" fg:w="3"/><text x="3.2789%" y="655.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="3.0289%" y="629" width="0.0198%" height="15" fill="rgb(232,99,1)" fg:x="460" fg:w="3"/><text x="3.2789%" y="639.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="3.0289%" y="613" width="0.0198%" height="15" fill="rgb(237,95,45)" fg:x="460" fg:w="3"/><text x="3.2789%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="3.0487%" y="629" width="0.0132%" height="15" fill="rgb(208,109,11)" fg:x="463" fg:w="2"/><text x="3.2987%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="3.0487%" y="613" width="0.0132%" height="15" fill="rgb(216,190,48)" fg:x="463" fg:w="2"/><text x="3.2987%" y="623.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (4 samples, 0.03%)</title><rect x="3.0487%" y="645" width="0.0263%" height="15" fill="rgb(251,171,36)" fg:x="463" fg:w="4"/><text x="3.2987%" y="655.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="3.0618%" y="629" width="0.0132%" height="15" fill="rgb(230,62,22)" fg:x="465" fg:w="2"/><text x="3.3118%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="3.0750%" y="613" width="0.0132%" height="15" fill="rgb(225,114,35)" fg:x="467" fg:w="2"/><text x="3.3250%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (3 samples, 0.02%)</title><rect x="3.1013%" y="549" width="0.0198%" height="15" fill="rgb(215,118,42)" fg:x="471" fg:w="3"/><text x="3.3513%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (3 samples, 0.02%)</title><rect x="3.1013%" y="533" width="0.0198%" height="15" fill="rgb(243,119,21)" fg:x="471" fg:w="3"/><text x="3.3513%" y="543.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (6 samples, 0.04%)</title><rect x="3.0882%" y="613" width="0.0395%" height="15" fill="rgb(252,177,53)" fg:x="469" fg:w="6"/><text x="3.3382%" y="623.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.04%)</title><rect x="3.0882%" y="597" width="0.0395%" height="15" fill="rgb(237,209,29)" fg:x="469" fg:w="6"/><text x="3.3382%" y="607.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (6 samples, 0.04%)</title><rect x="3.0882%" y="581" width="0.0395%" height="15" fill="rgb(212,65,23)" fg:x="469" fg:w="6"/><text x="3.3382%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (6 samples, 0.04%)</title><rect x="3.0882%" y="565" width="0.0395%" height="15" fill="rgb(230,222,46)" fg:x="469" fg:w="6"/><text x="3.3382%" y="575.50"></text></g><g><title>rayon::slice::quicksort::partition (9 samples, 0.06%)</title><rect x="3.0750%" y="645" width="0.0593%" height="15" fill="rgb(215,135,32)" fg:x="467" fg:w="9"/><text x="3.3250%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (9 samples, 0.06%)</title><rect x="3.0750%" y="629" width="0.0593%" height="15" fill="rgb(246,101,22)" fg:x="467" fg:w="9"/><text x="3.3250%" y="639.50"></text></g><g><title>core::ops::function::Fn::call (40 samples, 0.26%)</title><rect x="2.8775%" y="741" width="0.2634%" height="15" fill="rgb(206,107,13)" fg:x="437" fg:w="40"/><text x="3.1275%" y="751.50"></text></g><g><title>criterion::analysis::estimates::stats (40 samples, 0.26%)</title><rect x="2.8775%" y="725" width="0.2634%" height="15" fill="rgb(250,100,44)" fg:x="437" fg:w="40"/><text x="3.1275%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.11%)</title><rect x="3.0289%" y="709" width="0.1119%" height="15" fill="rgb(231,147,38)" fg:x="460" fg:w="17"/><text x="3.2789%" y="719.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (17 samples, 0.11%)</title><rect x="3.0289%" y="693" width="0.1119%" height="15" fill="rgb(229,8,40)" fg:x="460" fg:w="17"/><text x="3.2789%" y="703.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (17 samples, 0.11%)</title><rect x="3.0289%" y="677" width="0.1119%" height="15" fill="rgb(221,135,30)" fg:x="460" fg:w="17"/><text x="3.2789%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.11%)</title><rect x="3.0289%" y="661" width="0.1119%" height="15" fill="rgb(249,193,18)" fg:x="460" fg:w="17"/><text x="3.2789%" y="671.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (114 samples, 0.75%)</title><rect x="2.4363%" y="1157" width="0.7506%" height="15" fill="rgb(209,133,39)" fg:x="370" fg:w="114"/><text x="2.6863%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (114 samples, 0.75%)</title><rect x="2.4363%" y="1141" width="0.7506%" height="15" fill="rgb(232,100,14)" fg:x="370" fg:w="114"/><text x="2.6863%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (114 samples, 0.75%)</title><rect x="2.4363%" y="1125" width="0.7506%" height="15" fill="rgb(224,185,1)" fg:x="370" fg:w="114"/><text x="2.6863%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (114 samples, 0.75%)</title><rect x="2.4363%" y="1109" width="0.7506%" height="15" fill="rgb(223,139,8)" fg:x="370" fg:w="114"/><text x="2.6863%" y="1119.50"></text></g><g><title>rayon_core::join::join_context (114 samples, 0.75%)</title><rect x="2.4363%" y="1093" width="0.7506%" height="15" fill="rgb(232,213,38)" fg:x="370" fg:w="114"/><text x="2.6863%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (114 samples, 0.75%)</title><rect x="2.4363%" y="1077" width="0.7506%" height="15" fill="rgb(207,94,22)" fg:x="370" fg:w="114"/><text x="2.6863%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (114 samples, 0.75%)</title><rect x="2.4363%" y="1061" width="0.7506%" height="15" fill="rgb(219,183,54)" fg:x="370" fg:w="114"/><text x="2.6863%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (47 samples, 0.31%)</title><rect x="2.8775%" y="1045" width="0.3095%" height="15" fill="rgb(216,185,54)" fg:x="437" fg:w="47"/><text x="3.1275%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (47 samples, 0.31%)</title><rect x="2.8775%" y="1029" width="0.3095%" height="15" fill="rgb(254,217,39)" fg:x="437" fg:w="47"/><text x="3.1275%" y="1039.50"></text></g><g><title>std::panicking::try (47 samples, 0.31%)</title><rect x="2.8775%" y="1013" width="0.3095%" height="15" fill="rgb(240,178,23)" fg:x="437" fg:w="47"/><text x="3.1275%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.31%)</title><rect x="2.8775%" y="997" width="0.3095%" height="15" fill="rgb(218,11,47)" fg:x="437" fg:w="47"/><text x="3.1275%" y="1007.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47 samples, 0.31%)</title><rect x="2.8775%" y="981" width="0.3095%" height="15" fill="rgb(218,51,51)" fg:x="437" fg:w="47"/><text x="3.1275%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (47 samples, 0.31%)</title><rect x="2.8775%" y="965" width="0.3095%" height="15" fill="rgb(238,126,27)" fg:x="437" fg:w="47"/><text x="3.1275%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (47 samples, 0.31%)</title><rect x="2.8775%" y="949" width="0.3095%" height="15" fill="rgb(249,202,22)" fg:x="437" fg:w="47"/><text x="3.1275%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.31%)</title><rect x="2.8775%" y="933" width="0.3095%" height="15" fill="rgb(254,195,49)" fg:x="437" fg:w="47"/><text x="3.1275%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (47 samples, 0.31%)</title><rect x="2.8775%" y="917" width="0.3095%" height="15" fill="rgb(208,123,14)" fg:x="437" fg:w="47"/><text x="3.1275%" y="927.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.31%)</title><rect x="2.8775%" y="901" width="0.3095%" height="15" fill="rgb(224,200,8)" fg:x="437" fg:w="47"/><text x="3.1275%" y="911.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.31%)</title><rect x="2.8775%" y="885" width="0.3095%" height="15" fill="rgb(217,61,36)" fg:x="437" fg:w="47"/><text x="3.1275%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.31%)</title><rect x="2.8775%" y="869" width="0.3095%" height="15" fill="rgb(206,35,45)" fg:x="437" fg:w="47"/><text x="3.1275%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.31%)</title><rect x="2.8775%" y="853" width="0.3095%" height="15" fill="rgb(217,65,33)" fg:x="437" fg:w="47"/><text x="3.1275%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.31%)</title><rect x="2.8775%" y="837" width="0.3095%" height="15" fill="rgb(222,158,48)" fg:x="437" fg:w="47"/><text x="3.1275%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.31%)</title><rect x="2.8775%" y="821" width="0.3095%" height="15" fill="rgb(254,2,54)" fg:x="437" fg:w="47"/><text x="3.1275%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (47 samples, 0.31%)</title><rect x="2.8775%" y="805" width="0.3095%" height="15" fill="rgb(250,143,38)" fg:x="437" fg:w="47"/><text x="3.1275%" y="815.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (47 samples, 0.31%)</title><rect x="2.8775%" y="789" width="0.3095%" height="15" fill="rgb(248,25,0)" fg:x="437" fg:w="47"/><text x="3.1275%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (47 samples, 0.31%)</title><rect x="2.8775%" y="773" width="0.3095%" height="15" fill="rgb(206,152,27)" fg:x="437" fg:w="47"/><text x="3.1275%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (47 samples, 0.31%)</title><rect x="2.8775%" y="757" width="0.3095%" height="15" fill="rgb(240,77,30)" fg:x="437" fg:w="47"/><text x="3.1275%" y="767.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.05%)</title><rect x="3.1408%" y="741" width="0.0461%" height="15" fill="rgb(231,5,3)" fg:x="477" fg:w="7"/><text x="3.3908%" y="751.50"></text></g><g><title>oorandom::Rand64::rand_range (4 samples, 0.03%)</title><rect x="3.1606%" y="725" width="0.0263%" height="15" fill="rgb(207,226,32)" fg:x="480" fg:w="4"/><text x="3.4106%" y="735.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="3.1672%" y="709" width="0.0198%" height="15" fill="rgb(222,207,47)" fg:x="481" fg:w="3"/><text x="3.4172%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="3.1738%" y="693" width="0.0132%" height="15" fill="rgb(229,115,45)" fg:x="482" fg:w="2"/><text x="3.4238%" y="703.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (3 samples, 0.02%)</title><rect x="3.2001%" y="629" width="0.0198%" height="15" fill="rgb(224,191,6)" fg:x="486" fg:w="3"/><text x="3.4501%" y="639.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.2067%" y="613" width="0.0132%" height="15" fill="rgb(230,227,24)" fg:x="487" fg:w="2"/><text x="3.4567%" y="623.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.2067%" y="597" width="0.0132%" height="15" fill="rgb(228,80,19)" fg:x="487" fg:w="2"/><text x="3.4567%" y="607.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.2067%" y="581" width="0.0132%" height="15" fill="rgb(247,229,0)" fg:x="487" fg:w="2"/><text x="3.4567%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (10 samples, 0.07%)</title><rect x="3.1935%" y="709" width="0.0658%" height="15" fill="rgb(237,194,15)" fg:x="485" fg:w="10"/><text x="3.4435%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (10 samples, 0.07%)</title><rect x="3.1935%" y="693" width="0.0658%" height="15" fill="rgb(219,203,20)" fg:x="485" fg:w="10"/><text x="3.4435%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (10 samples, 0.07%)</title><rect x="3.1935%" y="677" width="0.0658%" height="15" fill="rgb(234,128,8)" fg:x="485" fg:w="10"/><text x="3.4435%" y="687.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (10 samples, 0.07%)</title><rect x="3.1935%" y="661" width="0.0658%" height="15" fill="rgb(248,202,8)" fg:x="485" fg:w="10"/><text x="3.4435%" y="671.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.07%)</title><rect x="3.1935%" y="645" width="0.0658%" height="15" fill="rgb(206,104,37)" fg:x="485" fg:w="10"/><text x="3.4435%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition (5 samples, 0.03%)</title><rect x="3.2264%" y="629" width="0.0329%" height="15" fill="rgb(223,8,27)" fg:x="490" fg:w="5"/><text x="3.4764%" y="639.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="3.2264%" y="613" width="0.0329%" height="15" fill="rgb(216,217,28)" fg:x="490" fg:w="5"/><text x="3.4764%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.2462%" y="597" width="0.0132%" height="15" fill="rgb(249,199,1)" fg:x="493" fg:w="2"/><text x="3.4962%" y="607.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="3.2660%" y="597" width="0.0198%" height="15" fill="rgb(240,85,17)" fg:x="496" fg:w="3"/><text x="3.5160%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="3.2725%" y="581" width="0.0132%" height="15" fill="rgb(206,108,45)" fg:x="497" fg:w="2"/><text x="3.5225%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="3.2725%" y="565" width="0.0132%" height="15" fill="rgb(245,210,41)" fg:x="497" fg:w="2"/><text x="3.5225%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="3.2725%" y="549" width="0.0132%" height="15" fill="rgb(206,13,37)" fg:x="497" fg:w="2"/><text x="3.5225%" y="559.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (4 samples, 0.03%)</title><rect x="3.2660%" y="645" width="0.0263%" height="15" fill="rgb(250,61,18)" fg:x="496" fg:w="4"/><text x="3.5160%" y="655.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (4 samples, 0.03%)</title><rect x="3.2660%" y="629" width="0.0263%" height="15" fill="rgb(235,172,48)" fg:x="496" fg:w="4"/><text x="3.5160%" y="639.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (4 samples, 0.03%)</title><rect x="3.2660%" y="613" width="0.0263%" height="15" fill="rgb(249,201,17)" fg:x="496" fg:w="4"/><text x="3.5160%" y="623.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (2 samples, 0.01%)</title><rect x="3.2923%" y="645" width="0.0132%" height="15" fill="rgb(219,208,6)" fg:x="500" fg:w="2"/><text x="3.5423%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="3.2923%" y="629" width="0.0132%" height="15" fill="rgb(248,31,23)" fg:x="500" fg:w="2"/><text x="3.5423%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="3.2923%" y="613" width="0.0132%" height="15" fill="rgb(245,15,42)" fg:x="500" fg:w="2"/><text x="3.5423%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="3.3384%" y="613" width="0.0132%" height="15" fill="rgb(222,217,39)" fg:x="507" fg:w="2"/><text x="3.5884%" y="623.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (16 samples, 0.11%)</title><rect x="3.2594%" y="709" width="0.1054%" height="15" fill="rgb(210,219,27)" fg:x="495" fg:w="16"/><text x="3.5094%" y="719.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (16 samples, 0.11%)</title><rect x="3.2594%" y="693" width="0.1054%" height="15" fill="rgb(252,166,36)" fg:x="495" fg:w="16"/><text x="3.5094%" y="703.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (16 samples, 0.11%)</title><rect x="3.2594%" y="677" width="0.1054%" height="15" fill="rgb(245,132,34)" fg:x="495" fg:w="16"/><text x="3.5094%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.11%)</title><rect x="3.2594%" y="661" width="0.1054%" height="15" fill="rgb(236,54,3)" fg:x="495" fg:w="16"/><text x="3.5094%" y="671.50"></text></g><g><title>rayon::slice::quicksort::partition (9 samples, 0.06%)</title><rect x="3.3055%" y="645" width="0.0593%" height="15" fill="rgb(241,173,43)" fg:x="502" fg:w="9"/><text x="3.5555%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.04%)</title><rect x="3.3252%" y="629" width="0.0395%" height="15" fill="rgb(215,190,9)" fg:x="505" fg:w="6"/><text x="3.5752%" y="639.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.3516%" y="613" width="0.0132%" height="15" fill="rgb(242,101,16)" fg:x="509" fg:w="2"/><text x="3.6016%" y="623.50"></text></g><g><title>core::ops::function::Fn::call (29 samples, 0.19%)</title><rect x="3.1869%" y="741" width="0.1910%" height="15" fill="rgb(223,190,21)" fg:x="484" fg:w="29"/><text x="3.4369%" y="751.50"></text></g><g><title>criterion::analysis::estimates::stats (29 samples, 0.19%)</title><rect x="3.1869%" y="725" width="0.1910%" height="15" fill="rgb(215,228,25)" fg:x="484" fg:w="29"/><text x="3.4369%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (2 samples, 0.01%)</title><rect x="3.3647%" y="709" width="0.0132%" height="15" fill="rgb(225,36,22)" fg:x="511" fg:w="2"/><text x="3.6147%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (2 samples, 0.01%)</title><rect x="3.3647%" y="693" width="0.0132%" height="15" fill="rgb(251,106,46)" fg:x="511" fg:w="2"/><text x="3.6147%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.3647%" y="677" width="0.0132%" height="15" fill="rgb(208,90,1)" fg:x="511" fg:w="2"/><text x="3.6147%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="3.3647%" y="661" width="0.0132%" height="15" fill="rgb(243,10,4)" fg:x="511" fg:w="2"/><text x="3.6147%" y="671.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (40 samples, 0.26%)</title><rect x="3.1869%" y="981" width="0.2634%" height="15" fill="rgb(212,137,27)" fg:x="484" fg:w="40"/><text x="3.4369%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (40 samples, 0.26%)</title><rect x="3.1869%" y="965" width="0.2634%" height="15" fill="rgb(231,220,49)" fg:x="484" fg:w="40"/><text x="3.4369%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.26%)</title><rect x="3.1869%" y="949" width="0.2634%" height="15" fill="rgb(237,96,20)" fg:x="484" fg:w="40"/><text x="3.4369%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.26%)</title><rect x="3.1869%" y="933" width="0.2634%" height="15" fill="rgb(239,229,30)" fg:x="484" fg:w="40"/><text x="3.4369%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (40 samples, 0.26%)</title><rect x="3.1869%" y="917" width="0.2634%" height="15" fill="rgb(219,65,33)" fg:x="484" fg:w="40"/><text x="3.4369%" y="927.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (40 samples, 0.26%)</title><rect x="3.1869%" y="901" width="0.2634%" height="15" fill="rgb(243,134,7)" fg:x="484" fg:w="40"/><text x="3.4369%" y="911.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (40 samples, 0.26%)</title><rect x="3.1869%" y="885" width="0.2634%" height="15" fill="rgb(216,177,54)" fg:x="484" fg:w="40"/><text x="3.4369%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.26%)</title><rect x="3.1869%" y="869" width="0.2634%" height="15" fill="rgb(211,160,20)" fg:x="484" fg:w="40"/><text x="3.4369%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.26%)</title><rect x="3.1869%" y="853" width="0.2634%" height="15" fill="rgb(239,85,39)" fg:x="484" fg:w="40"/><text x="3.4369%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.26%)</title><rect x="3.1869%" y="837" width="0.2634%" height="15" fill="rgb(232,125,22)" fg:x="484" fg:w="40"/><text x="3.4369%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.26%)</title><rect x="3.1869%" y="821" width="0.2634%" height="15" fill="rgb(244,57,34)" fg:x="484" fg:w="40"/><text x="3.4369%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (40 samples, 0.26%)</title><rect x="3.1869%" y="805" width="0.2634%" height="15" fill="rgb(214,203,32)" fg:x="484" fg:w="40"/><text x="3.4369%" y="815.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (40 samples, 0.26%)</title><rect x="3.1869%" y="789" width="0.2634%" height="15" fill="rgb(207,58,43)" fg:x="484" fg:w="40"/><text x="3.4369%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (40 samples, 0.26%)</title><rect x="3.1869%" y="773" width="0.2634%" height="15" fill="rgb(215,193,15)" fg:x="484" fg:w="40"/><text x="3.4369%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (40 samples, 0.26%)</title><rect x="3.1869%" y="757" width="0.2634%" height="15" fill="rgb(232,15,44)" fg:x="484" fg:w="40"/><text x="3.4369%" y="767.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (11 samples, 0.07%)</title><rect x="3.3779%" y="741" width="0.0724%" height="15" fill="rgb(212,3,48)" fg:x="513" fg:w="11"/><text x="3.6279%" y="751.50"></text></g><g><title>oorandom::Rand64::rand_range (8 samples, 0.05%)</title><rect x="3.3976%" y="725" width="0.0527%" height="15" fill="rgb(218,128,7)" fg:x="516" fg:w="8"/><text x="3.6476%" y="735.50"></text></g><g><title>oorandom::Rand64::rand_u64 (5 samples, 0.03%)</title><rect x="3.4174%" y="709" width="0.0329%" height="15" fill="rgb(226,216,39)" fg:x="519" fg:w="5"/><text x="3.6674%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (2 samples, 0.01%)</title><rect x="3.4701%" y="645" width="0.0132%" height="15" fill="rgb(243,47,51)" fg:x="527" fg:w="2"/><text x="3.7201%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (2 samples, 0.01%)</title><rect x="3.4701%" y="629" width="0.0132%" height="15" fill="rgb(241,183,40)" fg:x="527" fg:w="2"/><text x="3.7201%" y="639.50"></text></g><g><title>criterion::stats::sum (2 samples, 0.01%)</title><rect x="3.4701%" y="613" width="0.0132%" height="15" fill="rgb(231,217,32)" fg:x="527" fg:w="2"/><text x="3.7201%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.4701%" y="597" width="0.0132%" height="15" fill="rgb(229,61,38)" fg:x="527" fg:w="2"/><text x="3.7201%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.4701%" y="581" width="0.0132%" height="15" fill="rgb(225,210,5)" fg:x="527" fg:w="2"/><text x="3.7201%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="3.4701%" y="565" width="0.0132%" height="15" fill="rgb(231,79,45)" fg:x="527" fg:w="2"/><text x="3.7201%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="3.4701%" y="549" width="0.0132%" height="15" fill="rgb(224,100,7)" fg:x="527" fg:w="2"/><text x="3.7201%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.01%)</title><rect x="3.4701%" y="533" width="0.0132%" height="15" fill="rgb(241,198,18)" fg:x="527" fg:w="2"/><text x="3.7201%" y="543.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.01%)</title><rect x="3.4701%" y="517" width="0.0132%" height="15" fill="rgb(252,97,53)" fg:x="527" fg:w="2"/><text x="3.7201%" y="527.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="3.4964%" y="565" width="0.0132%" height="15" fill="rgb(220,88,7)" fg:x="531" fg:w="2"/><text x="3.7464%" y="575.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.4964%" y="549" width="0.0132%" height="15" fill="rgb(213,176,14)" fg:x="531" fg:w="2"/><text x="3.7464%" y="559.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.4964%" y="533" width="0.0132%" height="15" fill="rgb(246,73,7)" fg:x="531" fg:w="2"/><text x="3.7464%" y="543.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.4964%" y="517" width="0.0132%" height="15" fill="rgb(245,64,36)" fg:x="531" fg:w="2"/><text x="3.7464%" y="527.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.4964%" y="501" width="0.0132%" height="15" fill="rgb(245,80,10)" fg:x="531" fg:w="2"/><text x="3.7464%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="3.4964%" y="485" width="0.0132%" height="15" fill="rgb(232,107,50)" fg:x="531" fg:w="2"/><text x="3.7464%" y="495.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="3.4964%" y="469" width="0.0132%" height="15" fill="rgb(253,3,0)" fg:x="531" fg:w="2"/><text x="3.7464%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="3.4964%" y="453" width="0.0132%" height="15" fill="rgb(212,99,53)" fg:x="531" fg:w="2"/><text x="3.7464%" y="463.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="3.5359%" y="517" width="0.0132%" height="15" fill="rgb(249,111,54)" fg:x="537" fg:w="2"/><text x="3.7859%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="3.5491%" y="469" width="0.0132%" height="15" fill="rgb(249,55,30)" fg:x="539" fg:w="2"/><text x="3.7991%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="3.5491%" y="453" width="0.0132%" height="15" fill="rgb(237,47,42)" fg:x="539" fg:w="2"/><text x="3.7991%" y="463.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.09%)</title><rect x="3.4832%" y="645" width="0.0856%" height="15" fill="rgb(211,20,18)" fg:x="529" fg:w="13"/><text x="3.7332%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (12 samples, 0.08%)</title><rect x="3.4898%" y="629" width="0.0790%" height="15" fill="rgb(231,203,46)" fg:x="530" fg:w="12"/><text x="3.7398%" y="639.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (11 samples, 0.07%)</title><rect x="3.4964%" y="613" width="0.0724%" height="15" fill="rgb(237,142,3)" fg:x="531" fg:w="11"/><text x="3.7464%" y="623.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (11 samples, 0.07%)</title><rect x="3.4964%" y="597" width="0.0724%" height="15" fill="rgb(241,107,1)" fg:x="531" fg:w="11"/><text x="3.7464%" y="607.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.07%)</title><rect x="3.4964%" y="581" width="0.0724%" height="15" fill="rgb(229,83,13)" fg:x="531" fg:w="11"/><text x="3.7464%" y="591.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="3.5162%" y="565" width="0.0527%" height="15" fill="rgb(241,91,40)" fg:x="534" fg:w="8"/><text x="3.7662%" y="575.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (7 samples, 0.05%)</title><rect x="3.5227%" y="549" width="0.0461%" height="15" fill="rgb(225,3,45)" fg:x="535" fg:w="7"/><text x="3.7727%" y="559.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="3.5359%" y="533" width="0.0329%" height="15" fill="rgb(244,223,14)" fg:x="537" fg:w="5"/><text x="3.7859%" y="543.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="3.5491%" y="517" width="0.0198%" height="15" fill="rgb(224,124,37)" fg:x="539" fg:w="3"/><text x="3.7991%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="3.5491%" y="501" width="0.0198%" height="15" fill="rgb(251,171,30)" fg:x="539" fg:w="3"/><text x="3.7991%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="3.5491%" y="485" width="0.0198%" height="15" fill="rgb(236,46,54)" fg:x="539" fg:w="3"/><text x="3.7991%" y="495.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.5754%" y="533" width="0.0132%" height="15" fill="rgb(245,213,5)" fg:x="543" fg:w="2"/><text x="3.8254%" y="543.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="3.5754%" y="517" width="0.0132%" height="15" fill="rgb(230,144,27)" fg:x="543" fg:w="2"/><text x="3.8254%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="3.5754%" y="501" width="0.0132%" height="15" fill="rgb(220,86,6)" fg:x="543" fg:w="2"/><text x="3.8254%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="3.5754%" y="485" width="0.0132%" height="15" fill="rgb(240,20,13)" fg:x="543" fg:w="2"/><text x="3.8254%" y="495.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (3 samples, 0.02%)</title><rect x="3.5754%" y="581" width="0.0198%" height="15" fill="rgb(217,89,34)" fg:x="543" fg:w="3"/><text x="3.8254%" y="591.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="3.5754%" y="565" width="0.0198%" height="15" fill="rgb(229,13,5)" fg:x="543" fg:w="3"/><text x="3.8254%" y="575.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="3.5754%" y="549" width="0.0198%" height="15" fill="rgb(244,67,35)" fg:x="543" fg:w="3"/><text x="3.8254%" y="559.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (2 samples, 0.01%)</title><rect x="3.5952%" y="581" width="0.0132%" height="15" fill="rgb(221,40,2)" fg:x="546" fg:w="2"/><text x="3.8452%" y="591.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="3.5952%" y="565" width="0.0132%" height="15" fill="rgb(237,157,21)" fg:x="546" fg:w="2"/><text x="3.8452%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.09%)</title><rect x="3.5688%" y="645" width="0.0922%" height="15" fill="rgb(222,94,11)" fg:x="542" fg:w="14"/><text x="3.8188%" y="655.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (14 samples, 0.09%)</title><rect x="3.5688%" y="629" width="0.0922%" height="15" fill="rgb(249,113,6)" fg:x="542" fg:w="14"/><text x="3.8188%" y="639.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (14 samples, 0.09%)</title><rect x="3.5688%" y="613" width="0.0922%" height="15" fill="rgb(238,137,36)" fg:x="542" fg:w="14"/><text x="3.8188%" y="623.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.09%)</title><rect x="3.5688%" y="597" width="0.0922%" height="15" fill="rgb(210,102,26)" fg:x="542" fg:w="14"/><text x="3.8188%" y="607.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="3.6083%" y="581" width="0.0527%" height="15" fill="rgb(218,30,30)" fg:x="548" fg:w="8"/><text x="3.8583%" y="591.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.04%)</title><rect x="3.6215%" y="565" width="0.0395%" height="15" fill="rgb(214,67,26)" fg:x="550" fg:w="6"/><text x="3.8715%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (31 samples, 0.20%)</title><rect x="3.4635%" y="677" width="0.2041%" height="15" fill="rgb(251,9,53)" fg:x="526" fg:w="31"/><text x="3.7135%" y="687.50"></text></g><g><title>criterion::analysis::estimates::stats (30 samples, 0.20%)</title><rect x="3.4701%" y="661" width="0.1975%" height="15" fill="rgb(228,204,25)" fg:x="527" fg:w="30"/><text x="3.7201%" y="671.50"></text></g><g><title>rayon_core::join::join_context (430 samples, 2.83%)</title><rect x="0.9218%" y="1381" width="2.8314%" height="15" fill="rgb(207,153,8)" fg:x="140" fg:w="430"/><text x="1.1718%" y="1391.50">ra..</text></g><g><title>rayon_core::registry::in_worker (430 samples, 2.83%)</title><rect x="0.9218%" y="1365" width="2.8314%" height="15" fill="rgb(242,9,16)" fg:x="140" fg:w="430"/><text x="1.1718%" y="1375.50">ra..</text></g><g><title>rayon_core::join::join_context::{{closure}} (430 samples, 2.83%)</title><rect x="0.9218%" y="1349" width="2.8314%" height="15" fill="rgb(217,211,10)" fg:x="140" fg:w="430"/><text x="1.1718%" y="1359.50">ra..</text></g><g><title>rayon_core::unwind::halt_unwinding (200 samples, 1.32%)</title><rect x="2.4363%" y="1333" width="1.3169%" height="15" fill="rgb(219,228,52)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (200 samples, 1.32%)</title><rect x="2.4363%" y="1317" width="1.3169%" height="15" fill="rgb(231,92,29)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1327.50"></text></g><g><title>std::panicking::try (200 samples, 1.32%)</title><rect x="2.4363%" y="1301" width="1.3169%" height="15" fill="rgb(232,8,23)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (200 samples, 1.32%)</title><rect x="2.4363%" y="1285" width="1.3169%" height="15" fill="rgb(216,211,34)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1295.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (200 samples, 1.32%)</title><rect x="2.4363%" y="1269" width="1.3169%" height="15" fill="rgb(236,151,0)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (200 samples, 1.32%)</title><rect x="2.4363%" y="1253" width="1.3169%" height="15" fill="rgb(209,168,3)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (200 samples, 1.32%)</title><rect x="2.4363%" y="1237" width="1.3169%" height="15" fill="rgb(208,129,28)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (200 samples, 1.32%)</title><rect x="2.4363%" y="1221" width="1.3169%" height="15" fill="rgb(229,78,22)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (200 samples, 1.32%)</title><rect x="2.4363%" y="1205" width="1.3169%" height="15" fill="rgb(228,187,13)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1215.50"></text></g><g><title>rayon_core::registry::in_worker (200 samples, 1.32%)</title><rect x="2.4363%" y="1189" width="1.3169%" height="15" fill="rgb(240,119,24)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (200 samples, 1.32%)</title><rect x="2.4363%" y="1173" width="1.3169%" height="15" fill="rgb(209,194,42)" fg:x="370" fg:w="200"/><text x="2.6863%" y="1183.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (86 samples, 0.57%)</title><rect x="3.1869%" y="1157" width="0.5663%" height="15" fill="rgb(247,200,46)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (86 samples, 0.57%)</title><rect x="3.1869%" y="1141" width="0.5663%" height="15" fill="rgb(218,76,16)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1151.50"></text></g><g><title>std::panicking::try (86 samples, 0.57%)</title><rect x="3.1869%" y="1125" width="0.5663%" height="15" fill="rgb(225,21,48)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (86 samples, 0.57%)</title><rect x="3.1869%" y="1109" width="0.5663%" height="15" fill="rgb(239,223,50)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (86 samples, 0.57%)</title><rect x="3.1869%" y="1093" width="0.5663%" height="15" fill="rgb(244,45,21)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (86 samples, 0.57%)</title><rect x="3.1869%" y="1077" width="0.5663%" height="15" fill="rgb(232,33,43)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (86 samples, 0.57%)</title><rect x="3.1869%" y="1061" width="0.5663%" height="15" fill="rgb(209,8,3)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (86 samples, 0.57%)</title><rect x="3.1869%" y="1045" width="0.5663%" height="15" fill="rgb(214,25,53)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1055.50"></text></g><g><title>rayon_core::join::join_context (86 samples, 0.57%)</title><rect x="3.1869%" y="1029" width="0.5663%" height="15" fill="rgb(254,186,54)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (86 samples, 0.57%)</title><rect x="3.1869%" y="1013" width="0.5663%" height="15" fill="rgb(208,174,49)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (86 samples, 0.57%)</title><rect x="3.1869%" y="997" width="0.5663%" height="15" fill="rgb(233,191,51)" fg:x="484" fg:w="86"/><text x="3.4369%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (46 samples, 0.30%)</title><rect x="3.4503%" y="981" width="0.3029%" height="15" fill="rgb(222,134,10)" fg:x="524" fg:w="46"/><text x="3.7003%" y="991.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 0.30%)</title><rect x="3.4503%" y="965" width="0.3029%" height="15" fill="rgb(230,226,20)" fg:x="524" fg:w="46"/><text x="3.7003%" y="975.50"></text></g><g><title>std::panicking::try (46 samples, 0.30%)</title><rect x="3.4503%" y="949" width="0.3029%" height="15" fill="rgb(251,111,25)" fg:x="524" fg:w="46"/><text x="3.7003%" y="959.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 0.30%)</title><rect x="3.4503%" y="933" width="0.3029%" height="15" fill="rgb(224,40,46)" fg:x="524" fg:w="46"/><text x="3.7003%" y="943.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (46 samples, 0.30%)</title><rect x="3.4503%" y="917" width="0.3029%" height="15" fill="rgb(236,108,47)" fg:x="524" fg:w="46"/><text x="3.7003%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (46 samples, 0.30%)</title><rect x="3.4503%" y="901" width="0.3029%" height="15" fill="rgb(234,93,0)" fg:x="524" fg:w="46"/><text x="3.7003%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (46 samples, 0.30%)</title><rect x="3.4503%" y="885" width="0.3029%" height="15" fill="rgb(224,213,32)" fg:x="524" fg:w="46"/><text x="3.7003%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.30%)</title><rect x="3.4503%" y="869" width="0.3029%" height="15" fill="rgb(251,11,48)" fg:x="524" fg:w="46"/><text x="3.7003%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (46 samples, 0.30%)</title><rect x="3.4503%" y="853" width="0.3029%" height="15" fill="rgb(236,173,5)" fg:x="524" fg:w="46"/><text x="3.7003%" y="863.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (46 samples, 0.30%)</title><rect x="3.4503%" y="837" width="0.3029%" height="15" fill="rgb(230,95,12)" fg:x="524" fg:w="46"/><text x="3.7003%" y="847.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (46 samples, 0.30%)</title><rect x="3.4503%" y="821" width="0.3029%" height="15" fill="rgb(232,209,1)" fg:x="524" fg:w="46"/><text x="3.7003%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.30%)</title><rect x="3.4503%" y="805" width="0.3029%" height="15" fill="rgb(232,6,1)" fg:x="524" fg:w="46"/><text x="3.7003%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.30%)</title><rect x="3.4503%" y="789" width="0.3029%" height="15" fill="rgb(210,224,50)" fg:x="524" fg:w="46"/><text x="3.7003%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.30%)</title><rect x="3.4503%" y="773" width="0.3029%" height="15" fill="rgb(228,127,35)" fg:x="524" fg:w="46"/><text x="3.7003%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (46 samples, 0.30%)</title><rect x="3.4503%" y="757" width="0.3029%" height="15" fill="rgb(245,102,45)" fg:x="524" fg:w="46"/><text x="3.7003%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (46 samples, 0.30%)</title><rect x="3.4503%" y="741" width="0.3029%" height="15" fill="rgb(214,1,49)" fg:x="524" fg:w="46"/><text x="3.7003%" y="751.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (44 samples, 0.29%)</title><rect x="3.4635%" y="725" width="0.2897%" height="15" fill="rgb(226,163,40)" fg:x="526" fg:w="44"/><text x="3.7135%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (44 samples, 0.29%)</title><rect x="3.4635%" y="709" width="0.2897%" height="15" fill="rgb(239,212,28)" fg:x="526" fg:w="44"/><text x="3.7135%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (44 samples, 0.29%)</title><rect x="3.4635%" y="693" width="0.2897%" height="15" fill="rgb(220,20,13)" fg:x="526" fg:w="44"/><text x="3.7135%" y="703.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.09%)</title><rect x="3.6676%" y="677" width="0.0856%" height="15" fill="rgb(210,164,35)" fg:x="557" fg:w="13"/><text x="3.9176%" y="687.50"></text></g><g><title>oorandom::Rand64::rand_range (10 samples, 0.07%)</title><rect x="3.6874%" y="661" width="0.0658%" height="15" fill="rgb(248,109,41)" fg:x="560" fg:w="10"/><text x="3.9374%" y="671.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="3.7400%" y="645" width="0.0132%" height="15" fill="rgb(238,23,50)" fg:x="568" fg:w="2"/><text x="3.9900%" y="655.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="3.7598%" y="741" width="0.0198%" height="15" fill="rgb(211,48,49)" fg:x="571" fg:w="3"/><text x="4.0098%" y="751.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="3.7598%" y="725" width="0.0198%" height="15" fill="rgb(223,36,21)" fg:x="571" fg:w="3"/><text x="4.0098%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="3.7598%" y="709" width="0.0198%" height="15" fill="rgb(207,123,46)" fg:x="571" fg:w="3"/><text x="4.0098%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="3.7598%" y="693" width="0.0198%" height="15" fill="rgb(240,218,32)" fg:x="571" fg:w="3"/><text x="4.0098%" y="703.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.02%)</title><rect x="3.7598%" y="677" width="0.0198%" height="15" fill="rgb(252,5,43)" fg:x="571" fg:w="3"/><text x="4.0098%" y="687.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.02%)</title><rect x="3.7598%" y="661" width="0.0198%" height="15" fill="rgb(252,84,19)" fg:x="571" fg:w="3"/><text x="4.0098%" y="671.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.02%)</title><rect x="3.7598%" y="645" width="0.0198%" height="15" fill="rgb(243,152,39)" fg:x="571" fg:w="3"/><text x="4.0098%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="3.7598%" y="629" width="0.0198%" height="15" fill="rgb(234,160,15)" fg:x="571" fg:w="3"/><text x="4.0098%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.7598%" y="613" width="0.0198%" height="15" fill="rgb(237,34,20)" fg:x="571" fg:w="3"/><text x="4.0098%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.7598%" y="597" width="0.0198%" height="15" fill="rgb(229,97,13)" fg:x="571" fg:w="3"/><text x="4.0098%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="3.7598%" y="581" width="0.0198%" height="15" fill="rgb(234,71,50)" fg:x="571" fg:w="3"/><text x="4.0098%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="3.7598%" y="565" width="0.0198%" height="15" fill="rgb(253,155,4)" fg:x="571" fg:w="3"/><text x="4.0098%" y="575.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (3 samples, 0.02%)</title><rect x="3.7598%" y="549" width="0.0198%" height="15" fill="rgb(222,185,37)" fg:x="571" fg:w="3"/><text x="4.0098%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (3 samples, 0.02%)</title><rect x="3.7598%" y="533" width="0.0198%" height="15" fill="rgb(251,177,13)" fg:x="571" fg:w="3"/><text x="4.0098%" y="543.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (3 samples, 0.02%)</title><rect x="3.7598%" y="517" width="0.0198%" height="15" fill="rgb(250,179,40)" fg:x="571" fg:w="3"/><text x="4.0098%" y="527.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="3.7598%" y="501" width="0.0198%" height="15" fill="rgb(242,44,2)" fg:x="571" fg:w="3"/><text x="4.0098%" y="511.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="3.7664%" y="485" width="0.0132%" height="15" fill="rgb(216,177,13)" fg:x="572" fg:w="2"/><text x="4.0164%" y="495.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.05%)</title><rect x="3.7598%" y="853" width="0.0527%" height="15" fill="rgb(216,106,43)" fg:x="571" fg:w="8"/><text x="4.0098%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.05%)</title><rect x="3.7598%" y="837" width="0.0527%" height="15" fill="rgb(216,183,2)" fg:x="571" fg:w="8"/><text x="4.0098%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.05%)</title><rect x="3.7598%" y="821" width="0.0527%" height="15" fill="rgb(249,75,3)" fg:x="571" fg:w="8"/><text x="4.0098%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.05%)</title><rect x="3.7598%" y="805" width="0.0527%" height="15" fill="rgb(219,67,39)" fg:x="571" fg:w="8"/><text x="4.0098%" y="815.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.05%)</title><rect x="3.7598%" y="789" width="0.0527%" height="15" fill="rgb(253,228,2)" fg:x="571" fg:w="8"/><text x="4.0098%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.05%)</title><rect x="3.7598%" y="773" width="0.0527%" height="15" fill="rgb(235,138,27)" fg:x="571" fg:w="8"/><text x="4.0098%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.05%)</title><rect x="3.7598%" y="757" width="0.0527%" height="15" fill="rgb(236,97,51)" fg:x="571" fg:w="8"/><text x="4.0098%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="3.7795%" y="741" width="0.0329%" height="15" fill="rgb(240,80,30)" fg:x="574" fg:w="5"/><text x="4.0295%" y="751.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="3.7795%" y="725" width="0.0329%" height="15" fill="rgb(230,178,19)" fg:x="574" fg:w="5"/><text x="4.0295%" y="735.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="3.7795%" y="709" width="0.0329%" height="15" fill="rgb(210,190,27)" fg:x="574" fg:w="5"/><text x="4.0295%" y="719.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="3.7795%" y="693" width="0.0329%" height="15" fill="rgb(222,107,31)" fg:x="574" fg:w="5"/><text x="4.0295%" y="703.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="3.7795%" y="677" width="0.0329%" height="15" fill="rgb(216,127,34)" fg:x="574" fg:w="5"/><text x="4.0295%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="3.7795%" y="661" width="0.0329%" height="15" fill="rgb(234,116,52)" fg:x="574" fg:w="5"/><text x="4.0295%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.7795%" y="645" width="0.0329%" height="15" fill="rgb(222,124,15)" fg:x="574" fg:w="5"/><text x="4.0295%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.7795%" y="629" width="0.0329%" height="15" fill="rgb(231,179,28)" fg:x="574" fg:w="5"/><text x="4.0295%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.03%)</title><rect x="3.7795%" y="613" width="0.0329%" height="15" fill="rgb(226,93,45)" fg:x="574" fg:w="5"/><text x="4.0295%" y="623.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.7795%" y="597" width="0.0329%" height="15" fill="rgb(215,8,51)" fg:x="574" fg:w="5"/><text x="4.0295%" y="607.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.7795%" y="581" width="0.0329%" height="15" fill="rgb(223,106,5)" fg:x="574" fg:w="5"/><text x="4.0295%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="3.7795%" y="565" width="0.0329%" height="15" fill="rgb(250,191,5)" fg:x="574" fg:w="5"/><text x="4.0295%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.7795%" y="549" width="0.0329%" height="15" fill="rgb(242,132,44)" fg:x="574" fg:w="5"/><text x="4.0295%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.7795%" y="533" width="0.0329%" height="15" fill="rgb(251,152,29)" fg:x="574" fg:w="5"/><text x="4.0295%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="3.7795%" y="517" width="0.0329%" height="15" fill="rgb(218,179,5)" fg:x="574" fg:w="5"/><text x="4.0295%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="3.7795%" y="501" width="0.0329%" height="15" fill="rgb(227,67,19)" fg:x="574" fg:w="5"/><text x="4.0295%" y="511.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="3.7795%" y="485" width="0.0329%" height="15" fill="rgb(233,119,31)" fg:x="574" fg:w="5"/><text x="4.0295%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="3.7795%" y="469" width="0.0329%" height="15" fill="rgb(241,120,22)" fg:x="574" fg:w="5"/><text x="4.0295%" y="479.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="3.7795%" y="453" width="0.0329%" height="15" fill="rgb(224,102,30)" fg:x="574" fg:w="5"/><text x="4.0295%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="3.7795%" y="437" width="0.0329%" height="15" fill="rgb(210,164,37)" fg:x="574" fg:w="5"/><text x="4.0295%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.03%)</title><rect x="3.8125%" y="677" width="0.0263%" height="15" fill="rgb(226,191,16)" fg:x="579" fg:w="4"/><text x="4.0625%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.03%)</title><rect x="3.8125%" y="661" width="0.0263%" height="15" fill="rgb(214,40,45)" fg:x="579" fg:w="4"/><text x="4.0625%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.03%)</title><rect x="3.8125%" y="645" width="0.0263%" height="15" fill="rgb(244,29,26)" fg:x="579" fg:w="4"/><text x="4.0625%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.03%)</title><rect x="3.8125%" y="629" width="0.0263%" height="15" fill="rgb(216,16,5)" fg:x="579" fg:w="4"/><text x="4.0625%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.03%)</title><rect x="3.8125%" y="613" width="0.0263%" height="15" fill="rgb(249,76,35)" fg:x="579" fg:w="4"/><text x="4.0625%" y="623.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.8125%" y="597" width="0.0263%" height="15" fill="rgb(207,11,44)" fg:x="579" fg:w="4"/><text x="4.0625%" y="607.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.8125%" y="581" width="0.0263%" height="15" fill="rgb(228,190,49)" fg:x="579" fg:w="4"/><text x="4.0625%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="3.8125%" y="565" width="0.0263%" height="15" fill="rgb(214,173,12)" fg:x="579" fg:w="4"/><text x="4.0625%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.8125%" y="549" width="0.0263%" height="15" fill="rgb(218,26,35)" fg:x="579" fg:w="4"/><text x="4.0625%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.8125%" y="533" width="0.0263%" height="15" fill="rgb(220,200,19)" fg:x="579" fg:w="4"/><text x="4.0625%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="3.8125%" y="517" width="0.0263%" height="15" fill="rgb(239,95,49)" fg:x="579" fg:w="4"/><text x="4.0625%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="3.8125%" y="501" width="0.0263%" height="15" fill="rgb(235,85,53)" fg:x="579" fg:w="4"/><text x="4.0625%" y="511.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.03%)</title><rect x="3.8125%" y="485" width="0.0263%" height="15" fill="rgb(233,133,31)" fg:x="579" fg:w="4"/><text x="4.0625%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.03%)</title><rect x="3.8125%" y="469" width="0.0263%" height="15" fill="rgb(218,25,20)" fg:x="579" fg:w="4"/><text x="4.0625%" y="479.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.03%)</title><rect x="3.8125%" y="453" width="0.0263%" height="15" fill="rgb(252,210,38)" fg:x="579" fg:w="4"/><text x="4.0625%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="3.8125%" y="437" width="0.0263%" height="15" fill="rgb(242,134,21)" fg:x="579" fg:w="4"/><text x="4.0625%" y="447.50"></text></g><g><title>oorandom::Rand64::rand_range (4 samples, 0.03%)</title><rect x="3.8125%" y="421" width="0.0263%" height="15" fill="rgb(213,28,48)" fg:x="579" fg:w="4"/><text x="4.0625%" y="431.50"></text></g><g><title>oorandom::Rand64::rand_u64 (4 samples, 0.03%)</title><rect x="3.8125%" y="405" width="0.0263%" height="15" fill="rgb(250,196,2)" fg:x="579" fg:w="4"/><text x="4.0625%" y="415.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.11%)</title><rect x="3.7598%" y="965" width="0.1119%" height="15" fill="rgb(227,5,17)" fg:x="571" fg:w="17"/><text x="4.0098%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.11%)</title><rect x="3.7598%" y="949" width="0.1119%" height="15" fill="rgb(221,226,24)" fg:x="571" fg:w="17"/><text x="4.0098%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.11%)</title><rect x="3.7598%" y="933" width="0.1119%" height="15" fill="rgb(211,5,48)" fg:x="571" fg:w="17"/><text x="4.0098%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.11%)</title><rect x="3.7598%" y="917" width="0.1119%" height="15" fill="rgb(219,150,6)" fg:x="571" fg:w="17"/><text x="4.0098%" y="927.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.11%)</title><rect x="3.7598%" y="901" width="0.1119%" height="15" fill="rgb(251,46,16)" fg:x="571" fg:w="17"/><text x="4.0098%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.11%)</title><rect x="3.7598%" y="885" width="0.1119%" height="15" fill="rgb(220,204,40)" fg:x="571" fg:w="17"/><text x="4.0098%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.11%)</title><rect x="3.7598%" y="869" width="0.1119%" height="15" fill="rgb(211,85,2)" fg:x="571" fg:w="17"/><text x="4.0098%" y="879.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.06%)</title><rect x="3.8125%" y="853" width="0.0593%" height="15" fill="rgb(229,17,7)" fg:x="579" fg:w="9"/><text x="4.0625%" y="863.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.06%)</title><rect x="3.8125%" y="837" width="0.0593%" height="15" fill="rgb(239,72,28)" fg:x="579" fg:w="9"/><text x="4.0625%" y="847.50"></text></g><g><title>std::panicking::try (9 samples, 0.06%)</title><rect x="3.8125%" y="821" width="0.0593%" height="15" fill="rgb(230,47,54)" fg:x="579" fg:w="9"/><text x="4.0625%" y="831.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.06%)</title><rect x="3.8125%" y="805" width="0.0593%" height="15" fill="rgb(214,50,8)" fg:x="579" fg:w="9"/><text x="4.0625%" y="815.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.06%)</title><rect x="3.8125%" y="789" width="0.0593%" height="15" fill="rgb(216,198,43)" fg:x="579" fg:w="9"/><text x="4.0625%" y="799.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.06%)</title><rect x="3.8125%" y="773" width="0.0593%" height="15" fill="rgb(234,20,35)" fg:x="579" fg:w="9"/><text x="4.0625%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.06%)</title><rect x="3.8125%" y="757" width="0.0593%" height="15" fill="rgb(254,45,19)" fg:x="579" fg:w="9"/><text x="4.0625%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.06%)</title><rect x="3.8125%" y="741" width="0.0593%" height="15" fill="rgb(219,14,44)" fg:x="579" fg:w="9"/><text x="4.0625%" y="751.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.06%)</title><rect x="3.8125%" y="725" width="0.0593%" height="15" fill="rgb(217,220,26)" fg:x="579" fg:w="9"/><text x="4.0625%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.06%)</title><rect x="3.8125%" y="709" width="0.0593%" height="15" fill="rgb(213,158,28)" fg:x="579" fg:w="9"/><text x="4.0625%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.06%)</title><rect x="3.8125%" y="693" width="0.0593%" height="15" fill="rgb(252,51,52)" fg:x="579" fg:w="9"/><text x="4.0625%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="3.8388%" y="677" width="0.0329%" height="15" fill="rgb(246,89,16)" fg:x="583" fg:w="5"/><text x="4.0888%" y="687.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="3.8388%" y="661" width="0.0329%" height="15" fill="rgb(216,158,49)" fg:x="583" fg:w="5"/><text x="4.0888%" y="671.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="3.8388%" y="645" width="0.0329%" height="15" fill="rgb(236,107,19)" fg:x="583" fg:w="5"/><text x="4.0888%" y="655.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="3.8388%" y="629" width="0.0329%" height="15" fill="rgb(228,185,30)" fg:x="583" fg:w="5"/><text x="4.0888%" y="639.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="3.8388%" y="613" width="0.0329%" height="15" fill="rgb(246,134,8)" fg:x="583" fg:w="5"/><text x="4.0888%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="3.8388%" y="597" width="0.0329%" height="15" fill="rgb(214,143,50)" fg:x="583" fg:w="5"/><text x="4.0888%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.8388%" y="581" width="0.0329%" height="15" fill="rgb(228,75,8)" fg:x="583" fg:w="5"/><text x="4.0888%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.8388%" y="565" width="0.0329%" height="15" fill="rgb(207,175,4)" fg:x="583" fg:w="5"/><text x="4.0888%" y="575.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.03%)</title><rect x="3.8388%" y="549" width="0.0329%" height="15" fill="rgb(205,108,24)" fg:x="583" fg:w="5"/><text x="4.0888%" y="559.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.8388%" y="533" width="0.0329%" height="15" fill="rgb(244,120,49)" fg:x="583" fg:w="5"/><text x="4.0888%" y="543.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.8388%" y="517" width="0.0329%" height="15" fill="rgb(223,47,38)" fg:x="583" fg:w="5"/><text x="4.0888%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="3.8388%" y="501" width="0.0329%" height="15" fill="rgb(229,179,11)" fg:x="583" fg:w="5"/><text x="4.0888%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.8388%" y="485" width="0.0329%" height="15" fill="rgb(231,122,1)" fg:x="583" fg:w="5"/><text x="4.0888%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.8388%" y="469" width="0.0329%" height="15" fill="rgb(245,119,9)" fg:x="583" fg:w="5"/><text x="4.0888%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="3.8388%" y="453" width="0.0329%" height="15" fill="rgb(241,163,25)" fg:x="583" fg:w="5"/><text x="4.0888%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="3.8388%" y="437" width="0.0329%" height="15" fill="rgb(217,214,3)" fg:x="583" fg:w="5"/><text x="4.0888%" y="447.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="3.8388%" y="421" width="0.0329%" height="15" fill="rgb(240,86,28)" fg:x="583" fg:w="5"/><text x="4.0888%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="3.8388%" y="405" width="0.0329%" height="15" fill="rgb(215,47,9)" fg:x="583" fg:w="5"/><text x="4.0888%" y="415.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="3.8388%" y="389" width="0.0329%" height="15" fill="rgb(252,25,45)" fg:x="583" fg:w="5"/><text x="4.0888%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="3.8388%" y="373" width="0.0329%" height="15" fill="rgb(251,164,9)" fg:x="583" fg:w="5"/><text x="4.0888%" y="383.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="3.8586%" y="357" width="0.0132%" height="15" fill="rgb(233,194,0)" fg:x="586" fg:w="2"/><text x="4.1086%" y="367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.03%)</title><rect x="3.8717%" y="677" width="0.0263%" height="15" fill="rgb(249,111,24)" fg:x="588" fg:w="4"/><text x="4.1217%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.03%)</title><rect x="3.8717%" y="661" width="0.0263%" height="15" fill="rgb(250,223,3)" fg:x="588" fg:w="4"/><text x="4.1217%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.03%)</title><rect x="3.8717%" y="645" width="0.0263%" height="15" fill="rgb(236,178,37)" fg:x="588" fg:w="4"/><text x="4.1217%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.03%)</title><rect x="3.8717%" y="629" width="0.0263%" height="15" fill="rgb(241,158,50)" fg:x="588" fg:w="4"/><text x="4.1217%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.03%)</title><rect x="3.8717%" y="613" width="0.0263%" height="15" fill="rgb(213,121,41)" fg:x="588" fg:w="4"/><text x="4.1217%" y="623.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.8717%" y="597" width="0.0263%" height="15" fill="rgb(240,92,3)" fg:x="588" fg:w="4"/><text x="4.1217%" y="607.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.8717%" y="581" width="0.0263%" height="15" fill="rgb(205,123,3)" fg:x="588" fg:w="4"/><text x="4.1217%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="3.8717%" y="565" width="0.0263%" height="15" fill="rgb(205,97,47)" fg:x="588" fg:w="4"/><text x="4.1217%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.8717%" y="549" width="0.0263%" height="15" fill="rgb(247,152,14)" fg:x="588" fg:w="4"/><text x="4.1217%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.8717%" y="533" width="0.0263%" height="15" fill="rgb(248,195,53)" fg:x="588" fg:w="4"/><text x="4.1217%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="3.8717%" y="517" width="0.0263%" height="15" fill="rgb(226,201,16)" fg:x="588" fg:w="4"/><text x="4.1217%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="3.8717%" y="501" width="0.0263%" height="15" fill="rgb(205,98,0)" fg:x="588" fg:w="4"/><text x="4.1217%" y="511.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.03%)</title><rect x="3.8717%" y="485" width="0.0263%" height="15" fill="rgb(214,191,48)" fg:x="588" fg:w="4"/><text x="4.1217%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.03%)</title><rect x="3.8717%" y="469" width="0.0263%" height="15" fill="rgb(237,112,39)" fg:x="588" fg:w="4"/><text x="4.1217%" y="479.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.03%)</title><rect x="3.8717%" y="453" width="0.0263%" height="15" fill="rgb(247,203,27)" fg:x="588" fg:w="4"/><text x="4.1217%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="3.8717%" y="437" width="0.0263%" height="15" fill="rgb(235,124,28)" fg:x="588" fg:w="4"/><text x="4.1217%" y="447.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="3.8849%" y="421" width="0.0132%" height="15" fill="rgb(208,207,46)" fg:x="590" fg:w="2"/><text x="4.1349%" y="431.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="3.8849%" y="405" width="0.0132%" height="15" fill="rgb(234,176,4)" fg:x="590" fg:w="2"/><text x="4.1349%" y="415.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.06%)</title><rect x="3.8717%" y="789" width="0.0593%" height="15" fill="rgb(230,133,28)" fg:x="588" fg:w="9"/><text x="4.1217%" y="799.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.06%)</title><rect x="3.8717%" y="773" width="0.0593%" height="15" fill="rgb(211,137,40)" fg:x="588" fg:w="9"/><text x="4.1217%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.06%)</title><rect x="3.8717%" y="757" width="0.0593%" height="15" fill="rgb(254,35,13)" fg:x="588" fg:w="9"/><text x="4.1217%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.06%)</title><rect x="3.8717%" y="741" width="0.0593%" height="15" fill="rgb(225,49,51)" fg:x="588" fg:w="9"/><text x="4.1217%" y="751.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.06%)</title><rect x="3.8717%" y="725" width="0.0593%" height="15" fill="rgb(251,10,15)" fg:x="588" fg:w="9"/><text x="4.1217%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.06%)</title><rect x="3.8717%" y="709" width="0.0593%" height="15" fill="rgb(228,207,15)" fg:x="588" fg:w="9"/><text x="4.1217%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.06%)</title><rect x="3.8717%" y="693" width="0.0593%" height="15" fill="rgb(241,99,19)" fg:x="588" fg:w="9"/><text x="4.1217%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="3.8981%" y="677" width="0.0329%" height="15" fill="rgb(207,104,49)" fg:x="592" fg:w="5"/><text x="4.1481%" y="687.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="3.8981%" y="661" width="0.0329%" height="15" fill="rgb(234,99,18)" fg:x="592" fg:w="5"/><text x="4.1481%" y="671.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="3.8981%" y="645" width="0.0329%" height="15" fill="rgb(213,191,49)" fg:x="592" fg:w="5"/><text x="4.1481%" y="655.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="3.8981%" y="629" width="0.0329%" height="15" fill="rgb(210,226,19)" fg:x="592" fg:w="5"/><text x="4.1481%" y="639.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="3.8981%" y="613" width="0.0329%" height="15" fill="rgb(229,97,18)" fg:x="592" fg:w="5"/><text x="4.1481%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="3.8981%" y="597" width="0.0329%" height="15" fill="rgb(211,167,15)" fg:x="592" fg:w="5"/><text x="4.1481%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.8981%" y="581" width="0.0329%" height="15" fill="rgb(210,169,34)" fg:x="592" fg:w="5"/><text x="4.1481%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.8981%" y="565" width="0.0329%" height="15" fill="rgb(241,121,31)" fg:x="592" fg:w="5"/><text x="4.1481%" y="575.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.03%)</title><rect x="3.8981%" y="549" width="0.0329%" height="15" fill="rgb(232,40,11)" fg:x="592" fg:w="5"/><text x="4.1481%" y="559.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.8981%" y="533" width="0.0329%" height="15" fill="rgb(205,86,26)" fg:x="592" fg:w="5"/><text x="4.1481%" y="543.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.8981%" y="517" width="0.0329%" height="15" fill="rgb(231,126,28)" fg:x="592" fg:w="5"/><text x="4.1481%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="3.8981%" y="501" width="0.0329%" height="15" fill="rgb(219,221,18)" fg:x="592" fg:w="5"/><text x="4.1481%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.8981%" y="485" width="0.0329%" height="15" fill="rgb(211,40,0)" fg:x="592" fg:w="5"/><text x="4.1481%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.8981%" y="469" width="0.0329%" height="15" fill="rgb(239,85,43)" fg:x="592" fg:w="5"/><text x="4.1481%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="3.8981%" y="453" width="0.0329%" height="15" fill="rgb(231,55,21)" fg:x="592" fg:w="5"/><text x="4.1481%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="3.8981%" y="437" width="0.0329%" height="15" fill="rgb(225,184,43)" fg:x="592" fg:w="5"/><text x="4.1481%" y="447.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="3.8981%" y="421" width="0.0329%" height="15" fill="rgb(251,158,41)" fg:x="592" fg:w="5"/><text x="4.1481%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="3.8981%" y="405" width="0.0329%" height="15" fill="rgb(234,159,37)" fg:x="592" fg:w="5"/><text x="4.1481%" y="415.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="3.8981%" y="389" width="0.0329%" height="15" fill="rgb(216,204,22)" fg:x="592" fg:w="5"/><text x="4.1481%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="3.8981%" y="373" width="0.0329%" height="15" fill="rgb(214,17,3)" fg:x="592" fg:w="5"/><text x="4.1481%" y="383.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="3.9178%" y="357" width="0.0132%" height="15" fill="rgb(212,111,17)" fg:x="595" fg:w="2"/><text x="4.1678%" y="367.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="3.9178%" y="341" width="0.0132%" height="15" fill="rgb(221,157,24)" fg:x="595" fg:w="2"/><text x="4.1678%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.03%)</title><rect x="3.9310%" y="613" width="0.0263%" height="15" fill="rgb(252,16,13)" fg:x="597" fg:w="4"/><text x="4.1810%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.03%)</title><rect x="3.9310%" y="597" width="0.0263%" height="15" fill="rgb(221,62,2)" fg:x="597" fg:w="4"/><text x="4.1810%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.03%)</title><rect x="3.9310%" y="581" width="0.0263%" height="15" fill="rgb(247,87,22)" fg:x="597" fg:w="4"/><text x="4.1810%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.03%)</title><rect x="3.9310%" y="565" width="0.0263%" height="15" fill="rgb(215,73,9)" fg:x="597" fg:w="4"/><text x="4.1810%" y="575.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.03%)</title><rect x="3.9310%" y="549" width="0.0263%" height="15" fill="rgb(207,175,33)" fg:x="597" fg:w="4"/><text x="4.1810%" y="559.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.9310%" y="533" width="0.0263%" height="15" fill="rgb(243,129,54)" fg:x="597" fg:w="4"/><text x="4.1810%" y="543.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.9310%" y="517" width="0.0263%" height="15" fill="rgb(227,119,45)" fg:x="597" fg:w="4"/><text x="4.1810%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="3.9310%" y="501" width="0.0263%" height="15" fill="rgb(205,109,36)" fg:x="597" fg:w="4"/><text x="4.1810%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.9310%" y="485" width="0.0263%" height="15" fill="rgb(205,6,39)" fg:x="597" fg:w="4"/><text x="4.1810%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.9310%" y="469" width="0.0263%" height="15" fill="rgb(221,32,16)" fg:x="597" fg:w="4"/><text x="4.1810%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="3.9310%" y="453" width="0.0263%" height="15" fill="rgb(228,144,50)" fg:x="597" fg:w="4"/><text x="4.1810%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="3.9310%" y="437" width="0.0263%" height="15" fill="rgb(229,201,53)" fg:x="597" fg:w="4"/><text x="4.1810%" y="447.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.03%)</title><rect x="3.9310%" y="421" width="0.0263%" height="15" fill="rgb(249,153,27)" fg:x="597" fg:w="4"/><text x="4.1810%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.03%)</title><rect x="3.9310%" y="405" width="0.0263%" height="15" fill="rgb(227,106,25)" fg:x="597" fg:w="4"/><text x="4.1810%" y="415.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.03%)</title><rect x="3.9310%" y="389" width="0.0263%" height="15" fill="rgb(230,65,29)" fg:x="597" fg:w="4"/><text x="4.1810%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="3.9310%" y="373" width="0.0263%" height="15" fill="rgb(221,57,46)" fg:x="597" fg:w="4"/><text x="4.1810%" y="383.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="3.9442%" y="357" width="0.0132%" height="15" fill="rgb(229,161,17)" fg:x="599" fg:w="2"/><text x="4.1942%" y="367.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="3.9442%" y="341" width="0.0132%" height="15" fill="rgb(222,213,11)" fg:x="599" fg:w="2"/><text x="4.1942%" y="351.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (35 samples, 0.23%)</title><rect x="3.7532%" y="1381" width="0.2305%" height="15" fill="rgb(235,35,13)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1391.50"></text></g><g><title>rayon_core::registry::main_loop (35 samples, 0.23%)</title><rect x="3.7532%" y="1365" width="0.2305%" height="15" fill="rgb(233,158,34)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (35 samples, 0.23%)</title><rect x="3.7532%" y="1349" width="0.2305%" height="15" fill="rgb(215,151,48)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1359.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (35 samples, 0.23%)</title><rect x="3.7532%" y="1333" width="0.2305%" height="15" fill="rgb(229,84,14)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (35 samples, 0.23%)</title><rect x="3.7532%" y="1317" width="0.2305%" height="15" fill="rgb(229,68,14)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1327.50"></text></g><g><title>rayon_core::job::JobRef::execute (35 samples, 0.23%)</title><rect x="3.7532%" y="1301" width="0.2305%" height="15" fill="rgb(243,106,26)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1311.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (35 samples, 0.23%)</title><rect x="3.7532%" y="1285" width="0.2305%" height="15" fill="rgb(206,45,38)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (35 samples, 0.23%)</title><rect x="3.7532%" y="1269" width="0.2305%" height="15" fill="rgb(226,6,15)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.23%)</title><rect x="3.7532%" y="1253" width="0.2305%" height="15" fill="rgb(232,22,54)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1263.50"></text></g><g><title>std::panicking::try (35 samples, 0.23%)</title><rect x="3.7532%" y="1237" width="0.2305%" height="15" fill="rgb(229,222,32)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.23%)</title><rect x="3.7532%" y="1221" width="0.2305%" height="15" fill="rgb(228,62,29)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.23%)</title><rect x="3.7532%" y="1205" width="0.2305%" height="15" fill="rgb(251,103,34)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1215.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (35 samples, 0.23%)</title><rect x="3.7532%" y="1189" width="0.2305%" height="15" fill="rgb(233,12,30)" fg:x="570" fg:w="35"/><text x="4.0032%" y="1199.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (34 samples, 0.22%)</title><rect x="3.7598%" y="1173" width="0.2239%" height="15" fill="rgb(238,52,0)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (34 samples, 0.22%)</title><rect x="3.7598%" y="1157" width="0.2239%" height="15" fill="rgb(223,98,5)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.22%)</title><rect x="3.7598%" y="1141" width="0.2239%" height="15" fill="rgb(228,75,37)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.22%)</title><rect x="3.7598%" y="1125" width="0.2239%" height="15" fill="rgb(205,115,49)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1135.50"></text></g><g><title>std::panicking::try (34 samples, 0.22%)</title><rect x="3.7598%" y="1109" width="0.2239%" height="15" fill="rgb(250,154,43)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.22%)</title><rect x="3.7598%" y="1093" width="0.2239%" height="15" fill="rgb(226,43,29)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.22%)</title><rect x="3.7598%" y="1077" width="0.2239%" height="15" fill="rgb(249,228,39)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (34 samples, 0.22%)</title><rect x="3.7598%" y="1061" width="0.2239%" height="15" fill="rgb(216,79,43)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.22%)</title><rect x="3.7598%" y="1045" width="0.2239%" height="15" fill="rgb(228,95,12)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.22%)</title><rect x="3.7598%" y="1029" width="0.2239%" height="15" fill="rgb(249,221,15)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1039.50"></text></g><g><title>rayon_core::join::join_context (34 samples, 0.22%)</title><rect x="3.7598%" y="1013" width="0.2239%" height="15" fill="rgb(233,34,13)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1023.50"></text></g><g><title>rayon_core::registry::in_worker (34 samples, 0.22%)</title><rect x="3.7598%" y="997" width="0.2239%" height="15" fill="rgb(214,103,39)" fg:x="571" fg:w="34"/><text x="4.0098%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (34 samples, 0.22%)</title><rect x="3.7598%" y="981" width="0.2239%" height="15" fill="rgb(251,126,39)" fg:x="571" fg:w="34"/><text x="4.0098%" y="991.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.11%)</title><rect x="3.8717%" y="965" width="0.1119%" height="15" fill="rgb(214,216,36)" fg:x="588" fg:w="17"/><text x="4.1217%" y="975.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.11%)</title><rect x="3.8717%" y="949" width="0.1119%" height="15" fill="rgb(220,221,8)" fg:x="588" fg:w="17"/><text x="4.1217%" y="959.50"></text></g><g><title>std::panicking::try (17 samples, 0.11%)</title><rect x="3.8717%" y="933" width="0.1119%" height="15" fill="rgb(240,216,3)" fg:x="588" fg:w="17"/><text x="4.1217%" y="943.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.11%)</title><rect x="3.8717%" y="917" width="0.1119%" height="15" fill="rgb(232,218,17)" fg:x="588" fg:w="17"/><text x="4.1217%" y="927.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.11%)</title><rect x="3.8717%" y="901" width="0.1119%" height="15" fill="rgb(229,163,45)" fg:x="588" fg:w="17"/><text x="4.1217%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.11%)</title><rect x="3.8717%" y="885" width="0.1119%" height="15" fill="rgb(231,110,42)" fg:x="588" fg:w="17"/><text x="4.1217%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.11%)</title><rect x="3.8717%" y="869" width="0.1119%" height="15" fill="rgb(208,170,48)" fg:x="588" fg:w="17"/><text x="4.1217%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.11%)</title><rect x="3.8717%" y="853" width="0.1119%" height="15" fill="rgb(239,116,25)" fg:x="588" fg:w="17"/><text x="4.1217%" y="863.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.11%)</title><rect x="3.8717%" y="837" width="0.1119%" height="15" fill="rgb(219,200,50)" fg:x="588" fg:w="17"/><text x="4.1217%" y="847.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.11%)</title><rect x="3.8717%" y="821" width="0.1119%" height="15" fill="rgb(245,200,0)" fg:x="588" fg:w="17"/><text x="4.1217%" y="831.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.11%)</title><rect x="3.8717%" y="805" width="0.1119%" height="15" fill="rgb(245,119,33)" fg:x="588" fg:w="17"/><text x="4.1217%" y="815.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.05%)</title><rect x="3.9310%" y="789" width="0.0527%" height="15" fill="rgb(231,125,12)" fg:x="597" fg:w="8"/><text x="4.1810%" y="799.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.05%)</title><rect x="3.9310%" y="773" width="0.0527%" height="15" fill="rgb(216,96,41)" fg:x="597" fg:w="8"/><text x="4.1810%" y="783.50"></text></g><g><title>std::panicking::try (8 samples, 0.05%)</title><rect x="3.9310%" y="757" width="0.0527%" height="15" fill="rgb(248,43,45)" fg:x="597" fg:w="8"/><text x="4.1810%" y="767.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.05%)</title><rect x="3.9310%" y="741" width="0.0527%" height="15" fill="rgb(217,222,7)" fg:x="597" fg:w="8"/><text x="4.1810%" y="751.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.05%)</title><rect x="3.9310%" y="725" width="0.0527%" height="15" fill="rgb(233,28,6)" fg:x="597" fg:w="8"/><text x="4.1810%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.05%)</title><rect x="3.9310%" y="709" width="0.0527%" height="15" fill="rgb(231,218,15)" fg:x="597" fg:w="8"/><text x="4.1810%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.05%)</title><rect x="3.9310%" y="693" width="0.0527%" height="15" fill="rgb(226,171,48)" fg:x="597" fg:w="8"/><text x="4.1810%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.05%)</title><rect x="3.9310%" y="677" width="0.0527%" height="15" fill="rgb(235,201,9)" fg:x="597" fg:w="8"/><text x="4.1810%" y="687.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.05%)</title><rect x="3.9310%" y="661" width="0.0527%" height="15" fill="rgb(217,80,15)" fg:x="597" fg:w="8"/><text x="4.1810%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.05%)</title><rect x="3.9310%" y="645" width="0.0527%" height="15" fill="rgb(219,152,8)" fg:x="597" fg:w="8"/><text x="4.1810%" y="655.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.05%)</title><rect x="3.9310%" y="629" width="0.0527%" height="15" fill="rgb(243,107,38)" fg:x="597" fg:w="8"/><text x="4.1810%" y="639.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.03%)</title><rect x="3.9573%" y="613" width="0.0263%" height="15" fill="rgb(231,17,5)" fg:x="601" fg:w="4"/><text x="4.2073%" y="623.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.03%)</title><rect x="3.9573%" y="597" width="0.0263%" height="15" fill="rgb(209,25,54)" fg:x="601" fg:w="4"/><text x="4.2073%" y="607.50"></text></g><g><title>std::panicking::try (4 samples, 0.03%)</title><rect x="3.9573%" y="581" width="0.0263%" height="15" fill="rgb(219,0,2)" fg:x="601" fg:w="4"/><text x="4.2073%" y="591.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="3.9573%" y="565" width="0.0263%" height="15" fill="rgb(246,9,5)" fg:x="601" fg:w="4"/><text x="4.2073%" y="575.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.03%)</title><rect x="3.9573%" y="549" width="0.0263%" height="15" fill="rgb(226,159,4)" fg:x="601" fg:w="4"/><text x="4.2073%" y="559.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.03%)</title><rect x="3.9573%" y="533" width="0.0263%" height="15" fill="rgb(219,175,34)" fg:x="601" fg:w="4"/><text x="4.2073%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.03%)</title><rect x="3.9573%" y="517" width="0.0263%" height="15" fill="rgb(236,10,46)" fg:x="601" fg:w="4"/><text x="4.2073%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.03%)</title><rect x="3.9573%" y="501" width="0.0263%" height="15" fill="rgb(240,211,16)" fg:x="601" fg:w="4"/><text x="4.2073%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.03%)</title><rect x="3.9573%" y="485" width="0.0263%" height="15" fill="rgb(205,3,43)" fg:x="601" fg:w="4"/><text x="4.2073%" y="495.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.9573%" y="469" width="0.0263%" height="15" fill="rgb(245,7,22)" fg:x="601" fg:w="4"/><text x="4.2073%" y="479.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="3.9573%" y="453" width="0.0263%" height="15" fill="rgb(239,132,32)" fg:x="601" fg:w="4"/><text x="4.2073%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="3.9573%" y="437" width="0.0263%" height="15" fill="rgb(228,202,34)" fg:x="601" fg:w="4"/><text x="4.2073%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.9573%" y="421" width="0.0263%" height="15" fill="rgb(254,200,22)" fg:x="601" fg:w="4"/><text x="4.2073%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="3.9573%" y="405" width="0.0263%" height="15" fill="rgb(219,10,39)" fg:x="601" fg:w="4"/><text x="4.2073%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="3.9573%" y="389" width="0.0263%" height="15" fill="rgb(226,210,39)" fg:x="601" fg:w="4"/><text x="4.2073%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="3.9573%" y="373" width="0.0263%" height="15" fill="rgb(208,219,16)" fg:x="601" fg:w="4"/><text x="4.2073%" y="383.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.03%)</title><rect x="3.9573%" y="357" width="0.0263%" height="15" fill="rgb(216,158,51)" fg:x="601" fg:w="4"/><text x="4.2073%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.03%)</title><rect x="3.9573%" y="341" width="0.0263%" height="15" fill="rgb(233,14,44)" fg:x="601" fg:w="4"/><text x="4.2073%" y="351.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.03%)</title><rect x="3.9573%" y="325" width="0.0263%" height="15" fill="rgb(237,97,39)" fg:x="601" fg:w="4"/><text x="4.2073%" y="335.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="3.9573%" y="309" width="0.0263%" height="15" fill="rgb(218,198,43)" fg:x="601" fg:w="4"/><text x="4.2073%" y="319.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="3.9705%" y="293" width="0.0132%" height="15" fill="rgb(231,104,20)" fg:x="603" fg:w="2"/><text x="4.2205%" y="303.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="3.9705%" y="277" width="0.0132%" height="15" fill="rgb(254,36,13)" fg:x="603" fg:w="2"/><text x="4.2205%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="4.0034%" y="661" width="0.0132%" height="15" fill="rgb(248,14,50)" fg:x="608" fg:w="2"/><text x="4.2534%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="4.0166%" y="645" width="0.0198%" height="15" fill="rgb(217,107,29)" fg:x="610" fg:w="3"/><text x="4.2666%" y="655.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (12 samples, 0.08%)</title><rect x="3.9903%" y="693" width="0.0790%" height="15" fill="rgb(251,169,33)" fg:x="606" fg:w="12"/><text x="4.2403%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (11 samples, 0.07%)</title><rect x="3.9968%" y="677" width="0.0724%" height="15" fill="rgb(217,108,32)" fg:x="607" fg:w="11"/><text x="4.2468%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (8 samples, 0.05%)</title><rect x="4.0166%" y="661" width="0.0527%" height="15" fill="rgb(219,66,42)" fg:x="610" fg:w="8"/><text x="4.2666%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="4.0363%" y="645" width="0.0329%" height="15" fill="rgb(206,180,7)" fg:x="613" fg:w="5"/><text x="4.2863%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="4.0363%" y="629" width="0.0329%" height="15" fill="rgb(208,226,31)" fg:x="613" fg:w="5"/><text x="4.2863%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="4.0363%" y="613" width="0.0329%" height="15" fill="rgb(218,26,49)" fg:x="613" fg:w="5"/><text x="4.2863%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="4.0561%" y="597" width="0.0132%" height="15" fill="rgb(233,197,48)" fg:x="616" fg:w="2"/><text x="4.3061%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="4.0561%" y="581" width="0.0132%" height="15" fill="rgb(252,181,51)" fg:x="616" fg:w="2"/><text x="4.3061%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.11%)</title><rect x="3.9903%" y="789" width="0.1119%" height="15" fill="rgb(253,90,19)" fg:x="606" fg:w="17"/><text x="4.2403%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.11%)</title><rect x="3.9903%" y="773" width="0.1119%" height="15" fill="rgb(215,171,30)" fg:x="606" fg:w="17"/><text x="4.2403%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (17 samples, 0.11%)</title><rect x="3.9903%" y="757" width="0.1119%" height="15" fill="rgb(214,222,9)" fg:x="606" fg:w="17"/><text x="4.2403%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (17 samples, 0.11%)</title><rect x="3.9903%" y="741" width="0.1119%" height="15" fill="rgb(223,3,22)" fg:x="606" fg:w="17"/><text x="4.2403%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.11%)</title><rect x="3.9903%" y="725" width="0.1119%" height="15" fill="rgb(225,196,46)" fg:x="606" fg:w="17"/><text x="4.2403%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.11%)</title><rect x="3.9903%" y="709" width="0.1119%" height="15" fill="rgb(209,110,37)" fg:x="606" fg:w="17"/><text x="4.2403%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition (5 samples, 0.03%)</title><rect x="4.0693%" y="693" width="0.0329%" height="15" fill="rgb(249,89,12)" fg:x="618" fg:w="5"/><text x="4.3193%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (4 samples, 0.03%)</title><rect x="4.0759%" y="677" width="0.0263%" height="15" fill="rgb(226,27,33)" fg:x="619" fg:w="4"/><text x="4.3259%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.03%)</title><rect x="4.1088%" y="693" width="0.0263%" height="15" fill="rgb(213,82,22)" fg:x="624" fg:w="4"/><text x="4.3588%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.03%)</title><rect x="4.1088%" y="677" width="0.0263%" height="15" fill="rgb(248,140,0)" fg:x="624" fg:w="4"/><text x="4.3588%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (2 samples, 0.01%)</title><rect x="4.1549%" y="677" width="0.0132%" height="15" fill="rgb(228,106,3)" fg:x="631" fg:w="2"/><text x="4.4049%" y="687.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="4.1549%" y="661" width="0.0132%" height="15" fill="rgb(209,23,37)" fg:x="631" fg:w="2"/><text x="4.4049%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="4.1549%" y="645" width="0.0132%" height="15" fill="rgb(241,93,50)" fg:x="631" fg:w="2"/><text x="4.4049%" y="655.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (12 samples, 0.08%)</title><rect x="4.1088%" y="709" width="0.0790%" height="15" fill="rgb(253,46,43)" fg:x="624" fg:w="12"/><text x="4.3588%" y="719.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (8 samples, 0.05%)</title><rect x="4.1351%" y="693" width="0.0527%" height="15" fill="rgb(226,206,43)" fg:x="628" fg:w="8"/><text x="4.3851%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="4.1680%" y="677" width="0.0198%" height="15" fill="rgb(217,54,7)" fg:x="633" fg:w="3"/><text x="4.4180%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="4.1680%" y="661" width="0.0198%" height="15" fill="rgb(223,5,52)" fg:x="633" fg:w="3"/><text x="4.4180%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="4.1680%" y="645" width="0.0198%" height="15" fill="rgb(206,52,46)" fg:x="633" fg:w="3"/><text x="4.4180%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="4.1680%" y="629" width="0.0198%" height="15" fill="rgb(253,136,11)" fg:x="633" fg:w="3"/><text x="4.4180%" y="639.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (35 samples, 0.23%)</title><rect x="3.9837%" y="1237" width="0.2305%" height="15" fill="rgb(208,106,33)" fg:x="605" fg:w="35"/><text x="4.2337%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (35 samples, 0.23%)</title><rect x="3.9837%" y="1221" width="0.2305%" height="15" fill="rgb(206,54,4)" fg:x="605" fg:w="35"/><text x="4.2337%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 0.23%)</title><rect x="3.9837%" y="1205" width="0.2305%" height="15" fill="rgb(213,3,15)" fg:x="605" fg:w="35"/><text x="4.2337%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.23%)</title><rect x="3.9837%" y="1189" width="0.2305%" height="15" fill="rgb(252,211,39)" fg:x="605" fg:w="35"/><text x="4.2337%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (35 samples, 0.23%)</title><rect x="3.9837%" y="1173" width="0.2305%" height="15" fill="rgb(223,6,36)" fg:x="605" fg:w="35"/><text x="4.2337%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (35 samples, 0.23%)</title><rect x="3.9837%" y="1157" width="0.2305%" height="15" fill="rgb(252,169,45)" fg:x="605" fg:w="35"/><text x="4.2337%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (35 samples, 0.23%)</title><rect x="3.9837%" y="1141" width="0.2305%" height="15" fill="rgb(212,48,26)" fg:x="605" fg:w="35"/><text x="4.2337%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.22%)</title><rect x="3.9903%" y="1125" width="0.2239%" height="15" fill="rgb(251,102,48)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.22%)</title><rect x="3.9903%" y="1109" width="0.2239%" height="15" fill="rgb(243,208,16)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1119.50"></text></g><g><title>std::panicking::try (34 samples, 0.22%)</title><rect x="3.9903%" y="1093" width="0.2239%" height="15" fill="rgb(219,96,24)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.22%)</title><rect x="3.9903%" y="1077" width="0.2239%" height="15" fill="rgb(219,33,29)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1087.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.22%)</title><rect x="3.9903%" y="1061" width="0.2239%" height="15" fill="rgb(223,176,5)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (34 samples, 0.22%)</title><rect x="3.9903%" y="1045" width="0.2239%" height="15" fill="rgb(228,140,14)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.22%)</title><rect x="3.9903%" y="1029" width="0.2239%" height="15" fill="rgb(217,179,31)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.22%)</title><rect x="3.9903%" y="1013" width="0.2239%" height="15" fill="rgb(230,9,30)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (34 samples, 0.22%)</title><rect x="3.9903%" y="997" width="0.2239%" height="15" fill="rgb(230,136,20)" fg:x="606" fg:w="34"/><text x="4.2403%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (34 samples, 0.22%)</title><rect x="3.9903%" y="981" width="0.2239%" height="15" fill="rgb(215,210,22)" fg:x="606" fg:w="34"/><text x="4.2403%" y="991.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (34 samples, 0.22%)</title><rect x="3.9903%" y="965" width="0.2239%" height="15" fill="rgb(218,43,5)" fg:x="606" fg:w="34"/><text x="4.2403%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.22%)</title><rect x="3.9903%" y="949" width="0.2239%" height="15" fill="rgb(216,11,5)" fg:x="606" fg:w="34"/><text x="4.2403%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.22%)</title><rect x="3.9903%" y="933" width="0.2239%" height="15" fill="rgb(209,82,29)" fg:x="606" fg:w="34"/><text x="4.2403%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.22%)</title><rect x="3.9903%" y="917" width="0.2239%" height="15" fill="rgb(244,115,12)" fg:x="606" fg:w="34"/><text x="4.2403%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.22%)</title><rect x="3.9903%" y="901" width="0.2239%" height="15" fill="rgb(222,82,18)" fg:x="606" fg:w="34"/><text x="4.2403%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (34 samples, 0.22%)</title><rect x="3.9903%" y="885" width="0.2239%" height="15" fill="rgb(249,227,8)" fg:x="606" fg:w="34"/><text x="4.2403%" y="895.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (34 samples, 0.22%)</title><rect x="3.9903%" y="869" width="0.2239%" height="15" fill="rgb(253,141,45)" fg:x="606" fg:w="34"/><text x="4.2403%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (34 samples, 0.22%)</title><rect x="3.9903%" y="853" width="0.2239%" height="15" fill="rgb(234,184,4)" fg:x="606" fg:w="34"/><text x="4.2403%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (34 samples, 0.22%)</title><rect x="3.9903%" y="837" width="0.2239%" height="15" fill="rgb(218,194,23)" fg:x="606" fg:w="34"/><text x="4.2403%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (34 samples, 0.22%)</title><rect x="3.9903%" y="821" width="0.2239%" height="15" fill="rgb(235,66,41)" fg:x="606" fg:w="34"/><text x="4.2403%" y="831.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.22%)</title><rect x="3.9903%" y="805" width="0.2239%" height="15" fill="rgb(245,217,1)" fg:x="606" fg:w="34"/><text x="4.2403%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.11%)</title><rect x="4.1022%" y="789" width="0.1119%" height="15" fill="rgb(229,91,1)" fg:x="623" fg:w="17"/><text x="4.3522%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (17 samples, 0.11%)</title><rect x="4.1022%" y="773" width="0.1119%" height="15" fill="rgb(207,101,30)" fg:x="623" fg:w="17"/><text x="4.3522%" y="783.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (17 samples, 0.11%)</title><rect x="4.1022%" y="757" width="0.1119%" height="15" fill="rgb(223,82,49)" fg:x="623" fg:w="17"/><text x="4.3522%" y="767.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.11%)</title><rect x="4.1022%" y="741" width="0.1119%" height="15" fill="rgb(218,167,17)" fg:x="623" fg:w="17"/><text x="4.3522%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.11%)</title><rect x="4.1022%" y="725" width="0.1119%" height="15" fill="rgb(208,103,14)" fg:x="623" fg:w="17"/><text x="4.3522%" y="735.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.03%)</title><rect x="4.1878%" y="709" width="0.0263%" height="15" fill="rgb(238,20,8)" fg:x="636" fg:w="4"/><text x="4.4378%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="4.1944%" y="693" width="0.0198%" height="15" fill="rgb(218,80,54)" fg:x="637" fg:w="3"/><text x="4.4444%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="4.2273%" y="677" width="0.0132%" height="15" fill="rgb(240,144,17)" fg:x="642" fg:w="2"/><text x="4.4773%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="4.2273%" y="661" width="0.0132%" height="15" fill="rgb(245,27,50)" fg:x="642" fg:w="2"/><text x="4.4773%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="4.2471%" y="661" width="0.0198%" height="15" fill="rgb(251,51,7)" fg:x="645" fg:w="3"/><text x="4.4971%" y="671.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (8 samples, 0.05%)</title><rect x="4.2273%" y="693" width="0.0527%" height="15" fill="rgb(245,217,29)" fg:x="642" fg:w="8"/><text x="4.4773%" y="703.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.04%)</title><rect x="4.2405%" y="677" width="0.0395%" height="15" fill="rgb(221,176,29)" fg:x="644" fg:w="6"/><text x="4.4905%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.12%)</title><rect x="4.2141%" y="789" width="0.1185%" height="15" fill="rgb(212,180,24)" fg:x="640" fg:w="18"/><text x="4.4641%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.12%)</title><rect x="4.2141%" y="773" width="0.1185%" height="15" fill="rgb(254,24,2)" fg:x="640" fg:w="18"/><text x="4.4641%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (18 samples, 0.12%)</title><rect x="4.2141%" y="757" width="0.1185%" height="15" fill="rgb(230,100,2)" fg:x="640" fg:w="18"/><text x="4.4641%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (18 samples, 0.12%)</title><rect x="4.2141%" y="741" width="0.1185%" height="15" fill="rgb(219,142,25)" fg:x="640" fg:w="18"/><text x="4.4641%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.12%)</title><rect x="4.2141%" y="725" width="0.1185%" height="15" fill="rgb(240,73,43)" fg:x="640" fg:w="18"/><text x="4.4641%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.12%)</title><rect x="4.2141%" y="709" width="0.1185%" height="15" fill="rgb(214,114,15)" fg:x="640" fg:w="18"/><text x="4.4641%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="4.2800%" y="693" width="0.0527%" height="15" fill="rgb(207,130,4)" fg:x="650" fg:w="8"/><text x="4.5300%" y="703.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (7 samples, 0.05%)</title><rect x="4.2866%" y="677" width="0.0461%" height="15" fill="rgb(221,25,40)" fg:x="651" fg:w="7"/><text x="4.5366%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="4.3129%" y="661" width="0.0198%" height="15" fill="rgb(241,184,7)" fg:x="655" fg:w="3"/><text x="4.5629%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="4.3129%" y="645" width="0.0198%" height="15" fill="rgb(235,159,4)" fg:x="655" fg:w="3"/><text x="4.5629%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="4.3129%" y="629" width="0.0198%" height="15" fill="rgb(214,87,48)" fg:x="655" fg:w="3"/><text x="4.5629%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="4.3129%" y="613" width="0.0198%" height="15" fill="rgb(246,198,24)" fg:x="655" fg:w="3"/><text x="4.5629%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="4.3195%" y="597" width="0.0132%" height="15" fill="rgb(209,66,40)" fg:x="656" fg:w="2"/><text x="4.5695%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="4.3195%" y="581" width="0.0132%" height="15" fill="rgb(233,147,39)" fg:x="656" fg:w="2"/><text x="4.5695%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (2 samples, 0.01%)</title><rect x="4.3458%" y="677" width="0.0132%" height="15" fill="rgb(231,145,52)" fg:x="660" fg:w="2"/><text x="4.5958%" y="687.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="4.3458%" y="661" width="0.0132%" height="15" fill="rgb(206,20,26)" fg:x="660" fg:w="2"/><text x="4.5958%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="4.3458%" y="645" width="0.0132%" height="15" fill="rgb(238,220,4)" fg:x="660" fg:w="2"/><text x="4.5958%" y="655.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (9 samples, 0.06%)</title><rect x="4.3392%" y="709" width="0.0593%" height="15" fill="rgb(252,195,42)" fg:x="659" fg:w="9"/><text x="4.5892%" y="719.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (9 samples, 0.06%)</title><rect x="4.3392%" y="693" width="0.0593%" height="15" fill="rgb(209,10,6)" fg:x="659" fg:w="9"/><text x="4.5892%" y="703.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (6 samples, 0.04%)</title><rect x="4.3590%" y="677" width="0.0395%" height="15" fill="rgb(229,3,52)" fg:x="662" fg:w="6"/><text x="4.6090%" y="687.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="4.3656%" y="661" width="0.0329%" height="15" fill="rgb(253,49,37)" fg:x="663" fg:w="5"/><text x="4.6156%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="4.3656%" y="645" width="0.0329%" height="15" fill="rgb(240,103,49)" fg:x="663" fg:w="5"/><text x="4.6156%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="4.3656%" y="629" width="0.0329%" height="15" fill="rgb(250,182,30)" fg:x="663" fg:w="5"/><text x="4.6156%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (3 samples, 0.02%)</title><rect x="4.3787%" y="613" width="0.0198%" height="15" fill="rgb(248,8,30)" fg:x="665" fg:w="3"/><text x="4.6287%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (3 samples, 0.02%)</title><rect x="4.3787%" y="597" width="0.0198%" height="15" fill="rgb(237,120,30)" fg:x="665" fg:w="3"/><text x="4.6287%" y="607.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (31 samples, 0.20%)</title><rect x="4.2141%" y="1061" width="0.2041%" height="15" fill="rgb(221,146,34)" fg:x="640" fg:w="31"/><text x="4.4641%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (31 samples, 0.20%)</title><rect x="4.2141%" y="1045" width="0.2041%" height="15" fill="rgb(242,55,13)" fg:x="640" fg:w="31"/><text x="4.4641%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (31 samples, 0.20%)</title><rect x="4.2141%" y="1029" width="0.2041%" height="15" fill="rgb(242,112,31)" fg:x="640" fg:w="31"/><text x="4.4641%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 0.20%)</title><rect x="4.2141%" y="1013" width="0.2041%" height="15" fill="rgb(249,192,27)" fg:x="640" fg:w="31"/><text x="4.4641%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (31 samples, 0.20%)</title><rect x="4.2141%" y="997" width="0.2041%" height="15" fill="rgb(208,204,44)" fg:x="640" fg:w="31"/><text x="4.4641%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (31 samples, 0.20%)</title><rect x="4.2141%" y="981" width="0.2041%" height="15" fill="rgb(208,93,54)" fg:x="640" fg:w="31"/><text x="4.4641%" y="991.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (31 samples, 0.20%)</title><rect x="4.2141%" y="965" width="0.2041%" height="15" fill="rgb(242,1,31)" fg:x="640" fg:w="31"/><text x="4.4641%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.20%)</title><rect x="4.2141%" y="949" width="0.2041%" height="15" fill="rgb(241,83,25)" fg:x="640" fg:w="31"/><text x="4.4641%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.20%)</title><rect x="4.2141%" y="933" width="0.2041%" height="15" fill="rgb(205,169,50)" fg:x="640" fg:w="31"/><text x="4.4641%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.20%)</title><rect x="4.2141%" y="917" width="0.2041%" height="15" fill="rgb(239,186,37)" fg:x="640" fg:w="31"/><text x="4.4641%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (31 samples, 0.20%)</title><rect x="4.2141%" y="901" width="0.2041%" height="15" fill="rgb(205,221,10)" fg:x="640" fg:w="31"/><text x="4.4641%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (31 samples, 0.20%)</title><rect x="4.2141%" y="885" width="0.2041%" height="15" fill="rgb(218,196,15)" fg:x="640" fg:w="31"/><text x="4.4641%" y="895.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (31 samples, 0.20%)</title><rect x="4.2141%" y="869" width="0.2041%" height="15" fill="rgb(218,196,35)" fg:x="640" fg:w="31"/><text x="4.4641%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (31 samples, 0.20%)</title><rect x="4.2141%" y="853" width="0.2041%" height="15" fill="rgb(233,63,24)" fg:x="640" fg:w="31"/><text x="4.4641%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (31 samples, 0.20%)</title><rect x="4.2141%" y="837" width="0.2041%" height="15" fill="rgb(225,8,4)" fg:x="640" fg:w="31"/><text x="4.4641%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (31 samples, 0.20%)</title><rect x="4.2141%" y="821" width="0.2041%" height="15" fill="rgb(234,105,35)" fg:x="640" fg:w="31"/><text x="4.4641%" y="831.50"></text></g><g><title>criterion::analysis::estimates::stats (31 samples, 0.20%)</title><rect x="4.2141%" y="805" width="0.2041%" height="15" fill="rgb(236,21,32)" fg:x="640" fg:w="31"/><text x="4.4641%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.09%)</title><rect x="4.3327%" y="789" width="0.0856%" height="15" fill="rgb(228,109,6)" fg:x="658" fg:w="13"/><text x="4.5827%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (13 samples, 0.09%)</title><rect x="4.3327%" y="773" width="0.0856%" height="15" fill="rgb(229,215,31)" fg:x="658" fg:w="13"/><text x="4.5827%" y="783.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (13 samples, 0.09%)</title><rect x="4.3327%" y="757" width="0.0856%" height="15" fill="rgb(221,52,54)" fg:x="658" fg:w="13"/><text x="4.5827%" y="767.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.09%)</title><rect x="4.3327%" y="741" width="0.0856%" height="15" fill="rgb(252,129,43)" fg:x="658" fg:w="13"/><text x="4.5827%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.09%)</title><rect x="4.3327%" y="725" width="0.0856%" height="15" fill="rgb(248,183,27)" fg:x="658" fg:w="13"/><text x="4.5827%" y="735.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="4.4051%" y="709" width="0.0132%" height="15" fill="rgb(250,0,22)" fg:x="669" fg:w="2"/><text x="4.6551%" y="719.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (4 samples, 0.03%)</title><rect x="4.4314%" y="629" width="0.0263%" height="15" fill="rgb(213,166,10)" fg:x="673" fg:w="4"/><text x="4.6814%" y="639.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.03%)</title><rect x="4.4314%" y="613" width="0.0263%" height="15" fill="rgb(207,163,36)" fg:x="673" fg:w="4"/><text x="4.6814%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="4.4380%" y="597" width="0.0198%" height="15" fill="rgb(208,122,22)" fg:x="674" fg:w="3"/><text x="4.6880%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="4.4446%" y="581" width="0.0132%" height="15" fill="rgb(207,104,49)" fg:x="675" fg:w="2"/><text x="4.6946%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="4.4446%" y="565" width="0.0132%" height="15" fill="rgb(248,211,50)" fg:x="675" fg:w="2"/><text x="4.6946%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="4.4446%" y="549" width="0.0132%" height="15" fill="rgb(217,13,45)" fg:x="675" fg:w="2"/><text x="4.6946%" y="559.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (8 samples, 0.05%)</title><rect x="4.4183%" y="725" width="0.0527%" height="15" fill="rgb(211,216,49)" fg:x="671" fg:w="8"/><text x="4.6683%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (8 samples, 0.05%)</title><rect x="4.4183%" y="709" width="0.0527%" height="15" fill="rgb(221,58,53)" fg:x="671" fg:w="8"/><text x="4.6683%" y="719.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (8 samples, 0.05%)</title><rect x="4.4183%" y="693" width="0.0527%" height="15" fill="rgb(220,112,41)" fg:x="671" fg:w="8"/><text x="4.6683%" y="703.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (8 samples, 0.05%)</title><rect x="4.4183%" y="677" width="0.0527%" height="15" fill="rgb(236,38,28)" fg:x="671" fg:w="8"/><text x="4.6683%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="4.4183%" y="661" width="0.0527%" height="15" fill="rgb(227,195,22)" fg:x="671" fg:w="8"/><text x="4.6683%" y="671.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="4.4183%" y="645" width="0.0527%" height="15" fill="rgb(214,55,33)" fg:x="671" fg:w="8"/><text x="4.6683%" y="655.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="4.4578%" y="629" width="0.0132%" height="15" fill="rgb(248,80,13)" fg:x="677" fg:w="2"/><text x="4.7078%" y="639.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (2 samples, 0.01%)</title><rect x="4.4578%" y="613" width="0.0132%" height="15" fill="rgb(238,52,6)" fg:x="677" fg:w="2"/><text x="4.7078%" y="623.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="4.4709%" y="645" width="0.0132%" height="15" fill="rgb(224,198,47)" fg:x="679" fg:w="2"/><text x="4.7209%" y="655.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="4.4709%" y="629" width="0.0132%" height="15" fill="rgb(233,171,20)" fg:x="679" fg:w="2"/><text x="4.7209%" y="639.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="4.4709%" y="613" width="0.0132%" height="15" fill="rgb(241,30,25)" fg:x="679" fg:w="2"/><text x="4.7209%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="4.4709%" y="597" width="0.0132%" height="15" fill="rgb(207,171,38)" fg:x="679" fg:w="2"/><text x="4.7209%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="4.4709%" y="581" width="0.0132%" height="15" fill="rgb(234,70,1)" fg:x="679" fg:w="2"/><text x="4.7209%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="4.4709%" y="565" width="0.0132%" height="15" fill="rgb(232,178,18)" fg:x="679" fg:w="2"/><text x="4.7209%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="4.4709%" y="549" width="0.0132%" height="15" fill="rgb(241,78,40)" fg:x="679" fg:w="2"/><text x="4.7209%" y="559.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (6 samples, 0.04%)</title><rect x="4.4841%" y="645" width="0.0395%" height="15" fill="rgb(222,35,25)" fg:x="681" fg:w="6"/><text x="4.7341%" y="655.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.04%)</title><rect x="4.4841%" y="629" width="0.0395%" height="15" fill="rgb(207,92,16)" fg:x="681" fg:w="6"/><text x="4.7341%" y="639.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="4.4907%" y="613" width="0.0329%" height="15" fill="rgb(216,59,51)" fg:x="682" fg:w="5"/><text x="4.7407%" y="623.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.03%)</title><rect x="4.4973%" y="597" width="0.0263%" height="15" fill="rgb(213,80,28)" fg:x="683" fg:w="4"/><text x="4.7473%" y="607.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.03%)</title><rect x="4.4973%" y="581" width="0.0263%" height="15" fill="rgb(220,93,7)" fg:x="683" fg:w="4"/><text x="4.7473%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.03%)</title><rect x="4.4973%" y="565" width="0.0263%" height="15" fill="rgb(225,24,44)" fg:x="683" fg:w="4"/><text x="4.7473%" y="575.50"></text></g><g><title>std::panicking::try (83 samples, 0.55%)</title><rect x="3.9837%" y="1381" width="0.5465%" height="15" fill="rgb(243,74,40)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (83 samples, 0.55%)</title><rect x="3.9837%" y="1365" width="0.5465%" height="15" fill="rgb(228,39,7)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1375.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (83 samples, 0.55%)</title><rect x="3.9837%" y="1349" width="0.5465%" height="15" fill="rgb(227,79,8)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (83 samples, 0.55%)</title><rect x="3.9837%" y="1333" width="0.5465%" height="15" fill="rgb(236,58,11)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (83 samples, 0.55%)</title><rect x="3.9837%" y="1317" width="0.5465%" height="15" fill="rgb(249,63,35)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (83 samples, 0.55%)</title><rect x="3.9837%" y="1301" width="0.5465%" height="15" fill="rgb(252,114,16)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (83 samples, 0.55%)</title><rect x="3.9837%" y="1285" width="0.5465%" height="15" fill="rgb(254,151,24)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (83 samples, 0.55%)</title><rect x="3.9837%" y="1269" width="0.5465%" height="15" fill="rgb(253,54,39)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (83 samples, 0.55%)</title><rect x="3.9837%" y="1253" width="0.5465%" height="15" fill="rgb(243,25,45)" fg:x="605" fg:w="83"/><text x="4.2337%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (48 samples, 0.32%)</title><rect x="4.2141%" y="1237" width="0.3161%" height="15" fill="rgb(234,134,9)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (48 samples, 0.32%)</title><rect x="4.2141%" y="1221" width="0.3161%" height="15" fill="rgb(227,166,31)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1231.50"></text></g><g><title>std::panicking::try (48 samples, 0.32%)</title><rect x="4.2141%" y="1205" width="0.3161%" height="15" fill="rgb(245,143,41)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (48 samples, 0.32%)</title><rect x="4.2141%" y="1189" width="0.3161%" height="15" fill="rgb(238,181,32)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (48 samples, 0.32%)</title><rect x="4.2141%" y="1173" width="0.3161%" height="15" fill="rgb(224,113,18)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (48 samples, 0.32%)</title><rect x="4.2141%" y="1157" width="0.3161%" height="15" fill="rgb(240,229,28)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (48 samples, 0.32%)</title><rect x="4.2141%" y="1141" width="0.3161%" height="15" fill="rgb(250,185,3)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.32%)</title><rect x="4.2141%" y="1125" width="0.3161%" height="15" fill="rgb(212,59,25)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (48 samples, 0.32%)</title><rect x="4.2141%" y="1109" width="0.3161%" height="15" fill="rgb(221,87,20)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (48 samples, 0.32%)</title><rect x="4.2141%" y="1093" width="0.3161%" height="15" fill="rgb(213,74,28)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (48 samples, 0.32%)</title><rect x="4.2141%" y="1077" width="0.3161%" height="15" fill="rgb(224,132,34)" fg:x="640" fg:w="48"/><text x="4.4641%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.11%)</title><rect x="4.4183%" y="1061" width="0.1119%" height="15" fill="rgb(222,101,24)" fg:x="671" fg:w="17"/><text x="4.6683%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.11%)</title><rect x="4.4183%" y="1045" width="0.1119%" height="15" fill="rgb(254,142,4)" fg:x="671" fg:w="17"/><text x="4.6683%" y="1055.50"></text></g><g><title>std::panicking::try (17 samples, 0.11%)</title><rect x="4.4183%" y="1029" width="0.1119%" height="15" fill="rgb(230,229,49)" fg:x="671" fg:w="17"/><text x="4.6683%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.11%)</title><rect x="4.4183%" y="1013" width="0.1119%" height="15" fill="rgb(238,70,47)" fg:x="671" fg:w="17"/><text x="4.6683%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.11%)</title><rect x="4.4183%" y="997" width="0.1119%" height="15" fill="rgb(231,160,17)" fg:x="671" fg:w="17"/><text x="4.6683%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.11%)</title><rect x="4.4183%" y="981" width="0.1119%" height="15" fill="rgb(218,68,53)" fg:x="671" fg:w="17"/><text x="4.6683%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.11%)</title><rect x="4.4183%" y="965" width="0.1119%" height="15" fill="rgb(236,111,10)" fg:x="671" fg:w="17"/><text x="4.6683%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.11%)</title><rect x="4.4183%" y="949" width="0.1119%" height="15" fill="rgb(224,34,41)" fg:x="671" fg:w="17"/><text x="4.6683%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (17 samples, 0.11%)</title><rect x="4.4183%" y="933" width="0.1119%" height="15" fill="rgb(241,118,19)" fg:x="671" fg:w="17"/><text x="4.6683%" y="943.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17 samples, 0.11%)</title><rect x="4.4183%" y="917" width="0.1119%" height="15" fill="rgb(238,129,25)" fg:x="671" fg:w="17"/><text x="4.6683%" y="927.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17 samples, 0.11%)</title><rect x="4.4183%" y="901" width="0.1119%" height="15" fill="rgb(238,22,31)" fg:x="671" fg:w="17"/><text x="4.6683%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.11%)</title><rect x="4.4183%" y="885" width="0.1119%" height="15" fill="rgb(222,174,48)" fg:x="671" fg:w="17"/><text x="4.6683%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.11%)</title><rect x="4.4183%" y="869" width="0.1119%" height="15" fill="rgb(206,152,40)" fg:x="671" fg:w="17"/><text x="4.6683%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.11%)</title><rect x="4.4183%" y="853" width="0.1119%" height="15" fill="rgb(218,99,54)" fg:x="671" fg:w="17"/><text x="4.6683%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.11%)</title><rect x="4.4183%" y="837" width="0.1119%" height="15" fill="rgb(220,174,26)" fg:x="671" fg:w="17"/><text x="4.6683%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (17 samples, 0.11%)</title><rect x="4.4183%" y="821" width="0.1119%" height="15" fill="rgb(245,116,9)" fg:x="671" fg:w="17"/><text x="4.6683%" y="831.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (17 samples, 0.11%)</title><rect x="4.4183%" y="805" width="0.1119%" height="15" fill="rgb(209,72,35)" fg:x="671" fg:w="17"/><text x="4.6683%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (17 samples, 0.11%)</title><rect x="4.4183%" y="789" width="0.1119%" height="15" fill="rgb(226,126,21)" fg:x="671" fg:w="17"/><text x="4.6683%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (17 samples, 0.11%)</title><rect x="4.4183%" y="773" width="0.1119%" height="15" fill="rgb(227,192,1)" fg:x="671" fg:w="17"/><text x="4.6683%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 0.11%)</title><rect x="4.4183%" y="757" width="0.1119%" height="15" fill="rgb(237,180,29)" fg:x="671" fg:w="17"/><text x="4.6683%" y="767.50"></text></g><g><title>criterion::analysis::estimates::stats (17 samples, 0.11%)</title><rect x="4.4183%" y="741" width="0.1119%" height="15" fill="rgb(230,197,35)" fg:x="671" fg:w="17"/><text x="4.6683%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (9 samples, 0.06%)</title><rect x="4.4709%" y="725" width="0.0593%" height="15" fill="rgb(246,193,31)" fg:x="679" fg:w="9"/><text x="4.7209%" y="735.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (9 samples, 0.06%)</title><rect x="4.4709%" y="709" width="0.0593%" height="15" fill="rgb(241,36,4)" fg:x="679" fg:w="9"/><text x="4.7209%" y="719.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (9 samples, 0.06%)</title><rect x="4.4709%" y="693" width="0.0593%" height="15" fill="rgb(241,130,17)" fg:x="679" fg:w="9"/><text x="4.7209%" y="703.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.06%)</title><rect x="4.4709%" y="677" width="0.0593%" height="15" fill="rgb(206,137,32)" fg:x="679" fg:w="9"/><text x="4.7209%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.06%)</title><rect x="4.4709%" y="661" width="0.0593%" height="15" fill="rgb(237,228,51)" fg:x="679" fg:w="9"/><text x="4.7209%" y="671.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="4.5302%" y="821" width="0.0132%" height="15" fill="rgb(243,6,42)" fg:x="688" fg:w="2"/><text x="4.7802%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="805" width="0.0132%" height="15" fill="rgb(251,74,28)" fg:x="688" fg:w="2"/><text x="4.7802%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="789" width="0.0132%" height="15" fill="rgb(218,20,49)" fg:x="688" fg:w="2"/><text x="4.7802%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="4.5302%" y="773" width="0.0132%" height="15" fill="rgb(238,28,14)" fg:x="688" fg:w="2"/><text x="4.7802%" y="783.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="4.5302%" y="757" width="0.0132%" height="15" fill="rgb(229,40,46)" fg:x="688" fg:w="2"/><text x="4.7802%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="4.5302%" y="741" width="0.0132%" height="15" fill="rgb(244,195,20)" fg:x="688" fg:w="2"/><text x="4.7802%" y="751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="725" width="0.0132%" height="15" fill="rgb(253,56,35)" fg:x="688" fg:w="2"/><text x="4.7802%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="4.5302%" y="709" width="0.0132%" height="15" fill="rgb(210,149,44)" fg:x="688" fg:w="2"/><text x="4.7802%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="693" width="0.0132%" height="15" fill="rgb(240,135,12)" fg:x="688" fg:w="2"/><text x="4.7802%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="677" width="0.0132%" height="15" fill="rgb(251,24,50)" fg:x="688" fg:w="2"/><text x="4.7802%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="4.5302%" y="661" width="0.0132%" height="15" fill="rgb(243,200,47)" fg:x="688" fg:w="2"/><text x="4.7802%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.01%)</title><rect x="4.5302%" y="645" width="0.0132%" height="15" fill="rgb(224,166,26)" fg:x="688" fg:w="2"/><text x="4.7802%" y="655.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.01%)</title><rect x="4.5302%" y="629" width="0.0132%" height="15" fill="rgb(233,0,47)" fg:x="688" fg:w="2"/><text x="4.7802%" y="639.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.01%)</title><rect x="4.5302%" y="613" width="0.0132%" height="15" fill="rgb(253,80,5)" fg:x="688" fg:w="2"/><text x="4.7802%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="4.5302%" y="597" width="0.0132%" height="15" fill="rgb(214,133,25)" fg:x="688" fg:w="2"/><text x="4.7802%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="4.5302%" y="581" width="0.0132%" height="15" fill="rgb(209,27,14)" fg:x="688" fg:w="2"/><text x="4.7802%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="4.5302%" y="565" width="0.0132%" height="15" fill="rgb(219,102,51)" fg:x="688" fg:w="2"/><text x="4.7802%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="4.5302%" y="549" width="0.0132%" height="15" fill="rgb(237,18,16)" fg:x="688" fg:w="2"/><text x="4.7802%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="533" width="0.0132%" height="15" fill="rgb(241,85,17)" fg:x="688" fg:w="2"/><text x="4.7802%" y="543.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="517" width="0.0132%" height="15" fill="rgb(236,90,42)" fg:x="688" fg:w="2"/><text x="4.7802%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (2 samples, 0.01%)</title><rect x="4.5302%" y="501" width="0.0132%" height="15" fill="rgb(249,57,21)" fg:x="688" fg:w="2"/><text x="4.7802%" y="511.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="485" width="0.0132%" height="15" fill="rgb(243,12,36)" fg:x="688" fg:w="2"/><text x="4.7802%" y="495.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="469" width="0.0132%" height="15" fill="rgb(253,128,47)" fg:x="688" fg:w="2"/><text x="4.7802%" y="479.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (2 samples, 0.01%)</title><rect x="4.5302%" y="453" width="0.0132%" height="15" fill="rgb(207,33,20)" fg:x="688" fg:w="2"/><text x="4.7802%" y="463.50"></text></g><g><title>criterion::stats::dot (2 samples, 0.01%)</title><rect x="4.5302%" y="437" width="0.0132%" height="15" fill="rgb(233,215,35)" fg:x="688" fg:w="2"/><text x="4.7802%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="4.5302%" y="421" width="0.0132%" height="15" fill="rgb(249,188,52)" fg:x="688" fg:w="2"/><text x="4.7802%" y="431.50"></text></g><g><title>criterion::stats::dot::{{closure}} (2 samples, 0.01%)</title><rect x="4.5302%" y="405" width="0.0132%" height="15" fill="rgb(225,12,32)" fg:x="688" fg:w="2"/><text x="4.7802%" y="415.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="4.5302%" y="933" width="0.0198%" height="15" fill="rgb(247,98,14)" fg:x="688" fg:w="3"/><text x="4.7802%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="4.5302%" y="917" width="0.0198%" height="15" fill="rgb(247,219,48)" fg:x="688" fg:w="3"/><text x="4.7802%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="4.5302%" y="901" width="0.0198%" height="15" fill="rgb(253,60,48)" fg:x="688" fg:w="3"/><text x="4.7802%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="4.5302%" y="885" width="0.0198%" height="15" fill="rgb(245,15,52)" fg:x="688" fg:w="3"/><text x="4.7802%" y="895.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="4.5302%" y="869" width="0.0198%" height="15" fill="rgb(220,133,28)" fg:x="688" fg:w="3"/><text x="4.7802%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="4.5302%" y="853" width="0.0198%" height="15" fill="rgb(217,180,4)" fg:x="688" fg:w="3"/><text x="4.7802%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="4.5302%" y="837" width="0.0198%" height="15" fill="rgb(251,24,1)" fg:x="688" fg:w="3"/><text x="4.7802%" y="847.50"></text></g><g><title>[unknown] (694 samples, 4.57%)</title><rect x="0.0000%" y="1397" width="4.5697%" height="15" fill="rgb(212,185,49)" fg:x="0" fg:w="694"/><text x="0.2500%" y="1407.50">[unkn..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.04%)</title><rect x="4.5302%" y="1381" width="0.0395%" height="15" fill="rgb(215,175,22)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1391.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (6 samples, 0.04%)</title><rect x="4.5302%" y="1365" width="0.0395%" height="15" fill="rgb(250,205,14)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1375.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (6 samples, 0.04%)</title><rect x="4.5302%" y="1349" width="0.0395%" height="15" fill="rgb(225,211,22)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1359.50"></text></g><g><title>rayon_core::registry::main_loop (6 samples, 0.04%)</title><rect x="4.5302%" y="1333" width="0.0395%" height="15" fill="rgb(251,179,42)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1343.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.04%)</title><rect x="4.5302%" y="1317" width="0.0395%" height="15" fill="rgb(208,216,51)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.04%)</title><rect x="4.5302%" y="1301" width="0.0395%" height="15" fill="rgb(235,36,11)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.04%)</title><rect x="4.5302%" y="1285" width="0.0395%" height="15" fill="rgb(213,189,28)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1295.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.04%)</title><rect x="4.5302%" y="1269" width="0.0395%" height="15" fill="rgb(227,203,42)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1279.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.04%)</title><rect x="4.5302%" y="1253" width="0.0395%" height="15" fill="rgb(244,72,36)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.04%)</title><rect x="4.5302%" y="1237" width="0.0395%" height="15" fill="rgb(213,53,17)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.04%)</title><rect x="4.5302%" y="1221" width="0.0395%" height="15" fill="rgb(207,167,3)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1231.50"></text></g><g><title>std::panicking::try (6 samples, 0.04%)</title><rect x="4.5302%" y="1205" width="0.0395%" height="15" fill="rgb(216,98,30)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.04%)</title><rect x="4.5302%" y="1189" width="0.0395%" height="15" fill="rgb(236,123,15)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.04%)</title><rect x="4.5302%" y="1173" width="0.0395%" height="15" fill="rgb(248,81,50)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1183.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (6 samples, 0.04%)</title><rect x="4.5302%" y="1157" width="0.0395%" height="15" fill="rgb(214,120,4)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1167.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (6 samples, 0.04%)</title><rect x="4.5302%" y="1141" width="0.0395%" height="15" fill="rgb(208,179,34)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.04%)</title><rect x="4.5302%" y="1125" width="0.0395%" height="15" fill="rgb(227,140,7)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.04%)</title><rect x="4.5302%" y="1109" width="0.0395%" height="15" fill="rgb(214,22,6)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.04%)</title><rect x="4.5302%" y="1093" width="0.0395%" height="15" fill="rgb(207,137,27)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1103.50"></text></g><g><title>std::panicking::try (6 samples, 0.04%)</title><rect x="4.5302%" y="1077" width="0.0395%" height="15" fill="rgb(210,8,46)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.04%)</title><rect x="4.5302%" y="1061" width="0.0395%" height="15" fill="rgb(240,16,54)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.04%)</title><rect x="4.5302%" y="1045" width="0.0395%" height="15" fill="rgb(211,209,29)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.04%)</title><rect x="4.5302%" y="1029" width="0.0395%" height="15" fill="rgb(226,228,24)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.04%)</title><rect x="4.5302%" y="1013" width="0.0395%" height="15" fill="rgb(222,84,9)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.04%)</title><rect x="4.5302%" y="997" width="0.0395%" height="15" fill="rgb(234,203,30)" fg:x="688" fg:w="6"/><text x="4.7802%" y="1007.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.04%)</title><rect x="4.5302%" y="981" width="0.0395%" height="15" fill="rgb(238,109,14)" fg:x="688" fg:w="6"/><text x="4.7802%" y="991.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.04%)</title><rect x="4.5302%" y="965" width="0.0395%" height="15" fill="rgb(233,206,34)" fg:x="688" fg:w="6"/><text x="4.7802%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.04%)</title><rect x="4.5302%" y="949" width="0.0395%" height="15" fill="rgb(220,167,47)" fg:x="688" fg:w="6"/><text x="4.7802%" y="959.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.02%)</title><rect x="4.5499%" y="933" width="0.0198%" height="15" fill="rgb(238,105,10)" fg:x="691" fg:w="3"/><text x="4.7999%" y="943.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="4.5499%" y="917" width="0.0198%" height="15" fill="rgb(213,227,17)" fg:x="691" fg:w="3"/><text x="4.7999%" y="927.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="4.5499%" y="901" width="0.0198%" height="15" fill="rgb(217,132,38)" fg:x="691" fg:w="3"/><text x="4.7999%" y="911.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="4.5499%" y="885" width="0.0198%" height="15" fill="rgb(242,146,4)" fg:x="691" fg:w="3"/><text x="4.7999%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="4.5499%" y="869" width="0.0198%" height="15" fill="rgb(212,61,9)" fg:x="691" fg:w="3"/><text x="4.7999%" y="879.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.02%)</title><rect x="4.5499%" y="853" width="0.0198%" height="15" fill="rgb(247,126,22)" fg:x="691" fg:w="3"/><text x="4.7999%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="4.5499%" y="837" width="0.0198%" height="15" fill="rgb(220,196,2)" fg:x="691" fg:w="3"/><text x="4.7999%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="4.5499%" y="821" width="0.0198%" height="15" fill="rgb(208,46,4)" fg:x="691" fg:w="3"/><text x="4.7999%" y="831.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="4.5499%" y="805" width="0.0198%" height="15" fill="rgb(252,104,46)" fg:x="691" fg:w="3"/><text x="4.7999%" y="815.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="4.5499%" y="789" width="0.0198%" height="15" fill="rgb(237,152,48)" fg:x="691" fg:w="3"/><text x="4.7999%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="4.5499%" y="773" width="0.0198%" height="15" fill="rgb(221,59,37)" fg:x="691" fg:w="3"/><text x="4.7999%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="4.5565%" y="757" width="0.0132%" height="15" fill="rgb(209,202,51)" fg:x="692" fg:w="2"/><text x="4.8065%" y="767.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="4.5565%" y="741" width="0.0132%" height="15" fill="rgb(228,81,30)" fg:x="692" fg:w="2"/><text x="4.8065%" y="751.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="4.5565%" y="725" width="0.0132%" height="15" fill="rgb(227,42,39)" fg:x="692" fg:w="2"/><text x="4.8065%" y="735.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="4.5565%" y="709" width="0.0132%" height="15" fill="rgb(221,26,2)" fg:x="692" fg:w="2"/><text x="4.8065%" y="719.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="4.5565%" y="693" width="0.0132%" height="15" fill="rgb(254,61,31)" fg:x="692" fg:w="2"/><text x="4.8065%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="4.5565%" y="677" width="0.0132%" height="15" fill="rgb(222,173,38)" fg:x="692" fg:w="2"/><text x="4.8065%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="4.5565%" y="661" width="0.0132%" height="15" fill="rgb(218,50,12)" fg:x="692" fg:w="2"/><text x="4.8065%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="4.5565%" y="645" width="0.0132%" height="15" fill="rgb(223,88,40)" fg:x="692" fg:w="2"/><text x="4.8065%" y="655.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="4.5565%" y="629" width="0.0132%" height="15" fill="rgb(237,54,19)" fg:x="692" fg:w="2"/><text x="4.8065%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="4.5565%" y="613" width="0.0132%" height="15" fill="rgb(251,129,25)" fg:x="692" fg:w="2"/><text x="4.8065%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="4.5565%" y="597" width="0.0132%" height="15" fill="rgb(238,97,19)" fg:x="692" fg:w="2"/><text x="4.8065%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (52 samples, 0.34%)</title><rect x="5.8339%" y="741" width="0.3424%" height="15" fill="rgb(240,169,18)" fg:x="886" fg:w="52"/><text x="6.0839%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (52 samples, 0.34%)</title><rect x="5.8339%" y="725" width="0.3424%" height="15" fill="rgb(230,187,49)" fg:x="886" fg:w="52"/><text x="6.0839%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (52 samples, 0.34%)</title><rect x="5.8339%" y="709" width="0.3424%" height="15" fill="rgb(209,44,26)" fg:x="886" fg:w="52"/><text x="6.0839%" y="719.50"></text></g><g><title>[libc-2.31.so] (49 samples, 0.32%)</title><rect x="5.8537%" y="693" width="0.3226%" height="15" fill="rgb(244,0,6)" fg:x="889" fg:w="49"/><text x="6.1037%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (15 samples, 0.10%)</title><rect x="6.1763%" y="741" width="0.0988%" height="15" fill="rgb(248,18,21)" fg:x="938" fg:w="15"/><text x="6.4263%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (15 samples, 0.10%)</title><rect x="6.1763%" y="725" width="0.0988%" height="15" fill="rgb(245,180,19)" fg:x="938" fg:w="15"/><text x="6.4263%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.57%)</title><rect x="8.8497%" y="693" width="0.5663%" height="15" fill="rgb(252,118,36)" fg:x="1344" fg:w="86"/><text x="9.0997%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (270 samples, 1.78%)</title><rect x="8.0793%" y="709" width="1.7778%" height="15" fill="rgb(210,224,19)" fg:x="1227" fg:w="270"/><text x="8.3293%" y="719.50">&lt;..</text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (67 samples, 0.44%)</title><rect x="9.4159%" y="693" width="0.4412%" height="15" fill="rgb(218,30,24)" fg:x="1430" fg:w="67"/><text x="9.6659%" y="703.50"></text></g><g><title>core::cmp::min (5 samples, 0.03%)</title><rect x="9.8571%" y="709" width="0.0329%" height="15" fill="rgb(219,75,50)" fg:x="1497" fg:w="5"/><text x="10.1071%" y="719.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.03%)</title><rect x="9.8571%" y="693" width="0.0329%" height="15" fill="rgb(234,72,50)" fg:x="1497" fg:w="5"/><text x="10.1071%" y="703.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.03%)</title><rect x="9.8571%" y="677" width="0.0329%" height="15" fill="rgb(219,100,48)" fg:x="1497" fg:w="5"/><text x="10.1071%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (81 samples, 0.53%)</title><rect x="9.8900%" y="709" width="0.5334%" height="15" fill="rgb(253,5,41)" fg:x="1502" fg:w="81"/><text x="10.1400%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (3 samples, 0.02%)</title><rect x="10.4234%" y="709" width="0.0198%" height="15" fill="rgb(247,181,11)" fg:x="1583" fg:w="3"/><text x="10.6734%" y="719.50"></text></g><g><title>core::ptr::align_offset (3 samples, 0.02%)</title><rect x="10.4234%" y="693" width="0.0198%" height="15" fill="rgb(222,223,25)" fg:x="1583" fg:w="3"/><text x="10.6734%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (21 samples, 0.14%)</title><rect x="10.4431%" y="709" width="0.1383%" height="15" fill="rgb(214,198,28)" fg:x="1586" fg:w="21"/><text x="10.6931%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (21 samples, 0.14%)</title><rect x="10.4431%" y="693" width="0.1383%" height="15" fill="rgb(230,46,43)" fg:x="1586" fg:w="21"/><text x="10.6931%" y="703.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (47 samples, 0.31%)</title><rect x="10.5814%" y="709" width="0.3095%" height="15" fill="rgb(233,65,53)" fg:x="1607" fg:w="47"/><text x="10.8314%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (19 samples, 0.13%)</title><rect x="10.7658%" y="693" width="0.1251%" height="15" fill="rgb(221,121,27)" fg:x="1635" fg:w="19"/><text x="11.0158%" y="703.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (850 samples, 5.60%)</title><rect x="5.3796%" y="757" width="5.5969%" height="15" fill="rgb(247,70,47)" fg:x="817" fg:w="850"/><text x="5.6296%" y="767.50">&lt;core::..</text></g><g><title>core::slice::memchr::memchr (714 samples, 4.70%)</title><rect x="6.2751%" y="741" width="4.7014%" height="15" fill="rgb(228,85,35)" fg:x="953" fg:w="714"/><text x="6.5251%" y="751.50">core:..</text></g><g><title>core::slice::memchr::memchr_general_case (710 samples, 4.68%)</title><rect x="6.3014%" y="725" width="4.6751%" height="15" fill="rgb(209,50,18)" fg:x="957" fg:w="710"/><text x="6.5514%" y="735.50">core:..</text></g><g><title>core::slice::memchr::repeat_byte (13 samples, 0.09%)</title><rect x="10.8909%" y="709" width="0.0856%" height="15" fill="rgb(250,19,35)" fg:x="1654" fg:w="13"/><text x="11.1409%" y="719.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (910 samples, 5.99%)</title><rect x="4.9911%" y="789" width="5.9920%" height="15" fill="rgb(253,107,29)" fg:x="758" fg:w="910"/><text x="5.2411%" y="799.50">&lt;core::s..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (910 samples, 5.99%)</title><rect x="4.9911%" y="773" width="5.9920%" height="15" fill="rgb(252,179,29)" fg:x="758" fg:w="910"/><text x="5.2411%" y="783.50">core::st..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (983 samples, 6.47%)</title><rect x="4.7804%" y="821" width="6.4726%" height="15" fill="rgb(238,194,6)" fg:x="726" fg:w="983"/><text x="5.0304%" y="831.50">&lt;core::s..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (951 samples, 6.26%)</title><rect x="4.9911%" y="805" width="6.2619%" height="15" fill="rgb(238,164,29)" fg:x="758" fg:w="951"/><text x="5.2411%" y="815.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.27%)</title><rect x="10.9831%" y="789" width="0.2700%" height="15" fill="rgb(224,25,9)" fg:x="1668" fg:w="41"/><text x="11.2331%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (41 samples, 0.27%)</title><rect x="10.9831%" y="773" width="0.2700%" height="15" fill="rgb(244,153,23)" fg:x="1668" fg:w="41"/><text x="11.2331%" y="783.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (41 samples, 0.27%)</title><rect x="10.9831%" y="757" width="0.2700%" height="15" fill="rgb(212,203,14)" fg:x="1668" fg:w="41"/><text x="11.2331%" y="767.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (41 samples, 0.27%)</title><rect x="10.9831%" y="741" width="0.2700%" height="15" fill="rgb(220,164,20)" fg:x="1668" fg:w="41"/><text x="11.2331%" y="751.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (11 samples, 0.07%)</title><rect x="16.2771%" y="677" width="0.0724%" height="15" fill="rgb(222,203,48)" fg:x="2472" fg:w="11"/><text x="16.5271%" y="687.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="16.4351%" y="645" width="0.0198%" height="15" fill="rgb(215,159,22)" fg:x="2496" fg:w="3"/><text x="16.6851%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.02%)</title><rect x="16.4351%" y="629" width="0.0198%" height="15" fill="rgb(216,183,47)" fg:x="2496" fg:w="3"/><text x="16.6851%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (21 samples, 0.14%)</title><rect x="16.3561%" y="677" width="0.1383%" height="15" fill="rgb(229,195,25)" fg:x="2484" fg:w="21"/><text x="16.6061%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (21 samples, 0.14%)</title><rect x="16.3561%" y="661" width="0.1383%" height="15" fill="rgb(224,132,51)" fg:x="2484" fg:w="21"/><text x="16.6061%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.04%)</title><rect x="16.4549%" y="645" width="0.0395%" height="15" fill="rgb(240,63,7)" fg:x="2499" fg:w="6"/><text x="16.7049%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (15 samples, 0.10%)</title><rect x="16.4944%" y="677" width="0.0988%" height="15" fill="rgb(249,182,41)" fg:x="2505" fg:w="15"/><text x="16.7444%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (15 samples, 0.10%)</title><rect x="16.4944%" y="661" width="0.0988%" height="15" fill="rgb(243,47,26)" fg:x="2505" fg:w="15"/><text x="16.7444%" y="671.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (559 samples, 3.68%)</title><rect x="13.2745%" y="709" width="3.6808%" height="15" fill="rgb(233,48,2)" fg:x="2016" fg:w="559"/><text x="13.5245%" y="719.50">&lt;cor..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (525 samples, 3.46%)</title><rect x="13.4984%" y="693" width="3.4569%" height="15" fill="rgb(244,165,34)" fg:x="2050" fg:w="525"/><text x="13.7484%" y="703.50">cor..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (55 samples, 0.36%)</title><rect x="16.5931%" y="677" width="0.3622%" height="15" fill="rgb(207,89,7)" fg:x="2520" fg:w="55"/><text x="16.8431%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (8 samples, 0.05%)</title><rect x="16.9553%" y="709" width="0.0527%" height="15" fill="rgb(244,117,36)" fg:x="2575" fg:w="8"/><text x="17.2053%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (8 samples, 0.05%)</title><rect x="16.9553%" y="693" width="0.0527%" height="15" fill="rgb(226,144,34)" fg:x="2575" fg:w="8"/><text x="17.2053%" y="703.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (730 samples, 4.81%)</title><rect x="12.3922%" y="741" width="4.8067%" height="15" fill="rgb(213,23,19)" fg:x="1882" fg:w="730"/><text x="12.6422%" y="751.50">&lt;core:..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (694 samples, 4.57%)</title><rect x="12.6292%" y="725" width="4.5697%" height="15" fill="rgb(217,75,12)" fg:x="1918" fg:w="694"/><text x="12.8792%" y="735.50">core:..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (29 samples, 0.19%)</title><rect x="17.0080%" y="709" width="0.1910%" height="15" fill="rgb(224,159,17)" fg:x="2583" fg:w="29"/><text x="17.2580%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (9 samples, 0.06%)</title><rect x="17.1397%" y="693" width="0.0593%" height="15" fill="rgb(217,118,1)" fg:x="2603" fg:w="9"/><text x="17.3897%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (9 samples, 0.06%)</title><rect x="17.1397%" y="677" width="0.0593%" height="15" fill="rgb(232,180,48)" fg:x="2603" fg:w="9"/><text x="17.3897%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.04%)</title><rect x="17.1594%" y="661" width="0.0395%" height="15" fill="rgb(230,27,33)" fg:x="2606" fg:w="6"/><text x="17.4094%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.04%)</title><rect x="17.1594%" y="645" width="0.0395%" height="15" fill="rgb(205,31,21)" fg:x="2606" fg:w="6"/><text x="17.4094%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.02%)</title><rect x="17.1989%" y="741" width="0.0198%" height="15" fill="rgb(253,59,4)" fg:x="2612" fg:w="3"/><text x="17.4489%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (5 samples, 0.03%)</title><rect x="17.2187%" y="741" width="0.0329%" height="15" fill="rgb(224,201,9)" fg:x="2615" fg:w="5"/><text x="17.4687%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.13%)</title><rect x="18.7990%" y="693" width="0.1317%" height="15" fill="rgb(229,206,30)" fg:x="2855" fg:w="20"/><text x="19.0490%" y="703.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_add (30 samples, 0.20%)</title><rect x="18.9307%" y="693" width="0.1975%" height="15" fill="rgb(212,67,47)" fg:x="2875" fg:w="30"/><text x="19.1807%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (15 samples, 0.10%)</title><rect x="19.0294%" y="677" width="0.0988%" height="15" fill="rgb(211,96,50)" fg:x="2890" fg:w="15"/><text x="19.2794%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (15 samples, 0.10%)</title><rect x="19.0294%" y="661" width="0.0988%" height="15" fill="rgb(252,114,18)" fg:x="2890" fg:w="15"/><text x="19.2794%" y="671.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_mul (119 samples, 0.78%)</title><rect x="19.1282%" y="693" width="0.7836%" height="15" fill="rgb(223,58,37)" fg:x="2905" fg:w="119"/><text x="19.3782%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_mul (119 samples, 0.78%)</title><rect x="19.1282%" y="677" width="0.7836%" height="15" fill="rgb(237,70,4)" fg:x="2905" fg:w="119"/><text x="19.3782%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (119 samples, 0.78%)</title><rect x="19.1282%" y="661" width="0.7836%" height="15" fill="rgb(244,85,46)" fg:x="2905" fg:w="119"/><text x="19.3782%" y="671.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (109 samples, 0.72%)</title><rect x="19.9118%" y="693" width="0.7177%" height="15" fill="rgb(223,39,52)" fg:x="3024" fg:w="109"/><text x="20.1618%" y="703.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (85 samples, 0.56%)</title><rect x="20.0698%" y="677" width="0.5597%" height="15" fill="rgb(218,200,14)" fg:x="3048" fg:w="85"/><text x="20.3198%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (519 samples, 3.42%)</title><rect x="17.2516%" y="741" width="3.4174%" height="15" fill="rgb(208,171,16)" fg:x="2620" fg:w="519"/><text x="17.5016%" y="751.50">cor..</text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (515 samples, 3.39%)</title><rect x="17.2779%" y="725" width="3.3911%" height="15" fill="rgb(234,200,18)" fg:x="2624" fg:w="515"/><text x="17.5279%" y="735.50">cor..</text></g><g><title>core::num::from_str_radix (499 samples, 3.29%)</title><rect x="17.3833%" y="709" width="3.2857%" height="15" fill="rgb(228,45,11)" fg:x="2640" fg:w="499"/><text x="17.6333%" y="719.50">cor..</text></g><g><title>core::str::&lt;impl str&gt;::is_empty (6 samples, 0.04%)</title><rect x="20.6295%" y="693" width="0.0395%" height="15" fill="rgb(237,182,11)" fg:x="3133" fg:w="6"/><text x="20.8795%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (4 samples, 0.03%)</title><rect x="21.6567%" y="693" width="0.0263%" height="15" fill="rgb(241,175,49)" fg:x="3289" fg:w="4"/><text x="21.9067%" y="703.50"></text></g><g><title>core::cmp::max (5 samples, 0.03%)</title><rect x="22.0847%" y="677" width="0.0329%" height="15" fill="rgb(247,38,35)" fg:x="3354" fg:w="5"/><text x="22.3347%" y="687.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.03%)</title><rect x="22.0847%" y="661" width="0.0329%" height="15" fill="rgb(228,39,49)" fg:x="3354" fg:w="5"/><text x="22.3347%" y="671.50"></text></g><g><title>core::cmp::max_by (5 samples, 0.03%)</title><rect x="22.0847%" y="645" width="0.0329%" height="15" fill="rgb(226,101,26)" fg:x="3354" fg:w="5"/><text x="22.3347%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (34 samples, 0.22%)</title><rect x="22.1176%" y="677" width="0.2239%" height="15" fill="rgb(206,141,19)" fg:x="3359" fg:w="34"/><text x="22.3676%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (34 samples, 0.22%)</title><rect x="22.1176%" y="661" width="0.2239%" height="15" fill="rgb(211,200,13)" fg:x="3359" fg:w="34"/><text x="22.3676%" y="671.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.16%)</title><rect x="22.1769%" y="645" width="0.1646%" height="15" fill="rgb(241,121,6)" fg:x="3368" fg:w="25"/><text x="22.4269%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18 samples, 0.12%)</title><rect x="22.3415%" y="661" width="0.1185%" height="15" fill="rgb(234,221,29)" fg:x="3393" fg:w="18"/><text x="22.5915%" y="671.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (20 samples, 0.13%)</title><rect x="22.3415%" y="677" width="0.1317%" height="15" fill="rgb(229,136,5)" fg:x="3393" fg:w="20"/><text x="22.5915%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.01%)</title><rect x="22.4600%" y="661" width="0.0132%" height="15" fill="rgb(238,36,11)" fg:x="3411" fg:w="2"/><text x="22.7100%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.01%)</title><rect x="22.4600%" y="645" width="0.0132%" height="15" fill="rgb(251,55,41)" fg:x="3411" fg:w="2"/><text x="22.7100%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.45%)</title><rect x="22.5588%" y="645" width="0.4478%" height="15" fill="rgb(242,34,40)" fg:x="3426" fg:w="68"/><text x="22.8088%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (217 samples, 1.43%)</title><rect x="22.4732%" y="677" width="1.4289%" height="15" fill="rgb(215,42,17)" fg:x="3413" fg:w="217"/><text x="22.7232%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (217 samples, 1.43%)</title><rect x="22.4732%" y="661" width="1.4289%" height="15" fill="rgb(207,44,46)" fg:x="3413" fg:w="217"/><text x="22.7232%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (136 samples, 0.90%)</title><rect x="23.0065%" y="645" width="0.8955%" height="15" fill="rgb(211,206,28)" fg:x="3494" fg:w="136"/><text x="23.2565%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (663 samples, 4.37%)</title><rect x="20.6690%" y="741" width="4.3656%" height="15" fill="rgb(237,167,16)" fg:x="3139" fg:w="663"/><text x="20.9190%" y="751.50">core:..</text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (648 samples, 4.27%)</title><rect x="20.7678%" y="725" width="4.2668%" height="15" fill="rgb(233,66,6)" fg:x="3154" fg:w="648"/><text x="21.0178%" y="735.50">&lt;&amp;str..</text></g><g><title>core::str::pattern::StrSearcher::new (641 samples, 4.22%)</title><rect x="20.8139%" y="709" width="4.2207%" height="15" fill="rgb(246,123,29)" fg:x="3161" fg:w="641"/><text x="21.0639%" y="719.50">core:..</text></g><g><title>core::str::pattern::TwoWaySearcher::new (509 samples, 3.35%)</title><rect x="21.6830%" y="693" width="3.3516%" height="15" fill="rgb(209,62,40)" fg:x="3293" fg:w="509"/><text x="21.9330%" y="703.50">cor..</text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (172 samples, 1.13%)</title><rect x="23.9020%" y="677" width="1.1325%" height="15" fill="rgb(218,4,25)" fg:x="3630" fg:w="172"/><text x="24.1520%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (7 samples, 0.05%)</title><rect x="24.9885%" y="661" width="0.0461%" height="15" fill="rgb(253,91,49)" fg:x="3795" fg:w="7"/><text x="25.2385%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (7 samples, 0.05%)</title><rect x="24.9885%" y="645" width="0.0461%" height="15" fill="rgb(228,155,29)" fg:x="3795" fg:w="7"/><text x="25.2385%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (34 samples, 0.22%)</title><rect x="25.0346%" y="741" width="0.2239%" height="15" fill="rgb(243,57,37)" fg:x="3802" fg:w="34"/><text x="25.2846%" y="751.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (34 samples, 0.22%)</title><rect x="25.0346%" y="725" width="0.2239%" height="15" fill="rgb(244,167,17)" fg:x="3802" fg:w="34"/><text x="25.2846%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (34 samples, 0.22%)</title><rect x="25.0346%" y="709" width="0.2239%" height="15" fill="rgb(207,181,38)" fg:x="3802" fg:w="34"/><text x="25.2846%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.07%)</title><rect x="25.1926%" y="693" width="0.0658%" height="15" fill="rgb(211,8,23)" fg:x="3826" fg:w="10"/><text x="25.4426%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.07%)</title><rect x="25.1926%" y="677" width="0.0658%" height="15" fill="rgb(235,11,44)" fg:x="3826" fg:w="10"/><text x="25.4426%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.07%)</title><rect x="25.1926%" y="661" width="0.0658%" height="15" fill="rgb(248,18,52)" fg:x="3826" fg:w="10"/><text x="25.4426%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (4 samples, 0.03%)</title><rect x="25.2848%" y="693" width="0.0263%" height="15" fill="rgb(208,4,7)" fg:x="3840" fg:w="4"/><text x="25.5348%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.03%)</title><rect x="25.2848%" y="677" width="0.0263%" height="15" fill="rgb(240,17,39)" fg:x="3840" fg:w="4"/><text x="25.5348%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.03%)</title><rect x="25.2848%" y="661" width="0.0263%" height="15" fill="rgb(207,170,3)" fg:x="3840" fg:w="4"/><text x="25.5348%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,136 samples, 20.65%)</title><rect x="4.6948%" y="837" width="20.6492%" height="15" fill="rgb(236,100,52)" fg:x="713" fg:w="3136"/><text x="4.9448%" y="847.50">&lt;core::iter::adapters::map::Map&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (2,140 samples, 14.09%)</title><rect x="11.2530%" y="821" width="14.0910%" height="15" fill="rgb(246,78,51)" fg:x="1709" fg:w="2140"/><text x="11.5030%" y="831.50">core::option::Option&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,120 samples, 13.96%)</title><rect x="11.3847%" y="805" width="13.9593%" height="15" fill="rgb(211,17,15)" fg:x="1729" fg:w="2120"/><text x="11.6347%" y="815.50">core::ops::function::..</text></g><g><title>ex14::part1::{{closure}} (2,120 samples, 13.96%)</title><rect x="11.3847%" y="789" width="13.9593%" height="15" fill="rgb(209,59,46)" fg:x="1729" fg:w="2120"/><text x="11.6347%" y="799.50">ex14::part1::{{closur..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,120 samples, 13.96%)</title><rect x="11.3847%" y="773" width="13.9593%" height="15" fill="rgb(210,92,25)" fg:x="1729" fg:w="2120"/><text x="11.6347%" y="783.50">&lt;T as core::convert::..</text></g><g><title>&lt;ex14::Instr as core::convert::From&lt;&amp;str&gt;&gt;::from (2,110 samples, 13.89%)</title><rect x="11.4506%" y="757" width="13.8935%" height="15" fill="rgb(238,174,52)" fg:x="1739" fg:w="2110"/><text x="11.7006%" y="767.50">&lt;ex14::Instr as core:..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (13 samples, 0.09%)</title><rect x="25.2584%" y="741" width="0.0856%" height="15" fill="rgb(230,73,7)" fg:x="3836" fg:w="13"/><text x="25.5084%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (13 samples, 0.09%)</title><rect x="25.2584%" y="725" width="0.0856%" height="15" fill="rgb(243,124,40)" fg:x="3836" fg:w="13"/><text x="25.5084%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (13 samples, 0.09%)</title><rect x="25.2584%" y="709" width="0.0856%" height="15" fill="rgb(244,170,11)" fg:x="3836" fg:w="13"/><text x="25.5084%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (5 samples, 0.03%)</title><rect x="25.3111%" y="693" width="0.0329%" height="15" fill="rgb(207,114,54)" fg:x="3844" fg:w="5"/><text x="25.5611%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.03%)</title><rect x="25.3111%" y="677" width="0.0329%" height="15" fill="rgb(205,42,20)" fg:x="3844" fg:w="5"/><text x="25.5611%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (5 samples, 0.03%)</title><rect x="25.3111%" y="661" width="0.0329%" height="15" fill="rgb(230,30,28)" fg:x="3844" fg:w="5"/><text x="25.5611%" y="671.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::repeat (3 samples, 0.02%)</title><rect x="25.3440%" y="837" width="0.0198%" height="15" fill="rgb(205,73,54)" fg:x="3849" fg:w="3"/><text x="25.5940%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::repeat (3 samples, 0.02%)</title><rect x="25.3440%" y="821" width="0.0198%" height="15" fill="rgb(254,227,23)" fg:x="3849" fg:w="3"/><text x="25.5940%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="25.3440%" y="805" width="0.0198%" height="15" fill="rgb(228,202,34)" fg:x="3849" fg:w="3"/><text x="25.5940%" y="815.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="25.3440%" y="789" width="0.0198%" height="15" fill="rgb(222,225,37)" fg:x="3849" fg:w="3"/><text x="25.5940%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (11 samples, 0.07%)</title><rect x="25.6996%" y="709" width="0.0724%" height="15" fill="rgb(221,14,54)" fg:x="3903" fg:w="11"/><text x="25.9496%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (11 samples, 0.07%)</title><rect x="25.6996%" y="693" width="0.0724%" height="15" fill="rgb(254,102,2)" fg:x="3903" fg:w="11"/><text x="25.9496%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.03%)</title><rect x="25.7720%" y="709" width="0.0329%" height="15" fill="rgb(232,104,17)" fg:x="3914" fg:w="5"/><text x="26.0220%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (3 samples, 0.02%)</title><rect x="25.8115%" y="693" width="0.0198%" height="15" fill="rgb(250,220,14)" fg:x="3920" fg:w="3"/><text x="26.0615%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.47%)</title><rect x="25.3638%" y="789" width="0.4741%" height="15" fill="rgb(241,158,9)" fg:x="3852" fg:w="72"/><text x="25.6138%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.47%)</title><rect x="25.3638%" y="773" width="0.4741%" height="15" fill="rgb(246,9,43)" fg:x="3852" fg:w="72"/><text x="25.6138%" y="783.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.47%)</title><rect x="25.3638%" y="757" width="0.4741%" height="15" fill="rgb(206,73,33)" fg:x="3852" fg:w="72"/><text x="25.6138%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.32%)</title><rect x="25.5152%" y="741" width="0.3226%" height="15" fill="rgb(222,79,8)" fg:x="3875" fg:w="49"/><text x="25.7652%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.26%)</title><rect x="25.5745%" y="725" width="0.2634%" height="15" fill="rgb(234,8,54)" fg:x="3884" fg:w="40"/><text x="25.8245%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (4 samples, 0.03%)</title><rect x="25.8115%" y="709" width="0.0263%" height="15" fill="rgb(209,134,38)" fg:x="3920" fg:w="4"/><text x="26.0615%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (82 samples, 0.54%)</title><rect x="25.3638%" y="837" width="0.5399%" height="15" fill="rgb(230,127,29)" fg:x="3852" fg:w="82"/><text x="25.6138%" y="847.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&lt;&amp;u64&gt;&gt;::sum (82 samples, 0.54%)</title><rect x="25.3638%" y="821" width="0.5399%" height="15" fill="rgb(242,44,41)" fg:x="3852" fg:w="82"/><text x="25.6138%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (82 samples, 0.54%)</title><rect x="25.3638%" y="805" width="0.5399%" height="15" fill="rgb(222,56,43)" fg:x="3852" fg:w="82"/><text x="25.6138%" y="815.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&lt;&amp;u64&gt;&gt;::sum::{{closure}} (10 samples, 0.07%)</title><rect x="25.8379%" y="789" width="0.0658%" height="15" fill="rgb(238,39,47)" fg:x="3924" fg:w="10"/><text x="26.0879%" y="799.50"></text></g><g><title>&lt;u64 as core::ops::arith::Add&lt;&amp;u64&gt;&gt;::add (10 samples, 0.07%)</title><rect x="25.8379%" y="773" width="0.0658%" height="15" fill="rgb(226,79,43)" fg:x="3924" fg:w="10"/><text x="26.0879%" y="783.50"></text></g><g><title>&lt;u64 as core::ops::arith::Add&gt;::add (10 samples, 0.07%)</title><rect x="25.8379%" y="757" width="0.0658%" height="15" fill="rgb(242,105,53)" fg:x="3924" fg:w="10"/><text x="26.0879%" y="767.50"></text></g><g><title>[libc-2.31.so] (32 samples, 0.21%)</title><rect x="25.9564%" y="741" width="0.2107%" height="15" fill="rgb(251,132,46)" fg:x="3942" fg:w="32"/><text x="26.2064%" y="751.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="26.1671%" y="741" width="0.0132%" height="15" fill="rgb(231,77,14)" fg:x="3974" fg:w="2"/><text x="26.4171%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="26.1671%" y="725" width="0.0132%" height="15" fill="rgb(240,135,9)" fg:x="3974" fg:w="2"/><text x="26.4171%" y="735.50"></text></g><g><title>__rust_dealloc (3 samples, 0.02%)</title><rect x="26.1803%" y="741" width="0.0198%" height="15" fill="rgb(248,109,14)" fg:x="3976" fg:w="3"/><text x="26.4303%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;ex14::MaskParts&gt; (56 samples, 0.37%)</title><rect x="25.9037%" y="837" width="0.3687%" height="15" fill="rgb(227,146,52)" fg:x="3934" fg:w="56"/><text x="26.1537%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (56 samples, 0.37%)</title><rect x="25.9037%" y="821" width="0.3687%" height="15" fill="rgb(232,54,3)" fg:x="3934" fg:w="56"/><text x="26.1537%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (56 samples, 0.37%)</title><rect x="25.9037%" y="805" width="0.3687%" height="15" fill="rgb(229,201,43)" fg:x="3934" fg:w="56"/><text x="26.1537%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.37%)</title><rect x="25.9037%" y="789" width="0.3687%" height="15" fill="rgb(252,161,33)" fg:x="3934" fg:w="56"/><text x="26.1537%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.32%)</title><rect x="25.9564%" y="773" width="0.3161%" height="15" fill="rgb(226,146,40)" fg:x="3942" fg:w="48"/><text x="26.2064%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.32%)</title><rect x="25.9564%" y="757" width="0.3161%" height="15" fill="rgb(219,47,25)" fg:x="3942" fg:w="48"/><text x="26.2064%" y="767.50"></text></g><g><title>cfree (11 samples, 0.07%)</title><rect x="26.2000%" y="741" width="0.0724%" height="15" fill="rgb(250,135,13)" fg:x="3979" fg:w="11"/><text x="26.4500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,u64&gt;&gt; (4 samples, 0.03%)</title><rect x="26.2725%" y="837" width="0.0263%" height="15" fill="rgb(219,229,18)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,u64,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.03%)</title><rect x="26.2725%" y="821" width="0.0263%" height="15" fill="rgb(217,152,27)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,u64)&gt;&gt; (4 samples, 0.03%)</title><rect x="26.2725%" y="805" width="0.0263%" height="15" fill="rgb(225,71,47)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="26.2725%" y="789" width="0.0263%" height="15" fill="rgb(220,139,14)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 0.03%)</title><rect x="26.2725%" y="773" width="0.0263%" height="15" fill="rgb(247,54,32)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.03%)</title><rect x="26.2725%" y="757" width="0.0263%" height="15" fill="rgb(252,131,39)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.03%)</title><rect x="26.2725%" y="741" width="0.0263%" height="15" fill="rgb(210,108,39)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.03%)</title><rect x="26.2725%" y="725" width="0.0263%" height="15" fill="rgb(205,23,29)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="735.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.03%)</title><rect x="26.2725%" y="709" width="0.0263%" height="15" fill="rgb(246,139,46)" fg:x="3990" fg:w="4"/><text x="26.5225%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (25 samples, 0.16%)</title><rect x="26.2988%" y="837" width="0.1646%" height="15" fill="rgb(250,81,26)" fg:x="3994" fg:w="25"/><text x="26.5488%" y="847.50"></text></g><g><title>__libc_malloc (46 samples, 0.30%)</title><rect x="26.9441%" y="693" width="0.3029%" height="15" fill="rgb(214,104,7)" fg:x="4092" fg:w="46"/><text x="27.1941%" y="703.50"></text></g><g><title>__rdl_alloc (6 samples, 0.04%)</title><rect x="27.2470%" y="693" width="0.0395%" height="15" fill="rgb(233,189,8)" fg:x="4138" fg:w="6"/><text x="27.4970%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (58 samples, 0.38%)</title><rect x="26.9375%" y="805" width="0.3819%" height="15" fill="rgb(228,141,17)" fg:x="4091" fg:w="58"/><text x="27.1875%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.38%)</title><rect x="26.9375%" y="789" width="0.3819%" height="15" fill="rgb(247,157,1)" fg:x="4091" fg:w="58"/><text x="27.1875%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 0.38%)</title><rect x="26.9375%" y="773" width="0.3819%" height="15" fill="rgb(249,225,5)" fg:x="4091" fg:w="58"/><text x="27.1875%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.38%)</title><rect x="26.9375%" y="757" width="0.3819%" height="15" fill="rgb(242,55,13)" fg:x="4091" fg:w="58"/><text x="27.1875%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.38%)</title><rect x="26.9375%" y="741" width="0.3819%" height="15" fill="rgb(230,49,50)" fg:x="4091" fg:w="58"/><text x="27.1875%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.38%)</title><rect x="26.9375%" y="725" width="0.3819%" height="15" fill="rgb(241,111,38)" fg:x="4091" fg:w="58"/><text x="27.1875%" y="735.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 0.38%)</title><rect x="26.9375%" y="709" width="0.3819%" height="15" fill="rgb(252,155,4)" fg:x="4091" fg:w="58"/><text x="27.1875%" y="719.50"></text></g><g><title>__rust_alloc (5 samples, 0.03%)</title><rect x="27.2865%" y="693" width="0.0329%" height="15" fill="rgb(212,69,32)" fg:x="4144" fg:w="5"/><text x="27.5365%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (30 samples, 0.20%)</title><rect x="30.3417%" y="693" width="0.1975%" height="15" fill="rgb(243,107,47)" fg:x="4608" fg:w="30"/><text x="30.5917%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (495 samples, 3.26%)</title><rect x="27.3194%" y="757" width="3.2594%" height="15" fill="rgb(247,130,12)" fg:x="4149" fg:w="495"/><text x="27.5694%" y="767.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (495 samples, 3.26%)</title><rect x="27.3194%" y="741" width="3.2594%" height="15" fill="rgb(233,74,16)" fg:x="4149" fg:w="495"/><text x="27.5694%" y="751.50">cor..</text></g><g><title>&lt;ex14::MaskParts as core::str::traits::FromStr&gt;::from_str::{{closure}} (495 samples, 3.26%)</title><rect x="27.3194%" y="725" width="3.2594%" height="15" fill="rgb(208,58,18)" fg:x="4149" fg:w="495"/><text x="27.5694%" y="735.50">&lt;ex..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (103 samples, 0.68%)</title><rect x="29.9006%" y="709" width="0.6782%" height="15" fill="rgb(242,225,1)" fg:x="4541" fg:w="103"/><text x="30.1506%" y="719.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="30.5393%" y="693" width="0.0395%" height="15" fill="rgb(249,39,40)" fg:x="4638" fg:w="6"/><text x="30.7893%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1,006 samples, 6.62%)</title><rect x="26.4634%" y="837" width="6.6241%" height="15" fill="rgb(207,72,44)" fg:x="4019" fg:w="1006"/><text x="26.7134%" y="847.50">core::str..</text></g><g><title>&lt;ex14::MaskParts as core::str::traits::FromStr&gt;::from_str (1,006 samples, 6.62%)</title><rect x="26.4634%" y="821" width="6.6241%" height="15" fill="rgb(215,193,12)" fg:x="4019" fg:w="1006"/><text x="26.7134%" y="831.50">&lt;ex14::Ma..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (876 samples, 5.77%)</title><rect x="27.3194%" y="805" width="5.7681%" height="15" fill="rgb(248,41,39)" fg:x="4149" fg:w="876"/><text x="27.5694%" y="815.50">core::i..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (876 samples, 5.77%)</title><rect x="27.3194%" y="789" width="5.7681%" height="15" fill="rgb(253,85,4)" fg:x="4149" fg:w="876"/><text x="27.5694%" y="799.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (876 samples, 5.77%)</title><rect x="27.3194%" y="773" width="5.7681%" height="15" fill="rgb(243,70,31)" fg:x="4149" fg:w="876"/><text x="27.5694%" y="783.50">core::i..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (381 samples, 2.51%)</title><rect x="30.5788%" y="757" width="2.5087%" height="15" fill="rgb(253,195,26)" fg:x="4644" fg:w="381"/><text x="30.8288%" y="767.50">&lt;c..</text></g><g><title>core::str::validations::next_code_point (381 samples, 2.51%)</title><rect x="30.5788%" y="741" width="2.5087%" height="15" fill="rgb(243,42,11)" fg:x="4644" fg:w="381"/><text x="30.8288%" y="751.50">co..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (234 samples, 1.54%)</title><rect x="31.5467%" y="725" width="1.5408%" height="15" fill="rgb(239,66,17)" fg:x="4791" fg:w="234"/><text x="31.7967%" y="735.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (9 samples, 0.06%)</title><rect x="33.0282%" y="709" width="0.0593%" height="15" fill="rgb(217,132,21)" fg:x="5016" fg:w="9"/><text x="33.2782%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.06%)</title><rect x="33.0282%" y="693" width="0.0593%" height="15" fill="rgb(252,202,21)" fg:x="5016" fg:w="9"/><text x="33.2782%" y="703.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="33.6735%" y="805" width="0.0198%" height="15" fill="rgb(233,98,36)" fg:x="5114" fg:w="3"/><text x="33.9235%" y="815.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="33.6801%" y="789" width="0.0132%" height="15" fill="rgb(216,153,54)" fg:x="5115" fg:w="2"/><text x="33.9301%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.22%)</title><rect x="33.9698%" y="725" width="0.2173%" height="15" fill="rgb(250,99,7)" fg:x="5159" fg:w="33"/><text x="34.2198%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (61 samples, 0.40%)</title><rect x="33.8908%" y="741" width="0.4017%" height="15" fill="rgb(207,56,50)" fg:x="5147" fg:w="61"/><text x="34.1408%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.11%)</title><rect x="34.1871%" y="725" width="0.1054%" height="15" fill="rgb(244,61,34)" fg:x="5192" fg:w="16"/><text x="34.4371%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (80 samples, 0.53%)</title><rect x="34.4308%" y="725" width="0.5268%" height="15" fill="rgb(241,50,38)" fg:x="5229" fg:w="80"/><text x="34.6808%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (228 samples, 1.50%)</title><rect x="33.6933%" y="789" width="1.5013%" height="15" fill="rgb(212,166,30)" fg:x="5117" fg:w="228"/><text x="33.9433%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (228 samples, 1.50%)</title><rect x="33.6933%" y="773" width="1.5013%" height="15" fill="rgb(249,127,32)" fg:x="5117" fg:w="228"/><text x="33.9433%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (228 samples, 1.50%)</title><rect x="33.6933%" y="757" width="1.5013%" height="15" fill="rgb(209,103,0)" fg:x="5117" fg:w="228"/><text x="33.9433%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (137 samples, 0.90%)</title><rect x="34.2925%" y="741" width="0.9021%" height="15" fill="rgb(238,209,51)" fg:x="5208" fg:w="137"/><text x="34.5425%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (36 samples, 0.24%)</title><rect x="34.9575%" y="725" width="0.2370%" height="15" fill="rgb(237,56,23)" fg:x="5309" fg:w="36"/><text x="35.2075%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (44 samples, 0.29%)</title><rect x="35.1946%" y="789" width="0.2897%" height="15" fill="rgb(215,153,46)" fg:x="5345" fg:w="44"/><text x="35.4446%" y="799.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (14 samples, 0.09%)</title><rect x="35.3921%" y="773" width="0.0922%" height="15" fill="rgb(224,49,31)" fg:x="5375" fg:w="14"/><text x="35.6421%" y="783.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (14 samples, 0.09%)</title><rect x="35.3921%" y="757" width="0.0922%" height="15" fill="rgb(250,18,42)" fg:x="5375" fg:w="14"/><text x="35.6421%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (14 samples, 0.09%)</title><rect x="35.3921%" y="741" width="0.0922%" height="15" fill="rgb(215,176,39)" fg:x="5375" fg:w="14"/><text x="35.6421%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.05%)</title><rect x="36.1428%" y="693" width="0.0461%" height="15" fill="rgb(223,77,29)" fg:x="5489" fg:w="7"/><text x="36.3928%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (43 samples, 0.28%)</title><rect x="36.0045%" y="709" width="0.2831%" height="15" fill="rgb(234,94,52)" fg:x="5468" fg:w="43"/><text x="36.2545%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (15 samples, 0.10%)</title><rect x="36.1888%" y="693" width="0.0988%" height="15" fill="rgb(220,154,50)" fg:x="5496" fg:w="15"/><text x="36.4388%" y="703.50"></text></g><g><title>hashbrown::map::make_insert_hash (411 samples, 2.71%)</title><rect x="33.6933%" y="805" width="2.7063%" height="15" fill="rgb(212,11,10)" fg:x="5117" fg:w="411"/><text x="33.9433%" y="815.50">ha..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (139 samples, 0.92%)</title><rect x="35.4843%" y="789" width="0.9153%" height="15" fill="rgb(205,166,19)" fg:x="5389" fg:w="139"/><text x="35.7343%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u64 (131 samples, 0.86%)</title><rect x="35.5370%" y="773" width="0.8626%" height="15" fill="rgb(244,198,16)" fg:x="5397" fg:w="131"/><text x="35.7870%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (117 samples, 0.77%)</title><rect x="35.6292%" y="757" width="0.7704%" height="15" fill="rgb(219,69,12)" fg:x="5411" fg:w="117"/><text x="35.8792%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (117 samples, 0.77%)</title><rect x="35.6292%" y="741" width="0.7704%" height="15" fill="rgb(245,30,7)" fg:x="5411" fg:w="117"/><text x="35.8792%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (117 samples, 0.77%)</title><rect x="35.6292%" y="725" width="0.7704%" height="15" fill="rgb(218,221,48)" fg:x="5411" fg:w="117"/><text x="35.8792%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.11%)</title><rect x="36.2876%" y="709" width="0.1119%" height="15" fill="rgb(216,66,15)" fg:x="5511" fg:w="17"/><text x="36.5376%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (29 samples, 0.19%)</title><rect x="36.8802%" y="725" width="0.1910%" height="15" fill="rgb(226,122,50)" fg:x="5601" fg:w="29"/><text x="37.1302%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.26%)</title><rect x="36.8802%" y="741" width="0.2568%" height="15" fill="rgb(239,156,16)" fg:x="5601" fg:w="39"/><text x="37.1302%" y="751.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (10 samples, 0.07%)</title><rect x="37.0712%" y="725" width="0.0658%" height="15" fill="rgb(224,27,38)" fg:x="5630" fg:w="10"/><text x="37.3212%" y="735.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (15 samples, 0.10%)</title><rect x="37.1370%" y="741" width="0.0988%" height="15" fill="rgb(224,39,27)" fg:x="5640" fg:w="15"/><text x="37.3870%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="37.2424%" y="741" width="0.0198%" height="15" fill="rgb(215,92,29)" fg:x="5656" fg:w="3"/><text x="37.4924%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="37.2424%" y="725" width="0.0198%" height="15" fill="rgb(207,159,16)" fg:x="5656" fg:w="3"/><text x="37.4924%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="37.2424%" y="709" width="0.0198%" height="15" fill="rgb(238,163,47)" fg:x="5656" fg:w="3"/><text x="37.4924%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.52%)</title><rect x="36.7946%" y="757" width="0.5202%" height="15" fill="rgb(219,91,49)" fg:x="5588" fg:w="79"/><text x="37.0446%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (8 samples, 0.05%)</title><rect x="37.2621%" y="741" width="0.0527%" height="15" fill="rgb(227,167,31)" fg:x="5659" fg:w="8"/><text x="37.5121%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.05%)</title><rect x="37.2621%" y="725" width="0.0527%" height="15" fill="rgb(234,80,54)" fg:x="5659" fg:w="8"/><text x="37.5121%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.05%)</title><rect x="37.2621%" y="709" width="0.0527%" height="15" fill="rgb(212,114,2)" fg:x="5659" fg:w="8"/><text x="37.5121%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.56%)</title><rect x="36.7946%" y="773" width="0.5597%" height="15" fill="rgb(234,50,24)" fg:x="5588" fg:w="85"/><text x="37.0446%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (6 samples, 0.04%)</title><rect x="37.3148%" y="757" width="0.0395%" height="15" fill="rgb(221,68,8)" fg:x="5667" fg:w="6"/><text x="37.5648%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.04%)</title><rect x="37.3148%" y="741" width="0.0395%" height="15" fill="rgb(254,180,31)" fg:x="5667" fg:w="6"/><text x="37.5648%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.04%)</title><rect x="37.3148%" y="725" width="0.0395%" height="15" fill="rgb(247,130,50)" fg:x="5667" fg:w="6"/><text x="37.5648%" y="735.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.03%)</title><rect x="37.3543%" y="773" width="0.0329%" height="15" fill="rgb(211,109,4)" fg:x="5673" fg:w="5"/><text x="37.6043%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (5 samples, 0.03%)</title><rect x="37.3543%" y="757" width="0.0329%" height="15" fill="rgb(238,50,21)" fg:x="5673" fg:w="5"/><text x="37.6043%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (9 samples, 0.06%)</title><rect x="37.3872%" y="725" width="0.0593%" height="15" fill="rgb(225,57,45)" fg:x="5678" fg:w="9"/><text x="37.6372%" y="735.50"></text></g><g><title>hashbrown::raw::h2 (10 samples, 0.07%)</title><rect x="37.4465%" y="725" width="0.0658%" height="15" fill="rgb(209,196,50)" fg:x="5687" fg:w="10"/><text x="37.6965%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.05%)</title><rect x="37.5123%" y="725" width="0.0527%" height="15" fill="rgb(242,140,13)" fg:x="5697" fg:w="8"/><text x="37.7623%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.05%)</title><rect x="37.5123%" y="709" width="0.0527%" height="15" fill="rgb(217,111,7)" fg:x="5697" fg:w="8"/><text x="37.7623%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.05%)</title><rect x="37.5123%" y="693" width="0.0527%" height="15" fill="rgb(253,193,51)" fg:x="5697" fg:w="8"/><text x="37.7623%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (213 samples, 1.40%)</title><rect x="36.3996%" y="805" width="1.4025%" height="15" fill="rgb(252,70,29)" fg:x="5528" fg:w="213"/><text x="36.6496%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (213 samples, 1.40%)</title><rect x="36.3996%" y="789" width="1.4025%" height="15" fill="rgb(232,127,12)" fg:x="5528" fg:w="213"/><text x="36.6496%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (63 samples, 0.41%)</title><rect x="37.3872%" y="773" width="0.4148%" height="15" fill="rgb(211,180,21)" fg:x="5678" fg:w="63"/><text x="37.6372%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (63 samples, 0.41%)</title><rect x="37.3872%" y="757" width="0.4148%" height="15" fill="rgb(229,72,13)" fg:x="5678" fg:w="63"/><text x="37.6372%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (63 samples, 0.41%)</title><rect x="37.3872%" y="741" width="0.4148%" height="15" fill="rgb(240,211,49)" fg:x="5678" fg:w="63"/><text x="37.6372%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (36 samples, 0.24%)</title><rect x="37.5650%" y="725" width="0.2370%" height="15" fill="rgb(219,149,40)" fg:x="5705" fg:w="36"/><text x="37.8150%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (36 samples, 0.24%)</title><rect x="37.5650%" y="709" width="0.2370%" height="15" fill="rgb(210,127,46)" fg:x="5705" fg:w="36"/><text x="37.8150%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (36 samples, 0.24%)</title><rect x="37.5650%" y="693" width="0.2370%" height="15" fill="rgb(220,106,7)" fg:x="5705" fg:w="36"/><text x="37.8150%" y="703.50"></text></g><g><title>core::core_arch::simd::i8x16::new (36 samples, 0.24%)</title><rect x="37.5650%" y="677" width="0.2370%" height="15" fill="rgb(249,31,22)" fg:x="5705" fg:w="36"/><text x="37.8150%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (9 samples, 0.06%)</title><rect x="38.1642%" y="789" width="0.0593%" height="15" fill="rgb(253,1,49)" fg:x="5796" fg:w="9"/><text x="38.4142%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.06%)</title><rect x="38.1642%" y="773" width="0.0593%" height="15" fill="rgb(227,144,33)" fg:x="5796" fg:w="9"/><text x="38.4142%" y="783.50"></text></g><g><title>core::ptr::write (9 samples, 0.06%)</title><rect x="38.1642%" y="757" width="0.0593%" height="15" fill="rgb(249,163,44)" fg:x="5796" fg:w="9"/><text x="38.4142%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (11 samples, 0.07%)</title><rect x="38.2235%" y="789" width="0.0724%" height="15" fill="rgb(234,15,39)" fg:x="5805" fg:w="11"/><text x="38.4735%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.07%)</title><rect x="38.2235%" y="773" width="0.0724%" height="15" fill="rgb(207,66,16)" fg:x="5805" fg:w="11"/><text x="38.4735%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (11 samples, 0.07%)</title><rect x="38.2235%" y="757" width="0.0724%" height="15" fill="rgb(233,112,24)" fg:x="5805" fg:w="11"/><text x="38.4735%" y="767.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="38.3025%" y="773" width="0.0198%" height="15" fill="rgb(230,90,22)" fg:x="5817" fg:w="3"/><text x="38.5525%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2 samples, 0.01%)</title><rect x="38.3815%" y="709" width="0.0132%" height="15" fill="rgb(229,61,13)" fg:x="5829" fg:w="2"/><text x="38.6315%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="38.3815%" y="693" width="0.0132%" height="15" fill="rgb(225,57,24)" fg:x="5829" fg:w="2"/><text x="38.6315%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.03%)</title><rect x="38.3947%" y="709" width="0.0263%" height="15" fill="rgb(208,169,48)" fg:x="5831" fg:w="4"/><text x="38.6447%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="38.3815%" y="741" width="0.1054%" height="15" fill="rgb(244,218,51)" fg:x="5829" fg:w="16"/><text x="38.6315%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="38.3815%" y="725" width="0.1054%" height="15" fill="rgb(214,148,10)" fg:x="5829" fg:w="16"/><text x="38.6315%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (10 samples, 0.07%)</title><rect x="38.4210%" y="709" width="0.0658%" height="15" fill="rgb(225,174,27)" fg:x="5835" fg:w="10"/><text x="38.6710%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.02%)</title><rect x="38.4869%" y="741" width="0.0198%" height="15" fill="rgb(230,96,26)" fg:x="5845" fg:w="3"/><text x="38.7369%" y="751.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="38.4869%" y="725" width="0.0198%" height="15" fill="rgb(232,10,30)" fg:x="5845" fg:w="3"/><text x="38.7369%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.02%)</title><rect x="38.4869%" y="709" width="0.0198%" height="15" fill="rgb(222,8,50)" fg:x="5845" fg:w="3"/><text x="38.7369%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (2 samples, 0.01%)</title><rect x="38.4934%" y="693" width="0.0132%" height="15" fill="rgb(213,81,27)" fg:x="5846" fg:w="2"/><text x="38.7434%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.12%)</title><rect x="38.7832%" y="645" width="0.1185%" height="15" fill="rgb(245,50,10)" fg:x="5890" fg:w="18"/><text x="39.0332%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (31 samples, 0.20%)</title><rect x="38.7502%" y="661" width="0.2041%" height="15" fill="rgb(216,100,18)" fg:x="5885" fg:w="31"/><text x="39.0002%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.05%)</title><rect x="38.9017%" y="645" width="0.0527%" height="15" fill="rgb(236,147,54)" fg:x="5908" fg:w="8"/><text x="39.1517%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.15%)</title><rect x="39.1124%" y="645" width="0.1514%" height="15" fill="rgb(205,143,26)" fg:x="5940" fg:w="23"/><text x="39.3624%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (135 samples, 0.89%)</title><rect x="38.5790%" y="709" width="0.8889%" height="15" fill="rgb(236,26,9)" fg:x="5859" fg:w="135"/><text x="38.8290%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (135 samples, 0.89%)</title><rect x="38.5790%" y="693" width="0.8889%" height="15" fill="rgb(221,165,53)" fg:x="5859" fg:w="135"/><text x="38.8290%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (135 samples, 0.89%)</title><rect x="38.5790%" y="677" width="0.8889%" height="15" fill="rgb(214,110,17)" fg:x="5859" fg:w="135"/><text x="38.8290%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (78 samples, 0.51%)</title><rect x="38.9544%" y="661" width="0.5136%" height="15" fill="rgb(237,197,12)" fg:x="5916" fg:w="78"/><text x="39.2044%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (31 samples, 0.20%)</title><rect x="39.2638%" y="645" width="0.2041%" height="15" fill="rgb(205,84,17)" fg:x="5963" fg:w="31"/><text x="39.5138%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (27 samples, 0.18%)</title><rect x="39.4680%" y="709" width="0.1778%" height="15" fill="rgb(237,18,45)" fg:x="5994" fg:w="27"/><text x="39.7180%" y="719.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16 samples, 0.11%)</title><rect x="39.5404%" y="693" width="0.1054%" height="15" fill="rgb(221,87,14)" fg:x="6005" fg:w="16"/><text x="39.7904%" y="703.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (9 samples, 0.06%)</title><rect x="39.5865%" y="677" width="0.0593%" height="15" fill="rgb(238,186,15)" fg:x="6012" fg:w="9"/><text x="39.8365%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (9 samples, 0.06%)</title><rect x="39.5865%" y="661" width="0.0593%" height="15" fill="rgb(208,115,11)" fg:x="6012" fg:w="9"/><text x="39.8365%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.05%)</title><rect x="40.0672%" y="613" width="0.0527%" height="15" fill="rgb(254,175,0)" fg:x="6085" fg:w="8"/><text x="40.3172%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24 samples, 0.16%)</title><rect x="40.0408%" y="629" width="0.1580%" height="15" fill="rgb(227,24,42)" fg:x="6081" fg:w="24"/><text x="40.2908%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.08%)</title><rect x="40.1198%" y="613" width="0.0790%" height="15" fill="rgb(223,211,37)" fg:x="6093" fg:w="12"/><text x="40.3698%" y="623.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (262 samples, 1.73%)</title><rect x="38.5066%" y="741" width="1.7252%" height="15" fill="rgb(235,49,27)" fg:x="5848" fg:w="262"/><text x="38.7566%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (262 samples, 1.73%)</title><rect x="38.5066%" y="725" width="1.7252%" height="15" fill="rgb(254,97,51)" fg:x="5848" fg:w="262"/><text x="38.7566%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (89 samples, 0.59%)</title><rect x="39.6457%" y="709" width="0.5860%" height="15" fill="rgb(249,51,40)" fg:x="6021" fg:w="89"/><text x="39.8957%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u64 (85 samples, 0.56%)</title><rect x="39.6721%" y="693" width="0.5597%" height="15" fill="rgb(210,128,45)" fg:x="6025" fg:w="85"/><text x="39.9221%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (85 samples, 0.56%)</title><rect x="39.6721%" y="677" width="0.5597%" height="15" fill="rgb(224,137,50)" fg:x="6025" fg:w="85"/><text x="39.9221%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (85 samples, 0.56%)</title><rect x="39.6721%" y="661" width="0.5597%" height="15" fill="rgb(242,15,9)" fg:x="6025" fg:w="85"/><text x="39.9221%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (85 samples, 0.56%)</title><rect x="39.6721%" y="645" width="0.5597%" height="15" fill="rgb(233,187,41)" fg:x="6025" fg:w="85"/><text x="39.9221%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.03%)</title><rect x="40.1989%" y="629" width="0.0329%" height="15" fill="rgb(227,2,29)" fg:x="6105" fg:w="5"/><text x="40.4489%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (11 samples, 0.07%)</title><rect x="40.2318%" y="741" width="0.0724%" height="15" fill="rgb(222,70,3)" fg:x="6110" fg:w="11"/><text x="40.4818%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (11 samples, 0.07%)</title><rect x="40.2318%" y="725" width="0.0724%" height="15" fill="rgb(213,11,42)" fg:x="6110" fg:w="11"/><text x="40.4818%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.07%)</title><rect x="40.2318%" y="709" width="0.0724%" height="15" fill="rgb(225,150,9)" fg:x="6110" fg:w="11"/><text x="40.4818%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.02%)</title><rect x="40.3042%" y="741" width="0.0198%" height="15" fill="rgb(230,162,45)" fg:x="6121" fg:w="3"/><text x="40.5542%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="40.3042%" y="725" width="0.0198%" height="15" fill="rgb(222,14,52)" fg:x="6121" fg:w="3"/><text x="40.5542%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.01%)</title><rect x="40.3108%" y="709" width="0.0132%" height="15" fill="rgb(254,198,14)" fg:x="6122" fg:w="2"/><text x="40.5608%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.01%)</title><rect x="40.3108%" y="693" width="0.0132%" height="15" fill="rgb(220,217,30)" fg:x="6122" fg:w="2"/><text x="40.5608%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (10 samples, 0.07%)</title><rect x="40.3240%" y="741" width="0.0658%" height="15" fill="rgb(215,146,41)" fg:x="6124" fg:w="10"/><text x="40.5740%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (10 samples, 0.07%)</title><rect x="40.3240%" y="725" width="0.0658%" height="15" fill="rgb(217,27,36)" fg:x="6124" fg:w="10"/><text x="40.5740%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (10 samples, 0.07%)</title><rect x="40.3240%" y="709" width="0.0658%" height="15" fill="rgb(219,218,39)" fg:x="6124" fg:w="10"/><text x="40.5740%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.01%)</title><rect x="40.5017%" y="709" width="0.0132%" height="15" fill="rgb(219,4,42)" fg:x="6151" fg:w="2"/><text x="40.7517%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (24 samples, 0.16%)</title><rect x="40.5149%" y="709" width="0.1580%" height="15" fill="rgb(249,119,36)" fg:x="6153" fg:w="24"/><text x="40.7649%" y="719.50"></text></g><g><title>hashbrown::raw::is_full (48 samples, 0.32%)</title><rect x="40.6729%" y="709" width="0.3161%" height="15" fill="rgb(209,23,33)" fg:x="6177" fg:w="48"/><text x="40.9229%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.07%)</title><rect x="40.9890%" y="709" width="0.0658%" height="15" fill="rgb(211,10,0)" fg:x="6225" fg:w="10"/><text x="41.2390%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.07%)</title><rect x="40.9890%" y="693" width="0.0658%" height="15" fill="rgb(208,99,37)" fg:x="6225" fg:w="10"/><text x="41.2390%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.07%)</title><rect x="40.9890%" y="677" width="0.0658%" height="15" fill="rgb(213,132,31)" fg:x="6225" fg:w="10"/><text x="41.2390%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (106 samples, 0.70%)</title><rect x="40.3898%" y="725" width="0.6980%" height="15" fill="rgb(243,129,40)" fg:x="6134" fg:w="106"/><text x="40.6398%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.03%)</title><rect x="41.0548%" y="709" width="0.0329%" height="15" fill="rgb(210,66,33)" fg:x="6235" fg:w="5"/><text x="41.3048%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.03%)</title><rect x="41.0548%" y="693" width="0.0329%" height="15" fill="rgb(209,189,4)" fg:x="6235" fg:w="5"/><text x="41.3048%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (14 samples, 0.09%)</title><rect x="41.0878%" y="709" width="0.0922%" height="15" fill="rgb(214,107,37)" fg:x="6240" fg:w="14"/><text x="41.3378%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (131 samples, 0.86%)</title><rect x="40.3898%" y="741" width="0.8626%" height="15" fill="rgb(245,88,54)" fg:x="6134" fg:w="131"/><text x="40.6398%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (25 samples, 0.16%)</title><rect x="41.0878%" y="725" width="0.1646%" height="15" fill="rgb(205,146,20)" fg:x="6240" fg:w="25"/><text x="41.3378%" y="735.50"></text></g><g><title>hashbrown::raw::h2 (11 samples, 0.07%)</title><rect x="41.1800%" y="709" width="0.0724%" height="15" fill="rgb(220,161,25)" fg:x="6254" fg:w="11"/><text x="41.4300%" y="719.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2 samples, 0.01%)</title><rect x="41.2590%" y="693" width="0.0132%" height="15" fill="rgb(215,152,15)" fg:x="6266" fg:w="2"/><text x="41.5090%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (16 samples, 0.11%)</title><rect x="41.2590%" y="709" width="0.1054%" height="15" fill="rgb(233,192,44)" fg:x="6266" fg:w="16"/><text x="41.5090%" y="719.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14 samples, 0.09%)</title><rect x="41.2721%" y="693" width="0.0922%" height="15" fill="rgb(240,170,46)" fg:x="6268" fg:w="14"/><text x="41.5221%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.09%)</title><rect x="41.2721%" y="677" width="0.0922%" height="15" fill="rgb(207,104,33)" fg:x="6268" fg:w="14"/><text x="41.5221%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.09%)</title><rect x="41.2721%" y="661" width="0.0922%" height="15" fill="rgb(219,21,39)" fg:x="6268" fg:w="14"/><text x="41.5221%" y="671.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.09%)</title><rect x="41.2721%" y="645" width="0.0922%" height="15" fill="rgb(214,133,29)" fg:x="6268" fg:w="14"/><text x="41.5221%" y="655.50"></text></g><g><title>__libc_malloc (14 samples, 0.09%)</title><rect x="41.2721%" y="629" width="0.0922%" height="15" fill="rgb(226,93,6)" fg:x="6268" fg:w="14"/><text x="41.5221%" y="639.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.07%)</title><rect x="41.2985%" y="613" width="0.0658%" height="15" fill="rgb(252,222,34)" fg:x="6272" fg:w="10"/><text x="41.5485%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (462 samples, 3.04%)</title><rect x="38.3420%" y="757" width="3.0421%" height="15" fill="rgb(252,92,48)" fg:x="5823" fg:w="462"/><text x="38.5920%" y="767.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (20 samples, 0.13%)</title><rect x="41.2524%" y="741" width="0.1317%" height="15" fill="rgb(245,223,24)" fg:x="6265" fg:w="20"/><text x="41.5024%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (19 samples, 0.13%)</title><rect x="41.2590%" y="725" width="0.1251%" height="15" fill="rgb(205,176,3)" fg:x="6266" fg:w="19"/><text x="41.5090%" y="735.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (3 samples, 0.02%)</title><rect x="41.3643%" y="709" width="0.0198%" height="15" fill="rgb(235,151,15)" fg:x="6282" fg:w="3"/><text x="41.6143%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (470 samples, 3.09%)</title><rect x="38.2959%" y="789" width="3.0948%" height="15" fill="rgb(237,209,11)" fg:x="5816" fg:w="470"/><text x="38.5459%" y="799.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (465 samples, 3.06%)</title><rect x="38.3288%" y="773" width="3.0618%" height="15" fill="rgb(243,227,24)" fg:x="5821" fg:w="465"/><text x="38.5788%" y="783.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (6 samples, 0.04%)</title><rect x="41.5158%" y="773" width="0.0395%" height="15" fill="rgb(239,193,16)" fg:x="6305" fg:w="6"/><text x="41.7658%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (18 samples, 0.12%)</title><rect x="41.5553%" y="773" width="0.1185%" height="15" fill="rgb(231,27,9)" fg:x="6311" fg:w="18"/><text x="41.8053%" y="783.50"></text></g><g><title>hashbrown::raw::is_full (32 samples, 0.21%)</title><rect x="41.6804%" y="773" width="0.2107%" height="15" fill="rgb(219,169,10)" fg:x="6330" fg:w="32"/><text x="41.9304%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (82 samples, 0.54%)</title><rect x="41.3907%" y="789" width="0.5399%" height="15" fill="rgb(244,229,43)" fg:x="6286" fg:w="82"/><text x="41.6407%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.03%)</title><rect x="41.8977%" y="773" width="0.0329%" height="15" fill="rgb(254,38,20)" fg:x="6363" fg:w="5"/><text x="42.1477%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.03%)</title><rect x="41.8977%" y="757" width="0.0329%" height="15" fill="rgb(250,47,30)" fg:x="6363" fg:w="5"/><text x="42.1477%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (5 samples, 0.03%)</title><rect x="42.0096%" y="757" width="0.0329%" height="15" fill="rgb(224,124,36)" fg:x="6380" fg:w="5"/><text x="42.2596%" y="767.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (5,707 samples, 37.58%)</title><rect x="4.5895%" y="1093" width="37.5782%" height="15" fill="rgb(246,68,51)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="1103.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::R..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,707 samples, 37.58%)</title><rect x="4.5895%" y="1077" width="37.5782%" height="15" fill="rgb(253,43,49)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="1087.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,707 samples, 37.58%)</title><rect x="4.5895%" y="1061" width="37.5782%" height="15" fill="rgb(219,54,36)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="1071.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromItera..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,707 samples, 37.58%)</title><rect x="4.5895%" y="1045" width="37.5782%" height="15" fill="rgb(227,133,34)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="1055.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,707 samples, 37.58%)</title><rect x="4.5895%" y="1029" width="37.5782%" height="15" fill="rgb(247,227,15)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="1039.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::Spe..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,707 samples, 37.58%)</title><rect x="4.5895%" y="1013" width="37.5782%" height="15" fill="rgb(229,96,14)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="1023.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,707 samples, 37.58%)</title><rect x="4.5895%" y="997" width="37.5782%" height="15" fill="rgb(220,79,17)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="1007.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,707 samples, 37.58%)</title><rect x="4.5895%" y="981" width="37.5782%" height="15" fill="rgb(205,131,53)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="991.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5,707 samples, 37.58%)</title><rect x="4.5895%" y="965" width="37.5782%" height="15" fill="rgb(209,50,29)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="975.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5,707 samples, 37.58%)</title><rect x="4.5895%" y="949" width="37.5782%" height="15" fill="rgb(245,86,46)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="959.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::{{closure}} (5,707 samples, 37.58%)</title><rect x="4.5895%" y="933" width="37.5782%" height="15" fill="rgb(235,66,46)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="943.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::R..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (5,707 samples, 37.58%)</title><rect x="4.5895%" y="917" width="37.5782%" height="15" fill="rgb(232,148,31)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="927.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function..</text></g><g><title>bench_ex14::criterion_benchmark::{{closure}} (5,707 samples, 37.58%)</title><rect x="4.5895%" y="901" width="37.5782%" height="15" fill="rgb(217,149,8)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="911.50">bench_ex14::criterion_benchmark::{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (5,707 samples, 37.58%)</title><rect x="4.5895%" y="885" width="37.5782%" height="15" fill="rgb(209,183,11)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>bench_ex14::criterion_benchmark::{{closure}}::{{closure}} (5,707 samples, 37.58%)</title><rect x="4.5895%" y="869" width="37.5782%" height="15" fill="rgb(208,55,20)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="879.50">bench_ex14::criterion_benchmark::{{closure}}::{{closure}}</text></g><g><title>ex14::part1 (5,707 samples, 37.58%)</title><rect x="4.5895%" y="853" width="37.5782%" height="15" fill="rgb(218,39,14)" fg:x="697" fg:w="5707"/><text x="4.8395%" y="863.50">ex14::part1</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,379 samples, 9.08%)</title><rect x="33.0875%" y="837" width="9.0801%" height="15" fill="rgb(216,169,33)" fg:x="5025" fg:w="1379"/><text x="33.3375%" y="847.50">std::collecti..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,365 samples, 8.99%)</title><rect x="33.1797%" y="821" width="8.9880%" height="15" fill="rgb(233,80,24)" fg:x="5039" fg:w="1365"/><text x="33.4297%" y="831.50">hashbrown::ma..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (663 samples, 4.37%)</title><rect x="37.8021%" y="805" width="4.3656%" height="15" fill="rgb(213,179,31)" fg:x="5741" fg:w="663"/><text x="38.0521%" y="815.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (36 samples, 0.24%)</title><rect x="41.9306%" y="789" width="0.2370%" height="15" fill="rgb(209,19,5)" fg:x="6368" fg:w="36"/><text x="42.1806%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (24 samples, 0.16%)</title><rect x="42.0096%" y="773" width="0.1580%" height="15" fill="rgb(219,18,35)" fg:x="6380" fg:w="24"/><text x="42.2596%" y="783.50"></text></g><g><title>hashbrown::raw::h2 (19 samples, 0.13%)</title><rect x="42.0425%" y="757" width="0.1251%" height="15" fill="rgb(209,169,16)" fg:x="6385" fg:w="19"/><text x="42.2925%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (35 samples, 0.23%)</title><rect x="42.9644%" y="901" width="0.2305%" height="15" fill="rgb(245,90,51)" fg:x="6525" fg:w="35"/><text x="43.2144%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (35 samples, 0.23%)</title><rect x="42.9644%" y="885" width="0.2305%" height="15" fill="rgb(220,99,45)" fg:x="6525" fg:w="35"/><text x="43.2144%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (35 samples, 0.23%)</title><rect x="42.9644%" y="869" width="0.2305%" height="15" fill="rgb(249,89,25)" fg:x="6525" fg:w="35"/><text x="43.2144%" y="879.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.20%)</title><rect x="42.9973%" y="853" width="0.1975%" height="15" fill="rgb(239,193,0)" fg:x="6530" fg:w="30"/><text x="43.2473%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.03%)</title><rect x="43.1948%" y="901" width="0.0263%" height="15" fill="rgb(231,126,1)" fg:x="6560" fg:w="4"/><text x="43.4448%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.03%)</title><rect x="43.1948%" y="885" width="0.0263%" height="15" fill="rgb(243,166,3)" fg:x="6560" fg:w="4"/><text x="43.4448%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.27%)</title><rect x="44.9529%" y="853" width="0.2700%" height="15" fill="rgb(223,22,34)" fg:x="6827" fg:w="41"/><text x="45.2029%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (168 samples, 1.11%)</title><rect x="44.4657%" y="869" width="1.1062%" height="15" fill="rgb(251,52,51)" fg:x="6753" fg:w="168"/><text x="44.7157%" y="879.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (53 samples, 0.35%)</title><rect x="45.2229%" y="853" width="0.3490%" height="15" fill="rgb(221,165,28)" fg:x="6868" fg:w="53"/><text x="45.4729%" y="863.50"></text></g><g><title>core::cmp::min (2 samples, 0.01%)</title><rect x="45.5785%" y="869" width="0.0132%" height="15" fill="rgb(218,121,47)" fg:x="6922" fg:w="2"/><text x="45.8285%" y="879.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.01%)</title><rect x="45.5785%" y="853" width="0.0132%" height="15" fill="rgb(209,120,9)" fg:x="6922" fg:w="2"/><text x="45.8285%" y="863.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.01%)</title><rect x="45.5785%" y="837" width="0.0132%" height="15" fill="rgb(236,68,12)" fg:x="6922" fg:w="2"/><text x="45.8285%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 0.36%)</title><rect x="45.5916%" y="869" width="0.3556%" height="15" fill="rgb(225,194,26)" fg:x="6924" fg:w="54"/><text x="45.8416%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (6 samples, 0.04%)</title><rect x="45.9472%" y="869" width="0.0395%" height="15" fill="rgb(231,84,39)" fg:x="6978" fg:w="6"/><text x="46.1972%" y="879.50"></text></g><g><title>core::ptr::align_offset (6 samples, 0.04%)</title><rect x="45.9472%" y="853" width="0.0395%" height="15" fill="rgb(210,11,45)" fg:x="6978" fg:w="6"/><text x="46.1972%" y="863.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (20 samples, 0.13%)</title><rect x="45.9867%" y="869" width="0.1317%" height="15" fill="rgb(224,54,52)" fg:x="6984" fg:w="20"/><text x="46.2367%" y="879.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (20 samples, 0.13%)</title><rect x="45.9867%" y="853" width="0.1317%" height="15" fill="rgb(238,102,14)" fg:x="6984" fg:w="20"/><text x="46.2367%" y="863.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (35 samples, 0.23%)</title><rect x="46.1184%" y="869" width="0.2305%" height="15" fill="rgb(243,160,52)" fg:x="7004" fg:w="35"/><text x="46.3684%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (10 samples, 0.07%)</title><rect x="46.2830%" y="853" width="0.0658%" height="15" fill="rgb(216,114,19)" fg:x="7029" fg:w="10"/><text x="46.5330%" y="863.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (605 samples, 3.98%)</title><rect x="42.4310%" y="949" width="3.9837%" height="15" fill="rgb(244,166,37)" fg:x="6444" fg:w="605"/><text x="42.6810%" y="959.50">&lt;cor..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (605 samples, 3.98%)</title><rect x="42.4310%" y="933" width="3.9837%" height="15" fill="rgb(246,29,44)" fg:x="6444" fg:w="605"/><text x="42.6810%" y="943.50">core..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (567 samples, 3.73%)</title><rect x="42.6812%" y="917" width="3.7335%" height="15" fill="rgb(215,56,53)" fg:x="6482" fg:w="567"/><text x="42.9312%" y="927.50">&lt;cor..</text></g><g><title>core::slice::memchr::memchr (485 samples, 3.19%)</title><rect x="43.2212%" y="901" width="3.1935%" height="15" fill="rgb(217,60,2)" fg:x="6564" fg:w="485"/><text x="43.4712%" y="911.50">cor..</text></g><g><title>core::slice::memchr::memchr_general_case (482 samples, 3.17%)</title><rect x="43.2409%" y="885" width="3.1738%" height="15" fill="rgb(207,26,24)" fg:x="6567" fg:w="482"/><text x="43.4909%" y="895.50">cor..</text></g><g><title>core::slice::memchr::repeat_byte (10 samples, 0.07%)</title><rect x="46.3489%" y="869" width="0.0658%" height="15" fill="rgb(252,210,15)" fg:x="7039" fg:w="10"/><text x="46.5989%" y="879.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (645 samples, 4.25%)</title><rect x="42.3323%" y="981" width="4.2471%" height="15" fill="rgb(253,209,26)" fg:x="6429" fg:w="645"/><text x="42.5823%" y="991.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (630 samples, 4.15%)</title><rect x="42.4310%" y="965" width="4.1483%" height="15" fill="rgb(238,170,14)" fg:x="6444" fg:w="630"/><text x="42.6810%" y="975.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::map (25 samples, 0.16%)</title><rect x="46.4147%" y="949" width="0.1646%" height="15" fill="rgb(216,178,15)" fg:x="7049" fg:w="25"/><text x="46.6647%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (25 samples, 0.16%)</title><rect x="46.4147%" y="933" width="0.1646%" height="15" fill="rgb(250,197,2)" fg:x="7049" fg:w="25"/><text x="46.6647%" y="943.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (25 samples, 0.16%)</title><rect x="46.4147%" y="917" width="0.1646%" height="15" fill="rgb(212,70,42)" fg:x="7049" fg:w="25"/><text x="46.6647%" y="927.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (25 samples, 0.16%)</title><rect x="46.4147%" y="901" width="0.1646%" height="15" fill="rgb(227,213,9)" fg:x="7049" fg:w="25"/><text x="46.6647%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="49.4765%" y="837" width="0.0132%" height="15" fill="rgb(245,99,25)" fg:x="7514" fg:w="2"/><text x="49.7265%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2 samples, 0.01%)</title><rect x="49.4765%" y="821" width="0.0132%" height="15" fill="rgb(250,82,29)" fg:x="7514" fg:w="2"/><text x="49.7265%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (2 samples, 0.01%)</title><rect x="49.4765%" y="805" width="0.0132%" height="15" fill="rgb(241,226,54)" fg:x="7514" fg:w="2"/><text x="49.7265%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="49.4765%" y="789" width="0.0132%" height="15" fill="rgb(221,99,41)" fg:x="7514" fg:w="2"/><text x="49.7265%" y="799.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (7 samples, 0.05%)</title><rect x="49.4897%" y="837" width="0.0461%" height="15" fill="rgb(213,90,21)" fg:x="7516" fg:w="7"/><text x="49.7397%" y="847.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.01%)</title><rect x="49.6148%" y="805" width="0.0132%" height="15" fill="rgb(205,208,24)" fg:x="7535" fg:w="2"/><text x="49.8648%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="49.6148%" y="789" width="0.0132%" height="15" fill="rgb(246,31,12)" fg:x="7535" fg:w="2"/><text x="49.8648%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.13%)</title><rect x="49.5358%" y="837" width="0.1317%" height="15" fill="rgb(213,154,6)" fg:x="7523" fg:w="20"/><text x="49.7858%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (20 samples, 0.13%)</title><rect x="49.5358%" y="821" width="0.1317%" height="15" fill="rgb(222,163,29)" fg:x="7523" fg:w="20"/><text x="49.7858%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.04%)</title><rect x="49.6280%" y="805" width="0.0395%" height="15" fill="rgb(227,201,8)" fg:x="7537" fg:w="6"/><text x="49.8780%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (7 samples, 0.05%)</title><rect x="49.6675%" y="837" width="0.0461%" height="15" fill="rgb(233,9,32)" fg:x="7543" fg:w="7"/><text x="49.9175%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (7 samples, 0.05%)</title><rect x="49.6675%" y="821" width="0.0461%" height="15" fill="rgb(217,54,24)" fg:x="7543" fg:w="7"/><text x="49.9175%" y="831.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (332 samples, 2.19%)</title><rect x="47.7777%" y="869" width="2.1861%" height="15" fill="rgb(235,192,0)" fg:x="7256" fg:w="332"/><text x="48.0277%" y="879.50">&lt;..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (304 samples, 2.00%)</title><rect x="47.9621%" y="853" width="2.0017%" height="15" fill="rgb(235,45,9)" fg:x="7284" fg:w="304"/><text x="48.2121%" y="863.50">c..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (38 samples, 0.25%)</title><rect x="49.7136%" y="837" width="0.2502%" height="15" fill="rgb(246,42,40)" fg:x="7550" fg:w="38"/><text x="49.9636%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="49.9638%" y="869" width="0.0198%" height="15" fill="rgb(248,111,24)" fg:x="7588" fg:w="3"/><text x="50.2138%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="49.9638%" y="853" width="0.0198%" height="15" fill="rgb(249,65,22)" fg:x="7588" fg:w="3"/><text x="50.2138%" y="863.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (438 samples, 2.88%)</title><rect x="47.1851%" y="901" width="2.8840%" height="15" fill="rgb(238,111,51)" fg:x="7166" fg:w="438"/><text x="47.4351%" y="911.50">&lt;c..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (414 samples, 2.73%)</title><rect x="47.3431%" y="885" width="2.7260%" height="15" fill="rgb(250,118,22)" fg:x="7190" fg:w="414"/><text x="47.5931%" y="895.50">co..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (13 samples, 0.09%)</title><rect x="49.9835%" y="869" width="0.0856%" height="15" fill="rgb(234,84,26)" fg:x="7591" fg:w="13"/><text x="50.2335%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (4 samples, 0.03%)</title><rect x="50.0428%" y="853" width="0.0263%" height="15" fill="rgb(243,172,12)" fg:x="7600" fg:w="4"/><text x="50.2928%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (4 samples, 0.03%)</title><rect x="50.0428%" y="837" width="0.0263%" height="15" fill="rgb(236,150,49)" fg:x="7600" fg:w="4"/><text x="50.2928%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (7 samples, 0.05%)</title><rect x="50.0757%" y="901" width="0.0461%" height="15" fill="rgb(225,197,26)" fg:x="7605" fg:w="7"/><text x="50.3257%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.13%)</title><rect x="51.2478%" y="853" width="0.1317%" height="15" fill="rgb(214,17,42)" fg:x="7783" fg:w="20"/><text x="51.4978%" y="863.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_add (21 samples, 0.14%)</title><rect x="51.3795%" y="853" width="0.1383%" height="15" fill="rgb(224,165,40)" fg:x="7803" fg:w="21"/><text x="51.6295%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (13 samples, 0.09%)</title><rect x="51.4321%" y="837" width="0.0856%" height="15" fill="rgb(246,100,4)" fg:x="7811" fg:w="13"/><text x="51.6821%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (13 samples, 0.09%)</title><rect x="51.4321%" y="821" width="0.0856%" height="15" fill="rgb(222,103,0)" fg:x="7811" fg:w="13"/><text x="51.6821%" y="831.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_mul (68 samples, 0.45%)</title><rect x="51.5177%" y="853" width="0.4478%" height="15" fill="rgb(227,189,26)" fg:x="7824" fg:w="68"/><text x="51.7677%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_mul (68 samples, 0.45%)</title><rect x="51.5177%" y="837" width="0.4478%" height="15" fill="rgb(214,202,17)" fg:x="7824" fg:w="68"/><text x="51.7677%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (68 samples, 0.45%)</title><rect x="51.5177%" y="821" width="0.4478%" height="15" fill="rgb(229,111,3)" fg:x="7824" fg:w="68"/><text x="51.7677%" y="831.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (75 samples, 0.49%)</title><rect x="51.9655%" y="853" width="0.4938%" height="15" fill="rgb(229,172,15)" fg:x="7892" fg:w="75"/><text x="52.2155%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (58 samples, 0.38%)</title><rect x="52.0774%" y="837" width="0.3819%" height="15" fill="rgb(230,224,35)" fg:x="7909" fg:w="58"/><text x="52.3274%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (367 samples, 2.42%)</title><rect x="50.1218%" y="901" width="2.4165%" height="15" fill="rgb(251,141,6)" fg:x="7612" fg:w="367"/><text x="50.3718%" y="911.50">co..</text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (358 samples, 2.36%)</title><rect x="50.1811%" y="885" width="2.3573%" height="15" fill="rgb(225,208,6)" fg:x="7621" fg:w="358"/><text x="50.4311%" y="895.50">c..</text></g><g><title>core::num::from_str_radix (349 samples, 2.30%)</title><rect x="50.2403%" y="869" width="2.2980%" height="15" fill="rgb(246,181,16)" fg:x="7630" fg:w="349"/><text x="50.4903%" y="879.50">c..</text></g><g><title>core::str::&lt;impl str&gt;::is_empty (12 samples, 0.08%)</title><rect x="52.4593%" y="853" width="0.0790%" height="15" fill="rgb(227,129,36)" fg:x="7967" fg:w="12"/><text x="52.7093%" y="863.50"></text></g><g><title>core::cmp::max (4 samples, 0.03%)</title><rect x="53.3812%" y="837" width="0.0263%" height="15" fill="rgb(248,117,24)" fg:x="8107" fg:w="4"/><text x="53.6312%" y="847.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.03%)</title><rect x="53.3812%" y="821" width="0.0263%" height="15" fill="rgb(214,185,35)" fg:x="8107" fg:w="4"/><text x="53.6312%" y="831.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.03%)</title><rect x="53.3812%" y="805" width="0.0263%" height="15" fill="rgb(236,150,34)" fg:x="8107" fg:w="4"/><text x="53.6312%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (31 samples, 0.20%)</title><rect x="53.4075%" y="837" width="0.2041%" height="15" fill="rgb(243,228,27)" fg:x="8111" fg:w="31"/><text x="53.6575%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (31 samples, 0.20%)</title><rect x="53.4075%" y="821" width="0.2041%" height="15" fill="rgb(245,77,44)" fg:x="8111" fg:w="31"/><text x="53.6575%" y="831.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.13%)</title><rect x="53.4799%" y="805" width="0.1317%" height="15" fill="rgb(235,214,42)" fg:x="8122" fg:w="20"/><text x="53.7299%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.06%)</title><rect x="53.6116%" y="837" width="0.0593%" height="15" fill="rgb(221,74,3)" fg:x="8142" fg:w="9"/><text x="53.8616%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.06%)</title><rect x="53.6116%" y="821" width="0.0593%" height="15" fill="rgb(206,121,29)" fg:x="8142" fg:w="9"/><text x="53.8616%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.24%)</title><rect x="53.7104%" y="805" width="0.2370%" height="15" fill="rgb(249,131,53)" fg:x="8157" fg:w="36"/><text x="53.9604%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (117 samples, 0.77%)</title><rect x="53.6709%" y="837" width="0.7704%" height="15" fill="rgb(236,170,29)" fg:x="8151" fg:w="117"/><text x="53.9209%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (117 samples, 0.77%)</title><rect x="53.6709%" y="821" width="0.7704%" height="15" fill="rgb(247,96,15)" fg:x="8151" fg:w="117"/><text x="53.9209%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (75 samples, 0.49%)</title><rect x="53.9475%" y="805" width="0.4938%" height="15" fill="rgb(211,210,7)" fg:x="8193" fg:w="75"/><text x="54.1975%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (416 samples, 2.74%)</title><rect x="52.5384%" y="901" width="2.7392%" height="15" fill="rgb(240,88,50)" fg:x="7979" fg:w="416"/><text x="52.7884%" y="911.50">co..</text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (404 samples, 2.66%)</title><rect x="52.6174%" y="885" width="2.6602%" height="15" fill="rgb(209,229,26)" fg:x="7991" fg:w="404"/><text x="52.8674%" y="895.50">&lt;&amp;..</text></g><g><title>core::str::pattern::StrSearcher::new (399 samples, 2.63%)</title><rect x="52.6503%" y="869" width="2.6272%" height="15" fill="rgb(210,68,23)" fg:x="7996" fg:w="399"/><text x="52.9003%" y="879.50">co..</text></g><g><title>core::str::pattern::TwoWaySearcher::new (328 samples, 2.16%)</title><rect x="53.1178%" y="853" width="2.1597%" height="15" fill="rgb(229,180,13)" fg:x="8067" fg:w="328"/><text x="53.3678%" y="863.50">c..</text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (127 samples, 0.84%)</title><rect x="54.4413%" y="837" width="0.8362%" height="15" fill="rgb(236,53,44)" fg:x="8268" fg:w="127"/><text x="54.6913%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (6 samples, 0.04%)</title><rect x="55.2380%" y="821" width="0.0395%" height="15" fill="rgb(244,214,29)" fg:x="8389" fg:w="6"/><text x="55.4880%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (6 samples, 0.04%)</title><rect x="55.2380%" y="805" width="0.0395%" height="15" fill="rgb(220,75,29)" fg:x="8389" fg:w="6"/><text x="55.4880%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (16 samples, 0.11%)</title><rect x="55.2775%" y="901" width="0.1054%" height="15" fill="rgb(214,183,37)" fg:x="8395" fg:w="16"/><text x="55.5275%" y="911.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (16 samples, 0.11%)</title><rect x="55.2775%" y="885" width="0.1054%" height="15" fill="rgb(239,117,29)" fg:x="8395" fg:w="16"/><text x="55.5275%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (16 samples, 0.11%)</title><rect x="55.2775%" y="869" width="0.1054%" height="15" fill="rgb(237,171,35)" fg:x="8395" fg:w="16"/><text x="55.5275%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.04%)</title><rect x="55.3434%" y="853" width="0.0395%" height="15" fill="rgb(229,178,53)" fg:x="8405" fg:w="6"/><text x="55.5934%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.04%)</title><rect x="55.3434%" y="837" width="0.0395%" height="15" fill="rgb(210,102,19)" fg:x="8405" fg:w="6"/><text x="55.5934%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.04%)</title><rect x="55.3434%" y="821" width="0.0395%" height="15" fill="rgb(235,127,22)" fg:x="8405" fg:w="6"/><text x="55.5934%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.01%)</title><rect x="55.3829%" y="853" width="0.0132%" height="15" fill="rgb(244,31,31)" fg:x="8411" fg:w="2"/><text x="55.6329%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,001 samples, 13.18%)</title><rect x="42.2664%" y="997" width="13.1757%" height="15" fill="rgb(231,43,21)" fg:x="6419" fg:w="2001"/><text x="42.5164%" y="1007.50">&lt;core::iter::adapter..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,346 samples, 8.86%)</title><rect x="46.5793%" y="981" width="8.8628%" height="15" fill="rgb(217,131,35)" fg:x="7074" fg:w="1346"/><text x="46.8293%" y="991.50">core::option:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,329 samples, 8.75%)</title><rect x="46.6912%" y="965" width="8.7509%" height="15" fill="rgb(221,149,4)" fg:x="7091" fg:w="1329"/><text x="46.9412%" y="975.50">core::ops::f..</text></g><g><title>ex14::part1::{{closure}} (1,329 samples, 8.75%)</title><rect x="46.6912%" y="949" width="8.7509%" height="15" fill="rgb(232,170,28)" fg:x="7091" fg:w="1329"/><text x="46.9412%" y="959.50">ex14::part1:..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,329 samples, 8.75%)</title><rect x="46.6912%" y="933" width="8.7509%" height="15" fill="rgb(238,56,10)" fg:x="7091" fg:w="1329"/><text x="46.9412%" y="943.50">&lt;T as core::..</text></g><g><title>&lt;ex14::Instr as core::convert::From&lt;&amp;str&gt;&gt;::from (1,328 samples, 8.74%)</title><rect x="46.6978%" y="917" width="8.7443%" height="15" fill="rgb(235,196,14)" fg:x="7092" fg:w="1328"/><text x="46.9478%" y="927.50">&lt;ex14::Instr..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (9 samples, 0.06%)</title><rect x="55.3829%" y="901" width="0.0593%" height="15" fill="rgb(216,45,48)" fg:x="8411" fg:w="9"/><text x="55.6329%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (9 samples, 0.06%)</title><rect x="55.3829%" y="885" width="0.0593%" height="15" fill="rgb(238,213,17)" fg:x="8411" fg:w="9"/><text x="55.6329%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (9 samples, 0.06%)</title><rect x="55.3829%" y="869" width="0.0593%" height="15" fill="rgb(212,13,2)" fg:x="8411" fg:w="9"/><text x="55.6329%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (7 samples, 0.05%)</title><rect x="55.3961%" y="853" width="0.0461%" height="15" fill="rgb(240,114,20)" fg:x="8413" fg:w="7"/><text x="55.6461%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.04%)</title><rect x="55.4026%" y="837" width="0.0395%" height="15" fill="rgb(228,41,40)" fg:x="8414" fg:w="6"/><text x="55.6526%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.04%)</title><rect x="55.4026%" y="821" width="0.0395%" height="15" fill="rgb(244,132,35)" fg:x="8414" fg:w="6"/><text x="55.6526%" y="831.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::repeat (4 samples, 0.03%)</title><rect x="55.4422%" y="997" width="0.0263%" height="15" fill="rgb(253,189,4)" fg:x="8420" fg:w="4"/><text x="55.6922%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::repeat (4 samples, 0.03%)</title><rect x="55.4422%" y="981" width="0.0263%" height="15" fill="rgb(224,37,19)" fg:x="8420" fg:w="4"/><text x="55.6922%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="55.4553%" y="965" width="0.0132%" height="15" fill="rgb(235,223,18)" fg:x="8422" fg:w="2"/><text x="55.7053%" y="975.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="55.4553%" y="949" width="0.0132%" height="15" fill="rgb(235,163,25)" fg:x="8422" fg:w="2"/><text x="55.7053%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (5 samples, 0.03%)</title><rect x="55.6594%" y="869" width="0.0329%" height="15" fill="rgb(217,145,28)" fg:x="8453" fg:w="5"/><text x="55.9094%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.03%)</title><rect x="55.6594%" y="853" width="0.0329%" height="15" fill="rgb(223,223,32)" fg:x="8453" fg:w="5"/><text x="55.9094%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.03%)</title><rect x="55.6924%" y="869" width="0.0329%" height="15" fill="rgb(227,189,39)" fg:x="8458" fg:w="5"/><text x="55.9424%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.01%)</title><rect x="55.7253%" y="869" width="0.0132%" height="15" fill="rgb(248,10,22)" fg:x="8463" fg:w="2"/><text x="55.9753%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.01%)</title><rect x="55.7450%" y="853" width="0.0132%" height="15" fill="rgb(248,46,39)" fg:x="8466" fg:w="2"/><text x="55.9950%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.30%)</title><rect x="55.4685%" y="949" width="0.3029%" height="15" fill="rgb(248,113,48)" fg:x="8424" fg:w="46"/><text x="55.7185%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.30%)</title><rect x="55.4685%" y="933" width="0.3029%" height="15" fill="rgb(245,16,25)" fg:x="8424" fg:w="46"/><text x="55.7185%" y="943.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.30%)</title><rect x="55.4685%" y="917" width="0.3029%" height="15" fill="rgb(249,152,16)" fg:x="8424" fg:w="46"/><text x="55.7185%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.20%)</title><rect x="55.5738%" y="901" width="0.1975%" height="15" fill="rgb(250,16,1)" fg:x="8440" fg:w="30"/><text x="55.8238%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.18%)</title><rect x="55.5870%" y="885" width="0.1844%" height="15" fill="rgb(249,138,3)" fg:x="8442" fg:w="28"/><text x="55.8370%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (4 samples, 0.03%)</title><rect x="55.7450%" y="869" width="0.0263%" height="15" fill="rgb(227,71,41)" fg:x="8466" fg:w="4"/><text x="55.9950%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.01%)</title><rect x="55.7582%" y="853" width="0.0132%" height="15" fill="rgb(209,184,23)" fg:x="8468" fg:w="2"/><text x="56.0082%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="55.7582%" y="837" width="0.0132%" height="15" fill="rgb(223,215,31)" fg:x="8468" fg:w="2"/><text x="56.0082%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (51 samples, 0.34%)</title><rect x="55.4685%" y="997" width="0.3358%" height="15" fill="rgb(210,146,28)" fg:x="8424" fg:w="51"/><text x="55.7185%" y="1007.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&lt;&amp;u64&gt;&gt;::sum (51 samples, 0.34%)</title><rect x="55.4685%" y="981" width="0.3358%" height="15" fill="rgb(209,183,41)" fg:x="8424" fg:w="51"/><text x="55.7185%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (51 samples, 0.34%)</title><rect x="55.4685%" y="965" width="0.3358%" height="15" fill="rgb(209,224,45)" fg:x="8424" fg:w="51"/><text x="55.7185%" y="975.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&lt;&amp;u64&gt;&gt;::sum::{{closure}} (5 samples, 0.03%)</title><rect x="55.7714%" y="949" width="0.0329%" height="15" fill="rgb(224,209,51)" fg:x="8470" fg:w="5"/><text x="56.0214%" y="959.50"></text></g><g><title>&lt;u64 as core::ops::arith::Add&lt;&amp;u64&gt;&gt;::add (5 samples, 0.03%)</title><rect x="55.7714%" y="933" width="0.0329%" height="15" fill="rgb(223,17,39)" fg:x="8470" fg:w="5"/><text x="56.0214%" y="943.50"></text></g><g><title>&lt;u64 as core::ops::arith::Add&gt;::add (5 samples, 0.03%)</title><rect x="55.7714%" y="917" width="0.0329%" height="15" fill="rgb(234,204,37)" fg:x="8470" fg:w="5"/><text x="56.0214%" y="927.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.11%)</title><rect x="55.8438%" y="901" width="0.1119%" height="15" fill="rgb(236,120,5)" fg:x="8481" fg:w="17"/><text x="56.0938%" y="911.50"></text></g><g><title>__rust_dealloc (2 samples, 0.01%)</title><rect x="55.9623%" y="901" width="0.0132%" height="15" fill="rgb(248,97,27)" fg:x="8499" fg:w="2"/><text x="56.2123%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;ex14::MaskParts&gt; (32 samples, 0.21%)</title><rect x="55.8109%" y="997" width="0.2107%" height="15" fill="rgb(240,66,17)" fg:x="8476" fg:w="32"/><text x="56.0609%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (32 samples, 0.21%)</title><rect x="55.8109%" y="981" width="0.2107%" height="15" fill="rgb(210,79,3)" fg:x="8476" fg:w="32"/><text x="56.0609%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (32 samples, 0.21%)</title><rect x="55.8109%" y="965" width="0.2107%" height="15" fill="rgb(214,176,27)" fg:x="8476" fg:w="32"/><text x="56.0609%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.21%)</title><rect x="55.8109%" y="949" width="0.2107%" height="15" fill="rgb(235,185,3)" fg:x="8476" fg:w="32"/><text x="56.0609%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.18%)</title><rect x="55.8438%" y="933" width="0.1778%" height="15" fill="rgb(227,24,12)" fg:x="8481" fg:w="27"/><text x="56.0938%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.18%)</title><rect x="55.8438%" y="917" width="0.1778%" height="15" fill="rgb(252,169,48)" fg:x="8481" fg:w="27"/><text x="56.0938%" y="927.50"></text></g><g><title>cfree (7 samples, 0.05%)</title><rect x="55.9755%" y="901" width="0.0461%" height="15" fill="rgb(212,65,1)" fg:x="8501" fg:w="7"/><text x="56.2255%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (16 samples, 0.11%)</title><rect x="56.0216%" y="997" width="0.1054%" height="15" fill="rgb(242,39,24)" fg:x="8508" fg:w="16"/><text x="56.2716%" y="1007.50"></text></g><g><title>__libc_malloc (32 samples, 0.21%)</title><rect x="56.4298%" y="853" width="0.2107%" height="15" fill="rgb(249,32,23)" fg:x="8570" fg:w="32"/><text x="56.6798%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (36 samples, 0.24%)</title><rect x="56.4101%" y="965" width="0.2370%" height="15" fill="rgb(251,195,23)" fg:x="8567" fg:w="36"/><text x="56.6601%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.24%)</title><rect x="56.4101%" y="949" width="0.2370%" height="15" fill="rgb(236,174,8)" fg:x="8567" fg:w="36"/><text x="56.6601%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36 samples, 0.24%)</title><rect x="56.4101%" y="933" width="0.2370%" height="15" fill="rgb(220,197,8)" fg:x="8567" fg:w="36"/><text x="56.6601%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (36 samples, 0.24%)</title><rect x="56.4101%" y="917" width="0.2370%" height="15" fill="rgb(240,108,37)" fg:x="8567" fg:w="36"/><text x="56.6601%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.24%)</title><rect x="56.4101%" y="901" width="0.2370%" height="15" fill="rgb(232,176,24)" fg:x="8567" fg:w="36"/><text x="56.6601%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.24%)</title><rect x="56.4101%" y="885" width="0.2370%" height="15" fill="rgb(243,35,29)" fg:x="8567" fg:w="36"/><text x="56.6601%" y="895.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.24%)</title><rect x="56.4101%" y="869" width="0.2370%" height="15" fill="rgb(210,37,18)" fg:x="8567" fg:w="36"/><text x="56.6601%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (26 samples, 0.17%)</title><rect x="58.3920%" y="853" width="0.1712%" height="15" fill="rgb(224,184,40)" fg:x="8868" fg:w="26"/><text x="58.6420%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (294 samples, 1.94%)</title><rect x="56.6471%" y="917" width="1.9359%" height="15" fill="rgb(236,39,29)" fg:x="8603" fg:w="294"/><text x="56.8971%" y="927.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (294 samples, 1.94%)</title><rect x="56.6471%" y="901" width="1.9359%" height="15" fill="rgb(232,48,39)" fg:x="8603" fg:w="294"/><text x="56.8971%" y="911.50">c..</text></g><g><title>&lt;ex14::MaskParts as core::str::traits::FromStr&gt;::from_str::{{closure}} (294 samples, 1.94%)</title><rect x="56.6471%" y="885" width="1.9359%" height="15" fill="rgb(236,34,42)" fg:x="8603" fg:w="294"/><text x="56.8971%" y="895.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (62 samples, 0.41%)</title><rect x="58.1748%" y="869" width="0.4082%" height="15" fill="rgb(243,106,37)" fg:x="8835" fg:w="62"/><text x="58.4248%" y="879.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="58.5632%" y="853" width="0.0198%" height="15" fill="rgb(218,96,6)" fg:x="8894" fg:w="3"/><text x="58.8132%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (578 samples, 3.81%)</title><rect x="56.1270%" y="997" width="3.8059%" height="15" fill="rgb(235,130,12)" fg:x="8524" fg:w="578"/><text x="56.3770%" y="1007.50">core..</text></g><g><title>&lt;ex14::MaskParts as core::str::traits::FromStr&gt;::from_str (577 samples, 3.80%)</title><rect x="56.1335%" y="981" width="3.7993%" height="15" fill="rgb(231,95,0)" fg:x="8525" fg:w="577"/><text x="56.3835%" y="991.50">&lt;ex1..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (499 samples, 3.29%)</title><rect x="56.6471%" y="965" width="3.2857%" height="15" fill="rgb(228,12,23)" fg:x="8603" fg:w="499"/><text x="56.8971%" y="975.50">cor..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (499 samples, 3.29%)</title><rect x="56.6471%" y="949" width="3.2857%" height="15" fill="rgb(216,12,1)" fg:x="8603" fg:w="499"/><text x="56.8971%" y="959.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (499 samples, 3.29%)</title><rect x="56.6471%" y="933" width="3.2857%" height="15" fill="rgb(219,59,3)" fg:x="8603" fg:w="499"/><text x="56.8971%" y="943.50">cor..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 1.35%)</title><rect x="58.5830%" y="917" width="1.3498%" height="15" fill="rgb(215,208,46)" fg:x="8897" fg:w="205"/><text x="58.8330%" y="927.50"></text></g><g><title>core::str::validations::next_code_point (205 samples, 1.35%)</title><rect x="58.5830%" y="901" width="1.3498%" height="15" fill="rgb(254,224,29)" fg:x="8897" fg:w="205"/><text x="58.8330%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.82%)</title><rect x="59.1163%" y="885" width="0.8165%" height="15" fill="rgb(232,14,29)" fg:x="8978" fg:w="124"/><text x="59.3663%" y="895.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (6 samples, 0.04%)</title><rect x="59.8933%" y="869" width="0.0395%" height="15" fill="rgb(208,45,52)" fg:x="9096" fg:w="6"/><text x="60.1433%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.04%)</title><rect x="59.8933%" y="853" width="0.0395%" height="15" fill="rgb(234,191,28)" fg:x="9096" fg:w="6"/><text x="60.1433%" y="863.50"></text></g><g><title>core::mem::replace (7 samples, 0.05%)</title><rect x="60.3411%" y="965" width="0.0461%" height="15" fill="rgb(244,67,43)" fg:x="9164" fg:w="7"/><text x="60.5911%" y="975.50"></text></g><g><title>core::ptr::write (5 samples, 0.03%)</title><rect x="60.3543%" y="949" width="0.0329%" height="15" fill="rgb(236,189,24)" fg:x="9166" fg:w="5"/><text x="60.6043%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.13%)</title><rect x="60.5452%" y="885" width="0.1251%" height="15" fill="rgb(239,214,33)" fg:x="9195" fg:w="19"/><text x="60.7952%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33 samples, 0.22%)</title><rect x="60.4925%" y="901" width="0.2173%" height="15" fill="rgb(226,176,41)" fg:x="9187" fg:w="33"/><text x="60.7425%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.04%)</title><rect x="60.6703%" y="885" width="0.0395%" height="15" fill="rgb(248,47,8)" fg:x="9214" fg:w="6"/><text x="60.9203%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (48 samples, 0.32%)</title><rect x="60.8218%" y="885" width="0.3161%" height="15" fill="rgb(218,81,44)" fg:x="9237" fg:w="48"/><text x="61.0718%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (129 samples, 0.85%)</title><rect x="60.3938%" y="949" width="0.8494%" height="15" fill="rgb(213,98,6)" fg:x="9172" fg:w="129"/><text x="60.6438%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (129 samples, 0.85%)</title><rect x="60.3938%" y="933" width="0.8494%" height="15" fill="rgb(222,85,22)" fg:x="9172" fg:w="129"/><text x="60.6438%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (129 samples, 0.85%)</title><rect x="60.3938%" y="917" width="0.8494%" height="15" fill="rgb(239,46,39)" fg:x="9172" fg:w="129"/><text x="60.6438%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (81 samples, 0.53%)</title><rect x="60.7098%" y="901" width="0.5334%" height="15" fill="rgb(237,12,29)" fg:x="9220" fg:w="81"/><text x="60.9598%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.11%)</title><rect x="61.1378%" y="885" width="0.1054%" height="15" fill="rgb(214,77,8)" fg:x="9285" fg:w="16"/><text x="61.3878%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (28 samples, 0.18%)</title><rect x="61.2432%" y="949" width="0.1844%" height="15" fill="rgb(217,168,37)" fg:x="9301" fg:w="28"/><text x="61.4932%" y="959.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (14 samples, 0.09%)</title><rect x="61.3354%" y="933" width="0.0922%" height="15" fill="rgb(221,217,23)" fg:x="9315" fg:w="14"/><text x="61.5854%" y="943.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12 samples, 0.08%)</title><rect x="61.3485%" y="917" width="0.0790%" height="15" fill="rgb(243,229,36)" fg:x="9317" fg:w="12"/><text x="61.5985%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (12 samples, 0.08%)</title><rect x="61.3485%" y="901" width="0.0790%" height="15" fill="rgb(251,163,40)" fg:x="9317" fg:w="12"/><text x="61.5985%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.04%)</title><rect x="61.9675%" y="853" width="0.0395%" height="15" fill="rgb(237,222,12)" fg:x="9411" fg:w="6"/><text x="62.2175%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.13%)</title><rect x="61.8885%" y="869" width="0.1317%" height="15" fill="rgb(248,132,6)" fg:x="9399" fg:w="20"/><text x="62.1385%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="62.0070%" y="853" width="0.0132%" height="15" fill="rgb(227,167,50)" fg:x="9417" fg:w="2"/><text x="62.2570%" y="863.50"></text></g><g><title>hashbrown::map::make_insert_hash (258 samples, 1.70%)</title><rect x="60.3872%" y="965" width="1.6988%" height="15" fill="rgb(242,84,37)" fg:x="9171" fg:w="258"/><text x="60.6372%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (100 samples, 0.66%)</title><rect x="61.4275%" y="949" width="0.6585%" height="15" fill="rgb(212,4,50)" fg:x="9329" fg:w="100"/><text x="61.6775%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u64 (88 samples, 0.58%)</title><rect x="61.5066%" y="933" width="0.5794%" height="15" fill="rgb(230,228,32)" fg:x="9341" fg:w="88"/><text x="61.7566%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (86 samples, 0.57%)</title><rect x="61.5197%" y="917" width="0.5663%" height="15" fill="rgb(248,217,23)" fg:x="9343" fg:w="86"/><text x="61.7697%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (86 samples, 0.57%)</title><rect x="61.5197%" y="901" width="0.5663%" height="15" fill="rgb(238,197,32)" fg:x="9343" fg:w="86"/><text x="61.7697%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (86 samples, 0.57%)</title><rect x="61.5197%" y="885" width="0.5663%" height="15" fill="rgb(236,106,1)" fg:x="9343" fg:w="86"/><text x="61.7697%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.07%)</title><rect x="62.0201%" y="869" width="0.0658%" height="15" fill="rgb(219,228,13)" fg:x="9419" fg:w="10"/><text x="62.2701%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (20 samples, 0.13%)</title><rect x="62.3165%" y="885" width="0.1317%" height="15" fill="rgb(238,30,35)" fg:x="9464" fg:w="20"/><text x="62.5665%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.21%)</title><rect x="62.3165%" y="901" width="0.2107%" height="15" fill="rgb(236,70,23)" fg:x="9464" fg:w="32"/><text x="62.5665%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (12 samples, 0.08%)</title><rect x="62.4481%" y="885" width="0.0790%" height="15" fill="rgb(249,104,48)" fg:x="9484" fg:w="12"/><text x="62.6981%" y="895.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (5 samples, 0.03%)</title><rect x="62.5272%" y="901" width="0.0329%" height="15" fill="rgb(254,117,50)" fg:x="9496" fg:w="5"/><text x="62.7772%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (2 samples, 0.01%)</title><rect x="62.5601%" y="901" width="0.0132%" height="15" fill="rgb(223,152,4)" fg:x="9501" fg:w="2"/><text x="62.8101%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.33%)</title><rect x="62.2638%" y="917" width="0.3292%" height="15" fill="rgb(245,6,2)" fg:x="9456" fg:w="50"/><text x="62.5138%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (3 samples, 0.02%)</title><rect x="62.5733%" y="901" width="0.0198%" height="15" fill="rgb(249,150,24)" fg:x="9503" fg:w="3"/><text x="62.8233%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.02%)</title><rect x="62.5733%" y="885" width="0.0198%" height="15" fill="rgb(228,185,42)" fg:x="9503" fg:w="3"/><text x="62.8233%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.02%)</title><rect x="62.5733%" y="869" width="0.0198%" height="15" fill="rgb(226,39,33)" fg:x="9503" fg:w="3"/><text x="62.8233%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.34%)</title><rect x="62.2638%" y="933" width="0.3358%" height="15" fill="rgb(221,166,19)" fg:x="9456" fg:w="51"/><text x="62.5138%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (9 samples, 0.06%)</title><rect x="62.6062%" y="885" width="0.0593%" height="15" fill="rgb(209,109,2)" fg:x="9508" fg:w="9"/><text x="62.8562%" y="895.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.02%)</title><rect x="62.6654%" y="885" width="0.0198%" height="15" fill="rgb(252,216,26)" fg:x="9517" fg:w="3"/><text x="62.9154%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.03%)</title><rect x="62.6852%" y="885" width="0.0329%" height="15" fill="rgb(227,173,36)" fg:x="9520" fg:w="5"/><text x="62.9352%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.03%)</title><rect x="62.6852%" y="869" width="0.0329%" height="15" fill="rgb(209,90,7)" fg:x="9520" fg:w="5"/><text x="62.9352%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.03%)</title><rect x="62.6852%" y="853" width="0.0329%" height="15" fill="rgb(250,194,11)" fg:x="9520" fg:w="5"/><text x="62.9352%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (123 samples, 0.81%)</title><rect x="62.0860%" y="965" width="0.8099%" height="15" fill="rgb(220,72,50)" fg:x="9429" fg:w="123"/><text x="62.3360%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (123 samples, 0.81%)</title><rect x="62.0860%" y="949" width="0.8099%" height="15" fill="rgb(222,106,48)" fg:x="9429" fg:w="123"/><text x="62.3360%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (44 samples, 0.29%)</title><rect x="62.6062%" y="933" width="0.2897%" height="15" fill="rgb(216,220,45)" fg:x="9508" fg:w="44"/><text x="62.8562%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (44 samples, 0.29%)</title><rect x="62.6062%" y="917" width="0.2897%" height="15" fill="rgb(234,112,18)" fg:x="9508" fg:w="44"/><text x="62.8562%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (44 samples, 0.29%)</title><rect x="62.6062%" y="901" width="0.2897%" height="15" fill="rgb(206,179,9)" fg:x="9508" fg:w="44"/><text x="62.8562%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (27 samples, 0.18%)</title><rect x="62.7181%" y="885" width="0.1778%" height="15" fill="rgb(215,115,40)" fg:x="9525" fg:w="27"/><text x="62.9681%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (27 samples, 0.18%)</title><rect x="62.7181%" y="869" width="0.1778%" height="15" fill="rgb(222,69,34)" fg:x="9525" fg:w="27"/><text x="62.9681%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (27 samples, 0.18%)</title><rect x="62.7181%" y="853" width="0.1778%" height="15" fill="rgb(209,161,10)" fg:x="9525" fg:w="27"/><text x="62.9681%" y="863.50"></text></g><g><title>core::core_arch::simd::i8x16::new (27 samples, 0.18%)</title><rect x="62.7181%" y="837" width="0.1778%" height="15" fill="rgb(217,6,38)" fg:x="9525" fg:w="27"/><text x="62.9681%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.02%)</title><rect x="63.0210%" y="949" width="0.0198%" height="15" fill="rgb(229,229,48)" fg:x="9571" fg:w="3"/><text x="63.2710%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.02%)</title><rect x="63.0210%" y="933" width="0.0198%" height="15" fill="rgb(225,21,28)" fg:x="9571" fg:w="3"/><text x="63.2710%" y="943.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="63.0210%" y="917" width="0.0198%" height="15" fill="rgb(206,33,13)" fg:x="9571" fg:w="3"/><text x="63.2710%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.03%)</title><rect x="63.0408%" y="949" width="0.0329%" height="15" fill="rgb(242,178,17)" fg:x="9574" fg:w="5"/><text x="63.2908%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.03%)</title><rect x="63.0408%" y="933" width="0.0329%" height="15" fill="rgb(220,162,5)" fg:x="9574" fg:w="5"/><text x="63.2908%" y="943.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.03%)</title><rect x="63.0408%" y="917" width="0.0329%" height="15" fill="rgb(210,33,43)" fg:x="9574" fg:w="5"/><text x="63.2908%" y="927.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="63.0737%" y="933" width="0.0132%" height="15" fill="rgb(216,116,54)" fg:x="9579" fg:w="2"/><text x="63.3237%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2 samples, 0.01%)</title><rect x="63.1329%" y="869" width="0.0132%" height="15" fill="rgb(249,92,24)" fg:x="9588" fg:w="2"/><text x="63.3829%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="63.1329%" y="853" width="0.0132%" height="15" fill="rgb(231,189,14)" fg:x="9588" fg:w="2"/><text x="63.3829%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.03%)</title><rect x="63.1461%" y="869" width="0.0263%" height="15" fill="rgb(230,8,41)" fg:x="9590" fg:w="4"/><text x="63.3961%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.07%)</title><rect x="63.1329%" y="901" width="0.0724%" height="15" fill="rgb(249,7,27)" fg:x="9588" fg:w="11"/><text x="63.3829%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.07%)</title><rect x="63.1329%" y="885" width="0.0724%" height="15" fill="rgb(232,86,5)" fg:x="9588" fg:w="11"/><text x="63.3829%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (5 samples, 0.03%)</title><rect x="63.1725%" y="869" width="0.0329%" height="15" fill="rgb(224,175,18)" fg:x="9594" fg:w="5"/><text x="63.4225%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.05%)</title><rect x="63.3371%" y="805" width="0.0527%" height="15" fill="rgb(220,129,12)" fg:x="9619" fg:w="8"/><text x="63.5871%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.10%)</title><rect x="63.3305%" y="821" width="0.0988%" height="15" fill="rgb(210,19,36)" fg:x="9618" fg:w="15"/><text x="63.5805%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.04%)</title><rect x="63.3897%" y="805" width="0.0395%" height="15" fill="rgb(219,96,14)" fg:x="9627" fg:w="6"/><text x="63.6397%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.12%)</title><rect x="63.5214%" y="805" width="0.1185%" height="15" fill="rgb(249,106,1)" fg:x="9647" fg:w="18"/><text x="63.7714%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (83 samples, 0.55%)</title><rect x="63.2449%" y="869" width="0.5465%" height="15" fill="rgb(249,155,20)" fg:x="9605" fg:w="83"/><text x="63.4949%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (83 samples, 0.55%)</title><rect x="63.2449%" y="853" width="0.5465%" height="15" fill="rgb(244,168,9)" fg:x="9605" fg:w="83"/><text x="63.4949%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (83 samples, 0.55%)</title><rect x="63.2449%" y="837" width="0.5465%" height="15" fill="rgb(216,23,50)" fg:x="9605" fg:w="83"/><text x="63.4949%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (55 samples, 0.36%)</title><rect x="63.4292%" y="821" width="0.3622%" height="15" fill="rgb(224,219,20)" fg:x="9633" fg:w="55"/><text x="63.6792%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (23 samples, 0.15%)</title><rect x="63.6400%" y="805" width="0.1514%" height="15" fill="rgb(222,156,15)" fg:x="9665" fg:w="23"/><text x="63.8900%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.10%)</title><rect x="63.7914%" y="869" width="0.0988%" height="15" fill="rgb(231,97,17)" fg:x="9688" fg:w="15"/><text x="64.0414%" y="879.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.07%)</title><rect x="63.8177%" y="853" width="0.0724%" height="15" fill="rgb(218,70,48)" fg:x="9692" fg:w="11"/><text x="64.0677%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.05%)</title><rect x="63.8375%" y="837" width="0.0527%" height="15" fill="rgb(212,196,52)" fg:x="9695" fg:w="8"/><text x="64.0875%" y="847.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.05%)</title><rect x="63.8375%" y="821" width="0.0527%" height="15" fill="rgb(243,203,18)" fg:x="9695" fg:w="8"/><text x="64.0875%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="64.2128%" y="773" width="0.0198%" height="15" fill="rgb(252,125,41)" fg:x="9752" fg:w="3"/><text x="64.4628%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.10%)</title><rect x="64.1601%" y="789" width="0.0988%" height="15" fill="rgb(223,180,33)" fg:x="9744" fg:w="15"/><text x="64.4101%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.03%)</title><rect x="64.2326%" y="773" width="0.0263%" height="15" fill="rgb(254,159,46)" fg:x="9755" fg:w="4"/><text x="64.4826%" y="783.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (171 samples, 1.13%)</title><rect x="63.2054%" y="901" width="1.1260%" height="15" fill="rgb(254,38,10)" fg:x="9599" fg:w="171"/><text x="63.4554%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (171 samples, 1.13%)</title><rect x="63.2054%" y="885" width="1.1260%" height="15" fill="rgb(208,217,32)" fg:x="9599" fg:w="171"/><text x="63.4554%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (67 samples, 0.44%)</title><rect x="63.8902%" y="869" width="0.4412%" height="15" fill="rgb(221,120,13)" fg:x="9703" fg:w="67"/><text x="64.1402%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u64 (61 samples, 0.40%)</title><rect x="63.9297%" y="853" width="0.4017%" height="15" fill="rgb(246,54,52)" fg:x="9709" fg:w="61"/><text x="64.1797%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (61 samples, 0.40%)</title><rect x="63.9297%" y="837" width="0.4017%" height="15" fill="rgb(242,34,25)" fg:x="9709" fg:w="61"/><text x="64.1797%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (61 samples, 0.40%)</title><rect x="63.9297%" y="821" width="0.4017%" height="15" fill="rgb(247,209,9)" fg:x="9709" fg:w="61"/><text x="64.1797%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (61 samples, 0.40%)</title><rect x="63.9297%" y="805" width="0.4017%" height="15" fill="rgb(228,71,26)" fg:x="9709" fg:w="61"/><text x="64.1797%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.07%)</title><rect x="64.2589%" y="789" width="0.0724%" height="15" fill="rgb(222,145,49)" fg:x="9759" fg:w="11"/><text x="64.5089%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (7 samples, 0.05%)</title><rect x="64.3313%" y="901" width="0.0461%" height="15" fill="rgb(218,121,17)" fg:x="9770" fg:w="7"/><text x="64.5813%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (7 samples, 0.05%)</title><rect x="64.3313%" y="885" width="0.0461%" height="15" fill="rgb(244,50,7)" fg:x="9770" fg:w="7"/><text x="64.5813%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.05%)</title><rect x="64.3313%" y="869" width="0.0461%" height="15" fill="rgb(246,229,37)" fg:x="9770" fg:w="7"/><text x="64.5813%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (15 samples, 0.10%)</title><rect x="64.4433%" y="869" width="0.0988%" height="15" fill="rgb(225,18,5)" fg:x="9787" fg:w="15"/><text x="64.6933%" y="879.50"></text></g><g><title>hashbrown::raw::is_full (21 samples, 0.14%)</title><rect x="64.5420%" y="869" width="0.1383%" height="15" fill="rgb(213,204,8)" fg:x="9802" fg:w="21"/><text x="64.7920%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="64.6803%" y="869" width="0.0198%" height="15" fill="rgb(238,103,6)" fg:x="9823" fg:w="3"/><text x="64.9303%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="64.6803%" y="853" width="0.0198%" height="15" fill="rgb(222,25,35)" fg:x="9823" fg:w="3"/><text x="64.9303%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="64.6803%" y="837" width="0.0198%" height="15" fill="rgb(213,203,35)" fg:x="9823" fg:w="3"/><text x="64.9303%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (51 samples, 0.34%)</title><rect x="64.3906%" y="885" width="0.3358%" height="15" fill="rgb(221,79,53)" fg:x="9779" fg:w="51"/><text x="64.6406%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.03%)</title><rect x="64.7001%" y="869" width="0.0263%" height="15" fill="rgb(243,200,35)" fg:x="9826" fg:w="4"/><text x="64.9501%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.03%)</title><rect x="64.7001%" y="853" width="0.0263%" height="15" fill="rgb(248,60,25)" fg:x="9826" fg:w="4"/><text x="64.9501%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (10 samples, 0.07%)</title><rect x="64.7264%" y="869" width="0.0658%" height="15" fill="rgb(227,53,46)" fg:x="9830" fg:w="10"/><text x="64.9764%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (63 samples, 0.41%)</title><rect x="64.3906%" y="901" width="0.4148%" height="15" fill="rgb(216,120,32)" fg:x="9779" fg:w="63"/><text x="64.6406%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (12 samples, 0.08%)</title><rect x="64.7264%" y="885" width="0.0790%" height="15" fill="rgb(220,134,1)" fg:x="9830" fg:w="12"/><text x="64.9764%" y="895.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.01%)</title><rect x="64.7923%" y="869" width="0.0132%" height="15" fill="rgb(237,168,5)" fg:x="9840" fg:w="2"/><text x="65.0423%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (14 samples, 0.09%)</title><rect x="64.8120%" y="869" width="0.0922%" height="15" fill="rgb(231,100,33)" fg:x="9843" fg:w="14"/><text x="65.0620%" y="879.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14 samples, 0.09%)</title><rect x="64.8120%" y="853" width="0.0922%" height="15" fill="rgb(236,177,47)" fg:x="9843" fg:w="14"/><text x="65.0620%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.09%)</title><rect x="64.8120%" y="837" width="0.0922%" height="15" fill="rgb(235,7,49)" fg:x="9843" fg:w="14"/><text x="65.0620%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.09%)</title><rect x="64.8120%" y="821" width="0.0922%" height="15" fill="rgb(232,119,22)" fg:x="9843" fg:w="14"/><text x="65.0620%" y="831.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.09%)</title><rect x="64.8120%" y="805" width="0.0922%" height="15" fill="rgb(254,73,53)" fg:x="9843" fg:w="14"/><text x="65.0620%" y="815.50"></text></g><g><title>__libc_malloc (13 samples, 0.09%)</title><rect x="64.8186%" y="789" width="0.0856%" height="15" fill="rgb(251,35,20)" fg:x="9844" fg:w="13"/><text x="65.0686%" y="799.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.09%)</title><rect x="64.8186%" y="773" width="0.0856%" height="15" fill="rgb(241,119,20)" fg:x="9844" fg:w="13"/><text x="65.0686%" y="783.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="64.8844%" y="757" width="0.0198%" height="15" fill="rgb(207,102,14)" fg:x="9854" fg:w="3"/><text x="65.1344%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (280 samples, 1.84%)</title><rect x="63.0737%" y="949" width="1.8437%" height="15" fill="rgb(248,201,50)" fg:x="9579" fg:w="280"/><text x="63.3237%" y="959.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (278 samples, 1.83%)</title><rect x="63.0869%" y="933" width="1.8305%" height="15" fill="rgb(222,185,44)" fg:x="9581" fg:w="278"/><text x="63.3369%" y="943.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (277 samples, 1.82%)</title><rect x="63.0934%" y="917" width="1.8239%" height="15" fill="rgb(218,107,18)" fg:x="9582" fg:w="277"/><text x="63.3434%" y="927.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (17 samples, 0.11%)</title><rect x="64.8054%" y="901" width="0.1119%" height="15" fill="rgb(237,177,39)" fg:x="9842" fg:w="17"/><text x="65.0554%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (17 samples, 0.11%)</title><rect x="64.8054%" y="885" width="0.1119%" height="15" fill="rgb(246,69,6)" fg:x="9842" fg:w="17"/><text x="65.0554%" y="895.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (2 samples, 0.01%)</title><rect x="64.9042%" y="869" width="0.0132%" height="15" fill="rgb(234,208,37)" fg:x="9857" fg:w="2"/><text x="65.1542%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (8 samples, 0.05%)</title><rect x="64.9898%" y="933" width="0.0527%" height="15" fill="rgb(225,4,6)" fg:x="9870" fg:w="8"/><text x="65.2398%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (14 samples, 0.09%)</title><rect x="65.0425%" y="933" width="0.0922%" height="15" fill="rgb(233,45,0)" fg:x="9878" fg:w="14"/><text x="65.2925%" y="943.50"></text></g><g><title>hashbrown::raw::is_full (15 samples, 0.10%)</title><rect x="65.1347%" y="933" width="0.0988%" height="15" fill="rgb(226,136,5)" fg:x="9892" fg:w="15"/><text x="65.3847%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (50 samples, 0.33%)</title><rect x="64.9174%" y="949" width="0.3292%" height="15" fill="rgb(211,91,47)" fg:x="9859" fg:w="50"/><text x="65.1674%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.01%)</title><rect x="65.2334%" y="933" width="0.0132%" height="15" fill="rgb(242,88,51)" fg:x="9907" fg:w="2"/><text x="65.4834%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="65.2334%" y="917" width="0.0132%" height="15" fill="rgb(230,91,28)" fg:x="9907" fg:w="2"/><text x="65.4834%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (2 samples, 0.01%)</title><rect x="65.2861%" y="917" width="0.0132%" height="15" fill="rgb(254,186,29)" fg:x="9915" fg:w="2"/><text x="65.5361%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (819 samples, 5.39%)</title><rect x="59.9328%" y="997" width="5.3928%" height="15" fill="rgb(238,6,4)" fg:x="9102" fg:w="819"/><text x="60.1828%" y="1007.50">std::co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (802 samples, 5.28%)</title><rect x="60.0448%" y="981" width="5.2808%" height="15" fill="rgb(221,151,16)" fg:x="9119" fg:w="802"/><text x="60.2948%" y="991.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (369 samples, 2.43%)</title><rect x="62.8959%" y="965" width="2.4297%" height="15" fill="rgb(251,143,52)" fg:x="9552" fg:w="369"/><text x="63.1459%" y="975.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (12 samples, 0.08%)</title><rect x="65.2466%" y="949" width="0.0790%" height="15" fill="rgb(206,90,15)" fg:x="9909" fg:w="12"/><text x="65.4966%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (6 samples, 0.04%)</title><rect x="65.2861%" y="933" width="0.0395%" height="15" fill="rgb(218,35,8)" fg:x="9915" fg:w="6"/><text x="65.5361%" y="943.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.03%)</title><rect x="65.2993%" y="917" width="0.0263%" height="15" fill="rgb(239,215,6)" fg:x="9917" fg:w="4"/><text x="65.5493%" y="927.50"></text></g><g><title>_start (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1397" width="60.7625%" height="15" fill="rgb(245,116,39)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1407.50">_start</text></g><g><title>__libc_start_main (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1381" width="60.7625%" height="15" fill="rgb(242,65,28)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1391.50">__libc_start_main</text></g><g><title>main (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1365" width="60.7625%" height="15" fill="rgb(252,132,53)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1375.50">main</text></g><g><title>std::rt::lang_start_internal (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1349" width="60.7625%" height="15" fill="rgb(224,159,50)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1359.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1333" width="60.7625%" height="15" fill="rgb(224,93,4)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1343.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1317" width="60.7625%" height="15" fill="rgb(208,81,34)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1327.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1301" width="60.7625%" height="15" fill="rgb(233,92,54)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1311.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1285" width="60.7625%" height="15" fill="rgb(237,21,14)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1295.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1269" width="60.7625%" height="15" fill="rgb(249,128,51)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1279.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1253" width="60.7625%" height="15" fill="rgb(223,129,24)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1263.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1237" width="60.7625%" height="15" fill="rgb(231,168,25)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1247.50">core::ops::function::FnOnce::call_once</text></g><g><title>bench_ex14::main (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1221" width="60.7625%" height="15" fill="rgb(224,39,20)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1231.50">bench_ex14::main</text></g><g><title>bench_ex14::benches (9,228 samples, 60.76%)</title><rect x="4.5697%" y="1205" width="60.7625%" height="15" fill="rgb(225,152,53)" fg:x="694" fg:w="9228"/><text x="4.8197%" y="1215.50">bench_ex14::benches</text></g><g><title>bench_ex14::criterion_benchmark (9,227 samples, 60.76%)</title><rect x="4.5763%" y="1189" width="60.7559%" height="15" fill="rgb(252,17,24)" fg:x="695" fg:w="9227"/><text x="4.8263%" y="1199.50">bench_ex14::criterion_benchmark</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (9,227 samples, 60.76%)</title><rect x="4.5763%" y="1173" width="60.7559%" height="15" fill="rgb(250,114,30)" fg:x="695" fg:w="9227"/><text x="4.8263%" y="1183.50">criterion::Criterion&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (9,227 samples, 60.76%)</title><rect x="4.5763%" y="1157" width="60.7559%" height="15" fill="rgb(229,5,4)" fg:x="695" fg:w="9227"/><text x="4.8263%" y="1167.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (9,227 samples, 60.76%)</title><rect x="4.5763%" y="1141" width="60.7559%" height="15" fill="rgb(225,176,49)" fg:x="695" fg:w="9227"/><text x="4.8263%" y="1151.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench</text></g><g><title>criterion::analysis::common (9,227 samples, 60.76%)</title><rect x="4.5763%" y="1125" width="60.7559%" height="15" fill="rgb(224,221,49)" fg:x="695" fg:w="9227"/><text x="4.8263%" y="1135.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (9,225 samples, 60.74%)</title><rect x="4.5895%" y="1109" width="60.7427%" height="15" fill="rgb(253,169,27)" fg:x="697" fg:w="9225"/><text x="4.8395%" y="1119.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (3,518 samples, 23.16%)</title><rect x="42.1676%" y="1093" width="23.1645%" height="15" fill="rgb(211,206,16)" fg:x="6404" fg:w="3518"/><text x="42.4176%" y="1103.50">&lt;criterion::routine::Function&lt;M,F,T&gt; ..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (3,518 samples, 23.16%)</title><rect x="42.1676%" y="1077" width="23.1645%" height="15" fill="rgb(244,87,35)" fg:x="6404" fg:w="3518"/><text x="42.4176%" y="1087.50">criterion::benchmark_group::Benchmark..</text></g><g><title>bench_ex14::criterion_benchmark::{{closure}} (3,518 samples, 23.16%)</title><rect x="42.1676%" y="1061" width="23.1645%" height="15" fill="rgb(246,28,10)" fg:x="6404" fg:w="3518"/><text x="42.4176%" y="1071.50">bench_ex14::criterion_benchmark::{{cl..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (3,518 samples, 23.16%)</title><rect x="42.1676%" y="1045" width="23.1645%" height="15" fill="rgb(229,12,44)" fg:x="6404" fg:w="3518"/><text x="42.4176%" y="1055.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>bench_ex14::criterion_benchmark::{{closure}}::{{closure}} (3,518 samples, 23.16%)</title><rect x="42.1676%" y="1029" width="23.1645%" height="15" fill="rgb(210,145,37)" fg:x="6404" fg:w="3518"/><text x="42.4176%" y="1039.50">bench_ex14::criterion_benchmark::{{cl..</text></g><g><title>ex14::part1 (3,518 samples, 23.16%)</title><rect x="42.1676%" y="1013" width="23.1645%" height="15" fill="rgb(227,112,52)" fg:x="6404" fg:w="3518"/><text x="42.4176%" y="1023.50">ex14::part1</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.13%)</title><rect x="65.3980%" y="421" width="0.1251%" height="15" fill="rgb(238,155,34)" fg:x="9932" fg:w="19"/><text x="65.6480%" y="431.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (9 samples, 0.06%)</title><rect x="65.5231%" y="389" width="0.0593%" height="15" fill="rgb(239,226,36)" fg:x="9951" fg:w="9"/><text x="65.7731%" y="399.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (235 samples, 1.55%)</title><rect x="65.5824%" y="389" width="1.5474%" height="15" fill="rgb(230,16,23)" fg:x="9960" fg:w="235"/><text x="65.8324%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (235 samples, 1.55%)</title><rect x="65.5824%" y="373" width="1.5474%" height="15" fill="rgb(236,171,36)" fg:x="9960" fg:w="235"/><text x="65.8324%" y="383.50"></text></g><g><title>exp (218 samples, 1.44%)</title><rect x="65.6943%" y="357" width="1.4354%" height="15" fill="rgb(221,22,14)" fg:x="9977" fg:w="218"/><text x="65.9443%" y="367.50"></text></g><g><title>[libm-2.31.so] (182 samples, 1.20%)</title><rect x="65.9314%" y="341" width="1.1984%" height="15" fill="rgb(242,43,11)" fg:x="10013" fg:w="182"/><text x="66.1814%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (66 samples, 0.43%)</title><rect x="67.1298%" y="389" width="0.4346%" height="15" fill="rgb(232,69,23)" fg:x="10195" fg:w="66"/><text x="67.3798%" y="399.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (66 samples, 0.43%)</title><rect x="67.1298%" y="373" width="0.4346%" height="15" fill="rgb(216,180,54)" fg:x="10195" fg:w="66"/><text x="67.3798%" y="383.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (313 samples, 2.06%)</title><rect x="65.5231%" y="405" width="2.0610%" height="15" fill="rgb(216,5,24)" fg:x="9951" fg:w="313"/><text x="65.7731%" y="415.50">&lt;..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (3 samples, 0.02%)</title><rect x="67.5644%" y="389" width="0.0198%" height="15" fill="rgb(225,89,9)" fg:x="10261" fg:w="3"/><text x="67.8144%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (3 samples, 0.02%)</title><rect x="67.5644%" y="373" width="0.0198%" height="15" fill="rgb(243,75,33)" fg:x="10261" fg:w="3"/><text x="67.8144%" y="383.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (431 samples, 2.84%)</title><rect x="65.3388%" y="565" width="2.8380%" height="15" fill="rgb(247,141,45)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="575.50">&lt;r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (431 samples, 2.84%)</title><rect x="65.3388%" y="549" width="2.8380%" height="15" fill="rgb(232,177,36)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="559.50">ra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (431 samples, 2.84%)</title><rect x="65.3388%" y="533" width="2.8380%" height="15" fill="rgb(219,125,36)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="543.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (431 samples, 2.84%)</title><rect x="65.3388%" y="517" width="2.8380%" height="15" fill="rgb(227,94,9)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="527.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (431 samples, 2.84%)</title><rect x="65.3388%" y="501" width="2.8380%" height="15" fill="rgb(240,34,52)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="511.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (431 samples, 2.84%)</title><rect x="65.3388%" y="485" width="2.8380%" height="15" fill="rgb(216,45,12)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="495.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (431 samples, 2.84%)</title><rect x="65.3388%" y="469" width="2.8380%" height="15" fill="rgb(246,21,19)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="479.50">cr..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (431 samples, 2.84%)</title><rect x="65.3388%" y="453" width="2.8380%" height="15" fill="rgb(213,98,42)" fg:x="9923" fg:w="431"/><text x="65.5888%" y="463.50">cr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (422 samples, 2.78%)</title><rect x="65.3980%" y="437" width="2.7787%" height="15" fill="rgb(250,136,47)" fg:x="9932" fg:w="422"/><text x="65.6480%" y="447.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (403 samples, 2.65%)</title><rect x="65.5231%" y="421" width="2.6536%" height="15" fill="rgb(251,124,27)" fg:x="9951" fg:w="403"/><text x="65.7731%" y="431.50">cr..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (90 samples, 0.59%)</title><rect x="67.5841%" y="405" width="0.5926%" height="15" fill="rgb(229,180,14)" fg:x="10264" fg:w="90"/><text x="67.8341%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="68.1833%" y="389" width="0.0132%" height="15" fill="rgb(245,216,25)" fg:x="10355" fg:w="2"/><text x="68.4333%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="68.1833%" y="373" width="0.0132%" height="15" fill="rgb(251,43,5)" fg:x="10355" fg:w="2"/><text x="68.4333%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="68.1833%" y="357" width="0.0132%" height="15" fill="rgb(250,128,24)" fg:x="10355" fg:w="2"/><text x="68.4333%" y="367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (437 samples, 2.88%)</title><rect x="65.3388%" y="645" width="2.8775%" height="15" fill="rgb(217,117,27)" fg:x="9923" fg:w="437"/><text x="65.5888%" y="655.50">ra..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (437 samples, 2.88%)</title><rect x="65.3388%" y="629" width="2.8775%" height="15" fill="rgb(245,147,4)" fg:x="9923" fg:w="437"/><text x="65.5888%" y="639.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (437 samples, 2.88%)</title><rect x="65.3388%" y="613" width="2.8775%" height="15" fill="rgb(242,201,35)" fg:x="9923" fg:w="437"/><text x="65.5888%" y="623.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (437 samples, 2.88%)</title><rect x="65.3388%" y="597" width="2.8775%" height="15" fill="rgb(218,181,1)" fg:x="9923" fg:w="437"/><text x="65.5888%" y="607.50">ra..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (437 samples, 2.88%)</title><rect x="65.3388%" y="581" width="2.8775%" height="15" fill="rgb(222,6,29)" fg:x="9923" fg:w="437"/><text x="65.5888%" y="591.50">ra..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.04%)</title><rect x="68.1767%" y="565" width="0.0395%" height="15" fill="rgb(208,186,3)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="575.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.04%)</title><rect x="68.1767%" y="549" width="0.0395%" height="15" fill="rgb(216,36,26)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="68.1767%" y="533" width="0.0395%" height="15" fill="rgb(248,201,23)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.04%)</title><rect x="68.1767%" y="517" width="0.0395%" height="15" fill="rgb(251,170,31)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.04%)</title><rect x="68.1767%" y="501" width="0.0395%" height="15" fill="rgb(207,110,25)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.04%)</title><rect x="68.1767%" y="485" width="0.0395%" height="15" fill="rgb(250,54,15)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.04%)</title><rect x="68.1767%" y="469" width="0.0395%" height="15" fill="rgb(227,68,33)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="479.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (6 samples, 0.04%)</title><rect x="68.1767%" y="453" width="0.0395%" height="15" fill="rgb(238,34,41)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (6 samples, 0.04%)</title><rect x="68.1767%" y="437" width="0.0395%" height="15" fill="rgb(220,11,15)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="447.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (6 samples, 0.04%)</title><rect x="68.1767%" y="421" width="0.0395%" height="15" fill="rgb(246,111,35)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="431.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.04%)</title><rect x="68.1767%" y="405" width="0.0395%" height="15" fill="rgb(209,88,53)" fg:x="10354" fg:w="6"/><text x="68.4267%" y="415.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="68.1965%" y="389" width="0.0198%" height="15" fill="rgb(231,185,47)" fg:x="10357" fg:w="3"/><text x="68.4465%" y="399.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="68.1965%" y="373" width="0.0198%" height="15" fill="rgb(233,154,1)" fg:x="10357" fg:w="3"/><text x="68.4465%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.16%)</title><rect x="68.2689%" y="357" width="0.1580%" height="15" fill="rgb(225,15,46)" fg:x="10368" fg:w="24"/><text x="68.5189%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (6 samples, 0.04%)</title><rect x="68.4269%" y="325" width="0.0395%" height="15" fill="rgb(211,135,41)" fg:x="10392" fg:w="6"/><text x="68.6769%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (202 samples, 1.33%)</title><rect x="68.4665%" y="325" width="1.3301%" height="15" fill="rgb(208,54,0)" fg:x="10398" fg:w="202"/><text x="68.7165%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (202 samples, 1.33%)</title><rect x="68.4665%" y="309" width="1.3301%" height="15" fill="rgb(244,136,14)" fg:x="10398" fg:w="202"/><text x="68.7165%" y="319.50"></text></g><g><title>exp (189 samples, 1.24%)</title><rect x="68.5521%" y="293" width="1.2445%" height="15" fill="rgb(241,56,14)" fg:x="10411" fg:w="189"/><text x="68.8021%" y="303.50"></text></g><g><title>[libm-2.31.so] (143 samples, 0.94%)</title><rect x="68.8549%" y="277" width="0.9416%" height="15" fill="rgb(205,80,24)" fg:x="10457" fg:w="143"/><text x="69.1049%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (42 samples, 0.28%)</title><rect x="69.7965%" y="325" width="0.2766%" height="15" fill="rgb(220,57,4)" fg:x="10600" fg:w="42"/><text x="70.0465%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (42 samples, 0.28%)</title><rect x="69.7965%" y="309" width="0.2766%" height="15" fill="rgb(226,193,50)" fg:x="10600" fg:w="42"/><text x="70.0465%" y="319.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (251 samples, 1.65%)</title><rect x="68.4269%" y="341" width="1.6527%" height="15" fill="rgb(231,168,22)" fg:x="10392" fg:w="251"/><text x="68.6769%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (367 samples, 2.42%)</title><rect x="68.2162%" y="501" width="2.4165%" height="15" fill="rgb(254,215,14)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="511.50">&lt;r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (367 samples, 2.42%)</title><rect x="68.2162%" y="485" width="2.4165%" height="15" fill="rgb(211,115,16)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="495.50">ra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (367 samples, 2.42%)</title><rect x="68.2162%" y="469" width="2.4165%" height="15" fill="rgb(236,210,16)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="479.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (367 samples, 2.42%)</title><rect x="68.2162%" y="453" width="2.4165%" height="15" fill="rgb(221,94,12)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="463.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (367 samples, 2.42%)</title><rect x="68.2162%" y="437" width="2.4165%" height="15" fill="rgb(235,218,49)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="447.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (367 samples, 2.42%)</title><rect x="68.2162%" y="421" width="2.4165%" height="15" fill="rgb(217,114,14)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="431.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (367 samples, 2.42%)</title><rect x="68.2162%" y="405" width="2.4165%" height="15" fill="rgb(216,145,22)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="415.50">cr..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (367 samples, 2.42%)</title><rect x="68.2162%" y="389" width="2.4165%" height="15" fill="rgb(217,112,39)" fg:x="10360" fg:w="367"/><text x="68.4662%" y="399.50">cr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (359 samples, 2.36%)</title><rect x="68.2689%" y="373" width="2.3639%" height="15" fill="rgb(225,85,32)" fg:x="10368" fg:w="359"/><text x="68.5189%" y="383.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (335 samples, 2.21%)</title><rect x="68.4269%" y="357" width="2.2058%" height="15" fill="rgb(245,209,47)" fg:x="10392" fg:w="335"/><text x="68.6769%" y="367.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (84 samples, 0.55%)</title><rect x="70.0797%" y="341" width="0.5531%" height="15" fill="rgb(218,220,15)" fg:x="10643" fg:w="84"/><text x="70.3297%" y="351.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (2 samples, 0.01%)</title><rect x="70.6328%" y="341" width="0.0132%" height="15" fill="rgb(222,202,31)" fg:x="10727" fg:w="2"/><text x="70.8828%" y="351.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (2 samples, 0.01%)</title><rect x="70.6328%" y="325" width="0.0132%" height="15" fill="rgb(243,203,4)" fg:x="10727" fg:w="2"/><text x="70.8828%" y="335.50"></text></g><g><title>criterion::stats::dot (2 samples, 0.01%)</title><rect x="70.6328%" y="309" width="0.0132%" height="15" fill="rgb(237,92,17)" fg:x="10727" fg:w="2"/><text x="70.8828%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="70.6328%" y="293" width="0.0132%" height="15" fill="rgb(231,119,7)" fg:x="10727" fg:w="2"/><text x="70.8828%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (809 samples, 5.33%)</title><rect x="65.3388%" y="757" width="5.3269%" height="15" fill="rgb(237,82,41)" fg:x="9923" fg:w="809"/><text x="65.5888%" y="767.50">rayon_c..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (809 samples, 5.33%)</title><rect x="65.3388%" y="741" width="5.3269%" height="15" fill="rgb(226,81,48)" fg:x="9923" fg:w="809"/><text x="65.5888%" y="751.50">rayon_c..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (809 samples, 5.33%)</title><rect x="65.3388%" y="725" width="5.3269%" height="15" fill="rgb(234,70,51)" fg:x="9923" fg:w="809"/><text x="65.5888%" y="735.50">rayon::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (809 samples, 5.33%)</title><rect x="65.3388%" y="709" width="5.3269%" height="15" fill="rgb(251,86,4)" fg:x="9923" fg:w="809"/><text x="65.5888%" y="719.50">rayon::..</text></g><g><title>rayon_core::join::join_context (809 samples, 5.33%)</title><rect x="65.3388%" y="693" width="5.3269%" height="15" fill="rgb(244,144,28)" fg:x="9923" fg:w="809"/><text x="65.5888%" y="703.50">rayon_c..</text></g><g><title>rayon_core::registry::in_worker (809 samples, 5.33%)</title><rect x="65.3388%" y="677" width="5.3269%" height="15" fill="rgb(232,161,39)" fg:x="9923" fg:w="809"/><text x="65.5888%" y="687.50">rayon_c..</text></g><g><title>rayon_core::join::join_context::{{closure}} (809 samples, 5.33%)</title><rect x="65.3388%" y="661" width="5.3269%" height="15" fill="rgb(247,34,51)" fg:x="9923" fg:w="809"/><text x="65.5888%" y="671.50">rayon_c..</text></g><g><title>rayon_core::unwind::halt_unwinding (372 samples, 2.45%)</title><rect x="68.2162%" y="645" width="2.4495%" height="15" fill="rgb(225,132,2)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="655.50">ra..</text></g><g><title>std::panic::catch_unwind (372 samples, 2.45%)</title><rect x="68.2162%" y="629" width="2.4495%" height="15" fill="rgb(209,159,44)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="639.50">st..</text></g><g><title>std::panicking::try (372 samples, 2.45%)</title><rect x="68.2162%" y="613" width="2.4495%" height="15" fill="rgb(251,214,1)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="623.50">st..</text></g><g><title>std::panicking::try::do_call (372 samples, 2.45%)</title><rect x="68.2162%" y="597" width="2.4495%" height="15" fill="rgb(247,84,47)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="607.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (372 samples, 2.45%)</title><rect x="68.2162%" y="581" width="2.4495%" height="15" fill="rgb(240,111,43)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="591.50">&lt;s..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (372 samples, 2.45%)</title><rect x="68.2162%" y="565" width="2.4495%" height="15" fill="rgb(215,214,35)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="575.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (372 samples, 2.45%)</title><rect x="68.2162%" y="549" width="2.4495%" height="15" fill="rgb(248,207,23)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="559.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (372 samples, 2.45%)</title><rect x="68.2162%" y="533" width="2.4495%" height="15" fill="rgb(214,186,4)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="543.50">ra..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (372 samples, 2.45%)</title><rect x="68.2162%" y="517" width="2.4495%" height="15" fill="rgb(220,133,22)" fg:x="10360" fg:w="372"/><text x="68.4662%" y="527.50">ra..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="70.6328%" y="501" width="0.0329%" height="15" fill="rgb(239,134,19)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="511.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="70.6328%" y="485" width="0.0329%" height="15" fill="rgb(250,140,9)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="70.6328%" y="469" width="0.0329%" height="15" fill="rgb(225,59,14)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="70.6328%" y="453" width="0.0329%" height="15" fill="rgb(214,152,51)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="70.6328%" y="437" width="0.0329%" height="15" fill="rgb(251,227,43)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="70.6328%" y="421" width="0.0329%" height="15" fill="rgb(241,96,17)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="70.6328%" y="405" width="0.0329%" height="15" fill="rgb(234,198,43)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="415.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="70.6328%" y="389" width="0.0329%" height="15" fill="rgb(220,108,29)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="70.6328%" y="373" width="0.0329%" height="15" fill="rgb(226,163,33)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="383.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="70.6328%" y="357" width="0.0329%" height="15" fill="rgb(205,194,45)" fg:x="10727" fg:w="5"/><text x="70.8828%" y="367.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="70.6459%" y="341" width="0.0198%" height="15" fill="rgb(206,143,44)" fg:x="10729" fg:w="3"/><text x="70.8959%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.20%)</title><rect x="70.7118%" y="357" width="0.1975%" height="15" fill="rgb(236,136,36)" fg:x="10739" fg:w="30"/><text x="70.9618%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (13 samples, 0.09%)</title><rect x="70.9093%" y="325" width="0.0856%" height="15" fill="rgb(249,172,42)" fg:x="10769" fg:w="13"/><text x="71.1593%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (189 samples, 1.24%)</title><rect x="70.9949%" y="325" width="1.2445%" height="15" fill="rgb(216,139,23)" fg:x="10782" fg:w="189"/><text x="71.2449%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (189 samples, 1.24%)</title><rect x="70.9949%" y="309" width="1.2445%" height="15" fill="rgb(207,166,20)" fg:x="10782" fg:w="189"/><text x="71.2449%" y="319.50"></text></g><g><title>exp (175 samples, 1.15%)</title><rect x="71.0871%" y="293" width="1.1523%" height="15" fill="rgb(210,209,22)" fg:x="10796" fg:w="175"/><text x="71.3371%" y="303.50"></text></g><g><title>[libm-2.31.so] (120 samples, 0.79%)</title><rect x="71.4493%" y="277" width="0.7901%" height="15" fill="rgb(232,118,20)" fg:x="10851" fg:w="120"/><text x="71.6993%" y="287.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (238 samples, 1.57%)</title><rect x="70.9093%" y="341" width="1.5671%" height="15" fill="rgb(238,113,42)" fg:x="10769" fg:w="238"/><text x="71.1593%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (36 samples, 0.24%)</title><rect x="72.2394%" y="325" width="0.2370%" height="15" fill="rgb(231,42,5)" fg:x="10971" fg:w="36"/><text x="72.4894%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (36 samples, 0.24%)</title><rect x="72.2394%" y="309" width="0.2370%" height="15" fill="rgb(243,166,24)" fg:x="10971" fg:w="36"/><text x="72.4894%" y="319.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (344 samples, 2.27%)</title><rect x="70.6657%" y="501" width="2.2651%" height="15" fill="rgb(237,226,12)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="511.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (344 samples, 2.27%)</title><rect x="70.6657%" y="485" width="2.2651%" height="15" fill="rgb(229,133,24)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="495.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (344 samples, 2.27%)</title><rect x="70.6657%" y="469" width="2.2651%" height="15" fill="rgb(238,33,43)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="479.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (344 samples, 2.27%)</title><rect x="70.6657%" y="453" width="2.2651%" height="15" fill="rgb(227,59,38)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="463.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (344 samples, 2.27%)</title><rect x="70.6657%" y="437" width="2.2651%" height="15" fill="rgb(230,97,0)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="447.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (344 samples, 2.27%)</title><rect x="70.6657%" y="421" width="2.2651%" height="15" fill="rgb(250,173,50)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="431.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (344 samples, 2.27%)</title><rect x="70.6657%" y="405" width="2.2651%" height="15" fill="rgb(240,15,50)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="415.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (344 samples, 2.27%)</title><rect x="70.6657%" y="389" width="2.2651%" height="15" fill="rgb(221,93,22)" fg:x="10732" fg:w="344"/><text x="70.9157%" y="399.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (337 samples, 2.22%)</title><rect x="70.7118%" y="373" width="2.2190%" height="15" fill="rgb(245,180,53)" fg:x="10739" fg:w="337"/><text x="70.9618%" y="383.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (307 samples, 2.02%)</title><rect x="70.9093%" y="357" width="2.0215%" height="15" fill="rgb(231,88,51)" fg:x="10769" fg:w="307"/><text x="71.1593%" y="367.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (69 samples, 0.45%)</title><rect x="72.4765%" y="341" width="0.4543%" height="15" fill="rgb(240,58,21)" fg:x="11007" fg:w="69"/><text x="72.7265%" y="351.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (3 samples, 0.02%)</title><rect x="72.9308%" y="341" width="0.0198%" height="15" fill="rgb(237,21,10)" fg:x="11076" fg:w="3"/><text x="73.1808%" y="351.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (3 samples, 0.02%)</title><rect x="72.9308%" y="325" width="0.0198%" height="15" fill="rgb(218,43,11)" fg:x="11076" fg:w="3"/><text x="73.1808%" y="335.50"></text></g><g><title>criterion::stats::dot (3 samples, 0.02%)</title><rect x="72.9308%" y="309" width="0.0198%" height="15" fill="rgb(218,221,29)" fg:x="11076" fg:w="3"/><text x="73.1808%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="72.9308%" y="293" width="0.0198%" height="15" fill="rgb(214,118,42)" fg:x="11076" fg:w="3"/><text x="73.1808%" y="303.50"></text></g><g><title>criterion::stats::dot::{{closure}} (3 samples, 0.02%)</title><rect x="72.9308%" y="277" width="0.0198%" height="15" fill="rgb(251,200,26)" fg:x="11076" fg:w="3"/><text x="73.1808%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (349 samples, 2.30%)</title><rect x="70.6657%" y="581" width="2.2980%" height="15" fill="rgb(237,101,39)" fg:x="10732" fg:w="349"/><text x="70.9157%" y="591.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (349 samples, 2.30%)</title><rect x="70.6657%" y="565" width="2.2980%" height="15" fill="rgb(251,117,11)" fg:x="10732" fg:w="349"/><text x="70.9157%" y="575.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (349 samples, 2.30%)</title><rect x="70.6657%" y="549" width="2.2980%" height="15" fill="rgb(216,223,23)" fg:x="10732" fg:w="349"/><text x="70.9157%" y="559.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (349 samples, 2.30%)</title><rect x="70.6657%" y="533" width="2.2980%" height="15" fill="rgb(251,54,12)" fg:x="10732" fg:w="349"/><text x="70.9157%" y="543.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (349 samples, 2.30%)</title><rect x="70.6657%" y="517" width="2.2980%" height="15" fill="rgb(254,176,54)" fg:x="10732" fg:w="349"/><text x="70.9157%" y="527.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="72.9308%" y="501" width="0.0329%" height="15" fill="rgb(210,32,8)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="511.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="72.9308%" y="485" width="0.0329%" height="15" fill="rgb(235,52,38)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="72.9308%" y="469" width="0.0329%" height="15" fill="rgb(231,4,44)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="72.9308%" y="453" width="0.0329%" height="15" fill="rgb(249,2,32)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="72.9308%" y="437" width="0.0329%" height="15" fill="rgb(224,65,26)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="72.9308%" y="421" width="0.0329%" height="15" fill="rgb(250,73,40)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="72.9308%" y="405" width="0.0329%" height="15" fill="rgb(253,177,16)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="415.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="72.9308%" y="389" width="0.0329%" height="15" fill="rgb(217,32,34)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="72.9308%" y="373" width="0.0329%" height="15" fill="rgb(212,7,10)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="383.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="72.9308%" y="357" width="0.0329%" height="15" fill="rgb(245,89,8)" fg:x="11076" fg:w="5"/><text x="73.1808%" y="367.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (2 samples, 0.01%)</title><rect x="72.9505%" y="341" width="0.0132%" height="15" fill="rgb(237,16,53)" fg:x="11079" fg:w="2"/><text x="73.2005%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.13%)</title><rect x="73.0361%" y="293" width="0.1317%" height="15" fill="rgb(250,204,30)" fg:x="11092" fg:w="20"/><text x="73.2861%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (7 samples, 0.05%)</title><rect x="73.1678%" y="261" width="0.0461%" height="15" fill="rgb(208,77,27)" fg:x="11112" fg:w="7"/><text x="73.4178%" y="271.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (165 samples, 1.09%)</title><rect x="73.2139%" y="261" width="1.0865%" height="15" fill="rgb(250,204,28)" fg:x="11119" fg:w="165"/><text x="73.4639%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (165 samples, 1.09%)</title><rect x="73.2139%" y="245" width="1.0865%" height="15" fill="rgb(244,63,21)" fg:x="11119" fg:w="165"/><text x="73.4639%" y="255.50"></text></g><g><title>exp (156 samples, 1.03%)</title><rect x="73.2732%" y="229" width="1.0272%" height="15" fill="rgb(236,85,44)" fg:x="11128" fg:w="156"/><text x="73.5232%" y="239.50"></text></g><g><title>[libm-2.31.so] (113 samples, 0.74%)</title><rect x="73.5563%" y="213" width="0.7441%" height="15" fill="rgb(215,98,4)" fg:x="11171" fg:w="113"/><text x="73.8063%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (209 samples, 1.38%)</title><rect x="73.1678%" y="277" width="1.3762%" height="15" fill="rgb(235,38,11)" fg:x="11112" fg:w="209"/><text x="73.4178%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (37 samples, 0.24%)</title><rect x="74.3004%" y="261" width="0.2436%" height="15" fill="rgb(254,186,25)" fg:x="11284" fg:w="37"/><text x="74.5504%" y="271.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (37 samples, 0.24%)</title><rect x="74.3004%" y="245" width="0.2436%" height="15" fill="rgb(225,55,31)" fg:x="11284" fg:w="37"/><text x="74.5504%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (81 samples, 0.53%)</title><rect x="74.5440%" y="277" width="0.5334%" height="15" fill="rgb(211,15,21)" fg:x="11321" fg:w="81"/><text x="74.7940%" y="287.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (322 samples, 2.12%)</title><rect x="72.9637%" y="437" width="2.1202%" height="15" fill="rgb(215,187,41)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="447.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (322 samples, 2.12%)</title><rect x="72.9637%" y="421" width="2.1202%" height="15" fill="rgb(248,69,32)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="431.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (322 samples, 2.12%)</title><rect x="72.9637%" y="405" width="2.1202%" height="15" fill="rgb(252,102,52)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="415.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (322 samples, 2.12%)</title><rect x="72.9637%" y="389" width="2.1202%" height="15" fill="rgb(253,140,32)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="399.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (322 samples, 2.12%)</title><rect x="72.9637%" y="373" width="2.1202%" height="15" fill="rgb(216,56,42)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="383.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (322 samples, 2.12%)</title><rect x="72.9637%" y="357" width="2.1202%" height="15" fill="rgb(216,184,14)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="367.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (322 samples, 2.12%)</title><rect x="72.9637%" y="341" width="2.1202%" height="15" fill="rgb(237,187,27)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="351.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (322 samples, 2.12%)</title><rect x="72.9637%" y="325" width="2.1202%" height="15" fill="rgb(219,65,3)" fg:x="11081" fg:w="322"/><text x="73.2137%" y="335.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (311 samples, 2.05%)</title><rect x="73.0361%" y="309" width="2.0478%" height="15" fill="rgb(245,83,25)" fg:x="11092" fg:w="311"/><text x="73.2861%" y="319.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (291 samples, 1.92%)</title><rect x="73.1678%" y="293" width="1.9161%" height="15" fill="rgb(214,205,45)" fg:x="11112" fg:w="291"/><text x="73.4178%" y="303.50">c..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,484 samples, 9.77%)</title><rect x="65.3388%" y="869" width="9.7715%" height="15" fill="rgb(241,20,18)" fg:x="9923" fg:w="1484"/><text x="65.5888%" y="879.50">rayon_core::jo..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,484 samples, 9.77%)</title><rect x="65.3388%" y="853" width="9.7715%" height="15" fill="rgb(232,163,23)" fg:x="9923" fg:w="1484"/><text x="65.5888%" y="863.50">rayon_core::jo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,484 samples, 9.77%)</title><rect x="65.3388%" y="837" width="9.7715%" height="15" fill="rgb(214,5,46)" fg:x="9923" fg:w="1484"/><text x="65.5888%" y="847.50">rayon::iter::p..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,484 samples, 9.77%)</title><rect x="65.3388%" y="821" width="9.7715%" height="15" fill="rgb(229,78,17)" fg:x="9923" fg:w="1484"/><text x="65.5888%" y="831.50">rayon::iter::p..</text></g><g><title>rayon_core::join::join_context (1,484 samples, 9.77%)</title><rect x="65.3388%" y="805" width="9.7715%" height="15" fill="rgb(248,89,10)" fg:x="9923" fg:w="1484"/><text x="65.5888%" y="815.50">rayon_core::jo..</text></g><g><title>rayon_core::registry::in_worker (1,484 samples, 9.77%)</title><rect x="65.3388%" y="789" width="9.7715%" height="15" fill="rgb(248,54,15)" fg:x="9923" fg:w="1484"/><text x="65.5888%" y="799.50">rayon_core::re..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,484 samples, 9.77%)</title><rect x="65.3388%" y="773" width="9.7715%" height="15" fill="rgb(223,116,6)" fg:x="9923" fg:w="1484"/><text x="65.5888%" y="783.50">rayon_core::jo..</text></g><g><title>rayon_core::unwind::halt_unwinding (675 samples, 4.44%)</title><rect x="70.6657%" y="757" width="4.4446%" height="15" fill="rgb(205,125,38)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="767.50">rayon..</text></g><g><title>std::panic::catch_unwind (675 samples, 4.44%)</title><rect x="70.6657%" y="741" width="4.4446%" height="15" fill="rgb(251,78,38)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="751.50">std::..</text></g><g><title>std::panicking::try (675 samples, 4.44%)</title><rect x="70.6657%" y="725" width="4.4446%" height="15" fill="rgb(253,78,28)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="735.50">std::..</text></g><g><title>std::panicking::try::do_call (675 samples, 4.44%)</title><rect x="70.6657%" y="709" width="4.4446%" height="15" fill="rgb(209,120,3)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="719.50">std::..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (675 samples, 4.44%)</title><rect x="70.6657%" y="693" width="4.4446%" height="15" fill="rgb(238,229,9)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="703.50">&lt;std:..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (675 samples, 4.44%)</title><rect x="70.6657%" y="677" width="4.4446%" height="15" fill="rgb(253,159,18)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="687.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (675 samples, 4.44%)</title><rect x="70.6657%" y="661" width="4.4446%" height="15" fill="rgb(244,42,34)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="671.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (675 samples, 4.44%)</title><rect x="70.6657%" y="645" width="4.4446%" height="15" fill="rgb(224,8,7)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="655.50">rayon..</text></g><g><title>rayon_core::join::join_context (675 samples, 4.44%)</title><rect x="70.6657%" y="629" width="4.4446%" height="15" fill="rgb(210,201,45)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="639.50">rayon..</text></g><g><title>rayon_core::registry::in_worker (675 samples, 4.44%)</title><rect x="70.6657%" y="613" width="4.4446%" height="15" fill="rgb(252,185,21)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="623.50">rayon..</text></g><g><title>rayon_core::join::join_context::{{closure}} (675 samples, 4.44%)</title><rect x="70.6657%" y="597" width="4.4446%" height="15" fill="rgb(223,131,1)" fg:x="10732" fg:w="675"/><text x="70.9157%" y="607.50">rayon..</text></g><g><title>rayon_core::unwind::halt_unwinding (326 samples, 2.15%)</title><rect x="72.9637%" y="581" width="2.1466%" height="15" fill="rgb(245,141,16)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="591.50">r..</text></g><g><title>std::panic::catch_unwind (326 samples, 2.15%)</title><rect x="72.9637%" y="565" width="2.1466%" height="15" fill="rgb(229,55,45)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="575.50">s..</text></g><g><title>std::panicking::try (326 samples, 2.15%)</title><rect x="72.9637%" y="549" width="2.1466%" height="15" fill="rgb(208,92,15)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="559.50">s..</text></g><g><title>std::panicking::try::do_call (326 samples, 2.15%)</title><rect x="72.9637%" y="533" width="2.1466%" height="15" fill="rgb(234,185,47)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="543.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (326 samples, 2.15%)</title><rect x="72.9637%" y="517" width="2.1466%" height="15" fill="rgb(253,104,50)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="527.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (326 samples, 2.15%)</title><rect x="72.9637%" y="501" width="2.1466%" height="15" fill="rgb(205,70,7)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="511.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (326 samples, 2.15%)</title><rect x="72.9637%" y="485" width="2.1466%" height="15" fill="rgb(240,178,43)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="495.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (326 samples, 2.15%)</title><rect x="72.9637%" y="469" width="2.1466%" height="15" fill="rgb(214,112,2)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="479.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (326 samples, 2.15%)</title><rect x="72.9637%" y="453" width="2.1466%" height="15" fill="rgb(206,46,17)" fg:x="11081" fg:w="326"/><text x="73.2137%" y="463.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="75.0840%" y="437" width="0.0263%" height="15" fill="rgb(225,220,16)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="447.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.03%)</title><rect x="75.0840%" y="421" width="0.0263%" height="15" fill="rgb(238,65,40)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="75.0840%" y="405" width="0.0263%" height="15" fill="rgb(230,151,21)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="75.0840%" y="389" width="0.0263%" height="15" fill="rgb(218,58,49)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="75.0840%" y="373" width="0.0263%" height="15" fill="rgb(219,179,14)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="75.0840%" y="357" width="0.0263%" height="15" fill="rgb(223,72,1)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="75.0840%" y="341" width="0.0263%" height="15" fill="rgb(238,126,10)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="351.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.03%)</title><rect x="75.0840%" y="325" width="0.0263%" height="15" fill="rgb(224,206,38)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.03%)</title><rect x="75.0840%" y="309" width="0.0263%" height="15" fill="rgb(212,201,54)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="319.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.03%)</title><rect x="75.0840%" y="293" width="0.0263%" height="15" fill="rgb(218,154,48)" fg:x="11403" fg:w="4"/><text x="75.3340%" y="303.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="75.0905%" y="277" width="0.0198%" height="15" fill="rgb(232,93,24)" fg:x="11404" fg:w="3"/><text x="75.3405%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.16%)</title><rect x="75.1432%" y="357" width="0.1580%" height="15" fill="rgb(245,30,21)" fg:x="11412" fg:w="24"/><text x="75.3932%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (9 samples, 0.06%)</title><rect x="75.3012%" y="325" width="0.0593%" height="15" fill="rgb(242,148,29)" fg:x="11436" fg:w="9"/><text x="75.5512%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (143 samples, 0.94%)</title><rect x="75.3605%" y="325" width="0.9416%" height="15" fill="rgb(244,153,54)" fg:x="11445" fg:w="143"/><text x="75.6105%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (143 samples, 0.94%)</title><rect x="75.3605%" y="309" width="0.9416%" height="15" fill="rgb(252,87,22)" fg:x="11445" fg:w="143"/><text x="75.6105%" y="319.50"></text></g><g><title>exp (131 samples, 0.86%)</title><rect x="75.4395%" y="293" width="0.8626%" height="15" fill="rgb(210,51,29)" fg:x="11457" fg:w="131"/><text x="75.6895%" y="303.50"></text></g><g><title>[libm-2.31.so] (95 samples, 0.63%)</title><rect x="75.6766%" y="277" width="0.6255%" height="15" fill="rgb(242,136,47)" fg:x="11493" fg:w="95"/><text x="75.9266%" y="287.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (181 samples, 1.19%)</title><rect x="75.3012%" y="341" width="1.1918%" height="15" fill="rgb(238,68,4)" fg:x="11436" fg:w="181"/><text x="75.5512%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (29 samples, 0.19%)</title><rect x="76.3021%" y="325" width="0.1910%" height="15" fill="rgb(242,161,30)" fg:x="11588" fg:w="29"/><text x="76.5521%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (29 samples, 0.19%)</title><rect x="76.3021%" y="309" width="0.1910%" height="15" fill="rgb(218,58,44)" fg:x="11588" fg:w="29"/><text x="76.5521%" y="319.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (303 samples, 2.00%)</title><rect x="75.1169%" y="501" width="1.9951%" height="15" fill="rgb(252,125,32)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="511.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (303 samples, 2.00%)</title><rect x="75.1169%" y="485" width="1.9951%" height="15" fill="rgb(219,178,0)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="495.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (303 samples, 2.00%)</title><rect x="75.1169%" y="469" width="1.9951%" height="15" fill="rgb(213,152,7)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="479.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (303 samples, 2.00%)</title><rect x="75.1169%" y="453" width="1.9951%" height="15" fill="rgb(249,109,34)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="463.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (303 samples, 2.00%)</title><rect x="75.1169%" y="437" width="1.9951%" height="15" fill="rgb(232,96,21)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="447.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (303 samples, 2.00%)</title><rect x="75.1169%" y="421" width="1.9951%" height="15" fill="rgb(228,27,39)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="431.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (303 samples, 2.00%)</title><rect x="75.1169%" y="405" width="1.9951%" height="15" fill="rgb(211,182,52)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="415.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (303 samples, 2.00%)</title><rect x="75.1169%" y="389" width="1.9951%" height="15" fill="rgb(234,178,38)" fg:x="11408" fg:w="303"/><text x="75.3669%" y="399.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (299 samples, 1.97%)</title><rect x="75.1432%" y="373" width="1.9688%" height="15" fill="rgb(221,111,3)" fg:x="11412" fg:w="299"/><text x="75.3932%" y="383.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (275 samples, 1.81%)</title><rect x="75.3012%" y="357" width="1.8108%" height="15" fill="rgb(228,175,21)" fg:x="11436" fg:w="275"/><text x="75.5512%" y="367.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (94 samples, 0.62%)</title><rect x="76.4931%" y="341" width="0.6190%" height="15" fill="rgb(228,174,43)" fg:x="11617" fg:w="94"/><text x="76.7431%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (309 samples, 2.03%)</title><rect x="75.1169%" y="581" width="2.0346%" height="15" fill="rgb(211,191,0)" fg:x="11408" fg:w="309"/><text x="75.3669%" y="591.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (309 samples, 2.03%)</title><rect x="75.1169%" y="565" width="2.0346%" height="15" fill="rgb(253,117,3)" fg:x="11408" fg:w="309"/><text x="75.3669%" y="575.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (309 samples, 2.03%)</title><rect x="75.1169%" y="549" width="2.0346%" height="15" fill="rgb(241,127,19)" fg:x="11408" fg:w="309"/><text x="75.3669%" y="559.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (309 samples, 2.03%)</title><rect x="75.1169%" y="533" width="2.0346%" height="15" fill="rgb(218,103,12)" fg:x="11408" fg:w="309"/><text x="75.3669%" y="543.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (309 samples, 2.03%)</title><rect x="75.1169%" y="517" width="2.0346%" height="15" fill="rgb(236,214,43)" fg:x="11408" fg:w="309"/><text x="75.3669%" y="527.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.04%)</title><rect x="77.1120%" y="501" width="0.0395%" height="15" fill="rgb(244,144,19)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="511.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.04%)</title><rect x="77.1120%" y="485" width="0.0395%" height="15" fill="rgb(246,188,10)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="77.1120%" y="469" width="0.0395%" height="15" fill="rgb(212,193,33)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.04%)</title><rect x="77.1120%" y="453" width="0.0395%" height="15" fill="rgb(241,51,29)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.04%)</title><rect x="77.1120%" y="437" width="0.0395%" height="15" fill="rgb(211,58,19)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.04%)</title><rect x="77.1120%" y="421" width="0.0395%" height="15" fill="rgb(229,111,26)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.04%)</title><rect x="77.1120%" y="405" width="0.0395%" height="15" fill="rgb(213,115,40)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="415.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (6 samples, 0.04%)</title><rect x="77.1120%" y="389" width="0.0395%" height="15" fill="rgb(209,56,44)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (6 samples, 0.04%)</title><rect x="77.1120%" y="373" width="0.0395%" height="15" fill="rgb(230,108,32)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="383.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (6 samples, 0.04%)</title><rect x="77.1120%" y="357" width="0.0395%" height="15" fill="rgb(216,165,31)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="367.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.04%)</title><rect x="77.1120%" y="341" width="0.0395%" height="15" fill="rgb(218,122,21)" fg:x="11711" fg:w="6"/><text x="77.3620%" y="351.50"></text></g><g><title>oorandom::Rand64::rand_range (4 samples, 0.03%)</title><rect x="77.1252%" y="325" width="0.0263%" height="15" fill="rgb(223,224,47)" fg:x="11713" fg:w="4"/><text x="77.3752%" y="335.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="77.1383%" y="309" width="0.0132%" height="15" fill="rgb(238,102,44)" fg:x="11715" fg:w="2"/><text x="77.3883%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="77.1778%" y="293" width="0.1054%" height="15" fill="rgb(236,46,40)" fg:x="11721" fg:w="16"/><text x="77.4278%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (4 samples, 0.03%)</title><rect x="77.2832%" y="261" width="0.0263%" height="15" fill="rgb(247,202,50)" fg:x="11737" fg:w="4"/><text x="77.5332%" y="271.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (143 samples, 0.94%)</title><rect x="77.3095%" y="261" width="0.9416%" height="15" fill="rgb(209,99,20)" fg:x="11741" fg:w="143"/><text x="77.5595%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (143 samples, 0.94%)</title><rect x="77.3095%" y="245" width="0.9416%" height="15" fill="rgb(252,27,34)" fg:x="11741" fg:w="143"/><text x="77.5595%" y="255.50"></text></g><g><title>exp (132 samples, 0.87%)</title><rect x="77.3820%" y="229" width="0.8692%" height="15" fill="rgb(215,206,23)" fg:x="11752" fg:w="132"/><text x="77.6320%" y="239.50"></text></g><g><title>[libm-2.31.so] (89 samples, 0.59%)</title><rect x="77.6651%" y="213" width="0.5860%" height="15" fill="rgb(212,135,36)" fg:x="11795" fg:w="89"/><text x="77.9151%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (163 samples, 1.07%)</title><rect x="77.2832%" y="277" width="1.0733%" height="15" fill="rgb(240,189,1)" fg:x="11737" fg:w="163"/><text x="77.5332%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (16 samples, 0.11%)</title><rect x="78.2511%" y="261" width="0.1054%" height="15" fill="rgb(242,56,20)" fg:x="11884" fg:w="16"/><text x="78.5011%" y="271.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (16 samples, 0.11%)</title><rect x="78.2511%" y="245" width="0.1054%" height="15" fill="rgb(247,132,33)" fg:x="11884" fg:w="16"/><text x="78.5011%" y="255.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (275 samples, 1.81%)</title><rect x="77.1515%" y="437" width="1.8108%" height="15" fill="rgb(208,149,11)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="447.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (275 samples, 1.81%)</title><rect x="77.1515%" y="421" width="1.8108%" height="15" fill="rgb(211,33,11)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="431.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (275 samples, 1.81%)</title><rect x="77.1515%" y="405" width="1.8108%" height="15" fill="rgb(221,29,38)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="415.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (275 samples, 1.81%)</title><rect x="77.1515%" y="389" width="1.8108%" height="15" fill="rgb(206,182,49)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="399.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (275 samples, 1.81%)</title><rect x="77.1515%" y="373" width="1.8108%" height="15" fill="rgb(216,140,1)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="383.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (275 samples, 1.81%)</title><rect x="77.1515%" y="357" width="1.8108%" height="15" fill="rgb(232,57,40)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="367.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (275 samples, 1.81%)</title><rect x="77.1515%" y="341" width="1.8108%" height="15" fill="rgb(224,186,18)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="351.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (275 samples, 1.81%)</title><rect x="77.1515%" y="325" width="1.8108%" height="15" fill="rgb(215,121,11)" fg:x="11717" fg:w="275"/><text x="77.4015%" y="335.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (271 samples, 1.78%)</title><rect x="77.1778%" y="309" width="1.7844%" height="15" fill="rgb(245,147,10)" fg:x="11721" fg:w="271"/><text x="77.4278%" y="319.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (255 samples, 1.68%)</title><rect x="77.2832%" y="293" width="1.6791%" height="15" fill="rgb(238,153,13)" fg:x="11737" fg:w="255"/><text x="77.5332%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (92 samples, 0.61%)</title><rect x="78.3565%" y="277" width="0.6058%" height="15" fill="rgb(233,108,0)" fg:x="11900" fg:w="92"/><text x="78.6065%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (589 samples, 3.88%)</title><rect x="75.1169%" y="693" width="3.8783%" height="15" fill="rgb(212,157,17)" fg:x="11408" fg:w="589"/><text x="75.3669%" y="703.50">rayo..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (589 samples, 3.88%)</title><rect x="75.1169%" y="677" width="3.8783%" height="15" fill="rgb(225,213,38)" fg:x="11408" fg:w="589"/><text x="75.3669%" y="687.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (589 samples, 3.88%)</title><rect x="75.1169%" y="661" width="3.8783%" height="15" fill="rgb(248,16,11)" fg:x="11408" fg:w="589"/><text x="75.3669%" y="671.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (589 samples, 3.88%)</title><rect x="75.1169%" y="645" width="3.8783%" height="15" fill="rgb(241,33,4)" fg:x="11408" fg:w="589"/><text x="75.3669%" y="655.50">rayo..</text></g><g><title>rayon_core::join::join_context (589 samples, 3.88%)</title><rect x="75.1169%" y="629" width="3.8783%" height="15" fill="rgb(222,26,43)" fg:x="11408" fg:w="589"/><text x="75.3669%" y="639.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (589 samples, 3.88%)</title><rect x="75.1169%" y="613" width="3.8783%" height="15" fill="rgb(243,29,36)" fg:x="11408" fg:w="589"/><text x="75.3669%" y="623.50">rayo..</text></g><g><title>rayon_core::join::join_context::{{closure}} (589 samples, 3.88%)</title><rect x="75.1169%" y="597" width="3.8783%" height="15" fill="rgb(241,9,27)" fg:x="11408" fg:w="589"/><text x="75.3669%" y="607.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (280 samples, 1.84%)</title><rect x="77.1515%" y="581" width="1.8437%" height="15" fill="rgb(205,117,26)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="591.50">r..</text></g><g><title>std::panic::catch_unwind (280 samples, 1.84%)</title><rect x="77.1515%" y="565" width="1.8437%" height="15" fill="rgb(209,80,39)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="575.50">s..</text></g><g><title>std::panicking::try (280 samples, 1.84%)</title><rect x="77.1515%" y="549" width="1.8437%" height="15" fill="rgb(239,155,6)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="559.50">s..</text></g><g><title>std::panicking::try::do_call (280 samples, 1.84%)</title><rect x="77.1515%" y="533" width="1.8437%" height="15" fill="rgb(212,104,12)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="543.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (280 samples, 1.84%)</title><rect x="77.1515%" y="517" width="1.8437%" height="15" fill="rgb(234,204,3)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="527.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (280 samples, 1.84%)</title><rect x="77.1515%" y="501" width="1.8437%" height="15" fill="rgb(251,218,7)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="511.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (280 samples, 1.84%)</title><rect x="77.1515%" y="485" width="1.8437%" height="15" fill="rgb(221,81,32)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="495.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (280 samples, 1.84%)</title><rect x="77.1515%" y="469" width="1.8437%" height="15" fill="rgb(214,152,26)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="479.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (280 samples, 1.84%)</title><rect x="77.1515%" y="453" width="1.8437%" height="15" fill="rgb(223,22,3)" fg:x="11717" fg:w="280"/><text x="77.4015%" y="463.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="78.9623%" y="437" width="0.0329%" height="15" fill="rgb(207,174,7)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="447.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="78.9623%" y="421" width="0.0329%" height="15" fill="rgb(224,19,52)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="78.9623%" y="405" width="0.0329%" height="15" fill="rgb(228,24,14)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="78.9623%" y="389" width="0.0329%" height="15" fill="rgb(230,153,43)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="78.9623%" y="373" width="0.0329%" height="15" fill="rgb(231,106,12)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="78.9623%" y="357" width="0.0329%" height="15" fill="rgb(215,92,2)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="78.9623%" y="341" width="0.0329%" height="15" fill="rgb(249,143,25)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="351.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="78.9623%" y="325" width="0.0329%" height="15" fill="rgb(252,7,35)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="78.9623%" y="309" width="0.0329%" height="15" fill="rgb(216,69,40)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="319.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="78.9623%" y="293" width="0.0329%" height="15" fill="rgb(240,36,33)" fg:x="11992" fg:w="5"/><text x="79.2123%" y="303.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="78.9689%" y="277" width="0.0263%" height="15" fill="rgb(231,128,14)" fg:x="11993" fg:w="4"/><text x="79.2189%" y="287.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="78.9820%" y="261" width="0.0132%" height="15" fill="rgb(245,143,14)" fg:x="11995" fg:w="2"/><text x="79.2320%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.08%)</title><rect x="79.0347%" y="293" width="0.0790%" height="15" fill="rgb(222,130,28)" fg:x="12003" fg:w="12"/><text x="79.2847%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (9 samples, 0.06%)</title><rect x="79.1137%" y="261" width="0.0593%" height="15" fill="rgb(212,10,48)" fg:x="12015" fg:w="9"/><text x="79.3637%" y="271.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (128 samples, 0.84%)</title><rect x="79.1730%" y="261" width="0.8428%" height="15" fill="rgb(254,118,45)" fg:x="12024" fg:w="128"/><text x="79.4230%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (128 samples, 0.84%)</title><rect x="79.1730%" y="245" width="0.8428%" height="15" fill="rgb(228,6,45)" fg:x="12024" fg:w="128"/><text x="79.4230%" y="255.50"></text></g><g><title>exp (114 samples, 0.75%)</title><rect x="79.2652%" y="229" width="0.7506%" height="15" fill="rgb(241,18,35)" fg:x="12038" fg:w="114"/><text x="79.5152%" y="239.50"></text></g><g><title>[libm-2.31.so] (78 samples, 0.51%)</title><rect x="79.5022%" y="213" width="0.5136%" height="15" fill="rgb(227,214,53)" fg:x="12074" fg:w="78"/><text x="79.7522%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (154 samples, 1.01%)</title><rect x="79.1137%" y="277" width="1.0140%" height="15" fill="rgb(224,107,51)" fg:x="12015" fg:w="154"/><text x="79.3637%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (17 samples, 0.11%)</title><rect x="80.0158%" y="261" width="0.1119%" height="15" fill="rgb(248,60,28)" fg:x="12152" fg:w="17"/><text x="80.2658%" y="271.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (17 samples, 0.11%)</title><rect x="80.0158%" y="245" width="0.1119%" height="15" fill="rgb(249,101,23)" fg:x="12152" fg:w="17"/><text x="80.2658%" y="255.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (266 samples, 1.75%)</title><rect x="78.9952%" y="437" width="1.7515%" height="15" fill="rgb(228,51,19)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (266 samples, 1.75%)</title><rect x="78.9952%" y="421" width="1.7515%" height="15" fill="rgb(213,20,6)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (266 samples, 1.75%)</title><rect x="78.9952%" y="405" width="1.7515%" height="15" fill="rgb(212,124,10)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (266 samples, 1.75%)</title><rect x="78.9952%" y="389" width="1.7515%" height="15" fill="rgb(248,3,40)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (266 samples, 1.75%)</title><rect x="78.9952%" y="373" width="1.7515%" height="15" fill="rgb(223,178,23)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (266 samples, 1.75%)</title><rect x="78.9952%" y="357" width="1.7515%" height="15" fill="rgb(240,132,45)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (266 samples, 1.75%)</title><rect x="78.9952%" y="341" width="1.7515%" height="15" fill="rgb(245,164,36)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="351.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (266 samples, 1.75%)</title><rect x="78.9952%" y="325" width="1.7515%" height="15" fill="rgb(231,188,53)" fg:x="11997" fg:w="266"/><text x="79.2452%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (260 samples, 1.71%)</title><rect x="79.0347%" y="309" width="1.7120%" height="15" fill="rgb(237,198,39)" fg:x="12003" fg:w="260"/><text x="79.2847%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (248 samples, 1.63%)</title><rect x="79.1137%" y="293" width="1.6330%" height="15" fill="rgb(223,120,35)" fg:x="12015" fg:w="248"/><text x="79.3637%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (94 samples, 0.62%)</title><rect x="80.1277%" y="277" width="0.6190%" height="15" fill="rgb(253,107,49)" fg:x="12169" fg:w="94"/><text x="80.3777%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (271 samples, 1.78%)</title><rect x="78.9952%" y="517" width="1.7844%" height="15" fill="rgb(216,44,31)" fg:x="11997" fg:w="271"/><text x="79.2452%" y="527.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (271 samples, 1.78%)</title><rect x="78.9952%" y="501" width="1.7844%" height="15" fill="rgb(253,87,21)" fg:x="11997" fg:w="271"/><text x="79.2452%" y="511.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (271 samples, 1.78%)</title><rect x="78.9952%" y="485" width="1.7844%" height="15" fill="rgb(226,18,2)" fg:x="11997" fg:w="271"/><text x="79.2452%" y="495.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (271 samples, 1.78%)</title><rect x="78.9952%" y="469" width="1.7844%" height="15" fill="rgb(216,8,46)" fg:x="11997" fg:w="271"/><text x="79.2452%" y="479.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (271 samples, 1.78%)</title><rect x="78.9952%" y="453" width="1.7844%" height="15" fill="rgb(226,140,39)" fg:x="11997" fg:w="271"/><text x="79.2452%" y="463.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="80.7467%" y="437" width="0.0329%" height="15" fill="rgb(221,194,54)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="447.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="80.7467%" y="421" width="0.0329%" height="15" fill="rgb(213,92,11)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="80.7467%" y="405" width="0.0329%" height="15" fill="rgb(229,162,46)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="80.7467%" y="389" width="0.0329%" height="15" fill="rgb(214,111,36)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="80.7467%" y="373" width="0.0329%" height="15" fill="rgb(207,6,21)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="80.7467%" y="357" width="0.0329%" height="15" fill="rgb(213,127,38)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="80.7467%" y="341" width="0.0329%" height="15" fill="rgb(238,118,32)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="351.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="80.7467%" y="325" width="0.0329%" height="15" fill="rgb(240,139,39)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="80.7467%" y="309" width="0.0329%" height="15" fill="rgb(235,10,37)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="319.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="80.7467%" y="293" width="0.0329%" height="15" fill="rgb(249,171,38)" fg:x="12263" fg:w="5"/><text x="80.9967%" y="303.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.03%)</title><rect x="80.7533%" y="277" width="0.0263%" height="15" fill="rgb(242,144,32)" fg:x="12264" fg:w="4"/><text x="81.0033%" y="287.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="80.7664%" y="261" width="0.0132%" height="15" fill="rgb(217,117,21)" fg:x="12266" fg:w="2"/><text x="81.0164%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.13%)</title><rect x="80.8125%" y="229" width="0.1317%" height="15" fill="rgb(249,87,1)" fg:x="12273" fg:w="20"/><text x="81.0625%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (7 samples, 0.05%)</title><rect x="80.9442%" y="197" width="0.0461%" height="15" fill="rgb(248,196,48)" fg:x="12293" fg:w="7"/><text x="81.1942%" y="207.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (120 samples, 0.79%)</title><rect x="80.9903%" y="197" width="0.7901%" height="15" fill="rgb(251,206,33)" fg:x="12300" fg:w="120"/><text x="81.2403%" y="207.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (120 samples, 0.79%)</title><rect x="80.9903%" y="181" width="0.7901%" height="15" fill="rgb(232,141,28)" fg:x="12300" fg:w="120"/><text x="81.2403%" y="191.50"></text></g><g><title>exp (108 samples, 0.71%)</title><rect x="81.0693%" y="165" width="0.7111%" height="15" fill="rgb(209,167,14)" fg:x="12312" fg:w="108"/><text x="81.3193%" y="175.50"></text></g><g><title>[libm-2.31.so] (72 samples, 0.47%)</title><rect x="81.3064%" y="149" width="0.4741%" height="15" fill="rgb(225,11,50)" fg:x="12348" fg:w="72"/><text x="81.5564%" y="159.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (139 samples, 0.92%)</title><rect x="80.9442%" y="213" width="0.9153%" height="15" fill="rgb(209,50,20)" fg:x="12293" fg:w="139"/><text x="81.1942%" y="223.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (12 samples, 0.08%)</title><rect x="81.7805%" y="197" width="0.0790%" height="15" fill="rgb(212,17,46)" fg:x="12420" fg:w="12"/><text x="82.0305%" y="207.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (12 samples, 0.08%)</title><rect x="81.7805%" y="181" width="0.0790%" height="15" fill="rgb(216,101,39)" fg:x="12420" fg:w="12"/><text x="82.0305%" y="191.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (259 samples, 1.71%)</title><rect x="80.7796%" y="373" width="1.7054%" height="15" fill="rgb(212,228,48)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="383.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (259 samples, 1.71%)</title><rect x="80.7796%" y="357" width="1.7054%" height="15" fill="rgb(250,6,50)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (259 samples, 1.71%)</title><rect x="80.7796%" y="341" width="1.7054%" height="15" fill="rgb(250,160,48)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (259 samples, 1.71%)</title><rect x="80.7796%" y="325" width="1.7054%" height="15" fill="rgb(244,216,33)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (259 samples, 1.71%)</title><rect x="80.7796%" y="309" width="1.7054%" height="15" fill="rgb(207,157,5)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (259 samples, 1.71%)</title><rect x="80.7796%" y="293" width="1.7054%" height="15" fill="rgb(228,199,8)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (259 samples, 1.71%)</title><rect x="80.7796%" y="277" width="1.7054%" height="15" fill="rgb(227,80,20)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="287.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (259 samples, 1.71%)</title><rect x="80.7796%" y="261" width="1.7054%" height="15" fill="rgb(222,9,33)" fg:x="12268" fg:w="259"/><text x="81.0296%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (254 samples, 1.67%)</title><rect x="80.8125%" y="245" width="1.6725%" height="15" fill="rgb(239,44,28)" fg:x="12273" fg:w="254"/><text x="81.0625%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (234 samples, 1.54%)</title><rect x="80.9442%" y="229" width="1.5408%" height="15" fill="rgb(249,187,43)" fg:x="12293" fg:w="234"/><text x="81.1942%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (95 samples, 0.63%)</title><rect x="81.8595%" y="213" width="0.6255%" height="15" fill="rgb(216,141,28)" fg:x="12432" fg:w="95"/><text x="82.1095%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,609 samples, 17.18%)</title><rect x="65.3388%" y="949" width="17.1792%" height="15" fill="rgb(230,154,53)" fg:x="9923" fg:w="2609"/><text x="65.5888%" y="959.50">rayon::iter::plumbing::brid..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,609 samples, 17.18%)</title><rect x="65.3388%" y="933" width="17.1792%" height="15" fill="rgb(227,82,4)" fg:x="9923" fg:w="2609"/><text x="65.5888%" y="943.50">rayon::iter::plumbing::brid..</text></g><g><title>rayon_core::join::join_context (2,609 samples, 17.18%)</title><rect x="65.3388%" y="917" width="17.1792%" height="15" fill="rgb(220,107,16)" fg:x="9923" fg:w="2609"/><text x="65.5888%" y="927.50">rayon_core::join::join_cont..</text></g><g><title>rayon_core::registry::in_worker (2,609 samples, 17.18%)</title><rect x="65.3388%" y="901" width="17.1792%" height="15" fill="rgb(207,187,2)" fg:x="9923" fg:w="2609"/><text x="65.5888%" y="911.50">rayon_core::registry::in_wo..</text></g><g><title>rayon_core::join::join_context::{{closure}} (2,609 samples, 17.18%)</title><rect x="65.3388%" y="885" width="17.1792%" height="15" fill="rgb(210,162,52)" fg:x="9923" fg:w="2609"/><text x="65.5888%" y="895.50">rayon_core::join::join_cont..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,125 samples, 7.41%)</title><rect x="75.1103%" y="869" width="7.4077%" height="15" fill="rgb(217,216,49)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="879.50">rayon_core..</text></g><g><title>std::panic::catch_unwind (1,125 samples, 7.41%)</title><rect x="75.1103%" y="853" width="7.4077%" height="15" fill="rgb(218,146,49)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="863.50">std::panic..</text></g><g><title>std::panicking::try (1,125 samples, 7.41%)</title><rect x="75.1103%" y="837" width="7.4077%" height="15" fill="rgb(216,55,40)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="847.50">std::panic..</text></g><g><title>std::panicking::try::do_call (1,125 samples, 7.41%)</title><rect x="75.1103%" y="821" width="7.4077%" height="15" fill="rgb(208,196,21)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="831.50">std::panic..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,125 samples, 7.41%)</title><rect x="75.1103%" y="805" width="7.4077%" height="15" fill="rgb(242,117,42)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="815.50">&lt;std::pani..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,125 samples, 7.41%)</title><rect x="75.1103%" y="789" width="7.4077%" height="15" fill="rgb(210,11,23)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="799.50">rayon_core..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,125 samples, 7.41%)</title><rect x="75.1103%" y="773" width="7.4077%" height="15" fill="rgb(217,110,2)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="783.50">rayon::ite..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,125 samples, 7.41%)</title><rect x="75.1103%" y="757" width="7.4077%" height="15" fill="rgb(229,77,54)" fg:x="11407" fg:w="1125"/><text x="75.3603%" y="767.50">rayon::ite..</text></g><g><title>rayon_core::join::join_context (1,124 samples, 7.40%)</title><rect x="75.1169%" y="741" width="7.4011%" height="15" fill="rgb(218,53,16)" fg:x="11408" fg:w="1124"/><text x="75.3669%" y="751.50">rayon_core..</text></g><g><title>rayon_core::registry::in_worker (1,124 samples, 7.40%)</title><rect x="75.1169%" y="725" width="7.4011%" height="15" fill="rgb(215,38,13)" fg:x="11408" fg:w="1124"/><text x="75.3669%" y="735.50">rayon_core..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,124 samples, 7.40%)</title><rect x="75.1169%" y="709" width="7.4011%" height="15" fill="rgb(235,42,18)" fg:x="11408" fg:w="1124"/><text x="75.3669%" y="719.50">rayon_core..</text></g><g><title>rayon_core::unwind::halt_unwinding (535 samples, 3.52%)</title><rect x="78.9952%" y="693" width="3.5227%" height="15" fill="rgb(219,66,54)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="703.50">ray..</text></g><g><title>std::panic::catch_unwind (535 samples, 3.52%)</title><rect x="78.9952%" y="677" width="3.5227%" height="15" fill="rgb(222,205,4)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="687.50">std..</text></g><g><title>std::panicking::try (535 samples, 3.52%)</title><rect x="78.9952%" y="661" width="3.5227%" height="15" fill="rgb(227,213,46)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="671.50">std..</text></g><g><title>std::panicking::try::do_call (535 samples, 3.52%)</title><rect x="78.9952%" y="645" width="3.5227%" height="15" fill="rgb(250,145,42)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="655.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (535 samples, 3.52%)</title><rect x="78.9952%" y="629" width="3.5227%" height="15" fill="rgb(219,15,2)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="639.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (535 samples, 3.52%)</title><rect x="78.9952%" y="613" width="3.5227%" height="15" fill="rgb(231,181,52)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="623.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (535 samples, 3.52%)</title><rect x="78.9952%" y="597" width="3.5227%" height="15" fill="rgb(235,1,42)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="607.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (535 samples, 3.52%)</title><rect x="78.9952%" y="581" width="3.5227%" height="15" fill="rgb(249,88,27)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="591.50">ray..</text></g><g><title>rayon_core::join::join_context (535 samples, 3.52%)</title><rect x="78.9952%" y="565" width="3.5227%" height="15" fill="rgb(235,145,16)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="575.50">ray..</text></g><g><title>rayon_core::registry::in_worker (535 samples, 3.52%)</title><rect x="78.9952%" y="549" width="3.5227%" height="15" fill="rgb(237,114,19)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="559.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (535 samples, 3.52%)</title><rect x="78.9952%" y="533" width="3.5227%" height="15" fill="rgb(238,51,50)" fg:x="11997" fg:w="535"/><text x="79.2452%" y="543.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (264 samples, 1.74%)</title><rect x="80.7796%" y="517" width="1.7383%" height="15" fill="rgb(205,194,25)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="527.50"></text></g><g><title>std::panic::catch_unwind (264 samples, 1.74%)</title><rect x="80.7796%" y="501" width="1.7383%" height="15" fill="rgb(215,203,17)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="511.50"></text></g><g><title>std::panicking::try (264 samples, 1.74%)</title><rect x="80.7796%" y="485" width="1.7383%" height="15" fill="rgb(233,112,49)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="495.50"></text></g><g><title>std::panicking::try::do_call (264 samples, 1.74%)</title><rect x="80.7796%" y="469" width="1.7383%" height="15" fill="rgb(241,130,26)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="479.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (264 samples, 1.74%)</title><rect x="80.7796%" y="453" width="1.7383%" height="15" fill="rgb(252,223,19)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="463.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (264 samples, 1.74%)</title><rect x="80.7796%" y="437" width="1.7383%" height="15" fill="rgb(211,95,25)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (264 samples, 1.74%)</title><rect x="80.7796%" y="421" width="1.7383%" height="15" fill="rgb(251,182,27)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (264 samples, 1.74%)</title><rect x="80.7796%" y="405" width="1.7383%" height="15" fill="rgb(238,24,4)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="415.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (264 samples, 1.74%)</title><rect x="80.7796%" y="389" width="1.7383%" height="15" fill="rgb(224,220,25)" fg:x="12268" fg:w="264"/><text x="81.0296%" y="399.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="82.4850%" y="373" width="0.0329%" height="15" fill="rgb(239,133,26)" fg:x="12527" fg:w="5"/><text x="82.7350%" y="383.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="82.4850%" y="357" width="0.0329%" height="15" fill="rgb(211,94,48)" fg:x="12527" fg:w="5"/><text x="82.7350%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="82.4850%" y="341" width="0.0329%" height="15" fill="rgb(239,87,6)" fg:x="12527" fg:w="5"/><text x="82.7350%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="82.4850%" y="325" width="0.0329%" height="15" fill="rgb(227,62,0)" fg:x="12527" fg:w="5"/><text x="82.7350%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="82.4850%" y="309" width="0.0329%" height="15" fill="rgb(211,226,4)" fg:x="12527" fg:w="5"/><text x="82.7350%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="82.4850%" y="293" width="0.0329%" height="15" fill="rgb(253,38,52)" fg:x="12527" fg:w="5"/><text x="82.7350%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="82.4850%" y="277" width="0.0329%" height="15" fill="rgb(229,126,40)" fg:x="12527" fg:w="5"/><text x="82.7350%" y="287.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.03%)</title><rect x="82.4916%" y="261" width="0.0263%" height="15" fill="rgb(229,165,44)" fg:x="12528" fg:w="4"/><text x="82.7416%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.03%)</title><rect x="82.4916%" y="245" width="0.0263%" height="15" fill="rgb(247,95,47)" fg:x="12528" fg:w="4"/><text x="82.7416%" y="255.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.03%)</title><rect x="82.4916%" y="229" width="0.0263%" height="15" fill="rgb(216,140,30)" fg:x="12528" fg:w="4"/><text x="82.7416%" y="239.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="82.4982%" y="213" width="0.0198%" height="15" fill="rgb(246,214,8)" fg:x="12529" fg:w="3"/><text x="82.7482%" y="223.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="82.5048%" y="197" width="0.0132%" height="15" fill="rgb(227,224,15)" fg:x="12530" fg:w="2"/><text x="82.7548%" y="207.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.01%)</title><rect x="82.5311%" y="837" width="0.0132%" height="15" fill="rgb(233,175,4)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="847.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.01%)</title><rect x="82.5311%" y="821" width="0.0132%" height="15" fill="rgb(221,66,45)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (2 samples, 0.01%)</title><rect x="82.5311%" y="805" width="0.0132%" height="15" fill="rgb(221,178,18)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="815.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.01%)</title><rect x="82.5311%" y="789" width="0.0132%" height="15" fill="rgb(213,81,29)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="799.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.01%)</title><rect x="82.5311%" y="773" width="0.0132%" height="15" fill="rgb(220,89,49)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="82.5311%" y="757" width="0.0132%" height="15" fill="rgb(227,60,33)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="767.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="82.5311%" y="741" width="0.0132%" height="15" fill="rgb(205,113,12)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="751.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="82.5311%" y="725" width="0.0132%" height="15" fill="rgb(211,32,1)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="735.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="82.5311%" y="709" width="0.0132%" height="15" fill="rgb(246,2,12)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="719.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="82.5311%" y="693" width="0.0132%" height="15" fill="rgb(243,37,27)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="703.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5311%" y="677" width="0.0132%" height="15" fill="rgb(248,211,31)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="82.5311%" y="661" width="0.0132%" height="15" fill="rgb(242,146,47)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="671.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5311%" y="645" width="0.0132%" height="15" fill="rgb(206,70,20)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="655.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5311%" y="629" width="0.0132%" height="15" fill="rgb(215,10,51)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="639.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5311%" y="613" width="0.0132%" height="15" fill="rgb(243,178,53)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="623.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="82.5311%" y="597" width="0.0132%" height="15" fill="rgb(233,221,20)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="607.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="82.5311%" y="581" width="0.0132%" height="15" fill="rgb(218,95,35)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="591.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="82.5311%" y="565" width="0.0132%" height="15" fill="rgb(229,13,5)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="82.5311%" y="549" width="0.0132%" height="15" fill="rgb(252,164,30)" fg:x="12534" fg:w="2"/><text x="82.7811%" y="559.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="82.5443%" y="485" width="0.0132%" height="15" fill="rgb(232,68,36)" fg:x="12536" fg:w="2"/><text x="82.7943%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="82.5443%" y="469" width="0.0132%" height="15" fill="rgb(219,59,54)" fg:x="12536" fg:w="2"/><text x="82.7943%" y="479.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5443%" y="453" width="0.0132%" height="15" fill="rgb(250,92,33)" fg:x="12536" fg:w="2"/><text x="82.7943%" y="463.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5443%" y="437" width="0.0132%" height="15" fill="rgb(229,162,54)" fg:x="12536" fg:w="2"/><text x="82.7943%" y="447.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5443%" y="421" width="0.0132%" height="15" fill="rgb(244,114,52)" fg:x="12536" fg:w="2"/><text x="82.7943%" y="431.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.03%)</title><rect x="82.5443%" y="629" width="0.0263%" height="15" fill="rgb(212,211,43)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.03%)</title><rect x="82.5443%" y="613" width="0.0263%" height="15" fill="rgb(226,147,8)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="623.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (4 samples, 0.03%)</title><rect x="82.5443%" y="597" width="0.0263%" height="15" fill="rgb(226,23,13)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="607.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (4 samples, 0.03%)</title><rect x="82.5443%" y="581" width="0.0263%" height="15" fill="rgb(240,63,4)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="591.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="82.5443%" y="565" width="0.0263%" height="15" fill="rgb(221,1,32)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="575.50"></text></g><g><title>rayon_core::join::join (4 samples, 0.03%)</title><rect x="82.5443%" y="549" width="0.0263%" height="15" fill="rgb(242,117,10)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="559.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.03%)</title><rect x="82.5443%" y="533" width="0.0263%" height="15" fill="rgb(249,172,44)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.03%)</title><rect x="82.5443%" y="517" width="0.0263%" height="15" fill="rgb(244,46,45)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="527.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.03%)</title><rect x="82.5443%" y="501" width="0.0263%" height="15" fill="rgb(206,43,17)" fg:x="12536" fg:w="4"/><text x="82.7943%" y="511.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="82.5575%" y="485" width="0.0132%" height="15" fill="rgb(239,218,39)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="495.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="82.5575%" y="469" width="0.0132%" height="15" fill="rgb(208,169,54)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="479.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="82.5575%" y="453" width="0.0132%" height="15" fill="rgb(247,25,42)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="463.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="82.5575%" y="437" width="0.0132%" height="15" fill="rgb(226,23,31)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="447.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="82.5575%" y="421" width="0.0132%" height="15" fill="rgb(247,16,28)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="431.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="405" width="0.0132%" height="15" fill="rgb(231,147,38)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="415.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="389" width="0.0132%" height="15" fill="rgb(253,81,48)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="399.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="373" width="0.0132%" height="15" fill="rgb(249,222,43)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5575%" y="357" width="0.0132%" height="15" fill="rgb(221,3,27)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="367.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="82.5575%" y="341" width="0.0132%" height="15" fill="rgb(228,180,5)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="351.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="82.5575%" y="325" width="0.0132%" height="15" fill="rgb(227,131,42)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="82.5575%" y="309" width="0.0132%" height="15" fill="rgb(212,3,39)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="319.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="293" width="0.0132%" height="15" fill="rgb(226,45,5)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="82.5575%" y="277" width="0.0132%" height="15" fill="rgb(215,167,45)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="287.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="261" width="0.0132%" height="15" fill="rgb(250,218,53)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="271.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="245" width="0.0132%" height="15" fill="rgb(207,140,0)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="229" width="0.0132%" height="15" fill="rgb(238,133,51)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5575%" y="213" width="0.0132%" height="15" fill="rgb(218,203,53)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="223.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="82.5575%" y="197" width="0.0132%" height="15" fill="rgb(226,184,25)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="207.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="82.5575%" y="181" width="0.0132%" height="15" fill="rgb(231,121,21)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="82.5575%" y="165" width="0.0132%" height="15" fill="rgb(251,14,34)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="175.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="82.5575%" y="149" width="0.0132%" height="15" fill="rgb(249,193,11)" fg:x="12538" fg:w="2"/><text x="82.8075%" y="159.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="82.5706%" y="421" width="0.0132%" height="15" fill="rgb(220,172,37)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="431.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="405" width="0.0132%" height="15" fill="rgb(231,229,43)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="415.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="389" width="0.0132%" height="15" fill="rgb(250,161,5)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="399.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="373" width="0.0132%" height="15" fill="rgb(218,225,18)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5706%" y="357" width="0.0132%" height="15" fill="rgb(245,45,42)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="367.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="82.5706%" y="341" width="0.0132%" height="15" fill="rgb(211,115,1)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="351.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="82.5706%" y="325" width="0.0132%" height="15" fill="rgb(248,133,52)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="82.5706%" y="309" width="0.0132%" height="15" fill="rgb(238,100,21)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="319.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="293" width="0.0132%" height="15" fill="rgb(247,144,11)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="82.5706%" y="277" width="0.0132%" height="15" fill="rgb(206,164,16)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="287.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="261" width="0.0132%" height="15" fill="rgb(222,34,3)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="271.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="245" width="0.0132%" height="15" fill="rgb(248,82,4)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="255.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="229" width="0.0132%" height="15" fill="rgb(228,81,46)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="239.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5706%" y="213" width="0.0132%" height="15" fill="rgb(227,67,47)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="223.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="82.5706%" y="197" width="0.0132%" height="15" fill="rgb(215,93,53)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="207.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="82.5706%" y="181" width="0.0132%" height="15" fill="rgb(248,194,39)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="82.5706%" y="165" width="0.0132%" height="15" fill="rgb(215,5,19)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="175.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="149" width="0.0132%" height="15" fill="rgb(226,215,51)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="159.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="82.5706%" y="133" width="0.0132%" height="15" fill="rgb(225,56,26)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="143.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="117" width="0.0132%" height="15" fill="rgb(222,75,29)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="127.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="101" width="0.0132%" height="15" fill="rgb(236,139,6)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="111.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5706%" y="85" width="0.0132%" height="15" fill="rgb(223,137,36)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5706%" y="69" width="0.0132%" height="15" fill="rgb(226,99,2)" fg:x="12540" fg:w="2"/><text x="82.8206%" y="79.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2,621 samples, 17.26%)</title><rect x="65.3388%" y="965" width="17.2582%" height="15" fill="rgb(206,133,23)" fg:x="9923" fg:w="2621"/><text x="65.5888%" y="975.50">rayon_core::join::join_cont..</text></g><g><title>rayon_core::join::join::call::{{closure}} (12 samples, 0.08%)</title><rect x="82.5179%" y="949" width="0.0790%" height="15" fill="rgb(243,173,15)" fg:x="12532" fg:w="12"/><text x="82.7679%" y="959.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (12 samples, 0.08%)</title><rect x="82.5179%" y="933" width="0.0790%" height="15" fill="rgb(228,69,28)" fg:x="12532" fg:w="12"/><text x="82.7679%" y="943.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.08%)</title><rect x="82.5179%" y="917" width="0.0790%" height="15" fill="rgb(212,51,22)" fg:x="12532" fg:w="12"/><text x="82.7679%" y="927.50"></text></g><g><title>rayon_core::join::join (11 samples, 0.07%)</title><rect x="82.5245%" y="901" width="0.0724%" height="15" fill="rgb(227,113,0)" fg:x="12533" fg:w="11"/><text x="82.7745%" y="911.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.07%)</title><rect x="82.5245%" y="885" width="0.0724%" height="15" fill="rgb(252,84,27)" fg:x="12533" fg:w="11"/><text x="82.7745%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.07%)</title><rect x="82.5245%" y="869" width="0.0724%" height="15" fill="rgb(223,145,39)" fg:x="12533" fg:w="11"/><text x="82.7745%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.07%)</title><rect x="82.5245%" y="853" width="0.0724%" height="15" fill="rgb(239,219,30)" fg:x="12533" fg:w="11"/><text x="82.7745%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.05%)</title><rect x="82.5443%" y="837" width="0.0527%" height="15" fill="rgb(224,196,39)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="847.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.05%)</title><rect x="82.5443%" y="821" width="0.0527%" height="15" fill="rgb(205,35,43)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="831.50"></text></g><g><title>std::panicking::try (8 samples, 0.05%)</title><rect x="82.5443%" y="805" width="0.0527%" height="15" fill="rgb(228,201,21)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="815.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.05%)</title><rect x="82.5443%" y="789" width="0.0527%" height="15" fill="rgb(237,118,16)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="799.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.05%)</title><rect x="82.5443%" y="773" width="0.0527%" height="15" fill="rgb(241,17,19)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.05%)</title><rect x="82.5443%" y="757" width="0.0527%" height="15" fill="rgb(214,10,25)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="767.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (8 samples, 0.05%)</title><rect x="82.5443%" y="741" width="0.0527%" height="15" fill="rgb(238,37,29)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (8 samples, 0.05%)</title><rect x="82.5443%" y="725" width="0.0527%" height="15" fill="rgb(253,83,25)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="82.5443%" y="709" width="0.0527%" height="15" fill="rgb(234,192,12)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="719.50"></text></g><g><title>rayon_core::join::join (8 samples, 0.05%)</title><rect x="82.5443%" y="693" width="0.0527%" height="15" fill="rgb(241,216,45)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="703.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.05%)</title><rect x="82.5443%" y="677" width="0.0527%" height="15" fill="rgb(242,22,33)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="687.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.05%)</title><rect x="82.5443%" y="661" width="0.0527%" height="15" fill="rgb(231,105,49)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="671.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.05%)</title><rect x="82.5443%" y="645" width="0.0527%" height="15" fill="rgb(218,204,15)" fg:x="12536" fg:w="8"/><text x="82.7943%" y="655.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.03%)</title><rect x="82.5706%" y="629" width="0.0263%" height="15" fill="rgb(235,138,41)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="639.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.03%)</title><rect x="82.5706%" y="613" width="0.0263%" height="15" fill="rgb(246,0,9)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="623.50"></text></g><g><title>std::panicking::try (4 samples, 0.03%)</title><rect x="82.5706%" y="597" width="0.0263%" height="15" fill="rgb(210,74,4)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="607.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="82.5706%" y="581" width="0.0263%" height="15" fill="rgb(250,60,41)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="591.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.03%)</title><rect x="82.5706%" y="565" width="0.0263%" height="15" fill="rgb(220,115,12)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.03%)</title><rect x="82.5706%" y="549" width="0.0263%" height="15" fill="rgb(237,100,13)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="559.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (4 samples, 0.03%)</title><rect x="82.5706%" y="533" width="0.0263%" height="15" fill="rgb(213,55,26)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (4 samples, 0.03%)</title><rect x="82.5706%" y="517" width="0.0263%" height="15" fill="rgb(216,17,4)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="527.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="82.5706%" y="501" width="0.0263%" height="15" fill="rgb(220,153,47)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="511.50"></text></g><g><title>rayon_core::join::join (4 samples, 0.03%)</title><rect x="82.5706%" y="485" width="0.0263%" height="15" fill="rgb(215,131,9)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="495.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.03%)</title><rect x="82.5706%" y="469" width="0.0263%" height="15" fill="rgb(233,46,42)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.03%)</title><rect x="82.5706%" y="453" width="0.0263%" height="15" fill="rgb(226,86,7)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="463.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.03%)</title><rect x="82.5706%" y="437" width="0.0263%" height="15" fill="rgb(239,226,21)" fg:x="12540" fg:w="4"/><text x="82.8206%" y="447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="82.5838%" y="421" width="0.0132%" height="15" fill="rgb(244,137,22)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="431.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="82.5838%" y="405" width="0.0132%" height="15" fill="rgb(211,139,35)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="415.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="82.5838%" y="389" width="0.0132%" height="15" fill="rgb(214,62,50)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="399.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="82.5838%" y="373" width="0.0132%" height="15" fill="rgb(212,113,44)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="383.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="82.5838%" y="357" width="0.0132%" height="15" fill="rgb(226,150,43)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="367.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="82.5838%" y="341" width="0.0132%" height="15" fill="rgb(250,71,37)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="351.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.5838%" y="325" width="0.0132%" height="15" fill="rgb(219,76,19)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="335.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.5838%" y="309" width="0.0132%" height="15" fill="rgb(250,39,11)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.5838%" y="293" width="0.0132%" height="15" fill="rgb(230,64,31)" fg:x="12542" fg:w="2"/><text x="82.8338%" y="303.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.03%)</title><rect x="82.5970%" y="933" width="0.0263%" height="15" fill="rgb(208,222,23)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.03%)</title><rect x="82.5970%" y="917" width="0.0263%" height="15" fill="rgb(227,125,18)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="927.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.03%)</title><rect x="82.5970%" y="901" width="0.0263%" height="15" fill="rgb(234,210,9)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="911.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.03%)</title><rect x="82.5970%" y="885" width="0.0263%" height="15" fill="rgb(217,127,24)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="895.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.03%)</title><rect x="82.5970%" y="869" width="0.0263%" height="15" fill="rgb(239,141,48)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="879.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.03%)</title><rect x="82.5970%" y="853" width="0.0263%" height="15" fill="rgb(227,109,8)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="863.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.03%)</title><rect x="82.5970%" y="837" width="0.0263%" height="15" fill="rgb(235,184,23)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="847.50"></text></g><g><title>std::panicking::try (4 samples, 0.03%)</title><rect x="82.5970%" y="821" width="0.0263%" height="15" fill="rgb(227,226,48)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="831.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="82.5970%" y="805" width="0.0263%" height="15" fill="rgb(206,150,11)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="815.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.03%)</title><rect x="82.5970%" y="789" width="0.0263%" height="15" fill="rgb(254,2,33)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="799.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (4 samples, 0.03%)</title><rect x="82.5970%" y="773" width="0.0263%" height="15" fill="rgb(243,160,20)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.03%)</title><rect x="82.5970%" y="757" width="0.0263%" height="15" fill="rgb(218,208,30)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="767.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (4 samples, 0.03%)</title><rect x="82.5970%" y="741" width="0.0263%" height="15" fill="rgb(224,120,49)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (4 samples, 0.03%)</title><rect x="82.5970%" y="725" width="0.0263%" height="15" fill="rgb(246,12,2)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.03%)</title><rect x="82.5970%" y="709" width="0.0263%" height="15" fill="rgb(236,117,3)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="719.50"></text></g><g><title>rayon_core::join::join (4 samples, 0.03%)</title><rect x="82.5970%" y="693" width="0.0263%" height="15" fill="rgb(216,128,52)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="703.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.03%)</title><rect x="82.5970%" y="677" width="0.0263%" height="15" fill="rgb(246,145,19)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="687.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.03%)</title><rect x="82.5970%" y="661" width="0.0263%" height="15" fill="rgb(222,11,46)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="671.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.03%)</title><rect x="82.5970%" y="645" width="0.0263%" height="15" fill="rgb(245,82,36)" fg:x="12544" fg:w="4"/><text x="82.8470%" y="655.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="82.6101%" y="629" width="0.0132%" height="15" fill="rgb(250,73,51)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="639.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="82.6101%" y="613" width="0.0132%" height="15" fill="rgb(221,189,23)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="623.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="82.6101%" y="597" width="0.0132%" height="15" fill="rgb(210,33,7)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="607.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="82.6101%" y="581" width="0.0132%" height="15" fill="rgb(210,107,22)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="591.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="82.6101%" y="565" width="0.0132%" height="15" fill="rgb(222,116,37)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="549" width="0.0132%" height="15" fill="rgb(254,17,48)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="559.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="533" width="0.0132%" height="15" fill="rgb(224,36,32)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="517" width="0.0132%" height="15" fill="rgb(232,90,46)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="527.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.6101%" y="501" width="0.0132%" height="15" fill="rgb(241,66,40)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="511.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="82.6101%" y="485" width="0.0132%" height="15" fill="rgb(249,184,29)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="495.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="82.6101%" y="469" width="0.0132%" height="15" fill="rgb(231,181,1)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="82.6101%" y="453" width="0.0132%" height="15" fill="rgb(224,94,2)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="463.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="437" width="0.0132%" height="15" fill="rgb(229,170,15)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="82.6101%" y="421" width="0.0132%" height="15" fill="rgb(240,127,35)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="431.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="82.6101%" y="405" width="0.0132%" height="15" fill="rgb(248,196,34)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="415.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="82.6101%" y="389" width="0.0132%" height="15" fill="rgb(236,137,7)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="399.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="82.6101%" y="373" width="0.0132%" height="15" fill="rgb(235,127,16)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="383.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="82.6101%" y="357" width="0.0132%" height="15" fill="rgb(250,192,54)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="367.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="341" width="0.0132%" height="15" fill="rgb(218,98,20)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="351.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="325" width="0.0132%" height="15" fill="rgb(230,176,47)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="335.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="309" width="0.0132%" height="15" fill="rgb(244,2,33)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="82.6101%" y="293" width="0.0132%" height="15" fill="rgb(231,100,17)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="303.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="82.6101%" y="277" width="0.0132%" height="15" fill="rgb(245,23,12)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="287.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="82.6101%" y="261" width="0.0132%" height="15" fill="rgb(249,55,22)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="271.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="82.6101%" y="245" width="0.0132%" height="15" fill="rgb(207,134,9)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="255.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="82.6101%" y="229" width="0.0132%" height="15" fill="rgb(218,134,0)" fg:x="12546" fg:w="2"/><text x="82.8601%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.14%)</title><rect x="82.6628%" y="309" width="0.1449%" height="15" fill="rgb(213,212,33)" fg:x="12554" fg:w="22"/><text x="82.9128%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (4 samples, 0.03%)</title><rect x="82.8077%" y="277" width="0.0263%" height="15" fill="rgb(252,106,18)" fg:x="12576" fg:w="4"/><text x="83.0577%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (124 samples, 0.82%)</title><rect x="82.8340%" y="277" width="0.8165%" height="15" fill="rgb(208,126,42)" fg:x="12580" fg:w="124"/><text x="83.0840%" y="287.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (124 samples, 0.82%)</title><rect x="82.8340%" y="261" width="0.8165%" height="15" fill="rgb(246,175,29)" fg:x="12580" fg:w="124"/><text x="83.0840%" y="271.50"></text></g><g><title>exp (112 samples, 0.74%)</title><rect x="82.9130%" y="245" width="0.7375%" height="15" fill="rgb(215,13,50)" fg:x="12592" fg:w="112"/><text x="83.1630%" y="255.50"></text></g><g><title>[libm-2.31.so] (75 samples, 0.49%)</title><rect x="83.1566%" y="229" width="0.4938%" height="15" fill="rgb(216,172,15)" fg:x="12629" fg:w="75"/><text x="83.4066%" y="239.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (143 samples, 0.94%)</title><rect x="82.8077%" y="293" width="0.9416%" height="15" fill="rgb(212,103,13)" fg:x="12576" fg:w="143"/><text x="83.0577%" y="303.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (15 samples, 0.10%)</title><rect x="83.6505%" y="277" width="0.0988%" height="15" fill="rgb(231,171,36)" fg:x="12704" fg:w="15"/><text x="83.9005%" y="287.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (15 samples, 0.10%)</title><rect x="83.6505%" y="261" width="0.0988%" height="15" fill="rgb(250,123,20)" fg:x="12704" fg:w="15"/><text x="83.9005%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (260 samples, 1.71%)</title><rect x="82.6299%" y="533" width="1.7120%" height="15" fill="rgb(212,53,50)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (260 samples, 1.71%)</title><rect x="82.6299%" y="517" width="1.7120%" height="15" fill="rgb(243,54,12)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (260 samples, 1.71%)</title><rect x="82.6299%" y="501" width="1.7120%" height="15" fill="rgb(234,101,34)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (260 samples, 1.71%)</title><rect x="82.6299%" y="485" width="1.7120%" height="15" fill="rgb(254,67,22)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (260 samples, 1.71%)</title><rect x="82.6299%" y="469" width="1.7120%" height="15" fill="rgb(250,35,47)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (260 samples, 1.71%)</title><rect x="82.6299%" y="453" width="1.7120%" height="15" fill="rgb(226,126,38)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="463.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (260 samples, 1.71%)</title><rect x="82.6299%" y="437" width="1.7120%" height="15" fill="rgb(216,138,53)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (260 samples, 1.71%)</title><rect x="82.6299%" y="421" width="1.7120%" height="15" fill="rgb(246,199,43)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (260 samples, 1.71%)</title><rect x="82.6299%" y="405" width="1.7120%" height="15" fill="rgb(232,125,11)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (260 samples, 1.71%)</title><rect x="82.6299%" y="389" width="1.7120%" height="15" fill="rgb(218,219,45)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (260 samples, 1.71%)</title><rect x="82.6299%" y="373" width="1.7120%" height="15" fill="rgb(216,102,54)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (260 samples, 1.71%)</title><rect x="82.6299%" y="357" width="1.7120%" height="15" fill="rgb(250,228,7)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (260 samples, 1.71%)</title><rect x="82.6299%" y="341" width="1.7120%" height="15" fill="rgb(226,125,25)" fg:x="12549" fg:w="260"/><text x="82.8799%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (255 samples, 1.68%)</title><rect x="82.6628%" y="325" width="1.6791%" height="15" fill="rgb(224,165,27)" fg:x="12554" fg:w="255"/><text x="82.9128%" y="335.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (233 samples, 1.53%)</title><rect x="82.8077%" y="309" width="1.5342%" height="15" fill="rgb(233,86,3)" fg:x="12576" fg:w="233"/><text x="83.0577%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (90 samples, 0.59%)</title><rect x="83.7493%" y="293" width="0.5926%" height="15" fill="rgb(228,116,20)" fg:x="12719" fg:w="90"/><text x="83.9993%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.13%)</title><rect x="84.3550%" y="245" width="0.1317%" height="15" fill="rgb(209,192,17)" fg:x="12811" fg:w="20"/><text x="84.6050%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (9 samples, 0.06%)</title><rect x="84.4867%" y="213" width="0.0593%" height="15" fill="rgb(224,88,34)" fg:x="12831" fg:w="9"/><text x="84.7367%" y="223.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (134 samples, 0.88%)</title><rect x="84.5460%" y="213" width="0.8823%" height="15" fill="rgb(233,38,6)" fg:x="12840" fg:w="134"/><text x="84.7960%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (134 samples, 0.88%)</title><rect x="84.5460%" y="197" width="0.8823%" height="15" fill="rgb(212,59,30)" fg:x="12840" fg:w="134"/><text x="84.7960%" y="207.50"></text></g><g><title>exp (116 samples, 0.76%)</title><rect x="84.6645%" y="181" width="0.7638%" height="15" fill="rgb(213,80,3)" fg:x="12858" fg:w="116"/><text x="84.9145%" y="191.50"></text></g><g><title>[libm-2.31.so] (79 samples, 0.52%)</title><rect x="84.9081%" y="165" width="0.5202%" height="15" fill="rgb(251,178,7)" fg:x="12895" fg:w="79"/><text x="85.1581%" y="175.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (157 samples, 1.03%)</title><rect x="84.4867%" y="229" width="1.0338%" height="15" fill="rgb(213,154,26)" fg:x="12831" fg:w="157"/><text x="84.7367%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (14 samples, 0.09%)</title><rect x="85.4283%" y="213" width="0.0922%" height="15" fill="rgb(238,165,49)" fg:x="12974" fg:w="14"/><text x="85.6783%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (14 samples, 0.09%)</title><rect x="85.4283%" y="197" width="0.0922%" height="15" fill="rgb(248,91,46)" fg:x="12974" fg:w="14"/><text x="85.6783%" y="207.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (515 samples, 3.39%)</title><rect x="82.6299%" y="645" width="3.3911%" height="15" fill="rgb(244,21,52)" fg:x="12549" fg:w="515"/><text x="82.8799%" y="655.50">ray..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (515 samples, 3.39%)</title><rect x="82.6299%" y="629" width="3.3911%" height="15" fill="rgb(247,122,20)" fg:x="12549" fg:w="515"/><text x="82.8799%" y="639.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (515 samples, 3.39%)</title><rect x="82.6299%" y="613" width="3.3911%" height="15" fill="rgb(218,27,9)" fg:x="12549" fg:w="515"/><text x="82.8799%" y="623.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (515 samples, 3.39%)</title><rect x="82.6299%" y="597" width="3.3911%" height="15" fill="rgb(246,7,6)" fg:x="12549" fg:w="515"/><text x="82.8799%" y="607.50">ray..</text></g><g><title>rayon_core::join::join_context (515 samples, 3.39%)</title><rect x="82.6299%" y="581" width="3.3911%" height="15" fill="rgb(227,135,54)" fg:x="12549" fg:w="515"/><text x="82.8799%" y="591.50">ray..</text></g><g><title>rayon_core::registry::in_worker (515 samples, 3.39%)</title><rect x="82.6299%" y="565" width="3.3911%" height="15" fill="rgb(247,14,11)" fg:x="12549" fg:w="515"/><text x="82.8799%" y="575.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (515 samples, 3.39%)</title><rect x="82.6299%" y="549" width="3.3911%" height="15" fill="rgb(206,149,34)" fg:x="12549" fg:w="515"/><text x="82.8799%" y="559.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (255 samples, 1.68%)</title><rect x="84.3419%" y="533" width="1.6791%" height="15" fill="rgb(227,228,4)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="543.50"></text></g><g><title>std::panic::catch_unwind (255 samples, 1.68%)</title><rect x="84.3419%" y="517" width="1.6791%" height="15" fill="rgb(238,218,28)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="527.50"></text></g><g><title>std::panicking::try (255 samples, 1.68%)</title><rect x="84.3419%" y="501" width="1.6791%" height="15" fill="rgb(252,86,40)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="511.50"></text></g><g><title>std::panicking::try::do_call (255 samples, 1.68%)</title><rect x="84.3419%" y="485" width="1.6791%" height="15" fill="rgb(251,225,11)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="495.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (255 samples, 1.68%)</title><rect x="84.3419%" y="469" width="1.6791%" height="15" fill="rgb(206,46,49)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (255 samples, 1.68%)</title><rect x="84.3419%" y="453" width="1.6791%" height="15" fill="rgb(245,128,24)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (255 samples, 1.68%)</title><rect x="84.3419%" y="437" width="1.6791%" height="15" fill="rgb(219,177,34)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (255 samples, 1.68%)</title><rect x="84.3419%" y="421" width="1.6791%" height="15" fill="rgb(218,60,48)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (255 samples, 1.68%)</title><rect x="84.3419%" y="405" width="1.6791%" height="15" fill="rgb(221,11,5)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (255 samples, 1.68%)</title><rect x="84.3419%" y="389" width="1.6791%" height="15" fill="rgb(220,148,13)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (255 samples, 1.68%)</title><rect x="84.3419%" y="373" width="1.6791%" height="15" fill="rgb(210,16,3)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (255 samples, 1.68%)</title><rect x="84.3419%" y="357" width="1.6791%" height="15" fill="rgb(236,80,2)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (255 samples, 1.68%)</title><rect x="84.3419%" y="341" width="1.6791%" height="15" fill="rgb(239,129,19)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (255 samples, 1.68%)</title><rect x="84.3419%" y="325" width="1.6791%" height="15" fill="rgb(220,106,35)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (255 samples, 1.68%)</title><rect x="84.3419%" y="309" width="1.6791%" height="15" fill="rgb(252,139,45)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (255 samples, 1.68%)</title><rect x="84.3419%" y="293" width="1.6791%" height="15" fill="rgb(229,8,36)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (255 samples, 1.68%)</title><rect x="84.3419%" y="277" width="1.6791%" height="15" fill="rgb(230,126,33)" fg:x="12809" fg:w="255"/><text x="84.5919%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (253 samples, 1.67%)</title><rect x="84.3550%" y="261" width="1.6659%" height="15" fill="rgb(239,140,21)" fg:x="12811" fg:w="253"/><text x="84.6050%" y="271.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (233 samples, 1.53%)</title><rect x="84.4867%" y="245" width="1.5342%" height="15" fill="rgb(254,104,9)" fg:x="12831" fg:w="233"/><text x="84.7367%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (76 samples, 0.50%)</title><rect x="85.5205%" y="229" width="0.5004%" height="15" fill="rgb(239,52,14)" fg:x="12988" fg:w="76"/><text x="85.7705%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.14%)</title><rect x="86.0670%" y="245" width="0.1449%" height="15" fill="rgb(208,227,44)" fg:x="13071" fg:w="22"/><text x="86.3170%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (9 samples, 0.06%)</title><rect x="86.2119%" y="213" width="0.0593%" height="15" fill="rgb(246,18,19)" fg:x="13093" fg:w="9"/><text x="86.4619%" y="223.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (121 samples, 0.80%)</title><rect x="86.2712%" y="213" width="0.7967%" height="15" fill="rgb(235,228,25)" fg:x="13102" fg:w="121"/><text x="86.5212%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (121 samples, 0.80%)</title><rect x="86.2712%" y="197" width="0.7967%" height="15" fill="rgb(240,156,20)" fg:x="13102" fg:w="121"/><text x="86.5212%" y="207.50"></text></g><g><title>exp (111 samples, 0.73%)</title><rect x="86.3370%" y="181" width="0.7309%" height="15" fill="rgb(224,8,20)" fg:x="13112" fg:w="111"/><text x="86.5870%" y="191.50"></text></g><g><title>[libm-2.31.so] (83 samples, 0.55%)</title><rect x="86.5214%" y="165" width="0.5465%" height="15" fill="rgb(214,12,52)" fg:x="13140" fg:w="83"/><text x="86.7714%" y="175.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (152 samples, 1.00%)</title><rect x="86.2119%" y="229" width="1.0009%" height="15" fill="rgb(211,220,47)" fg:x="13093" fg:w="152"/><text x="86.4619%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (22 samples, 0.14%)</title><rect x="87.0679%" y="213" width="0.1449%" height="15" fill="rgb(250,173,5)" fg:x="13223" fg:w="22"/><text x="87.3179%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (22 samples, 0.14%)</title><rect x="87.0679%" y="197" width="0.1449%" height="15" fill="rgb(250,125,52)" fg:x="13223" fg:w="22"/><text x="87.3179%" y="207.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (261 samples, 1.72%)</title><rect x="86.0209%" y="469" width="1.7186%" height="15" fill="rgb(209,133,18)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (261 samples, 1.72%)</title><rect x="86.0209%" y="453" width="1.7186%" height="15" fill="rgb(216,173,22)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (261 samples, 1.72%)</title><rect x="86.0209%" y="437" width="1.7186%" height="15" fill="rgb(205,3,22)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (261 samples, 1.72%)</title><rect x="86.0209%" y="421" width="1.7186%" height="15" fill="rgb(248,22,20)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (261 samples, 1.72%)</title><rect x="86.0209%" y="405" width="1.7186%" height="15" fill="rgb(233,6,29)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (261 samples, 1.72%)</title><rect x="86.0209%" y="389" width="1.7186%" height="15" fill="rgb(240,22,54)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (261 samples, 1.72%)</title><rect x="86.0209%" y="373" width="1.7186%" height="15" fill="rgb(231,133,32)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (261 samples, 1.72%)</title><rect x="86.0209%" y="357" width="1.7186%" height="15" fill="rgb(248,193,4)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (261 samples, 1.72%)</title><rect x="86.0209%" y="341" width="1.7186%" height="15" fill="rgb(211,178,46)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (261 samples, 1.72%)</title><rect x="86.0209%" y="325" width="1.7186%" height="15" fill="rgb(224,5,42)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (261 samples, 1.72%)</title><rect x="86.0209%" y="309" width="1.7186%" height="15" fill="rgb(239,176,25)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (261 samples, 1.72%)</title><rect x="86.0209%" y="293" width="1.7186%" height="15" fill="rgb(245,187,50)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (261 samples, 1.72%)</title><rect x="86.0209%" y="277" width="1.7186%" height="15" fill="rgb(248,24,15)" fg:x="13064" fg:w="261"/><text x="86.2709%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (254 samples, 1.67%)</title><rect x="86.0670%" y="261" width="1.6725%" height="15" fill="rgb(205,166,13)" fg:x="13071" fg:w="254"/><text x="86.3170%" y="271.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (232 samples, 1.53%)</title><rect x="86.2119%" y="245" width="1.5276%" height="15" fill="rgb(208,114,23)" fg:x="13093" fg:w="232"/><text x="86.4619%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (80 samples, 0.53%)</title><rect x="87.2127%" y="229" width="0.5268%" height="15" fill="rgb(239,127,18)" fg:x="13245" fg:w="80"/><text x="87.4627%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.15%)</title><rect x="87.7790%" y="181" width="0.1514%" height="15" fill="rgb(219,154,28)" fg:x="13331" fg:w="23"/><text x="88.0290%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (6 samples, 0.04%)</title><rect x="87.9305%" y="149" width="0.0395%" height="15" fill="rgb(225,157,23)" fg:x="13354" fg:w="6"/><text x="88.1805%" y="159.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (144 samples, 0.95%)</title><rect x="87.9700%" y="149" width="0.9482%" height="15" fill="rgb(219,8,6)" fg:x="13360" fg:w="144"/><text x="88.2200%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (144 samples, 0.95%)</title><rect x="87.9700%" y="133" width="0.9482%" height="15" fill="rgb(212,47,6)" fg:x="13360" fg:w="144"/><text x="88.2200%" y="143.50"></text></g><g><title>exp (124 samples, 0.82%)</title><rect x="88.1017%" y="117" width="0.8165%" height="15" fill="rgb(224,190,4)" fg:x="13380" fg:w="124"/><text x="88.3517%" y="127.50"></text></g><g><title>[libm-2.31.so] (88 samples, 0.58%)</title><rect x="88.3387%" y="101" width="0.5794%" height="15" fill="rgb(239,183,29)" fg:x="13416" fg:w="88"/><text x="88.5887%" y="111.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (172 samples, 1.13%)</title><rect x="87.9305%" y="165" width="1.1325%" height="15" fill="rgb(213,57,7)" fg:x="13354" fg:w="172"/><text x="88.1805%" y="175.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (21 samples, 0.14%)</title><rect x="88.9247%" y="149" width="0.1383%" height="15" fill="rgb(216,148,1)" fg:x="13505" fg:w="21"/><text x="89.1747%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (21 samples, 0.14%)</title><rect x="88.9247%" y="133" width="0.1383%" height="15" fill="rgb(236,182,29)" fg:x="13505" fg:w="21"/><text x="89.1747%" y="143.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,065 samples, 7.01%)</title><rect x="82.6299%" y="757" width="7.0126%" height="15" fill="rgb(244,120,48)" fg:x="12549" fg:w="1065"/><text x="82.8799%" y="767.50">rayon_cor..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,065 samples, 7.01%)</title><rect x="82.6299%" y="741" width="7.0126%" height="15" fill="rgb(206,71,34)" fg:x="12549" fg:w="1065"/><text x="82.8799%" y="751.50">rayon_cor..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,065 samples, 7.01%)</title><rect x="82.6299%" y="725" width="7.0126%" height="15" fill="rgb(242,32,6)" fg:x="12549" fg:w="1065"/><text x="82.8799%" y="735.50">rayon::it..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,065 samples, 7.01%)</title><rect x="82.6299%" y="709" width="7.0126%" height="15" fill="rgb(241,35,3)" fg:x="12549" fg:w="1065"/><text x="82.8799%" y="719.50">rayon::it..</text></g><g><title>rayon_core::join::join_context (1,065 samples, 7.01%)</title><rect x="82.6299%" y="693" width="7.0126%" height="15" fill="rgb(222,62,19)" fg:x="12549" fg:w="1065"/><text x="82.8799%" y="703.50">rayon_cor..</text></g><g><title>rayon_core::registry::in_worker (1,065 samples, 7.01%)</title><rect x="82.6299%" y="677" width="7.0126%" height="15" fill="rgb(223,110,41)" fg:x="12549" fg:w="1065"/><text x="82.8799%" y="687.50">rayon_cor..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,065 samples, 7.01%)</title><rect x="82.6299%" y="661" width="7.0126%" height="15" fill="rgb(208,224,4)" fg:x="12549" fg:w="1065"/><text x="82.8799%" y="671.50">rayon_cor..</text></g><g><title>rayon_core::unwind::halt_unwinding (550 samples, 3.62%)</title><rect x="86.0209%" y="645" width="3.6215%" height="15" fill="rgb(241,137,19)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="655.50">rayo..</text></g><g><title>std::panic::catch_unwind (550 samples, 3.62%)</title><rect x="86.0209%" y="629" width="3.6215%" height="15" fill="rgb(244,24,17)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="639.50">std:..</text></g><g><title>std::panicking::try (550 samples, 3.62%)</title><rect x="86.0209%" y="613" width="3.6215%" height="15" fill="rgb(245,178,49)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="623.50">std:..</text></g><g><title>std::panicking::try::do_call (550 samples, 3.62%)</title><rect x="86.0209%" y="597" width="3.6215%" height="15" fill="rgb(219,160,38)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="607.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (550 samples, 3.62%)</title><rect x="86.0209%" y="581" width="3.6215%" height="15" fill="rgb(228,137,14)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="591.50">&lt;std..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (550 samples, 3.62%)</title><rect x="86.0209%" y="565" width="3.6215%" height="15" fill="rgb(237,134,11)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="575.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (550 samples, 3.62%)</title><rect x="86.0209%" y="549" width="3.6215%" height="15" fill="rgb(211,126,44)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="559.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (550 samples, 3.62%)</title><rect x="86.0209%" y="533" width="3.6215%" height="15" fill="rgb(226,171,33)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="543.50">rayo..</text></g><g><title>rayon_core::join::join_context (550 samples, 3.62%)</title><rect x="86.0209%" y="517" width="3.6215%" height="15" fill="rgb(253,99,13)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="527.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (550 samples, 3.62%)</title><rect x="86.0209%" y="501" width="3.6215%" height="15" fill="rgb(244,48,7)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="511.50">rayo..</text></g><g><title>rayon_core::join::join_context::{{closure}} (550 samples, 3.62%)</title><rect x="86.0209%" y="485" width="3.6215%" height="15" fill="rgb(244,217,54)" fg:x="13064" fg:w="550"/><text x="86.2709%" y="495.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (289 samples, 1.90%)</title><rect x="87.7395%" y="469" width="1.9029%" height="15" fill="rgb(224,15,18)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="479.50">r..</text></g><g><title>std::panic::catch_unwind (289 samples, 1.90%)</title><rect x="87.7395%" y="453" width="1.9029%" height="15" fill="rgb(244,99,12)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="463.50">s..</text></g><g><title>std::panicking::try (289 samples, 1.90%)</title><rect x="87.7395%" y="437" width="1.9029%" height="15" fill="rgb(233,226,8)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="447.50">s..</text></g><g><title>std::panicking::try::do_call (289 samples, 1.90%)</title><rect x="87.7395%" y="421" width="1.9029%" height="15" fill="rgb(229,211,3)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="431.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (289 samples, 1.90%)</title><rect x="87.7395%" y="405" width="1.9029%" height="15" fill="rgb(216,140,21)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="415.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (289 samples, 1.90%)</title><rect x="87.7395%" y="389" width="1.9029%" height="15" fill="rgb(234,122,30)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="399.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (289 samples, 1.90%)</title><rect x="87.7395%" y="373" width="1.9029%" height="15" fill="rgb(236,25,46)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="383.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (289 samples, 1.90%)</title><rect x="87.7395%" y="357" width="1.9029%" height="15" fill="rgb(217,52,54)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="367.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (289 samples, 1.90%)</title><rect x="87.7395%" y="341" width="1.9029%" height="15" fill="rgb(222,29,26)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="351.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (289 samples, 1.90%)</title><rect x="87.7395%" y="325" width="1.9029%" height="15" fill="rgb(216,177,29)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="335.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (289 samples, 1.90%)</title><rect x="87.7395%" y="309" width="1.9029%" height="15" fill="rgb(247,136,51)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="319.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (289 samples, 1.90%)</title><rect x="87.7395%" y="293" width="1.9029%" height="15" fill="rgb(231,47,47)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="303.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (289 samples, 1.90%)</title><rect x="87.7395%" y="277" width="1.9029%" height="15" fill="rgb(211,192,36)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="287.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (289 samples, 1.90%)</title><rect x="87.7395%" y="261" width="1.9029%" height="15" fill="rgb(229,156,32)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="271.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (289 samples, 1.90%)</title><rect x="87.7395%" y="245" width="1.9029%" height="15" fill="rgb(248,213,20)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="255.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (289 samples, 1.90%)</title><rect x="87.7395%" y="229" width="1.9029%" height="15" fill="rgb(217,64,7)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="239.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (289 samples, 1.90%)</title><rect x="87.7395%" y="213" width="1.9029%" height="15" fill="rgb(232,142,8)" fg:x="13325" fg:w="289"/><text x="87.9895%" y="223.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (283 samples, 1.86%)</title><rect x="87.7790%" y="197" width="1.8634%" height="15" fill="rgb(224,92,44)" fg:x="13331" fg:w="283"/><text x="88.0290%" y="207.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (260 samples, 1.71%)</title><rect x="87.9305%" y="181" width="1.7120%" height="15" fill="rgb(214,169,17)" fg:x="13354" fg:w="260"/><text x="88.1805%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (88 samples, 0.58%)</title><rect x="89.0630%" y="165" width="0.5794%" height="15" fill="rgb(210,59,37)" fg:x="13526" fg:w="88"/><text x="89.3130%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.20%)</title><rect x="89.7083%" y="245" width="0.2041%" height="15" fill="rgb(214,116,48)" fg:x="13624" fg:w="31"/><text x="89.9583%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (3 samples, 0.02%)</title><rect x="89.9124%" y="213" width="0.0198%" height="15" fill="rgb(244,191,6)" fg:x="13655" fg:w="3"/><text x="90.1624%" y="223.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (161 samples, 1.06%)</title><rect x="89.9322%" y="213" width="1.0601%" height="15" fill="rgb(241,50,52)" fg:x="13658" fg:w="161"/><text x="90.1822%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (161 samples, 1.06%)</title><rect x="89.9322%" y="197" width="1.0601%" height="15" fill="rgb(236,75,39)" fg:x="13658" fg:w="161"/><text x="90.1822%" y="207.50"></text></g><g><title>exp (144 samples, 0.95%)</title><rect x="90.0441%" y="181" width="0.9482%" height="15" fill="rgb(236,99,0)" fg:x="13675" fg:w="144"/><text x="90.2941%" y="191.50"></text></g><g><title>[libm-2.31.so] (108 samples, 0.71%)</title><rect x="90.2812%" y="165" width="0.7111%" height="15" fill="rgb(207,202,15)" fg:x="13711" fg:w="108"/><text x="90.5312%" y="175.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (209 samples, 1.38%)</title><rect x="89.9124%" y="229" width="1.3762%" height="15" fill="rgb(233,207,14)" fg:x="13655" fg:w="209"/><text x="90.1624%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (45 samples, 0.30%)</title><rect x="90.9923%" y="213" width="0.2963%" height="15" fill="rgb(226,27,51)" fg:x="13819" fg:w="45"/><text x="91.2423%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (45 samples, 0.30%)</title><rect x="90.9923%" y="197" width="0.2963%" height="15" fill="rgb(206,104,42)" fg:x="13819" fg:w="45"/><text x="91.2423%" y="207.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (318 samples, 2.09%)</title><rect x="89.6490%" y="469" width="2.0939%" height="15" fill="rgb(212,225,4)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="479.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (318 samples, 2.09%)</title><rect x="89.6490%" y="453" width="2.0939%" height="15" fill="rgb(233,96,42)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="463.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (318 samples, 2.09%)</title><rect x="89.6490%" y="437" width="2.0939%" height="15" fill="rgb(229,21,32)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="447.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (318 samples, 2.09%)</title><rect x="89.6490%" y="421" width="2.0939%" height="15" fill="rgb(226,216,24)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="431.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (318 samples, 2.09%)</title><rect x="89.6490%" y="405" width="2.0939%" height="15" fill="rgb(221,163,17)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="415.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (318 samples, 2.09%)</title><rect x="89.6490%" y="389" width="2.0939%" height="15" fill="rgb(216,216,42)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="399.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (318 samples, 2.09%)</title><rect x="89.6490%" y="373" width="2.0939%" height="15" fill="rgb(240,118,7)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="383.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (318 samples, 2.09%)</title><rect x="89.6490%" y="357" width="2.0939%" height="15" fill="rgb(221,67,37)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="367.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (318 samples, 2.09%)</title><rect x="89.6490%" y="341" width="2.0939%" height="15" fill="rgb(241,32,44)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="351.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (318 samples, 2.09%)</title><rect x="89.6490%" y="325" width="2.0939%" height="15" fill="rgb(235,204,43)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="335.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (318 samples, 2.09%)</title><rect x="89.6490%" y="309" width="2.0939%" height="15" fill="rgb(213,116,10)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="319.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (318 samples, 2.09%)</title><rect x="89.6490%" y="293" width="2.0939%" height="15" fill="rgb(239,15,48)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="303.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (318 samples, 2.09%)</title><rect x="89.6490%" y="277" width="2.0939%" height="15" fill="rgb(207,123,36)" fg:x="13615" fg:w="318"/><text x="89.8990%" y="287.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (309 samples, 2.03%)</title><rect x="89.7083%" y="261" width="2.0346%" height="15" fill="rgb(209,103,30)" fg:x="13624" fg:w="309"/><text x="89.9583%" y="271.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (278 samples, 1.83%)</title><rect x="89.9124%" y="245" width="1.8305%" height="15" fill="rgb(238,100,19)" fg:x="13655" fg:w="278"/><text x="90.1624%" y="255.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (69 samples, 0.45%)</title><rect x="91.2886%" y="229" width="0.4543%" height="15" fill="rgb(244,30,14)" fg:x="13864" fg:w="69"/><text x="91.5386%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.18%)</title><rect x="91.8022%" y="181" width="0.1844%" height="15" fill="rgb(249,174,6)" fg:x="13942" fg:w="28"/><text x="92.0522%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (5 samples, 0.03%)</title><rect x="91.9866%" y="149" width="0.0329%" height="15" fill="rgb(235,213,41)" fg:x="13970" fg:w="5"/><text x="92.2366%" y="159.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (185 samples, 1.22%)</title><rect x="92.0195%" y="149" width="1.2181%" height="15" fill="rgb(213,118,6)" fg:x="13975" fg:w="185"/><text x="92.2695%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (185 samples, 1.22%)</title><rect x="92.0195%" y="133" width="1.2181%" height="15" fill="rgb(235,44,51)" fg:x="13975" fg:w="185"/><text x="92.2695%" y="143.50"></text></g><g><title>exp (159 samples, 1.05%)</title><rect x="92.1907%" y="117" width="1.0469%" height="15" fill="rgb(217,9,53)" fg:x="14001" fg:w="159"/><text x="92.4407%" y="127.50"></text></g><g><title>[libm-2.31.so] (125 samples, 0.82%)</title><rect x="92.4146%" y="101" width="0.8231%" height="15" fill="rgb(237,172,34)" fg:x="14035" fg:w="125"/><text x="92.6646%" y="111.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (226 samples, 1.49%)</title><rect x="91.9866%" y="165" width="1.4881%" height="15" fill="rgb(206,206,11)" fg:x="13970" fg:w="226"/><text x="92.2366%" y="175.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (36 samples, 0.24%)</title><rect x="93.2376%" y="149" width="0.2370%" height="15" fill="rgb(214,149,29)" fg:x="14160" fg:w="36"/><text x="93.4876%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (36 samples, 0.24%)</title><rect x="93.2376%" y="133" width="0.2370%" height="15" fill="rgb(208,123,3)" fg:x="14160" fg:w="36"/><text x="93.4876%" y="143.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (666 samples, 4.39%)</title><rect x="89.6490%" y="581" width="4.3853%" height="15" fill="rgb(229,126,4)" fg:x="13615" fg:w="666"/><text x="89.8990%" y="591.50">rayon..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (666 samples, 4.39%)</title><rect x="89.6490%" y="565" width="4.3853%" height="15" fill="rgb(222,92,36)" fg:x="13615" fg:w="666"/><text x="89.8990%" y="575.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (666 samples, 4.39%)</title><rect x="89.6490%" y="549" width="4.3853%" height="15" fill="rgb(216,39,41)" fg:x="13615" fg:w="666"/><text x="89.8990%" y="559.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (666 samples, 4.39%)</title><rect x="89.6490%" y="533" width="4.3853%" height="15" fill="rgb(253,127,28)" fg:x="13615" fg:w="666"/><text x="89.8990%" y="543.50">rayon..</text></g><g><title>rayon_core::join::join_context (666 samples, 4.39%)</title><rect x="89.6490%" y="517" width="4.3853%" height="15" fill="rgb(249,152,51)" fg:x="13615" fg:w="666"/><text x="89.8990%" y="527.50">rayon..</text></g><g><title>rayon_core::registry::in_worker (666 samples, 4.39%)</title><rect x="89.6490%" y="501" width="4.3853%" height="15" fill="rgb(209,123,42)" fg:x="13615" fg:w="666"/><text x="89.8990%" y="511.50">rayon..</text></g><g><title>rayon_core::join::join_context::{{closure}} (666 samples, 4.39%)</title><rect x="89.6490%" y="485" width="4.3853%" height="15" fill="rgb(241,118,22)" fg:x="13615" fg:w="666"/><text x="89.8990%" y="495.50">rayon..</text></g><g><title>rayon_core::unwind::halt_unwinding (348 samples, 2.29%)</title><rect x="91.7429%" y="469" width="2.2914%" height="15" fill="rgb(208,25,7)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="479.50">r..</text></g><g><title>std::panic::catch_unwind (348 samples, 2.29%)</title><rect x="91.7429%" y="453" width="2.2914%" height="15" fill="rgb(243,144,39)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="463.50">s..</text></g><g><title>std::panicking::try (348 samples, 2.29%)</title><rect x="91.7429%" y="437" width="2.2914%" height="15" fill="rgb(250,50,5)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="447.50">s..</text></g><g><title>std::panicking::try::do_call (348 samples, 2.29%)</title><rect x="91.7429%" y="421" width="2.2914%" height="15" fill="rgb(207,67,11)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="431.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (348 samples, 2.29%)</title><rect x="91.7429%" y="405" width="2.2914%" height="15" fill="rgb(245,204,40)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="415.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (348 samples, 2.29%)</title><rect x="91.7429%" y="389" width="2.2914%" height="15" fill="rgb(238,228,24)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="399.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (348 samples, 2.29%)</title><rect x="91.7429%" y="373" width="2.2914%" height="15" fill="rgb(217,116,22)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="383.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (348 samples, 2.29%)</title><rect x="91.7429%" y="357" width="2.2914%" height="15" fill="rgb(234,98,12)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="367.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (348 samples, 2.29%)</title><rect x="91.7429%" y="341" width="2.2914%" height="15" fill="rgb(242,170,50)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="351.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (348 samples, 2.29%)</title><rect x="91.7429%" y="325" width="2.2914%" height="15" fill="rgb(235,7,5)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="335.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (348 samples, 2.29%)</title><rect x="91.7429%" y="309" width="2.2914%" height="15" fill="rgb(241,114,28)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="319.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (348 samples, 2.29%)</title><rect x="91.7429%" y="293" width="2.2914%" height="15" fill="rgb(246,112,42)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="303.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (348 samples, 2.29%)</title><rect x="91.7429%" y="277" width="2.2914%" height="15" fill="rgb(248,228,14)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="287.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (348 samples, 2.29%)</title><rect x="91.7429%" y="261" width="2.2914%" height="15" fill="rgb(208,133,18)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="271.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (348 samples, 2.29%)</title><rect x="91.7429%" y="245" width="2.2914%" height="15" fill="rgb(207,35,49)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="255.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (348 samples, 2.29%)</title><rect x="91.7429%" y="229" width="2.2914%" height="15" fill="rgb(205,68,36)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="239.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (348 samples, 2.29%)</title><rect x="91.7429%" y="213" width="2.2914%" height="15" fill="rgb(245,62,40)" fg:x="13933" fg:w="348"/><text x="91.9929%" y="223.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (339 samples, 2.23%)</title><rect x="91.8022%" y="197" width="2.2322%" height="15" fill="rgb(228,27,24)" fg:x="13942" fg:w="339"/><text x="92.0522%" y="207.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (311 samples, 2.05%)</title><rect x="91.9866%" y="181" width="2.0478%" height="15" fill="rgb(253,19,12)" fg:x="13970" fg:w="311"/><text x="92.2366%" y="191.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (85 samples, 0.56%)</title><rect x="93.4747%" y="165" width="0.5597%" height="15" fill="rgb(232,28,20)" fg:x="14196" fg:w="85"/><text x="93.7247%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.16%)</title><rect x="94.0673%" y="181" width="0.1580%" height="15" fill="rgb(218,35,51)" fg:x="14286" fg:w="24"/><text x="94.3173%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (7 samples, 0.05%)</title><rect x="94.2253%" y="149" width="0.0461%" height="15" fill="rgb(212,90,40)" fg:x="14310" fg:w="7"/><text x="94.4753%" y="159.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (225 samples, 1.48%)</title><rect x="94.2714%" y="149" width="1.4815%" height="15" fill="rgb(220,172,12)" fg:x="14317" fg:w="225"/><text x="94.5214%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (225 samples, 1.48%)</title><rect x="94.2714%" y="133" width="1.4815%" height="15" fill="rgb(226,159,20)" fg:x="14317" fg:w="225"/><text x="94.5214%" y="143.50"></text></g><g><title>exp (212 samples, 1.40%)</title><rect x="94.3570%" y="117" width="1.3959%" height="15" fill="rgb(234,205,16)" fg:x="14330" fg:w="212"/><text x="94.6070%" y="127.50"></text></g><g><title>[libm-2.31.so] (169 samples, 1.11%)</title><rect x="94.6402%" y="101" width="1.1128%" height="15" fill="rgb(207,9,39)" fg:x="14373" fg:w="169"/><text x="94.8902%" y="111.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (48 samples, 0.32%)</title><rect x="95.7529%" y="149" width="0.3161%" height="15" fill="rgb(249,143,15)" fg:x="14542" fg:w="48"/><text x="96.0029%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (48 samples, 0.32%)</title><rect x="95.7529%" y="133" width="0.3161%" height="15" fill="rgb(253,133,29)" fg:x="14542" fg:w="48"/><text x="96.0029%" y="143.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (282 samples, 1.86%)</title><rect x="94.2253%" y="165" width="1.8569%" height="15" fill="rgb(221,187,0)" fg:x="14310" fg:w="282"/><text x="94.4753%" y="175.50">&lt;..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (2 samples, 0.01%)</title><rect x="96.0690%" y="149" width="0.0132%" height="15" fill="rgb(205,204,26)" fg:x="14590" fg:w="2"/><text x="96.3190%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (2 samples, 0.01%)</title><rect x="96.0690%" y="133" width="0.0132%" height="15" fill="rgb(224,68,54)" fg:x="14590" fg:w="2"/><text x="96.3190%" y="143.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (84 samples, 0.55%)</title><rect x="96.0822%" y="165" width="0.5531%" height="15" fill="rgb(209,67,4)" fg:x="14592" fg:w="84"/><text x="96.3322%" y="175.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (396 samples, 2.61%)</title><rect x="94.0344%" y="405" width="2.6075%" height="15" fill="rgb(228,229,18)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="415.50">ra..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (396 samples, 2.61%)</title><rect x="94.0344%" y="389" width="2.6075%" height="15" fill="rgb(231,89,13)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="399.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (396 samples, 2.61%)</title><rect x="94.0344%" y="373" width="2.6075%" height="15" fill="rgb(210,182,18)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="383.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (396 samples, 2.61%)</title><rect x="94.0344%" y="357" width="2.6075%" height="15" fill="rgb(240,105,2)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="367.50">ra..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (396 samples, 2.61%)</title><rect x="94.0344%" y="341" width="2.6075%" height="15" fill="rgb(207,170,50)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="351.50">ra..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (396 samples, 2.61%)</title><rect x="94.0344%" y="325" width="2.6075%" height="15" fill="rgb(232,133,24)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="335.50">&lt;r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (396 samples, 2.61%)</title><rect x="94.0344%" y="309" width="2.6075%" height="15" fill="rgb(235,166,27)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="319.50">ra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (396 samples, 2.61%)</title><rect x="94.0344%" y="293" width="2.6075%" height="15" fill="rgb(209,19,13)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="303.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (396 samples, 2.61%)</title><rect x="94.0344%" y="277" width="2.6075%" height="15" fill="rgb(226,79,39)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="287.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (396 samples, 2.61%)</title><rect x="94.0344%" y="261" width="2.6075%" height="15" fill="rgb(222,163,10)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="271.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (396 samples, 2.61%)</title><rect x="94.0344%" y="245" width="2.6075%" height="15" fill="rgb(214,44,19)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="255.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (396 samples, 2.61%)</title><rect x="94.0344%" y="229" width="2.6075%" height="15" fill="rgb(210,217,13)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="239.50">cr..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (396 samples, 2.61%)</title><rect x="94.0344%" y="213" width="2.6075%" height="15" fill="rgb(237,61,54)" fg:x="14281" fg:w="396"/><text x="94.2844%" y="223.50">cr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (391 samples, 2.57%)</title><rect x="94.0673%" y="197" width="2.5746%" height="15" fill="rgb(226,184,24)" fg:x="14286" fg:w="391"/><text x="94.3173%" y="207.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (367 samples, 2.42%)</title><rect x="94.2253%" y="181" width="2.4165%" height="15" fill="rgb(223,226,4)" fg:x="14310" fg:w="367"/><text x="94.4753%" y="191.50">cr..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.16%)</title><rect x="96.7143%" y="117" width="0.1646%" height="15" fill="rgb(210,26,41)" fg:x="14688" fg:w="25"/><text x="96.9643%" y="127.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (5 samples, 0.03%)</title><rect x="96.8789%" y="85" width="0.0329%" height="15" fill="rgb(220,221,6)" fg:x="14713" fg:w="5"/><text x="97.1289%" y="95.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (248 samples, 1.63%)</title><rect x="96.9118%" y="85" width="1.6330%" height="15" fill="rgb(225,89,49)" fg:x="14718" fg:w="248"/><text x="97.1618%" y="95.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (248 samples, 1.63%)</title><rect x="96.9118%" y="69" width="1.6330%" height="15" fill="rgb(218,70,45)" fg:x="14718" fg:w="248"/><text x="97.1618%" y="79.50"></text></g><g><title>exp (240 samples, 1.58%)</title><rect x="96.9645%" y="53" width="1.5803%" height="15" fill="rgb(238,166,21)" fg:x="14726" fg:w="240"/><text x="97.2145%" y="63.50"></text></g><g><title>[libm-2.31.so] (185 samples, 1.22%)</title><rect x="97.3267%" y="37" width="1.2181%" height="15" fill="rgb(224,141,44)" fg:x="14781" fg:w="185"/><text x="97.5767%" y="47.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (69 samples, 0.45%)</title><rect x="98.5514%" y="85" width="0.4543%" height="15" fill="rgb(230,12,49)" fg:x="14967" fg:w="69"/><text x="98.8014%" y="95.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (69 samples, 0.45%)</title><rect x="98.5514%" y="69" width="0.4543%" height="15" fill="rgb(212,174,12)" fg:x="14967" fg:w="69"/><text x="98.8014%" y="79.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (324 samples, 2.13%)</title><rect x="96.8789%" y="101" width="2.1334%" height="15" fill="rgb(246,67,9)" fg:x="14713" fg:w="324"/><text x="97.1289%" y="111.50">&lt;..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,579 samples, 16.98%)</title><rect x="82.6233%" y="837" width="16.9816%" height="15" fill="rgb(239,35,23)" fg:x="12548" fg:w="2579"/><text x="82.8733%" y="847.50">rayon::iter::plumbing::bri..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,579 samples, 16.98%)</title><rect x="82.6233%" y="821" width="16.9816%" height="15" fill="rgb(211,167,0)" fg:x="12548" fg:w="2579"/><text x="82.8733%" y="831.50">rayon::iter::plumbing::bri..</text></g><g><title>rayon_core::join::join_context (2,578 samples, 16.98%)</title><rect x="82.6299%" y="805" width="16.9750%" height="15" fill="rgb(225,119,45)" fg:x="12549" fg:w="2578"/><text x="82.8799%" y="815.50">rayon_core::join::join_con..</text></g><g><title>rayon_core::registry::in_worker (2,578 samples, 16.98%)</title><rect x="82.6299%" y="789" width="16.9750%" height="15" fill="rgb(210,162,6)" fg:x="12549" fg:w="2578"/><text x="82.8799%" y="799.50">rayon_core::registry::in_w..</text></g><g><title>rayon_core::join::join_context::{{closure}} (2,578 samples, 16.98%)</title><rect x="82.6299%" y="773" width="16.9750%" height="15" fill="rgb(208,118,35)" fg:x="12549" fg:w="2578"/><text x="82.8799%" y="783.50">rayon_core::join::join_con..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,513 samples, 9.96%)</title><rect x="89.6425%" y="757" width="9.9625%" height="15" fill="rgb(239,4,53)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="767.50">rayon_core::un..</text></g><g><title>std::panic::catch_unwind (1,513 samples, 9.96%)</title><rect x="89.6425%" y="741" width="9.9625%" height="15" fill="rgb(213,130,21)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="751.50">std::panic::ca..</text></g><g><title>std::panicking::try (1,513 samples, 9.96%)</title><rect x="89.6425%" y="725" width="9.9625%" height="15" fill="rgb(235,148,0)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="735.50">std::panicking..</text></g><g><title>std::panicking::try::do_call (1,513 samples, 9.96%)</title><rect x="89.6425%" y="709" width="9.9625%" height="15" fill="rgb(244,224,18)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="719.50">std::panicking..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,513 samples, 9.96%)</title><rect x="89.6425%" y="693" width="9.9625%" height="15" fill="rgb(211,214,4)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="703.50">&lt;std::panic::A..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,513 samples, 9.96%)</title><rect x="89.6425%" y="677" width="9.9625%" height="15" fill="rgb(206,119,25)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="687.50">rayon_core::jo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,513 samples, 9.96%)</title><rect x="89.6425%" y="661" width="9.9625%" height="15" fill="rgb(243,93,47)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="671.50">rayon::iter::p..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,513 samples, 9.96%)</title><rect x="89.6425%" y="645" width="9.9625%" height="15" fill="rgb(224,194,6)" fg:x="13614" fg:w="1513"/><text x="89.8925%" y="655.50">rayon::iter::p..</text></g><g><title>rayon_core::join::join_context (1,512 samples, 9.96%)</title><rect x="89.6490%" y="629" width="9.9559%" height="15" fill="rgb(243,229,6)" fg:x="13615" fg:w="1512"/><text x="89.8990%" y="639.50">rayon_core::jo..</text></g><g><title>rayon_core::registry::in_worker (1,512 samples, 9.96%)</title><rect x="89.6490%" y="613" width="9.9559%" height="15" fill="rgb(207,23,50)" fg:x="13615" fg:w="1512"/><text x="89.8990%" y="623.50">rayon_core::re..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,512 samples, 9.96%)</title><rect x="89.6490%" y="597" width="9.9559%" height="15" fill="rgb(253,192,32)" fg:x="13615" fg:w="1512"/><text x="89.8990%" y="607.50">rayon_core::jo..</text></g><g><title>rayon_core::unwind::halt_unwinding (846 samples, 5.57%)</title><rect x="94.0344%" y="581" width="5.5706%" height="15" fill="rgb(213,21,6)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="591.50">rayon_c..</text></g><g><title>std::panic::catch_unwind (846 samples, 5.57%)</title><rect x="94.0344%" y="565" width="5.5706%" height="15" fill="rgb(243,151,13)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="575.50">std::pa..</text></g><g><title>std::panicking::try (846 samples, 5.57%)</title><rect x="94.0344%" y="549" width="5.5706%" height="15" fill="rgb(233,165,41)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="559.50">std::pa..</text></g><g><title>std::panicking::try::do_call (846 samples, 5.57%)</title><rect x="94.0344%" y="533" width="5.5706%" height="15" fill="rgb(246,176,45)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="543.50">std::pa..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (846 samples, 5.57%)</title><rect x="94.0344%" y="517" width="5.5706%" height="15" fill="rgb(217,170,52)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="527.50">&lt;std::p..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (846 samples, 5.57%)</title><rect x="94.0344%" y="501" width="5.5706%" height="15" fill="rgb(214,203,54)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="511.50">rayon_c..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (846 samples, 5.57%)</title><rect x="94.0344%" y="485" width="5.5706%" height="15" fill="rgb(248,215,49)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="495.50">rayon::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (846 samples, 5.57%)</title><rect x="94.0344%" y="469" width="5.5706%" height="15" fill="rgb(208,46,10)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="479.50">rayon::..</text></g><g><title>rayon_core::join::join_context (846 samples, 5.57%)</title><rect x="94.0344%" y="453" width="5.5706%" height="15" fill="rgb(254,5,31)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="463.50">rayon_c..</text></g><g><title>rayon_core::registry::in_worker (846 samples, 5.57%)</title><rect x="94.0344%" y="437" width="5.5706%" height="15" fill="rgb(222,104,33)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="447.50">rayon_c..</text></g><g><title>rayon_core::join::join_context::{{closure}} (846 samples, 5.57%)</title><rect x="94.0344%" y="421" width="5.5706%" height="15" fill="rgb(248,49,16)" fg:x="14281" fg:w="846"/><text x="94.2844%" y="431.50">rayon_c..</text></g><g><title>rayon_core::unwind::halt_unwinding (450 samples, 2.96%)</title><rect x="96.6419%" y="405" width="2.9631%" height="15" fill="rgb(232,198,41)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="415.50">ray..</text></g><g><title>std::panic::catch_unwind (450 samples, 2.96%)</title><rect x="96.6419%" y="389" width="2.9631%" height="15" fill="rgb(214,125,3)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="399.50">std..</text></g><g><title>std::panicking::try (450 samples, 2.96%)</title><rect x="96.6419%" y="373" width="2.9631%" height="15" fill="rgb(229,220,28)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="383.50">std..</text></g><g><title>std::panicking::try::do_call (450 samples, 2.96%)</title><rect x="96.6419%" y="357" width="2.9631%" height="15" fill="rgb(222,64,37)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="367.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (450 samples, 2.96%)</title><rect x="96.6419%" y="341" width="2.9631%" height="15" fill="rgb(249,184,13)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="351.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (450 samples, 2.96%)</title><rect x="96.6419%" y="325" width="2.9631%" height="15" fill="rgb(252,176,6)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="335.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (450 samples, 2.96%)</title><rect x="96.6419%" y="309" width="2.9631%" height="15" fill="rgb(228,153,7)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="319.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (450 samples, 2.96%)</title><rect x="96.6419%" y="293" width="2.9631%" height="15" fill="rgb(242,193,5)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="303.50">ray..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (450 samples, 2.96%)</title><rect x="96.6419%" y="277" width="2.9631%" height="15" fill="rgb(232,140,9)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="287.50">ray..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (450 samples, 2.96%)</title><rect x="96.6419%" y="261" width="2.9631%" height="15" fill="rgb(213,222,16)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="271.50">&lt;ra..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (450 samples, 2.96%)</title><rect x="96.6419%" y="245" width="2.9631%" height="15" fill="rgb(222,75,50)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="255.50">ray..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (450 samples, 2.96%)</title><rect x="96.6419%" y="229" width="2.9631%" height="15" fill="rgb(205,180,2)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="239.50">&lt;co..</text></g><g><title>core::option::Option&lt;T&gt;::map (450 samples, 2.96%)</title><rect x="96.6419%" y="213" width="2.9631%" height="15" fill="rgb(216,34,7)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="223.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (450 samples, 2.96%)</title><rect x="96.6419%" y="197" width="2.9631%" height="15" fill="rgb(253,16,32)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="207.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (450 samples, 2.96%)</title><rect x="96.6419%" y="181" width="2.9631%" height="15" fill="rgb(208,97,28)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="191.50">cor..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (450 samples, 2.96%)</title><rect x="96.6419%" y="165" width="2.9631%" height="15" fill="rgb(225,92,11)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="175.50">cri..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (450 samples, 2.96%)</title><rect x="96.6419%" y="149" width="2.9631%" height="15" fill="rgb(243,38,12)" fg:x="14677" fg:w="450"/><text x="96.8919%" y="159.50">cri..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (439 samples, 2.89%)</title><rect x="96.7143%" y="133" width="2.8906%" height="15" fill="rgb(208,139,16)" fg:x="14688" fg:w="439"/><text x="96.9643%" y="143.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (414 samples, 2.73%)</title><rect x="96.8789%" y="117" width="2.7260%" height="15" fill="rgb(227,24,9)" fg:x="14713" fg:w="414"/><text x="97.1289%" y="127.50">cr..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (90 samples, 0.59%)</title><rect x="99.0123%" y="101" width="0.5926%" height="15" fill="rgb(206,62,11)" fg:x="15037" fg:w="90"/><text x="99.2623%" y="111.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.6115%" y="581" width="0.0132%" height="15" fill="rgb(228,134,27)" fg:x="15128" fg:w="2"/><text x="99.8615%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="99.6115%" y="565" width="0.0132%" height="15" fill="rgb(205,55,33)" fg:x="15128" fg:w="2"/><text x="99.8615%" y="575.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6115%" y="549" width="0.0132%" height="15" fill="rgb(243,75,43)" fg:x="15128" fg:w="2"/><text x="99.8615%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6115%" y="533" width="0.0132%" height="15" fill="rgb(223,27,42)" fg:x="15128" fg:w="2"/><text x="99.8615%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6115%" y="517" width="0.0132%" height="15" fill="rgb(232,189,33)" fg:x="15128" fg:w="2"/><text x="99.8615%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="99.6115%" y="725" width="0.0198%" height="15" fill="rgb(210,9,39)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="99.6115%" y="709" width="0.0198%" height="15" fill="rgb(242,85,26)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="719.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (3 samples, 0.02%)</title><rect x="99.6115%" y="693" width="0.0198%" height="15" fill="rgb(248,44,4)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="703.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (3 samples, 0.02%)</title><rect x="99.6115%" y="677" width="0.0198%" height="15" fill="rgb(250,96,46)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="99.6115%" y="661" width="0.0198%" height="15" fill="rgb(229,116,26)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="671.50"></text></g><g><title>rayon_core::join::join (3 samples, 0.02%)</title><rect x="99.6115%" y="645" width="0.0198%" height="15" fill="rgb(246,94,34)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="655.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="99.6115%" y="629" width="0.0198%" height="15" fill="rgb(251,73,21)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="99.6115%" y="613" width="0.0198%" height="15" fill="rgb(254,121,25)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="99.6115%" y="597" width="0.0198%" height="15" fill="rgb(215,161,49)" fg:x="15128" fg:w="3"/><text x="99.8615%" y="607.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.6378%" y="517" width="0.0132%" height="15" fill="rgb(221,43,13)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="501" width="0.0132%" height="15" fill="rgb(249,5,37)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="511.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="485" width="0.0132%" height="15" fill="rgb(226,25,44)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="495.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="469" width="0.0132%" height="15" fill="rgb(238,189,16)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="479.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6378%" y="453" width="0.0132%" height="15" fill="rgb(251,186,8)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="463.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6378%" y="437" width="0.0132%" height="15" fill="rgb(254,34,31)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="447.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6378%" y="421" width="0.0132%" height="15" fill="rgb(225,215,27)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="431.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6378%" y="405" width="0.0132%" height="15" fill="rgb(221,192,48)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="389" width="0.0132%" height="15" fill="rgb(219,137,20)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.6378%" y="373" width="0.0132%" height="15" fill="rgb(219,84,11)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="383.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="357" width="0.0132%" height="15" fill="rgb(224,10,23)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="367.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="341" width="0.0132%" height="15" fill="rgb(248,22,39)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="351.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="325" width="0.0132%" height="15" fill="rgb(212,154,20)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="335.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6378%" y="309" width="0.0132%" height="15" fill="rgb(236,199,50)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="319.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6378%" y="293" width="0.0132%" height="15" fill="rgb(211,9,17)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="303.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6378%" y="277" width="0.0132%" height="15" fill="rgb(243,216,36)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6378%" y="261" width="0.0132%" height="15" fill="rgb(250,2,10)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6378%" y="245" width="0.0132%" height="15" fill="rgb(226,50,48)" fg:x="15132" fg:w="2"/><text x="99.8878%" y="255.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.6510%" y="309" width="0.0132%" height="15" fill="rgb(243,81,16)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="319.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="99.6510%" y="293" width="0.0132%" height="15" fill="rgb(250,14,2)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="303.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6510%" y="277" width="0.0132%" height="15" fill="rgb(233,135,29)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6510%" y="261" width="0.0132%" height="15" fill="rgb(224,64,43)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="271.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6510%" y="245" width="0.0132%" height="15" fill="rgb(238,84,13)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="255.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6510%" y="229" width="0.0132%" height="15" fill="rgb(253,48,26)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="239.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6510%" y="213" width="0.0132%" height="15" fill="rgb(205,223,31)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6510%" y="197" width="0.0132%" height="15" fill="rgb(221,41,32)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="207.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6510%" y="181" width="0.0132%" height="15" fill="rgb(213,158,31)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="191.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.6510%" y="165" width="0.0132%" height="15" fill="rgb(245,126,43)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="175.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="99.6510%" y="149" width="0.0132%" height="15" fill="rgb(227,7,22)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="159.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6510%" y="133" width="0.0132%" height="15" fill="rgb(252,90,44)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="143.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6510%" y="117" width="0.0132%" height="15" fill="rgb(253,91,0)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="127.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6510%" y="101" width="0.0132%" height="15" fill="rgb(252,175,49)" fg:x="15134" fg:w="2"/><text x="99.9010%" y="111.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5,214 samples, 34.33%)</title><rect x="65.3388%" y="1109" width="34.3320%" height="15" fill="rgb(246,150,1)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1119.50">rayon_core::registry::WorkerThread::execute</text></g><g><title>rayon_core::job::JobRef::execute (5,214 samples, 34.33%)</title><rect x="65.3388%" y="1093" width="34.3320%" height="15" fill="rgb(241,192,25)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1103.50">rayon_core::job::JobRef::execute</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,214 samples, 34.33%)</title><rect x="65.3388%" y="1077" width="34.3320%" height="15" fill="rgb(239,187,11)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1087.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Jo..</text></g><g><title>rayon_core::unwind::halt_unwinding (5,214 samples, 34.33%)</title><rect x="65.3388%" y="1061" width="34.3320%" height="15" fill="rgb(218,202,51)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1071.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (5,214 samples, 34.33%)</title><rect x="65.3388%" y="1045" width="34.3320%" height="15" fill="rgb(225,176,8)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,214 samples, 34.33%)</title><rect x="65.3388%" y="1029" width="34.3320%" height="15" fill="rgb(219,122,41)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,214 samples, 34.33%)</title><rect x="65.3388%" y="1013" width="34.3320%" height="15" fill="rgb(248,140,20)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1023.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,214 samples, 34.33%)</title><rect x="65.3388%" y="997" width="34.3320%" height="15" fill="rgb(245,41,37)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="1007.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function:..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5,214 samples, 34.33%)</title><rect x="65.3388%" y="981" width="34.3320%" height="15" fill="rgb(235,82,39)" fg:x="9923" fg:w="5214"/><text x="65.5888%" y="991.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Jo..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (2,593 samples, 17.07%)</title><rect x="82.5970%" y="965" width="17.0738%" height="15" fill="rgb(230,108,42)" fg:x="12544" fg:w="2593"/><text x="82.8470%" y="975.50">rayon_core::registry::Regi..</text></g><g><title>rayon_core::join::join_context::{{closure}} (2,593 samples, 17.07%)</title><rect x="82.5970%" y="949" width="17.0738%" height="15" fill="rgb(215,150,50)" fg:x="12544" fg:w="2593"/><text x="82.8470%" y="959.50">rayon_core::join::join_con..</text></g><g><title>rayon_core::unwind::halt_unwinding (2,589 samples, 17.05%)</title><rect x="82.6233%" y="933" width="17.0475%" height="15" fill="rgb(233,212,5)" fg:x="12548" fg:w="2589"/><text x="82.8733%" y="943.50">rayon_core::unwind::halt_u..</text></g><g><title>std::panic::catch_unwind (2,589 samples, 17.05%)</title><rect x="82.6233%" y="917" width="17.0475%" height="15" fill="rgb(245,80,22)" fg:x="12548" fg:w="2589"/><text x="82.8733%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,589 samples, 17.05%)</title><rect x="82.6233%" y="901" width="17.0475%" height="15" fill="rgb(238,129,16)" fg:x="12548" fg:w="2589"/><text x="82.8733%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,589 samples, 17.05%)</title><rect x="82.6233%" y="885" width="17.0475%" height="15" fill="rgb(240,19,0)" fg:x="12548" fg:w="2589"/><text x="82.8733%" y="895.50">std::panicking::try::do_ca..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,589 samples, 17.05%)</title><rect x="82.6233%" y="869" width="17.0475%" height="15" fill="rgb(232,42,35)" fg:x="12548" fg:w="2589"/><text x="82.8733%" y="879.50">&lt;std::panic::AssertUnwindS..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2,589 samples, 17.05%)</title><rect x="82.6233%" y="853" width="17.0475%" height="15" fill="rgb(223,130,24)" fg:x="12548" fg:w="2589"/><text x="82.8733%" y="863.50">rayon_core::join::join_con..</text></g><g><title>rayon_core::join::join::call::{{closure}} (10 samples, 0.07%)</title><rect x="99.6049%" y="837" width="0.0658%" height="15" fill="rgb(237,16,22)" fg:x="15127" fg:w="10"/><text x="99.8549%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (10 samples, 0.07%)</title><rect x="99.6049%" y="821" width="0.0658%" height="15" fill="rgb(248,192,20)" fg:x="15127" fg:w="10"/><text x="99.8549%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.07%)</title><rect x="99.6049%" y="805" width="0.0658%" height="15" fill="rgb(233,167,2)" fg:x="15127" fg:w="10"/><text x="99.8549%" y="815.50"></text></g><g><title>rayon_core::join::join (9 samples, 0.06%)</title><rect x="99.6115%" y="789" width="0.0593%" height="15" fill="rgb(252,71,44)" fg:x="15128" fg:w="9"/><text x="99.8615%" y="799.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.06%)</title><rect x="99.6115%" y="773" width="0.0593%" height="15" fill="rgb(238,37,47)" fg:x="15128" fg:w="9"/><text x="99.8615%" y="783.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.06%)</title><rect x="99.6115%" y="757" width="0.0593%" height="15" fill="rgb(214,202,54)" fg:x="15128" fg:w="9"/><text x="99.8615%" y="767.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.06%)</title><rect x="99.6115%" y="741" width="0.0593%" height="15" fill="rgb(254,165,40)" fg:x="15128" fg:w="9"/><text x="99.8615%" y="751.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="99.6378%" y="725" width="0.0329%" height="15" fill="rgb(246,173,38)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="735.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="99.6378%" y="709" width="0.0329%" height="15" fill="rgb(215,3,27)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="719.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="99.6378%" y="693" width="0.0329%" height="15" fill="rgb(239,169,51)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="703.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="99.6378%" y="677" width="0.0329%" height="15" fill="rgb(212,5,25)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="687.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="99.6378%" y="661" width="0.0329%" height="15" fill="rgb(243,45,17)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="99.6378%" y="645" width="0.0329%" height="15" fill="rgb(242,97,9)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="655.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (5 samples, 0.03%)</title><rect x="99.6378%" y="629" width="0.0329%" height="15" fill="rgb(228,71,31)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="639.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (5 samples, 0.03%)</title><rect x="99.6378%" y="613" width="0.0329%" height="15" fill="rgb(252,184,16)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="623.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.03%)</title><rect x="99.6378%" y="597" width="0.0329%" height="15" fill="rgb(236,169,46)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="607.50"></text></g><g><title>rayon_core::join::join (5 samples, 0.03%)</title><rect x="99.6378%" y="581" width="0.0329%" height="15" fill="rgb(207,17,47)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="591.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.03%)</title><rect x="99.6378%" y="565" width="0.0329%" height="15" fill="rgb(206,201,28)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.03%)</title><rect x="99.6378%" y="549" width="0.0329%" height="15" fill="rgb(224,184,23)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="559.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.03%)</title><rect x="99.6378%" y="533" width="0.0329%" height="15" fill="rgb(208,139,48)" fg:x="15132" fg:w="5"/><text x="99.8878%" y="543.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.02%)</title><rect x="99.6510%" y="517" width="0.0198%" height="15" fill="rgb(208,130,10)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="527.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="99.6510%" y="501" width="0.0198%" height="15" fill="rgb(211,213,45)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="511.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="99.6510%" y="485" width="0.0198%" height="15" fill="rgb(235,100,30)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="495.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="99.6510%" y="469" width="0.0198%" height="15" fill="rgb(206,144,31)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="479.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="99.6510%" y="453" width="0.0198%" height="15" fill="rgb(224,200,26)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="463.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.02%)</title><rect x="99.6510%" y="437" width="0.0198%" height="15" fill="rgb(247,104,53)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="447.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (3 samples, 0.02%)</title><rect x="99.6510%" y="421" width="0.0198%" height="15" fill="rgb(220,14,17)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="431.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (3 samples, 0.02%)</title><rect x="99.6510%" y="405" width="0.0198%" height="15" fill="rgb(230,140,40)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="415.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="99.6510%" y="389" width="0.0198%" height="15" fill="rgb(229,2,41)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="399.50"></text></g><g><title>rayon_core::join::join (3 samples, 0.02%)</title><rect x="99.6510%" y="373" width="0.0198%" height="15" fill="rgb(232,89,16)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="383.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="99.6510%" y="357" width="0.0198%" height="15" fill="rgb(247,59,52)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="99.6510%" y="341" width="0.0198%" height="15" fill="rgb(226,110,21)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="351.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="99.6510%" y="325" width="0.0198%" height="15" fill="rgb(224,176,43)" fg:x="15134" fg:w="3"/><text x="99.9010%" y="335.50"></text></g><g><title>bench_ex14-23cd (15,139 samples, 99.68%)</title><rect x="0.0000%" y="1413" width="99.6839%" height="15" fill="rgb(221,73,6)" fg:x="0" fg:w="15139"/><text x="0.2500%" y="1423.50">bench_ex14-23cd</text></g><g><title>clone (5,217 samples, 34.35%)</title><rect x="65.3322%" y="1397" width="34.3517%" height="15" fill="rgb(232,78,19)" fg:x="9922" fg:w="5217"/><text x="65.5822%" y="1407.50">clone</text></g><g><title>start_thread (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1381" width="34.3452%" height="15" fill="rgb(233,112,48)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1391.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1365" width="34.3452%" height="15" fill="rgb(243,131,47)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1375.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1349" width="34.3452%" height="15" fill="rgb(226,51,1)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1359.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1333" width="34.3452%" height="15" fill="rgb(247,58,7)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1343.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1317" width="34.3452%" height="15" fill="rgb(209,7,32)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1327.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1301" width="34.3452%" height="15" fill="rgb(209,39,41)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1311.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::panic::catch_unwind (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1285" width="34.3452%" height="15" fill="rgb(226,182,46)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1269" width="34.3452%" height="15" fill="rgb(230,219,10)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1253" width="34.3452%" height="15" fill="rgb(227,175,30)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1263.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1237" width="34.3452%" height="15" fill="rgb(217,2,50)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1247.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1221" width="34.3452%" height="15" fill="rgb(229,160,0)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1231.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{cl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1205" width="34.3452%" height="15" fill="rgb(207,78,37)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1215.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1189" width="34.3452%" height="15" fill="rgb(225,57,0)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1199.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::regis..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1173" width="34.3452%" height="15" fill="rgb(232,154,2)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1183.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1157" width="34.3452%" height="15" fill="rgb(241,212,25)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1167.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1141" width="34.3452%" height="15" fill="rgb(226,69,20)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1151.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5,216 samples, 34.35%)</title><rect x="65.3388%" y="1125" width="34.3452%" height="15" fill="rgb(247,184,54)" fg:x="9923" fg:w="5216"/><text x="65.5888%" y="1135.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (2 samples, 0.01%)</title><rect x="99.6708%" y="1109" width="0.0132%" height="15" fill="rgb(210,145,0)" fg:x="15137" fg:w="2"/><text x="99.9208%" y="1119.50"></text></g><g><title>__sched_yield (2 samples, 0.01%)</title><rect x="99.6708%" y="1093" width="0.0132%" height="15" fill="rgb(253,82,12)" fg:x="15137" fg:w="2"/><text x="99.9208%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.6708%" y="1077" width="0.0132%" height="15" fill="rgb(245,42,11)" fg:x="15137" fg:w="2"/><text x="99.9208%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.6708%" y="1061" width="0.0132%" height="15" fill="rgb(219,147,32)" fg:x="15137" fg:w="2"/><text x="99.9208%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.6708%" y="1045" width="0.0132%" height="15" fill="rgb(246,12,7)" fg:x="15137" fg:w="2"/><text x="99.9208%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.6708%" y="1029" width="0.0132%" height="15" fill="rgb(243,50,9)" fg:x="15137" fg:w="2"/><text x="99.9208%" y="1039.50"></text></g><g><title>cargo::cli::main (2 samples, 0.01%)</title><rect x="99.6971%" y="1381" width="0.0132%" height="15" fill="rgb(219,149,6)" fg:x="15141" fg:w="2"/><text x="99.9471%" y="1391.50"></text></g><g><title>cargo::commands::metadata::exec (2 samples, 0.01%)</title><rect x="99.6971%" y="1365" width="0.0132%" height="15" fill="rgb(241,51,42)" fg:x="15141" fg:w="2"/><text x="99.9471%" y="1375.50"></text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (2 samples, 0.01%)</title><rect x="99.6971%" y="1349" width="0.0132%" height="15" fill="rgb(226,128,27)" fg:x="15141" fg:w="2"/><text x="99.9471%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="99.7300%" y="1205" width="0.0198%" height="15" fill="rgb(244,144,4)" fg:x="15146" fg:w="3"/><text x="99.9800%" y="1215.50"></text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (3 samples, 0.02%)</title><rect x="99.7300%" y="1189" width="0.0198%" height="15" fill="rgb(221,4,13)" fg:x="15146" fg:w="3"/><text x="99.9800%" y="1199.50"></text></g><g><title>cargo::sources::registry::index::IndexSummary::parse (3 samples, 0.02%)</title><rect x="99.7300%" y="1173" width="0.0198%" height="15" fill="rgb(208,170,28)" fg:x="15146" fg:w="3"/><text x="99.9800%" y="1183.50"></text></g><g><title>cargo::core::summary::Summary::new (2 samples, 0.01%)</title><rect x="99.7366%" y="1157" width="0.0132%" height="15" fill="rgb(226,131,13)" fg:x="15147" fg:w="2"/><text x="99.9866%" y="1167.50"></text></g><g><title>cargo::core::summary::build_feature_map (2 samples, 0.01%)</title><rect x="99.7366%" y="1141" width="0.0132%" height="15" fill="rgb(215,72,41)" fg:x="15147" fg:w="2"/><text x="99.9866%" y="1151.50"></text></g><g><title>unicode_xid::tables::derived_property::XID_Continue (2 samples, 0.01%)</title><rect x="99.7366%" y="1125" width="0.0132%" height="15" fill="rgb(243,108,20)" fg:x="15147" fg:w="2"/><text x="99.9866%" y="1135.50"></text></g><g><title>cargo::core::resolver::resolve (8 samples, 0.05%)</title><rect x="99.7234%" y="1381" width="0.0527%" height="15" fill="rgb(230,189,17)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1391.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (8 samples, 0.05%)</title><rect x="99.7234%" y="1365" width="0.0527%" height="15" fill="rgb(220,50,17)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1375.50"></text></g><g><title>cargo::core::resolver::activate (8 samples, 0.05%)</title><rect x="99.7234%" y="1349" width="0.0527%" height="15" fill="rgb(248,152,48)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1359.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (8 samples, 0.05%)</title><rect x="99.7234%" y="1333" width="0.0527%" height="15" fill="rgb(244,91,11)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1343.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.05%)</title><rect x="99.7234%" y="1317" width="0.0527%" height="15" fill="rgb(220,157,5)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.05%)</title><rect x="99.7234%" y="1301" width="0.0527%" height="15" fill="rgb(253,137,8)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1311.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps::_{{closure}} (8 samples, 0.05%)</title><rect x="99.7234%" y="1285" width="0.0527%" height="15" fill="rgb(217,137,51)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1295.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (8 samples, 0.05%)</title><rect x="99.7234%" y="1269" width="0.0527%" height="15" fill="rgb(218,209,53)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1279.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (8 samples, 0.05%)</title><rect x="99.7234%" y="1253" width="0.0527%" height="15" fill="rgb(249,137,25)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1263.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (8 samples, 0.05%)</title><rect x="99.7234%" y="1237" width="0.0527%" height="15" fill="rgb(239,155,26)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1247.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (8 samples, 0.05%)</title><rect x="99.7234%" y="1221" width="0.0527%" height="15" fill="rgb(227,85,46)" fg:x="15145" fg:w="8"/><text x="99.9734%" y="1231.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::summaries (4 samples, 0.03%)</title><rect x="99.7498%" y="1205" width="0.0263%" height="15" fill="rgb(251,107,43)" fg:x="15149" fg:w="4"/><text x="99.9998%" y="1215.50"></text></g><g><title>std::fs::read::inner (3 samples, 0.02%)</title><rect x="99.7564%" y="1189" width="0.0198%" height="15" fill="rgb(234,170,33)" fg:x="15150" fg:w="3"/><text x="100.0064%" y="1199.50"></text></g><g><title>std::io::Read::read_to_end (2 samples, 0.01%)</title><rect x="99.7630%" y="1173" width="0.0132%" height="15" fill="rgb(206,29,35)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1183.50"></text></g><g><title>std::io::read_to_end (2 samples, 0.01%)</title><rect x="99.7630%" y="1157" width="0.0132%" height="15" fill="rgb(227,138,25)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1167.50"></text></g><g><title>std::io::read_to_end_with_reservation (2 samples, 0.01%)</title><rect x="99.7630%" y="1141" width="0.0132%" height="15" fill="rgb(249,131,35)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1151.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.01%)</title><rect x="99.7630%" y="1125" width="0.0132%" height="15" fill="rgb(239,6,40)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1135.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.01%)</title><rect x="99.7630%" y="1109" width="0.0132%" height="15" fill="rgb(246,136,47)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1119.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.01%)</title><rect x="99.7630%" y="1093" width="0.0132%" height="15" fill="rgb(253,58,26)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1103.50"></text></g><g><title>__libc_read (2 samples, 0.01%)</title><rect x="99.7630%" y="1077" width="0.0132%" height="15" fill="rgb(237,141,10)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="1061" width="0.0132%" height="15" fill="rgb(234,156,12)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="1045" width="0.0132%" height="15" fill="rgb(243,224,36)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="1029" width="0.0132%" height="15" fill="rgb(205,229,51)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="1013" width="0.0132%" height="15" fill="rgb(223,189,4)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="997" width="0.0132%" height="15" fill="rgb(249,167,54)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="981" width="0.0132%" height="15" fill="rgb(218,34,28)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="965" width="0.0132%" height="15" fill="rgb(232,109,42)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="949" width="0.0132%" height="15" fill="rgb(248,214,46)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="933" width="0.0132%" height="15" fill="rgb(244,216,40)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="917" width="0.0132%" height="15" fill="rgb(231,226,31)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="901" width="0.0132%" height="15" fill="rgb(238,38,43)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="885" width="0.0132%" height="15" fill="rgb(208,88,43)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="869" width="0.0132%" height="15" fill="rgb(205,136,37)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="853" width="0.0132%" height="15" fill="rgb(237,34,14)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="837" width="0.0132%" height="15" fill="rgb(236,193,44)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="821" width="0.0132%" height="15" fill="rgb(231,48,10)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="805" width="0.0132%" height="15" fill="rgb(213,141,34)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="789" width="0.0132%" height="15" fill="rgb(249,130,34)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="773" width="0.0132%" height="15" fill="rgb(219,42,41)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="757" width="0.0132%" height="15" fill="rgb(224,100,54)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7630%" y="741" width="0.0132%" height="15" fill="rgb(229,200,27)" fg:x="15151" fg:w="2"/><text x="100.0130%" y="751.50"></text></g><g><title>cargo::core::workspace::Packages::load (2 samples, 0.01%)</title><rect x="99.7761%" y="1381" width="0.0132%" height="15" fill="rgb(217,118,10)" fg:x="15153" fg:w="2"/><text x="100.0261%" y="1391.50"></text></g><g><title>cargo::util::toml::read_manifest (2 samples, 0.01%)</title><rect x="99.7761%" y="1365" width="0.0132%" height="15" fill="rgb(206,22,3)" fg:x="15153" fg:w="2"/><text x="100.0261%" y="1375.50"></text></g><g><title>cargo::ops::lockfile::load_pkg_lockfile (2 samples, 0.01%)</title><rect x="99.7893%" y="1333" width="0.0132%" height="15" fill="rgb(232,163,46)" fg:x="15155" fg:w="2"/><text x="100.0393%" y="1343.50"></text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (3 samples, 0.02%)</title><rect x="99.7893%" y="1381" width="0.0198%" height="15" fill="rgb(206,95,13)" fg:x="15155" fg:w="3"/><text x="100.0393%" y="1391.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (3 samples, 0.02%)</title><rect x="99.7893%" y="1365" width="0.0198%" height="15" fill="rgb(253,154,18)" fg:x="15155" fg:w="3"/><text x="100.0393%" y="1375.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (3 samples, 0.02%)</title><rect x="99.7893%" y="1349" width="0.0198%" height="15" fill="rgb(219,32,23)" fg:x="15155" fg:w="3"/><text x="100.0393%" y="1359.50"></text></g><g><title>toml::de::Deserializer::value (2 samples, 0.01%)</title><rect x="99.8288%" y="1269" width="0.0132%" height="15" fill="rgb(230,191,45)" fg:x="15161" fg:w="2"/><text x="100.0788%" y="1279.50"></text></g><g><title>toml::tokens::Tokenizer::next (2 samples, 0.01%)</title><rect x="99.8288%" y="1253" width="0.0132%" height="15" fill="rgb(229,64,36)" fg:x="15161" fg:w="2"/><text x="100.0788%" y="1263.50"></text></g><g><title>toml::tokens::Tokenizer::read_string (2 samples, 0.01%)</title><rect x="99.8288%" y="1237" width="0.0132%" height="15" fill="rgb(205,129,25)" fg:x="15161" fg:w="2"/><text x="100.0788%" y="1247.50"></text></g><g><title>toml::de::Deserializer::tables (6 samples, 0.04%)</title><rect x="99.8156%" y="1301" width="0.0395%" height="15" fill="rgb(254,112,7)" fg:x="15159" fg:w="6"/><text x="100.0656%" y="1311.50"></text></g><g><title>toml::de::Deserializer::value (4 samples, 0.03%)</title><rect x="99.8288%" y="1285" width="0.0263%" height="15" fill="rgb(226,53,48)" fg:x="15161" fg:w="4"/><text x="100.0788%" y="1295.50"></text></g><g><title>cargo::util::toml::parse (8 samples, 0.05%)</title><rect x="99.8090%" y="1349" width="0.0527%" height="15" fill="rgb(214,153,38)" fg:x="15158" fg:w="8"/><text x="100.0590%" y="1359.50"></text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (8 samples, 0.05%)</title><rect x="99.8090%" y="1333" width="0.0527%" height="15" fill="rgb(243,101,7)" fg:x="15158" fg:w="8"/><text x="100.0590%" y="1343.50"></text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.05%)</title><rect x="99.8090%" y="1317" width="0.0527%" height="15" fill="rgb(240,140,22)" fg:x="15158" fg:w="8"/><text x="100.0590%" y="1327.50"></text></g><g><title>cargo::ops::cargo_read_manifest::read_package (10 samples, 0.07%)</title><rect x="99.8090%" y="1381" width="0.0658%" height="15" fill="rgb(235,114,2)" fg:x="15158" fg:w="10"/><text x="100.0590%" y="1391.50"></text></g><g><title>cargo::util::toml::read_manifest (10 samples, 0.07%)</title><rect x="99.8090%" y="1365" width="0.0658%" height="15" fill="rgb(242,59,12)" fg:x="15158" fg:w="10"/><text x="100.0590%" y="1375.50"></text></g><g><title>cargo_util::paths::read (2 samples, 0.01%)</title><rect x="99.8617%" y="1349" width="0.0132%" height="15" fill="rgb(252,134,9)" fg:x="15166" fg:w="2"/><text x="100.1117%" y="1359.50"></text></g><g><title>std::fs::read::inner (2 samples, 0.01%)</title><rect x="99.8617%" y="1333" width="0.0132%" height="15" fill="rgb(236,4,44)" fg:x="15166" fg:w="2"/><text x="100.1117%" y="1343.50"></text></g><g><title>&lt;toml::value::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.01%)</title><rect x="99.8881%" y="1333" width="0.0132%" height="15" fill="rgb(254,172,41)" fg:x="15170" fg:w="2"/><text x="100.1381%" y="1343.50"></text></g><g><title>&lt;serde_ignored::Deserializer&lt;D,F&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.01%)</title><rect x="99.8881%" y="1317" width="0.0132%" height="15" fill="rgb(244,63,20)" fg:x="15170" fg:w="2"/><text x="100.1381%" y="1327.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.01%)</title><rect x="99.8881%" y="1301" width="0.0132%" height="15" fill="rgb(250,73,31)" fg:x="15170" fg:w="2"/><text x="100.1381%" y="1311.50"></text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (2 samples, 0.01%)</title><rect x="99.8881%" y="1285" width="0.0132%" height="15" fill="rgb(241,38,36)" fg:x="15170" fg:w="2"/><text x="100.1381%" y="1295.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.02%)</title><rect x="99.8881%" y="1365" width="0.0198%" height="15" fill="rgb(245,211,2)" fg:x="15170" fg:w="3"/><text x="100.1381%" y="1375.50"></text></g><g><title>&lt;cargo::util::toml::_::&lt;impl serde::de::Deserialize for cargo::util::toml::TomlManifest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.02%)</title><rect x="99.8881%" y="1349" width="0.0198%" height="15" fill="rgb(206,120,28)" fg:x="15170" fg:w="3"/><text x="100.1381%" y="1359.50"></text></g><g><title>cargo::util::toml::TomlManifest::to_real_manifest (4 samples, 0.03%)</title><rect x="99.9078%" y="1365" width="0.0263%" height="15" fill="rgb(211,59,34)" fg:x="15173" fg:w="4"/><text x="100.1578%" y="1375.50"></text></g><g><title>cargo::util::toml::targets::targets (2 samples, 0.01%)</title><rect x="99.9210%" y="1349" width="0.0132%" height="15" fill="rgb(233,168,5)" fg:x="15175" fg:w="2"/><text x="100.1710%" y="1359.50"></text></g><g><title>[unknown] (39 samples, 0.26%)</title><rect x="99.6905%" y="1397" width="0.2568%" height="15" fill="rgb(234,33,13)" fg:x="15140" fg:w="39"/><text x="99.9405%" y="1407.50"></text></g><g><title>cargo::util::toml::read_manifest (9 samples, 0.06%)</title><rect x="99.8881%" y="1381" width="0.0593%" height="15" fill="rgb(231,150,26)" fg:x="15170" fg:w="9"/><text x="100.1381%" y="1391.50"></text></g><g><title>cargo::util::toml::parse (2 samples, 0.01%)</title><rect x="99.9342%" y="1365" width="0.0132%" height="15" fill="rgb(217,191,4)" fg:x="15177" fg:w="2"/><text x="100.1842%" y="1375.50"></text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (2 samples, 0.01%)</title><rect x="99.9342%" y="1349" width="0.0132%" height="15" fill="rgb(246,198,38)" fg:x="15177" fg:w="2"/><text x="100.1842%" y="1359.50"></text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.01%)</title><rect x="99.9342%" y="1333" width="0.0132%" height="15" fill="rgb(245,64,37)" fg:x="15177" fg:w="2"/><text x="100.1842%" y="1343.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.01%)</title><rect x="99.9342%" y="1317" width="0.0132%" height="15" fill="rgb(250,30,36)" fg:x="15177" fg:w="2"/><text x="100.1842%" y="1327.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.01%)</title><rect x="99.9342%" y="1301" width="0.0132%" height="15" fill="rgb(217,86,53)" fg:x="15177" fg:w="2"/><text x="100.1842%" y="1311.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.01%)</title><rect x="99.9342%" y="1285" width="0.0132%" height="15" fill="rgb(228,157,16)" fg:x="15177" fg:w="2"/><text x="100.1842%" y="1295.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.01%)</title><rect x="99.9342%" y="1269" width="0.0132%" height="15" fill="rgb(217,59,31)" fg:x="15177" fg:w="2"/><text x="100.1842%" y="1279.50"></text></g><g><title>cargo::commands::metadata::exec (2 samples, 0.01%)</title><rect x="99.9539%" y="1205" width="0.0132%" height="15" fill="rgb(237,138,41)" fg:x="15180" fg:w="2"/><text x="100.2039%" y="1215.50"></text></g><g><title>cargo::core::shell::Shell::print_json (2 samples, 0.01%)</title><rect x="99.9539%" y="1189" width="0.0132%" height="15" fill="rgb(227,91,49)" fg:x="15180" fg:w="2"/><text x="100.2039%" y="1199.50"></text></g><g><title>cargo::ops::cargo_output_metadata::_::&lt;impl serde::ser::Serialize for cargo::ops::cargo_output_metadata::ExportInfo&gt;::serialize (2 samples, 0.01%)</title><rect x="99.9539%" y="1173" width="0.0132%" height="15" fill="rgb(247,21,44)" fg:x="15180" fg:w="2"/><text x="100.2039%" y="1183.50"></text></g><g><title>ASN1_item_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="1013" width="0.0198%" height="15" fill="rgb(219,210,51)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="1023.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="997" width="0.0198%" height="15" fill="rgb(209,140,6)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="1007.50"></text></g><g><title>asn1_template_ex_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="981" width="0.0198%" height="15" fill="rgb(221,188,24)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="991.50"></text></g><g><title>asn1_template_noexp_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="965" width="0.0198%" height="15" fill="rgb(232,154,20)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="975.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="949" width="0.0198%" height="15" fill="rgb(244,137,50)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="959.50"></text></g><g><title>asn1_template_ex_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="933" width="0.0198%" height="15" fill="rgb(225,185,43)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="943.50"></text></g><g><title>asn1_template_noexp_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="917" width="0.0198%" height="15" fill="rgb(213,205,38)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="927.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="901" width="0.0198%" height="15" fill="rgb(236,73,12)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="911.50"></text></g><g><title>x509_name_ex_d2i (3 samples, 0.02%)</title><rect x="99.9671%" y="885" width="0.0198%" height="15" fill="rgb(235,219,13)" fg:x="15182" fg:w="3"/><text x="100.2171%" y="895.50"></text></g><g><title>x509_name_canon (2 samples, 0.01%)</title><rect x="99.9737%" y="869" width="0.0132%" height="15" fill="rgb(218,59,36)" fg:x="15183" fg:w="2"/><text x="100.2237%" y="879.50"></text></g><g><title>cargo::ops::registry::needs_custom_http_transport (4 samples, 0.03%)</title><rect x="99.9671%" y="1205" width="0.0263%" height="15" fill="rgb(205,110,39)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1215.50"></text></g><g><title>cargo::ops::registry::http_proxy (4 samples, 0.03%)</title><rect x="99.9671%" y="1189" width="0.0263%" height="15" fill="rgb(218,206,42)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1199.50"></text></g><g><title>git2::config::Config::open_default (4 samples, 0.03%)</title><rect x="99.9671%" y="1173" width="0.0263%" height="15" fill="rgb(248,125,24)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1183.50"></text></g><g><title>libgit2_sys::init (4 samples, 0.03%)</title><rect x="99.9671%" y="1157" width="0.0263%" height="15" fill="rgb(242,28,27)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1167.50"></text></g><g><title>std::sync::once::Once::call_inner (4 samples, 0.03%)</title><rect x="99.9671%" y="1141" width="0.0263%" height="15" fill="rgb(216,228,15)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1151.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (4 samples, 0.03%)</title><rect x="99.9671%" y="1125" width="0.0263%" height="15" fill="rgb(235,116,46)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1135.50"></text></g><g><title>git_runtime_init (4 samples, 0.03%)</title><rect x="99.9671%" y="1109" width="0.0263%" height="15" fill="rgb(224,18,32)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1119.50"></text></g><g><title>git_openssl_stream_global_init (4 samples, 0.03%)</title><rect x="99.9671%" y="1093" width="0.0263%" height="15" fill="rgb(252,5,12)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1103.50"></text></g><g><title>X509_STORE_set_default_paths (4 samples, 0.03%)</title><rect x="99.9671%" y="1077" width="0.0263%" height="15" fill="rgb(251,36,5)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1087.50"></text></g><g><title>by_file_ctrl (4 samples, 0.03%)</title><rect x="99.9671%" y="1061" width="0.0263%" height="15" fill="rgb(217,53,14)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1071.50"></text></g><g><title>X509_load_cert_crl_file (4 samples, 0.03%)</title><rect x="99.9671%" y="1045" width="0.0263%" height="15" fill="rgb(215,86,45)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1055.50"></text></g><g><title>PEM_X509_INFO_read_bio (4 samples, 0.03%)</title><rect x="99.9671%" y="1029" width="0.0263%" height="15" fill="rgb(242,169,11)" fg:x="15182" fg:w="4"/><text x="100.2171%" y="1039.50"></text></g><g><title>all (15,187 samples, 100%)</title><rect x="0.0000%" y="1429" width="100.0000%" height="15" fill="rgb(211,213,45)" fg:x="0" fg:w="15187"/><text x="0.2500%" y="1439.50"></text></g><g><title>cargo (48 samples, 0.32%)</title><rect x="99.6839%" y="1413" width="0.3161%" height="15" fill="rgb(205,88,11)" fg:x="15139" fg:w="48"/><text x="99.9339%" y="1423.50"></text></g><g><title>_start (8 samples, 0.05%)</title><rect x="99.9473%" y="1397" width="0.0527%" height="15" fill="rgb(252,69,26)" fg:x="15179" fg:w="8"/><text x="100.1973%" y="1407.50"></text></g><g><title>__libc_start_main (8 samples, 0.05%)</title><rect x="99.9473%" y="1381" width="0.0527%" height="15" fill="rgb(246,123,37)" fg:x="15179" fg:w="8"/><text x="100.1973%" y="1391.50"></text></g><g><title>main (7 samples, 0.05%)</title><rect x="99.9539%" y="1365" width="0.0461%" height="15" fill="rgb(212,205,5)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1375.50"></text></g><g><title>std::rt::lang_start_internal (7 samples, 0.05%)</title><rect x="99.9539%" y="1349" width="0.0461%" height="15" fill="rgb(253,148,0)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.05%)</title><rect x="99.9539%" y="1333" width="0.0461%" height="15" fill="rgb(239,22,4)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1343.50"></text></g><g><title>std::panicking::try (7 samples, 0.05%)</title><rect x="99.9539%" y="1317" width="0.0461%" height="15" fill="rgb(226,26,53)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.05%)</title><rect x="99.9539%" y="1301" width="0.0461%" height="15" fill="rgb(225,229,45)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.05%)</title><rect x="99.9539%" y="1285" width="0.0461%" height="15" fill="rgb(220,60,37)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1295.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (7 samples, 0.05%)</title><rect x="99.9539%" y="1269" width="0.0461%" height="15" fill="rgb(217,180,35)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1279.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.05%)</title><rect x="99.9539%" y="1253" width="0.0461%" height="15" fill="rgb(229,7,53)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1263.50"></text></g><g><title>cargo::main (7 samples, 0.05%)</title><rect x="99.9539%" y="1237" width="0.0461%" height="15" fill="rgb(254,137,3)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1247.50"></text></g><g><title>cargo::cli::main (7 samples, 0.05%)</title><rect x="99.9539%" y="1221" width="0.0461%" height="15" fill="rgb(215,140,41)" fg:x="15180" fg:w="7"/><text x="100.2039%" y="1231.50"></text></g></svg></svg>