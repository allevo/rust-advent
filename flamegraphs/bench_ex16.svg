<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1638" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1621.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1621.00"> </text><svg id="frames" x="10" width="1180" total_samples="17279"><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="0.0000%" y="1253" width="0.0116%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.0000%" y="1237" width="0.0116%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.0000%" y="1221" width="0.0116%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="0.0000%" y="1205" width="0.0116%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="0.0000%" y="1189" width="0.0116%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="0.0000%" y="1173" width="0.0116%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="0.0000%" y="1157" width="0.0116%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="0.0000%" y="1141" width="0.0116%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="0.0000%" y="1125" width="0.0116%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1135.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (6 samples, 0.03%)</title><rect x="0.0174%" y="1157" width="0.0347%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="6"/><text x="0.2674%" y="1167.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (6 samples, 0.03%)</title><rect x="0.0174%" y="1141" width="0.0347%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="6"/><text x="0.2674%" y="1151.50"></text></g><g><title>exp (3 samples, 0.02%)</title><rect x="0.0347%" y="1125" width="0.0174%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="3"/><text x="0.2847%" y="1135.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (7 samples, 0.04%)</title><rect x="0.0174%" y="1173" width="0.0405%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="7"/><text x="0.2674%" y="1183.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (9 samples, 0.05%)</title><rect x="0.0174%" y="1221" width="0.0521%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="9"/><text x="0.2674%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.05%)</title><rect x="0.0174%" y="1205" width="0.0521%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="9"/><text x="0.2674%" y="1215.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (9 samples, 0.05%)</title><rect x="0.0174%" y="1189" width="0.0521%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="9"/><text x="0.2674%" y="1199.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.01%)</title><rect x="0.0579%" y="1173" width="0.0116%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="2"/><text x="0.3079%" y="1183.50"></text></g><g><title>&lt;criterion::plot::plotters_backend::PlottersBackend as criterion::plot::Plotter&gt;::abs_distributions (16 samples, 0.09%)</title><rect x="0.0000%" y="1397" width="0.0926%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1407.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distributions (16 samples, 0.09%)</title><rect x="0.0000%" y="1381" width="0.0926%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16 samples, 0.09%)</title><rect x="0.0000%" y="1365" width="0.0926%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.09%)</title><rect x="0.0000%" y="1349" width="0.0926%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.09%)</title><rect x="0.0000%" y="1333" width="0.0926%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1343.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (16 samples, 0.09%)</title><rect x="0.0000%" y="1317" width="0.0926%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (16 samples, 0.09%)</title><rect x="0.0000%" y="1301" width="0.0926%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1311.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distributions::{{closure}} (16 samples, 0.09%)</title><rect x="0.0000%" y="1285" width="0.0926%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1295.50"></text></g><g><title>criterion::plot::plotters_backend::distributions::abs_distribution (16 samples, 0.09%)</title><rect x="0.0000%" y="1269" width="0.0926%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="16"/><text x="0.2500%" y="1279.50"></text></g><g><title>criterion::kde::sweep (13 samples, 0.08%)</title><rect x="0.0174%" y="1253" width="0.0752%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="13"/><text x="0.2674%" y="1263.50"></text></g><g><title>criterion::kde::sweep_and_estimate (13 samples, 0.08%)</title><rect x="0.0174%" y="1237" width="0.0752%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="13"/><text x="0.2674%" y="1247.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::min (2 samples, 0.01%)</title><rect x="0.0810%" y="1221" width="0.0116%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="2"/><text x="0.3310%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="0.0810%" y="1205" width="0.0116%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="2"/><text x="0.3310%" y="1215.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::min::{{closure}} (2 samples, 0.01%)</title><rect x="0.0810%" y="1189" width="0.0116%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="2"/><text x="0.3310%" y="1199.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::min (2 samples, 0.01%)</title><rect x="0.0810%" y="1173" width="0.0116%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="2"/><text x="0.3310%" y="1183.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::min (2 samples, 0.01%)</title><rect x="0.0810%" y="1157" width="0.0116%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="2"/><text x="0.3310%" y="1167.50"></text></g><g><title>bench_ex16::main (18 samples, 0.10%)</title><rect x="0.0000%" y="1541" width="0.1042%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1551.50"></text></g><g><title>bench_ex16::benches (18 samples, 0.10%)</title><rect x="0.0000%" y="1525" width="0.1042%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1535.50"></text></g><g><title>bench_ex16::criterion_benchmark (18 samples, 0.10%)</title><rect x="0.0000%" y="1509" width="0.1042%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1519.50"></text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (18 samples, 0.10%)</title><rect x="0.0000%" y="1493" width="0.1042%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1503.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (18 samples, 0.10%)</title><rect x="0.0000%" y="1477" width="0.1042%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1487.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (18 samples, 0.10%)</title><rect x="0.0000%" y="1461" width="0.1042%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1471.50"></text></g><g><title>criterion::analysis::common (18 samples, 0.10%)</title><rect x="0.0000%" y="1445" width="0.1042%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1455.50"></text></g><g><title>&lt;criterion::html::Html as criterion::report::Report&gt;::measurement_complete (18 samples, 0.10%)</title><rect x="0.0000%" y="1429" width="0.1042%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1439.50"></text></g><g><title>criterion::html::Html::generate_plots (18 samples, 0.10%)</title><rect x="0.0000%" y="1413" width="0.1042%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1423.50"></text></g><g><title>&lt;criterion::plot::plotters_backend::PlottersBackend as criterion::plot::Plotter&gt;::regression (2 samples, 0.01%)</title><rect x="0.0926%" y="1397" width="0.0116%" height="15" fill="rgb(235,93,37)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1407.50"></text></g><g><title>criterion::plot::plotters_backend::regression::regression_figure (2 samples, 0.01%)</title><rect x="0.0926%" y="1381" width="0.0116%" height="15" fill="rgb(213,116,39)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1391.50"></text></g><g><title>criterion::stats::Distribution&lt;A&gt;::confidence_interval (2 samples, 0.01%)</title><rect x="0.0926%" y="1365" width="0.0116%" height="15" fill="rgb(222,207,29)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1375.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (2 samples, 0.01%)</title><rect x="0.0926%" y="1349" width="0.0116%" height="15" fill="rgb(206,96,30)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1359.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (2 samples, 0.01%)</title><rect x="0.0926%" y="1333" width="0.0116%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1343.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (2 samples, 0.01%)</title><rect x="0.0926%" y="1317" width="0.0116%" height="15" fill="rgb(250,191,14)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1327.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="0.0926%" y="1301" width="0.0116%" height="15" fill="rgb(239,60,40)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1311.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="0.0926%" y="1285" width="0.0116%" height="15" fill="rgb(206,27,48)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1295.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (2 samples, 0.01%)</title><rect x="0.0926%" y="1269" width="0.0116%" height="15" fill="rgb(225,35,8)" fg:x="16" fg:w="2"/><text x="0.3426%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (2 samples, 0.01%)</title><rect x="0.1215%" y="949" width="0.0116%" height="15" fill="rgb(250,213,24)" fg:x="21" fg:w="2"/><text x="0.3715%" y="959.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="0.1215%" y="933" width="0.0116%" height="15" fill="rgb(247,123,22)" fg:x="21" fg:w="2"/><text x="0.3715%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="0.1215%" y="917" width="0.0116%" height="15" fill="rgb(231,138,38)" fg:x="21" fg:w="2"/><text x="0.3715%" y="927.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (6 samples, 0.03%)</title><rect x="0.1157%" y="1093" width="0.0347%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="6"/><text x="0.3657%" y="1103.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (6 samples, 0.03%)</title><rect x="0.1157%" y="1077" width="0.0347%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="6"/><text x="0.3657%" y="1087.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (6 samples, 0.03%)</title><rect x="0.1157%" y="1061" width="0.0347%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="6"/><text x="0.3657%" y="1071.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (6 samples, 0.03%)</title><rect x="0.1157%" y="1045" width="0.0347%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="6"/><text x="0.3657%" y="1055.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="0.1157%" y="1029" width="0.0347%" height="15" fill="rgb(209,12,38)" fg:x="20" fg:w="6"/><text x="0.3657%" y="1039.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="0.1157%" y="1013" width="0.0347%" height="15" fill="rgb(227,1,9)" fg:x="20" fg:w="6"/><text x="0.3657%" y="1023.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="0.1157%" y="997" width="0.0347%" height="15" fill="rgb(248,47,43)" fg:x="20" fg:w="6"/><text x="0.3657%" y="1007.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (6 samples, 0.03%)</title><rect x="0.1157%" y="981" width="0.0347%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="6"/><text x="0.3657%" y="991.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="0.1215%" y="965" width="0.0289%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="5"/><text x="0.3715%" y="975.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="0.1331%" y="949" width="0.0174%" height="15" fill="rgb(222,148,37)" fg:x="23" fg:w="3"/><text x="0.3831%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.1389%" y="933" width="0.0116%" height="15" fill="rgb(234,67,33)" fg:x="24" fg:w="2"/><text x="0.3889%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.1389%" y="917" width="0.0116%" height="15" fill="rgb(247,98,35)" fg:x="24" fg:w="2"/><text x="0.3889%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.1389%" y="901" width="0.0116%" height="15" fill="rgb(247,138,52)" fg:x="24" fg:w="2"/><text x="0.3889%" y="911.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="0.1563%" y="949" width="0.0174%" height="15" fill="rgb(213,79,30)" fg:x="27" fg:w="3"/><text x="0.4063%" y="959.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (6 samples, 0.03%)</title><rect x="0.1505%" y="997" width="0.0347%" height="15" fill="rgb(246,177,23)" fg:x="26" fg:w="6"/><text x="0.4005%" y="1007.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="0.1563%" y="981" width="0.0289%" height="15" fill="rgb(230,62,27)" fg:x="27" fg:w="5"/><text x="0.4063%" y="991.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="0.1563%" y="965" width="0.0289%" height="15" fill="rgb(216,154,8)" fg:x="27" fg:w="5"/><text x="0.4063%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.1736%" y="949" width="0.0116%" height="15" fill="rgb(244,35,45)" fg:x="30" fg:w="2"/><text x="0.4236%" y="959.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.1736%" y="933" width="0.0116%" height="15" fill="rgb(251,115,12)" fg:x="30" fg:w="2"/><text x="0.4236%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.1736%" y="917" width="0.0116%" height="15" fill="rgb(240,54,50)" fg:x="30" fg:w="2"/><text x="0.4236%" y="927.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13 samples, 0.08%)</title><rect x="0.1157%" y="1301" width="0.0752%" height="15" fill="rgb(233,84,52)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1311.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.08%)</title><rect x="0.1157%" y="1285" width="0.0752%" height="15" fill="rgb(207,117,47)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1295.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13 samples, 0.08%)</title><rect x="0.1157%" y="1269" width="0.0752%" height="15" fill="rgb(249,43,39)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.08%)</title><rect x="0.1157%" y="1253" width="0.0752%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.08%)</title><rect x="0.1157%" y="1237" width="0.0752%" height="15" fill="rgb(236,212,23)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.08%)</title><rect x="0.1157%" y="1221" width="0.0752%" height="15" fill="rgb(242,79,21)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.08%)</title><rect x="0.1157%" y="1205" width="0.0752%" height="15" fill="rgb(211,96,35)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1215.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.08%)</title><rect x="0.1157%" y="1189" width="0.0752%" height="15" fill="rgb(253,215,40)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1199.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (13 samples, 0.08%)</title><rect x="0.1157%" y="1173" width="0.0752%" height="15" fill="rgb(211,81,21)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (13 samples, 0.08%)</title><rect x="0.1157%" y="1157" width="0.0752%" height="15" fill="rgb(208,190,38)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1167.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (13 samples, 0.08%)</title><rect x="0.1157%" y="1141" width="0.0752%" height="15" fill="rgb(235,213,38)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.08%)</title><rect x="0.1157%" y="1125" width="0.0752%" height="15" fill="rgb(237,122,38)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1135.50"></text></g><g><title>criterion::analysis::estimates::stats (13 samples, 0.08%)</title><rect x="0.1157%" y="1109" width="0.0752%" height="15" fill="rgb(244,218,35)" fg:x="20" fg:w="13"/><text x="0.3657%" y="1119.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (7 samples, 0.04%)</title><rect x="0.1505%" y="1093" width="0.0405%" height="15" fill="rgb(240,68,47)" fg:x="26" fg:w="7"/><text x="0.4005%" y="1103.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (7 samples, 0.04%)</title><rect x="0.1505%" y="1077" width="0.0405%" height="15" fill="rgb(210,16,53)" fg:x="26" fg:w="7"/><text x="0.4005%" y="1087.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (7 samples, 0.04%)</title><rect x="0.1505%" y="1061" width="0.0405%" height="15" fill="rgb(235,124,12)" fg:x="26" fg:w="7"/><text x="0.4005%" y="1071.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.04%)</title><rect x="0.1505%" y="1045" width="0.0405%" height="15" fill="rgb(224,169,11)" fg:x="26" fg:w="7"/><text x="0.4005%" y="1055.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.04%)</title><rect x="0.1505%" y="1029" width="0.0405%" height="15" fill="rgb(250,166,2)" fg:x="26" fg:w="7"/><text x="0.4005%" y="1039.50"></text></g><g><title>rayon::slice::quicksort::recurse (7 samples, 0.04%)</title><rect x="0.1505%" y="1013" width="0.0405%" height="15" fill="rgb(242,216,29)" fg:x="26" fg:w="7"/><text x="0.4005%" y="1023.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (4 samples, 0.02%)</title><rect x="0.1910%" y="981" width="0.0231%" height="15" fill="rgb(230,116,27)" fg:x="33" fg:w="4"/><text x="0.4410%" y="991.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (4 samples, 0.02%)</title><rect x="0.1910%" y="965" width="0.0231%" height="15" fill="rgb(228,99,48)" fg:x="33" fg:w="4"/><text x="0.4410%" y="975.50"></text></g><g><title>criterion::stats::sum (4 samples, 0.02%)</title><rect x="0.1910%" y="949" width="0.0231%" height="15" fill="rgb(253,11,6)" fg:x="33" fg:w="4"/><text x="0.4410%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="0.1910%" y="933" width="0.0231%" height="15" fill="rgb(247,143,39)" fg:x="33" fg:w="4"/><text x="0.4410%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="0.1910%" y="917" width="0.0231%" height="15" fill="rgb(236,97,10)" fg:x="33" fg:w="4"/><text x="0.4410%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="0.1910%" y="901" width="0.0231%" height="15" fill="rgb(233,208,19)" fg:x="33" fg:w="4"/><text x="0.4410%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="0.1968%" y="885" width="0.0174%" height="15" fill="rgb(216,164,2)" fg:x="34" fg:w="3"/><text x="0.4468%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.02%)</title><rect x="0.1968%" y="869" width="0.0174%" height="15" fill="rgb(220,129,5)" fg:x="34" fg:w="3"/><text x="0.4468%" y="879.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (3 samples, 0.02%)</title><rect x="0.1968%" y="853" width="0.0174%" height="15" fill="rgb(242,17,10)" fg:x="34" fg:w="3"/><text x="0.4468%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="0.1910%" y="1013" width="0.0289%" height="15" fill="rgb(242,107,0)" fg:x="33" fg:w="5"/><text x="0.4410%" y="1023.50"></text></g><g><title>criterion::analysis::estimates::stats (5 samples, 0.03%)</title><rect x="0.1910%" y="997" width="0.0289%" height="15" fill="rgb(251,28,31)" fg:x="33" fg:w="5"/><text x="0.4410%" y="1007.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (25 samples, 0.14%)</title><rect x="0.1157%" y="1365" width="0.1447%" height="15" fill="rgb(233,223,10)" fg:x="20" fg:w="25"/><text x="0.3657%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.14%)</title><rect x="0.1157%" y="1349" width="0.1447%" height="15" fill="rgb(215,21,27)" fg:x="20" fg:w="25"/><text x="0.3657%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.14%)</title><rect x="0.1157%" y="1333" width="0.1447%" height="15" fill="rgb(232,23,21)" fg:x="20" fg:w="25"/><text x="0.3657%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.14%)</title><rect x="0.1157%" y="1317" width="0.1447%" height="15" fill="rgb(244,5,23)" fg:x="20" fg:w="25"/><text x="0.3657%" y="1327.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.07%)</title><rect x="0.1910%" y="1301" width="0.0694%" height="15" fill="rgb(226,81,46)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1311.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.07%)</title><rect x="0.1910%" y="1285" width="0.0694%" height="15" fill="rgb(247,70,30)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.07%)</title><rect x="0.1910%" y="1269" width="0.0694%" height="15" fill="rgb(212,68,19)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1279.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12 samples, 0.07%)</title><rect x="0.1910%" y="1253" width="0.0694%" height="15" fill="rgb(240,187,13)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (12 samples, 0.07%)</title><rect x="0.1910%" y="1237" width="0.0694%" height="15" fill="rgb(223,113,26)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.07%)</title><rect x="0.1910%" y="1221" width="0.0694%" height="15" fill="rgb(206,192,2)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.07%)</title><rect x="0.1910%" y="1205" width="0.0694%" height="15" fill="rgb(241,108,4)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (12 samples, 0.07%)</title><rect x="0.1910%" y="1189" width="0.0694%" height="15" fill="rgb(247,173,49)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1199.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.07%)</title><rect x="0.1910%" y="1173" width="0.0694%" height="15" fill="rgb(224,114,35)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1183.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.07%)</title><rect x="0.1910%" y="1157" width="0.0694%" height="15" fill="rgb(245,159,27)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.07%)</title><rect x="0.1910%" y="1141" width="0.0694%" height="15" fill="rgb(245,172,44)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.07%)</title><rect x="0.1910%" y="1125" width="0.0694%" height="15" fill="rgb(236,23,11)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.07%)</title><rect x="0.1910%" y="1109" width="0.0694%" height="15" fill="rgb(205,117,38)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.07%)</title><rect x="0.1910%" y="1093" width="0.0694%" height="15" fill="rgb(237,72,25)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (12 samples, 0.07%)</title><rect x="0.1910%" y="1077" width="0.0694%" height="15" fill="rgb(244,70,9)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (12 samples, 0.07%)</title><rect x="0.1910%" y="1061" width="0.0694%" height="15" fill="rgb(217,125,39)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (12 samples, 0.07%)</title><rect x="0.1910%" y="1045" width="0.0694%" height="15" fill="rgb(235,36,10)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1055.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (12 samples, 0.07%)</title><rect x="0.1910%" y="1029" width="0.0694%" height="15" fill="rgb(251,123,47)" fg:x="33" fg:w="12"/><text x="0.4410%" y="1039.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.04%)</title><rect x="0.2199%" y="1013" width="0.0405%" height="15" fill="rgb(221,13,13)" fg:x="38" fg:w="7"/><text x="0.4699%" y="1023.50"></text></g><g><title>oorandom::Rand64::rand_range (5 samples, 0.03%)</title><rect x="0.2315%" y="997" width="0.0289%" height="15" fill="rgb(238,131,9)" fg:x="40" fg:w="5"/><text x="0.4815%" y="1007.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="0.2431%" y="981" width="0.0174%" height="15" fill="rgb(211,50,8)" fg:x="42" fg:w="3"/><text x="0.4931%" y="991.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="0.2604%" y="901" width="0.0116%" height="15" fill="rgb(245,182,24)" fg:x="45" fg:w="2"/><text x="0.5104%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="0.2604%" y="885" width="0.0116%" height="15" fill="rgb(242,14,37)" fg:x="45" fg:w="2"/><text x="0.5104%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (8 samples, 0.05%)</title><rect x="0.2604%" y="1029" width="0.0463%" height="15" fill="rgb(246,228,12)" fg:x="45" fg:w="8"/><text x="0.5104%" y="1039.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (8 samples, 0.05%)</title><rect x="0.2604%" y="1013" width="0.0463%" height="15" fill="rgb(213,55,15)" fg:x="45" fg:w="8"/><text x="0.5104%" y="1023.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (8 samples, 0.05%)</title><rect x="0.2604%" y="997" width="0.0463%" height="15" fill="rgb(209,9,3)" fg:x="45" fg:w="8"/><text x="0.5104%" y="1007.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (8 samples, 0.05%)</title><rect x="0.2604%" y="981" width="0.0463%" height="15" fill="rgb(230,59,30)" fg:x="45" fg:w="8"/><text x="0.5104%" y="991.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.2604%" y="965" width="0.0463%" height="15" fill="rgb(209,121,21)" fg:x="45" fg:w="8"/><text x="0.5104%" y="975.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.2604%" y="949" width="0.0463%" height="15" fill="rgb(220,109,13)" fg:x="45" fg:w="8"/><text x="0.5104%" y="959.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.2604%" y="933" width="0.0463%" height="15" fill="rgb(232,18,1)" fg:x="45" fg:w="8"/><text x="0.5104%" y="943.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (8 samples, 0.05%)</title><rect x="0.2604%" y="917" width="0.0463%" height="15" fill="rgb(215,41,42)" fg:x="45" fg:w="8"/><text x="0.5104%" y="927.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.03%)</title><rect x="0.2720%" y="901" width="0.0347%" height="15" fill="rgb(224,123,36)" fg:x="47" fg:w="6"/><text x="0.5220%" y="911.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="0.2836%" y="885" width="0.0231%" height="15" fill="rgb(240,125,3)" fg:x="49" fg:w="4"/><text x="0.5336%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="0.2836%" y="869" width="0.0231%" height="15" fill="rgb(205,98,50)" fg:x="49" fg:w="4"/><text x="0.5336%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.02%)</title><rect x="0.2836%" y="853" width="0.0231%" height="15" fill="rgb(205,185,37)" fg:x="49" fg:w="4"/><text x="0.5336%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="0.2836%" y="837" width="0.0231%" height="15" fill="rgb(238,207,15)" fg:x="49" fg:w="4"/><text x="0.5336%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (3 samples, 0.02%)</title><rect x="0.2894%" y="821" width="0.0174%" height="15" fill="rgb(213,199,42)" fg:x="50" fg:w="3"/><text x="0.5394%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (3 samples, 0.02%)</title><rect x="0.2894%" y="805" width="0.0174%" height="15" fill="rgb(235,201,11)" fg:x="50" fg:w="3"/><text x="0.5394%" y="815.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="0.3125%" y="917" width="0.0116%" height="15" fill="rgb(207,46,11)" fg:x="54" fg:w="2"/><text x="0.5625%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="0.3125%" y="901" width="0.0116%" height="15" fill="rgb(241,35,35)" fg:x="54" fg:w="2"/><text x="0.5625%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (3 samples, 0.02%)</title><rect x="0.3415%" y="901" width="0.0174%" height="15" fill="rgb(243,32,47)" fg:x="59" fg:w="3"/><text x="0.5915%" y="911.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="0.3415%" y="885" width="0.0174%" height="15" fill="rgb(247,202,23)" fg:x="59" fg:w="3"/><text x="0.5915%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="0.3415%" y="869" width="0.0174%" height="15" fill="rgb(219,102,11)" fg:x="59" fg:w="3"/><text x="0.5915%" y="879.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.28%)</title><rect x="0.1157%" y="1477" width="0.2778%" height="15" fill="rgb(243,110,44)" fg:x="20" fg:w="48"/><text x="0.3657%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (48 samples, 0.28%)</title><rect x="0.1157%" y="1461" width="0.2778%" height="15" fill="rgb(222,74,54)" fg:x="20" fg:w="48"/><text x="0.3657%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (48 samples, 0.28%)</title><rect x="0.1157%" y="1445" width="0.2778%" height="15" fill="rgb(216,99,12)" fg:x="20" fg:w="48"/><text x="0.3657%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.28%)</title><rect x="0.1157%" y="1429" width="0.2778%" height="15" fill="rgb(226,22,26)" fg:x="20" fg:w="48"/><text x="0.3657%" y="1439.50"></text></g><g><title>rayon_core::join::join_context (48 samples, 0.28%)</title><rect x="0.1157%" y="1413" width="0.2778%" height="15" fill="rgb(217,163,10)" fg:x="20" fg:w="48"/><text x="0.3657%" y="1423.50"></text></g><g><title>rayon_core::registry::in_worker (48 samples, 0.28%)</title><rect x="0.1157%" y="1397" width="0.2778%" height="15" fill="rgb(213,25,53)" fg:x="20" fg:w="48"/><text x="0.3657%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (48 samples, 0.28%)</title><rect x="0.1157%" y="1381" width="0.2778%" height="15" fill="rgb(252,105,26)" fg:x="20" fg:w="48"/><text x="0.3657%" y="1391.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.13%)</title><rect x="0.2604%" y="1365" width="0.1331%" height="15" fill="rgb(220,39,43)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.13%)</title><rect x="0.2604%" y="1349" width="0.1331%" height="15" fill="rgb(229,68,48)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1359.50"></text></g><g><title>std::panicking::try (23 samples, 0.13%)</title><rect x="0.2604%" y="1333" width="0.1331%" height="15" fill="rgb(252,8,32)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.13%)</title><rect x="0.2604%" y="1317" width="0.1331%" height="15" fill="rgb(223,20,43)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1327.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.13%)</title><rect x="0.2604%" y="1301" width="0.1331%" height="15" fill="rgb(229,81,49)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (23 samples, 0.13%)</title><rect x="0.2604%" y="1285" width="0.1331%" height="15" fill="rgb(236,28,36)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.13%)</title><rect x="0.2604%" y="1269" width="0.1331%" height="15" fill="rgb(249,185,26)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.13%)</title><rect x="0.2604%" y="1253" width="0.1331%" height="15" fill="rgb(249,174,33)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (23 samples, 0.13%)</title><rect x="0.2604%" y="1237" width="0.1331%" height="15" fill="rgb(233,201,37)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1247.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (23 samples, 0.13%)</title><rect x="0.2604%" y="1221" width="0.1331%" height="15" fill="rgb(221,78,26)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1231.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (23 samples, 0.13%)</title><rect x="0.2604%" y="1205" width="0.1331%" height="15" fill="rgb(250,127,30)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.13%)</title><rect x="0.2604%" y="1189" width="0.1331%" height="15" fill="rgb(230,49,44)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.13%)</title><rect x="0.2604%" y="1173" width="0.1331%" height="15" fill="rgb(229,67,23)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.13%)</title><rect x="0.2604%" y="1157" width="0.1331%" height="15" fill="rgb(249,83,47)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.13%)</title><rect x="0.2604%" y="1141" width="0.1331%" height="15" fill="rgb(215,43,3)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (23 samples, 0.13%)</title><rect x="0.2604%" y="1125" width="0.1331%" height="15" fill="rgb(238,154,13)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1135.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (23 samples, 0.13%)</title><rect x="0.2604%" y="1109" width="0.1331%" height="15" fill="rgb(219,56,2)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (23 samples, 0.13%)</title><rect x="0.2604%" y="1093" width="0.1331%" height="15" fill="rgb(233,0,4)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1103.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (23 samples, 0.13%)</title><rect x="0.2604%" y="1077" width="0.1331%" height="15" fill="rgb(235,30,7)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (23 samples, 0.13%)</title><rect x="0.2604%" y="1061" width="0.1331%" height="15" fill="rgb(250,79,13)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1071.50"></text></g><g><title>criterion::analysis::estimates::stats (23 samples, 0.13%)</title><rect x="0.2604%" y="1045" width="0.1331%" height="15" fill="rgb(211,146,34)" fg:x="45" fg:w="23"/><text x="0.5104%" y="1055.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.09%)</title><rect x="0.3067%" y="1029" width="0.0868%" height="15" fill="rgb(228,22,38)" fg:x="53" fg:w="15"/><text x="0.5567%" y="1039.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (15 samples, 0.09%)</title><rect x="0.3067%" y="1013" width="0.0868%" height="15" fill="rgb(235,168,5)" fg:x="53" fg:w="15"/><text x="0.5567%" y="1023.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (15 samples, 0.09%)</title><rect x="0.3067%" y="997" width="0.0868%" height="15" fill="rgb(221,155,16)" fg:x="53" fg:w="15"/><text x="0.5567%" y="1007.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.09%)</title><rect x="0.3067%" y="981" width="0.0868%" height="15" fill="rgb(215,215,53)" fg:x="53" fg:w="15"/><text x="0.5567%" y="991.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.09%)</title><rect x="0.3067%" y="965" width="0.0868%" height="15" fill="rgb(223,4,10)" fg:x="53" fg:w="15"/><text x="0.5567%" y="975.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.09%)</title><rect x="0.3067%" y="949" width="0.0868%" height="15" fill="rgb(234,103,6)" fg:x="53" fg:w="15"/><text x="0.5567%" y="959.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (14 samples, 0.08%)</title><rect x="0.3125%" y="933" width="0.0810%" height="15" fill="rgb(227,97,0)" fg:x="54" fg:w="14"/><text x="0.5625%" y="943.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (12 samples, 0.07%)</title><rect x="0.3241%" y="917" width="0.0694%" height="15" fill="rgb(234,150,53)" fg:x="56" fg:w="12"/><text x="0.5741%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (6 samples, 0.03%)</title><rect x="0.3588%" y="901" width="0.0347%" height="15" fill="rgb(228,201,54)" fg:x="62" fg:w="6"/><text x="0.6088%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="0.3646%" y="885" width="0.0289%" height="15" fill="rgb(222,22,37)" fg:x="63" fg:w="5"/><text x="0.6146%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="0.3646%" y="869" width="0.0289%" height="15" fill="rgb(237,53,32)" fg:x="63" fg:w="5"/><text x="0.6146%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="0.3646%" y="853" width="0.0289%" height="15" fill="rgb(233,25,53)" fg:x="63" fg:w="5"/><text x="0.6146%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (4 samples, 0.02%)</title><rect x="0.3704%" y="837" width="0.0231%" height="15" fill="rgb(210,40,34)" fg:x="64" fg:w="4"/><text x="0.6204%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (4 samples, 0.02%)</title><rect x="0.3704%" y="821" width="0.0231%" height="15" fill="rgb(241,220,44)" fg:x="64" fg:w="4"/><text x="0.6204%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.03%)</title><rect x="0.3935%" y="901" width="0.0289%" height="15" fill="rgb(235,28,35)" fg:x="68" fg:w="5"/><text x="0.6435%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.03%)</title><rect x="0.3935%" y="885" width="0.0289%" height="15" fill="rgb(210,56,17)" fg:x="68" fg:w="5"/><text x="0.6435%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (10 samples, 0.06%)</title><rect x="0.3935%" y="1029" width="0.0579%" height="15" fill="rgb(224,130,29)" fg:x="68" fg:w="10"/><text x="0.6435%" y="1039.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (10 samples, 0.06%)</title><rect x="0.3935%" y="1013" width="0.0579%" height="15" fill="rgb(235,212,8)" fg:x="68" fg:w="10"/><text x="0.6435%" y="1023.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (10 samples, 0.06%)</title><rect x="0.3935%" y="997" width="0.0579%" height="15" fill="rgb(223,33,50)" fg:x="68" fg:w="10"/><text x="0.6435%" y="1007.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (10 samples, 0.06%)</title><rect x="0.3935%" y="981" width="0.0579%" height="15" fill="rgb(219,149,13)" fg:x="68" fg:w="10"/><text x="0.6435%" y="991.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.06%)</title><rect x="0.3935%" y="965" width="0.0579%" height="15" fill="rgb(250,156,29)" fg:x="68" fg:w="10"/><text x="0.6435%" y="975.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.06%)</title><rect x="0.3935%" y="949" width="0.0579%" height="15" fill="rgb(216,193,19)" fg:x="68" fg:w="10"/><text x="0.6435%" y="959.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.06%)</title><rect x="0.3935%" y="933" width="0.0579%" height="15" fill="rgb(216,135,14)" fg:x="68" fg:w="10"/><text x="0.6435%" y="943.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (10 samples, 0.06%)</title><rect x="0.3935%" y="917" width="0.0579%" height="15" fill="rgb(241,47,5)" fg:x="68" fg:w="10"/><text x="0.6435%" y="927.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="0.4225%" y="901" width="0.0289%" height="15" fill="rgb(233,42,35)" fg:x="73" fg:w="5"/><text x="0.6725%" y="911.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="0.4341%" y="885" width="0.0174%" height="15" fill="rgb(231,13,6)" fg:x="75" fg:w="3"/><text x="0.6841%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.4398%" y="869" width="0.0116%" height="15" fill="rgb(207,181,40)" fg:x="76" fg:w="2"/><text x="0.6898%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.4398%" y="853" width="0.0116%" height="15" fill="rgb(254,173,49)" fg:x="76" fg:w="2"/><text x="0.6898%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.4398%" y="837" width="0.0116%" height="15" fill="rgb(221,1,38)" fg:x="76" fg:w="2"/><text x="0.6898%" y="847.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (16 samples, 0.09%)</title><rect x="0.3935%" y="1237" width="0.0926%" height="15" fill="rgb(206,124,46)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1247.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (16 samples, 0.09%)</title><rect x="0.3935%" y="1221" width="0.0926%" height="15" fill="rgb(249,21,11)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1231.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (16 samples, 0.09%)</title><rect x="0.3935%" y="1205" width="0.0926%" height="15" fill="rgb(222,201,40)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.09%)</title><rect x="0.3935%" y="1189" width="0.0926%" height="15" fill="rgb(235,61,29)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.09%)</title><rect x="0.3935%" y="1173" width="0.0926%" height="15" fill="rgb(219,207,3)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 0.09%)</title><rect x="0.3935%" y="1157" width="0.0926%" height="15" fill="rgb(222,56,46)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.09%)</title><rect x="0.3935%" y="1141" width="0.0926%" height="15" fill="rgb(239,76,54)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (16 samples, 0.09%)</title><rect x="0.3935%" y="1125" width="0.0926%" height="15" fill="rgb(231,124,27)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1135.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (16 samples, 0.09%)</title><rect x="0.3935%" y="1109" width="0.0926%" height="15" fill="rgb(249,195,6)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (16 samples, 0.09%)</title><rect x="0.3935%" y="1093" width="0.0926%" height="15" fill="rgb(237,174,47)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1103.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (16 samples, 0.09%)</title><rect x="0.3935%" y="1077" width="0.0926%" height="15" fill="rgb(206,201,31)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (16 samples, 0.09%)</title><rect x="0.3935%" y="1061" width="0.0926%" height="15" fill="rgb(231,57,52)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1071.50"></text></g><g><title>criterion::analysis::estimates::stats (16 samples, 0.09%)</title><rect x="0.3935%" y="1045" width="0.0926%" height="15" fill="rgb(248,177,22)" fg:x="68" fg:w="16"/><text x="0.6435%" y="1055.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (6 samples, 0.03%)</title><rect x="0.4514%" y="1029" width="0.0347%" height="15" fill="rgb(215,211,37)" fg:x="78" fg:w="6"/><text x="0.7014%" y="1039.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (6 samples, 0.03%)</title><rect x="0.4514%" y="1013" width="0.0347%" height="15" fill="rgb(241,128,51)" fg:x="78" fg:w="6"/><text x="0.7014%" y="1023.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (6 samples, 0.03%)</title><rect x="0.4514%" y="997" width="0.0347%" height="15" fill="rgb(227,165,31)" fg:x="78" fg:w="6"/><text x="0.7014%" y="1007.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="0.4514%" y="981" width="0.0347%" height="15" fill="rgb(228,167,24)" fg:x="78" fg:w="6"/><text x="0.7014%" y="991.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="0.4514%" y="965" width="0.0347%" height="15" fill="rgb(228,143,12)" fg:x="78" fg:w="6"/><text x="0.7014%" y="975.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="0.4514%" y="949" width="0.0347%" height="15" fill="rgb(249,149,8)" fg:x="78" fg:w="6"/><text x="0.7014%" y="959.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (6 samples, 0.03%)</title><rect x="0.4514%" y="933" width="0.0347%" height="15" fill="rgb(243,35,44)" fg:x="78" fg:w="6"/><text x="0.7014%" y="943.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.03%)</title><rect x="0.4514%" y="917" width="0.0347%" height="15" fill="rgb(246,89,9)" fg:x="78" fg:w="6"/><text x="0.7014%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="0.4630%" y="901" width="0.0231%" height="15" fill="rgb(233,213,13)" fg:x="80" fg:w="4"/><text x="0.7130%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="0.4688%" y="885" width="0.0174%" height="15" fill="rgb(233,141,41)" fg:x="81" fg:w="3"/><text x="0.7188%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="0.4688%" y="869" width="0.0174%" height="15" fill="rgb(239,167,4)" fg:x="81" fg:w="3"/><text x="0.7188%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="0.4688%" y="853" width="0.0174%" height="15" fill="rgb(209,217,16)" fg:x="81" fg:w="3"/><text x="0.7188%" y="863.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.10%)</title><rect x="0.3935%" y="1301" width="0.0984%" height="15" fill="rgb(219,88,35)" fg:x="68" fg:w="17"/><text x="0.6435%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.10%)</title><rect x="0.3935%" y="1285" width="0.0984%" height="15" fill="rgb(220,193,23)" fg:x="68" fg:w="17"/><text x="0.6435%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.10%)</title><rect x="0.3935%" y="1269" width="0.0984%" height="15" fill="rgb(230,90,52)" fg:x="68" fg:w="17"/><text x="0.6435%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.10%)</title><rect x="0.3935%" y="1253" width="0.0984%" height="15" fill="rgb(252,106,19)" fg:x="68" fg:w="17"/><text x="0.6435%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="0.4977%" y="821" width="0.0231%" height="15" fill="rgb(206,74,20)" fg:x="86" fg:w="4"/><text x="0.7477%" y="831.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="0.5209%" y="805" width="0.0116%" height="15" fill="rgb(230,138,44)" fg:x="90" fg:w="2"/><text x="0.7709%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (8 samples, 0.05%)</title><rect x="0.4919%" y="965" width="0.0463%" height="15" fill="rgb(235,182,43)" fg:x="85" fg:w="8"/><text x="0.7419%" y="975.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (8 samples, 0.05%)</title><rect x="0.4919%" y="949" width="0.0463%" height="15" fill="rgb(242,16,51)" fg:x="85" fg:w="8"/><text x="0.7419%" y="959.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (8 samples, 0.05%)</title><rect x="0.4919%" y="933" width="0.0463%" height="15" fill="rgb(248,9,4)" fg:x="85" fg:w="8"/><text x="0.7419%" y="943.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (8 samples, 0.05%)</title><rect x="0.4919%" y="917" width="0.0463%" height="15" fill="rgb(210,31,22)" fg:x="85" fg:w="8"/><text x="0.7419%" y="927.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.4919%" y="901" width="0.0463%" height="15" fill="rgb(239,54,39)" fg:x="85" fg:w="8"/><text x="0.7419%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.4919%" y="885" width="0.0463%" height="15" fill="rgb(230,99,41)" fg:x="85" fg:w="8"/><text x="0.7419%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="0.4919%" y="869" width="0.0463%" height="15" fill="rgb(253,106,12)" fg:x="85" fg:w="8"/><text x="0.7419%" y="879.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (8 samples, 0.05%)</title><rect x="0.4919%" y="853" width="0.0463%" height="15" fill="rgb(213,46,41)" fg:x="85" fg:w="8"/><text x="0.7419%" y="863.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (8 samples, 0.05%)</title><rect x="0.4919%" y="837" width="0.0463%" height="15" fill="rgb(215,133,35)" fg:x="85" fg:w="8"/><text x="0.7419%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="0.5209%" y="821" width="0.0174%" height="15" fill="rgb(213,28,5)" fg:x="90" fg:w="3"/><text x="0.7709%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (2 samples, 0.01%)</title><rect x="0.5382%" y="837" width="0.0116%" height="15" fill="rgb(215,77,49)" fg:x="93" fg:w="2"/><text x="0.7882%" y="847.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="0.5382%" y="821" width="0.0116%" height="15" fill="rgb(248,100,22)" fg:x="93" fg:w="2"/><text x="0.7882%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="0.5382%" y="805" width="0.0116%" height="15" fill="rgb(208,67,9)" fg:x="93" fg:w="2"/><text x="0.7882%" y="815.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="0.5498%" y="821" width="0.0174%" height="15" fill="rgb(219,133,21)" fg:x="95" fg:w="3"/><text x="0.7998%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (83 samples, 0.48%)</title><rect x="0.1157%" y="1541" width="0.4804%" height="15" fill="rgb(246,46,29)" fg:x="20" fg:w="83"/><text x="0.3657%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (83 samples, 0.48%)</title><rect x="0.1157%" y="1525" width="0.4804%" height="15" fill="rgb(246,185,52)" fg:x="20" fg:w="83"/><text x="0.3657%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (83 samples, 0.48%)</title><rect x="0.1157%" y="1509" width="0.4804%" height="15" fill="rgb(252,136,11)" fg:x="20" fg:w="83"/><text x="0.3657%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (83 samples, 0.48%)</title><rect x="0.1157%" y="1493" width="0.4804%" height="15" fill="rgb(219,138,53)" fg:x="20" fg:w="83"/><text x="0.3657%" y="1503.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (35 samples, 0.20%)</title><rect x="0.3935%" y="1477" width="0.2026%" height="15" fill="rgb(211,51,23)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.20%)</title><rect x="0.3935%" y="1461" width="0.2026%" height="15" fill="rgb(247,221,28)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1471.50"></text></g><g><title>std::panicking::try (35 samples, 0.20%)</title><rect x="0.3935%" y="1445" width="0.2026%" height="15" fill="rgb(251,222,45)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.20%)</title><rect x="0.3935%" y="1429" width="0.2026%" height="15" fill="rgb(217,162,53)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1439.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.20%)</title><rect x="0.3935%" y="1413" width="0.2026%" height="15" fill="rgb(229,93,14)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (35 samples, 0.20%)</title><rect x="0.3935%" y="1397" width="0.2026%" height="15" fill="rgb(209,67,49)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 0.20%)</title><rect x="0.3935%" y="1381" width="0.2026%" height="15" fill="rgb(213,87,29)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.20%)</title><rect x="0.3935%" y="1365" width="0.2026%" height="15" fill="rgb(205,151,52)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (35 samples, 0.20%)</title><rect x="0.3935%" y="1349" width="0.2026%" height="15" fill="rgb(253,215,39)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (35 samples, 0.20%)</title><rect x="0.3935%" y="1333" width="0.2026%" height="15" fill="rgb(221,220,41)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (35 samples, 0.20%)</title><rect x="0.3935%" y="1317" width="0.2026%" height="15" fill="rgb(218,133,21)" fg:x="68" fg:w="35"/><text x="0.6435%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.10%)</title><rect x="0.4919%" y="1301" width="0.1042%" height="15" fill="rgb(221,193,43)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.10%)</title><rect x="0.4919%" y="1285" width="0.1042%" height="15" fill="rgb(240,128,52)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1295.50"></text></g><g><title>std::panicking::try (18 samples, 0.10%)</title><rect x="0.4919%" y="1269" width="0.1042%" height="15" fill="rgb(253,114,12)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.10%)</title><rect x="0.4919%" y="1253" width="0.1042%" height="15" fill="rgb(215,223,47)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1263.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.10%)</title><rect x="0.4919%" y="1237" width="0.1042%" height="15" fill="rgb(248,225,23)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (18 samples, 0.10%)</title><rect x="0.4919%" y="1221" width="0.1042%" height="15" fill="rgb(250,108,0)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.10%)</title><rect x="0.4919%" y="1205" width="0.1042%" height="15" fill="rgb(228,208,7)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.10%)</title><rect x="0.4919%" y="1189" width="0.1042%" height="15" fill="rgb(244,45,10)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (18 samples, 0.10%)</title><rect x="0.4919%" y="1173" width="0.1042%" height="15" fill="rgb(207,125,25)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1183.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (18 samples, 0.10%)</title><rect x="0.4919%" y="1157" width="0.1042%" height="15" fill="rgb(210,195,18)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1167.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (18 samples, 0.10%)</title><rect x="0.4919%" y="1141" width="0.1042%" height="15" fill="rgb(249,80,12)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.10%)</title><rect x="0.4919%" y="1125" width="0.1042%" height="15" fill="rgb(221,65,9)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.10%)</title><rect x="0.4919%" y="1109" width="0.1042%" height="15" fill="rgb(235,49,36)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.10%)</title><rect x="0.4919%" y="1093" width="0.1042%" height="15" fill="rgb(225,32,20)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.10%)</title><rect x="0.4919%" y="1077" width="0.1042%" height="15" fill="rgb(215,141,46)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (18 samples, 0.10%)</title><rect x="0.4919%" y="1061" width="0.1042%" height="15" fill="rgb(250,160,47)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1071.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (18 samples, 0.10%)</title><rect x="0.4919%" y="1045" width="0.1042%" height="15" fill="rgb(216,222,40)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (18 samples, 0.10%)</title><rect x="0.4919%" y="1029" width="0.1042%" height="15" fill="rgb(234,217,39)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1039.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (18 samples, 0.10%)</title><rect x="0.4919%" y="1013" width="0.1042%" height="15" fill="rgb(207,178,40)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1023.50"></text></g><g><title>core::ops::function::Fn::call (18 samples, 0.10%)</title><rect x="0.4919%" y="997" width="0.1042%" height="15" fill="rgb(221,136,13)" fg:x="85" fg:w="18"/><text x="0.7419%" y="1007.50"></text></g><g><title>criterion::analysis::estimates::stats (18 samples, 0.10%)</title><rect x="0.4919%" y="981" width="0.1042%" height="15" fill="rgb(249,199,10)" fg:x="85" fg:w="18"/><text x="0.7419%" y="991.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (10 samples, 0.06%)</title><rect x="0.5382%" y="965" width="0.0579%" height="15" fill="rgb(249,222,13)" fg:x="93" fg:w="10"/><text x="0.7882%" y="975.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (10 samples, 0.06%)</title><rect x="0.5382%" y="949" width="0.0579%" height="15" fill="rgb(244,185,38)" fg:x="93" fg:w="10"/><text x="0.7882%" y="959.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (10 samples, 0.06%)</title><rect x="0.5382%" y="933" width="0.0579%" height="15" fill="rgb(236,202,9)" fg:x="93" fg:w="10"/><text x="0.7882%" y="943.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.06%)</title><rect x="0.5382%" y="917" width="0.0579%" height="15" fill="rgb(250,229,37)" fg:x="93" fg:w="10"/><text x="0.7882%" y="927.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.06%)</title><rect x="0.5382%" y="901" width="0.0579%" height="15" fill="rgb(206,174,23)" fg:x="93" fg:w="10"/><text x="0.7882%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (10 samples, 0.06%)</title><rect x="0.5382%" y="885" width="0.0579%" height="15" fill="rgb(211,33,43)" fg:x="93" fg:w="10"/><text x="0.7882%" y="895.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (10 samples, 0.06%)</title><rect x="0.5382%" y="869" width="0.0579%" height="15" fill="rgb(245,58,50)" fg:x="93" fg:w="10"/><text x="0.7882%" y="879.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (10 samples, 0.06%)</title><rect x="0.5382%" y="853" width="0.0579%" height="15" fill="rgb(244,68,36)" fg:x="93" fg:w="10"/><text x="0.7882%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (8 samples, 0.05%)</title><rect x="0.5498%" y="837" width="0.0463%" height="15" fill="rgb(232,229,15)" fg:x="95" fg:w="8"/><text x="0.7998%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="0.5672%" y="821" width="0.0289%" height="15" fill="rgb(254,30,23)" fg:x="98" fg:w="5"/><text x="0.8172%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="0.5672%" y="805" width="0.0289%" height="15" fill="rgb(235,160,14)" fg:x="98" fg:w="5"/><text x="0.8172%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="0.5672%" y="789" width="0.0289%" height="15" fill="rgb(212,155,44)" fg:x="98" fg:w="5"/><text x="0.8172%" y="799.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="0.5961%" y="821" width="0.0116%" height="15" fill="rgb(226,2,50)" fg:x="103" fg:w="2"/><text x="0.8461%" y="831.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="0.5961%" y="805" width="0.0116%" height="15" fill="rgb(234,177,6)" fg:x="103" fg:w="2"/><text x="0.8461%" y="815.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="0.5961%" y="789" width="0.0116%" height="15" fill="rgb(217,24,9)" fg:x="103" fg:w="2"/><text x="0.8461%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.5961%" y="773" width="0.0116%" height="15" fill="rgb(220,13,46)" fg:x="103" fg:w="2"/><text x="0.8461%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.5961%" y="757" width="0.0116%" height="15" fill="rgb(239,221,27)" fg:x="103" fg:w="2"/><text x="0.8461%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.5961%" y="741" width="0.0116%" height="15" fill="rgb(222,198,25)" fg:x="103" fg:w="2"/><text x="0.8461%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.5961%" y="725" width="0.0116%" height="15" fill="rgb(211,99,13)" fg:x="103" fg:w="2"/><text x="0.8461%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="0.6135%" y="805" width="0.0174%" height="15" fill="rgb(232,111,31)" fg:x="106" fg:w="3"/><text x="0.8635%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="0.6135%" y="789" width="0.0174%" height="15" fill="rgb(245,82,37)" fg:x="106" fg:w="3"/><text x="0.8635%" y="799.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (12 samples, 0.07%)</title><rect x="0.6077%" y="821" width="0.0694%" height="15" fill="rgb(227,149,46)" fg:x="105" fg:w="12"/><text x="0.8577%" y="831.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (8 samples, 0.05%)</title><rect x="0.6308%" y="805" width="0.0463%" height="15" fill="rgb(218,36,50)" fg:x="109" fg:w="8"/><text x="0.8808%" y="815.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.6655%" y="789" width="0.0116%" height="15" fill="rgb(226,80,48)" fg:x="115" fg:w="2"/><text x="0.9155%" y="799.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.6655%" y="773" width="0.0116%" height="15" fill="rgb(238,224,15)" fg:x="115" fg:w="2"/><text x="0.9155%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.6655%" y="757" width="0.0116%" height="15" fill="rgb(241,136,10)" fg:x="115" fg:w="2"/><text x="0.9155%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.6655%" y="741" width="0.0116%" height="15" fill="rgb(208,32,45)" fg:x="115" fg:w="2"/><text x="0.9155%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.10%)</title><rect x="0.5961%" y="917" width="0.1042%" height="15" fill="rgb(207,135,9)" fg:x="103" fg:w="18"/><text x="0.8461%" y="927.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.10%)</title><rect x="0.5961%" y="901" width="0.1042%" height="15" fill="rgb(206,86,44)" fg:x="103" fg:w="18"/><text x="0.8461%" y="911.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (18 samples, 0.10%)</title><rect x="0.5961%" y="885" width="0.1042%" height="15" fill="rgb(245,177,15)" fg:x="103" fg:w="18"/><text x="0.8461%" y="895.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (18 samples, 0.10%)</title><rect x="0.5961%" y="869" width="0.1042%" height="15" fill="rgb(206,64,50)" fg:x="103" fg:w="18"/><text x="0.8461%" y="879.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="0.5961%" y="853" width="0.1042%" height="15" fill="rgb(234,36,40)" fg:x="103" fg:w="18"/><text x="0.8461%" y="863.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="0.5961%" y="837" width="0.1042%" height="15" fill="rgb(213,64,8)" fg:x="103" fg:w="18"/><text x="0.8461%" y="847.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.02%)</title><rect x="0.6771%" y="821" width="0.0231%" height="15" fill="rgb(210,75,36)" fg:x="117" fg:w="4"/><text x="0.9271%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="0.7061%" y="821" width="0.0116%" height="15" fill="rgb(229,88,21)" fg:x="122" fg:w="2"/><text x="0.9561%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="0.7061%" y="805" width="0.0116%" height="15" fill="rgb(252,204,47)" fg:x="122" fg:w="2"/><text x="0.9561%" y="815.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (9 samples, 0.05%)</title><rect x="0.7061%" y="837" width="0.0521%" height="15" fill="rgb(208,77,27)" fg:x="122" fg:w="9"/><text x="0.9561%" y="847.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (7 samples, 0.04%)</title><rect x="0.7176%" y="821" width="0.0405%" height="15" fill="rgb(221,76,26)" fg:x="124" fg:w="7"/><text x="0.9676%" y="831.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="0.7350%" y="805" width="0.0231%" height="15" fill="rgb(225,139,18)" fg:x="127" fg:w="4"/><text x="0.9850%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="0.7408%" y="789" width="0.0174%" height="15" fill="rgb(230,137,11)" fg:x="128" fg:w="3"/><text x="0.9908%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="0.7408%" y="773" width="0.0174%" height="15" fill="rgb(212,28,1)" fg:x="128" fg:w="3"/><text x="0.9908%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="0.7408%" y="757" width="0.0174%" height="15" fill="rgb(248,164,17)" fg:x="128" fg:w="3"/><text x="0.9908%" y="767.50"></text></g><g><title>rayon::slice::quicksort::partition (3 samples, 0.02%)</title><rect x="0.7581%" y="837" width="0.0174%" height="15" fill="rgb(222,171,42)" fg:x="131" fg:w="3"/><text x="1.0081%" y="847.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="0.7581%" y="821" width="0.0174%" height="15" fill="rgb(243,84,45)" fg:x="131" fg:w="3"/><text x="1.0081%" y="831.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (32 samples, 0.19%)</title><rect x="0.5961%" y="1541" width="0.1852%" height="15" fill="rgb(252,49,23)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1551.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1525" width="0.1852%" height="15" fill="rgb(215,19,7)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1509" width="0.1852%" height="15" fill="rgb(238,81,41)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.19%)</title><rect x="0.5961%" y="1493" width="0.1852%" height="15" fill="rgb(210,199,37)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1503.50"></text></g><g><title>rayon_core::join::join_context (32 samples, 0.19%)</title><rect x="0.5961%" y="1477" width="0.1852%" height="15" fill="rgb(244,192,49)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1487.50"></text></g><g><title>rayon_core::registry::in_worker (32 samples, 0.19%)</title><rect x="0.5961%" y="1461" width="0.1852%" height="15" fill="rgb(226,211,11)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1445" width="0.1852%" height="15" fill="rgb(236,162,54)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1455.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (32 samples, 0.19%)</title><rect x="0.5961%" y="1429" width="0.1852%" height="15" fill="rgb(220,229,9)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.19%)</title><rect x="0.5961%" y="1413" width="0.1852%" height="15" fill="rgb(250,87,22)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1423.50"></text></g><g><title>std::panicking::try (32 samples, 0.19%)</title><rect x="0.5961%" y="1397" width="0.1852%" height="15" fill="rgb(239,43,17)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.19%)</title><rect x="0.5961%" y="1381" width="0.1852%" height="15" fill="rgb(231,177,25)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1391.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.19%)</title><rect x="0.5961%" y="1365" width="0.1852%" height="15" fill="rgb(219,179,1)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1349" width="0.1852%" height="15" fill="rgb(238,219,53)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1333" width="0.1852%" height="15" fill="rgb(232,167,36)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.19%)</title><rect x="0.5961%" y="1317" width="0.1852%" height="15" fill="rgb(244,19,51)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1327.50"></text></g><g><title>rayon_core::join::join_context (32 samples, 0.19%)</title><rect x="0.5961%" y="1301" width="0.1852%" height="15" fill="rgb(224,6,22)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1311.50"></text></g><g><title>rayon_core::registry::in_worker (32 samples, 0.19%)</title><rect x="0.5961%" y="1285" width="0.1852%" height="15" fill="rgb(224,145,5)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1269" width="0.1852%" height="15" fill="rgb(234,130,49)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1279.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (32 samples, 0.19%)</title><rect x="0.5961%" y="1253" width="0.1852%" height="15" fill="rgb(254,6,2)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.19%)</title><rect x="0.5961%" y="1237" width="0.1852%" height="15" fill="rgb(208,96,46)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1247.50"></text></g><g><title>std::panicking::try (32 samples, 0.19%)</title><rect x="0.5961%" y="1221" width="0.1852%" height="15" fill="rgb(239,3,39)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.19%)</title><rect x="0.5961%" y="1205" width="0.1852%" height="15" fill="rgb(233,210,1)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1215.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.19%)</title><rect x="0.5961%" y="1189" width="0.1852%" height="15" fill="rgb(244,137,37)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1173" width="0.1852%" height="15" fill="rgb(240,136,2)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1157" width="0.1852%" height="15" fill="rgb(239,18,37)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.19%)</title><rect x="0.5961%" y="1141" width="0.1852%" height="15" fill="rgb(218,185,22)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (32 samples, 0.19%)</title><rect x="0.5961%" y="1125" width="0.1852%" height="15" fill="rgb(225,218,4)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1135.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (32 samples, 0.19%)</title><rect x="0.5961%" y="1109" width="0.1852%" height="15" fill="rgb(230,182,32)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1119.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (32 samples, 0.19%)</title><rect x="0.5961%" y="1093" width="0.1852%" height="15" fill="rgb(242,56,43)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.19%)</title><rect x="0.5961%" y="1077" width="0.1852%" height="15" fill="rgb(233,99,24)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.19%)</title><rect x="0.5961%" y="1061" width="0.1852%" height="15" fill="rgb(234,209,42)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (32 samples, 0.19%)</title><rect x="0.5961%" y="1045" width="0.1852%" height="15" fill="rgb(227,7,12)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (32 samples, 0.19%)</title><rect x="0.5961%" y="1029" width="0.1852%" height="15" fill="rgb(245,203,43)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="1013" width="0.1852%" height="15" fill="rgb(238,205,33)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1023.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="997" width="0.1852%" height="15" fill="rgb(231,56,7)" fg:x="103" fg:w="32"/><text x="0.8461%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (32 samples, 0.19%)</title><rect x="0.5961%" y="981" width="0.1852%" height="15" fill="rgb(244,186,29)" fg:x="103" fg:w="32"/><text x="0.8461%" y="991.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (32 samples, 0.19%)</title><rect x="0.5961%" y="965" width="0.1852%" height="15" fill="rgb(234,111,31)" fg:x="103" fg:w="32"/><text x="0.8461%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (32 samples, 0.19%)</title><rect x="0.5961%" y="949" width="0.1852%" height="15" fill="rgb(241,149,10)" fg:x="103" fg:w="32"/><text x="0.8461%" y="959.50"></text></g><g><title>criterion::analysis::estimates::stats (32 samples, 0.19%)</title><rect x="0.5961%" y="933" width="0.1852%" height="15" fill="rgb(249,206,44)" fg:x="103" fg:w="32"/><text x="0.8461%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.08%)</title><rect x="0.7003%" y="917" width="0.0810%" height="15" fill="rgb(251,153,30)" fg:x="121" fg:w="14"/><text x="0.9503%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (14 samples, 0.08%)</title><rect x="0.7003%" y="901" width="0.0810%" height="15" fill="rgb(239,152,38)" fg:x="121" fg:w="14"/><text x="0.9503%" y="911.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (14 samples, 0.08%)</title><rect x="0.7003%" y="885" width="0.0810%" height="15" fill="rgb(249,139,47)" fg:x="121" fg:w="14"/><text x="0.9503%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.08%)</title><rect x="0.7003%" y="869" width="0.0810%" height="15" fill="rgb(244,64,35)" fg:x="121" fg:w="14"/><text x="0.9503%" y="879.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.08%)</title><rect x="0.7003%" y="853" width="0.0810%" height="15" fill="rgb(216,46,15)" fg:x="121" fg:w="14"/><text x="0.9503%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.7929%" y="869" width="0.0116%" height="15" fill="rgb(250,74,19)" fg:x="137" fg:w="2"/><text x="1.0429%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.7929%" y="853" width="0.0116%" height="15" fill="rgb(249,42,33)" fg:x="137" fg:w="2"/><text x="1.0429%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.7929%" y="837" width="0.0116%" height="15" fill="rgb(242,149,17)" fg:x="137" fg:w="2"/><text x="1.0429%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.7929%" y="821" width="0.0116%" height="15" fill="rgb(244,29,21)" fg:x="137" fg:w="2"/><text x="1.0429%" y="831.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (3 samples, 0.02%)</title><rect x="0.7929%" y="917" width="0.0174%" height="15" fill="rgb(220,130,37)" fg:x="137" fg:w="3"/><text x="1.0429%" y="927.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="0.7929%" y="901" width="0.0174%" height="15" fill="rgb(211,67,2)" fg:x="137" fg:w="3"/><text x="1.0429%" y="911.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="0.7929%" y="885" width="0.0174%" height="15" fill="rgb(235,68,52)" fg:x="137" fg:w="3"/><text x="1.0429%" y="895.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="0.8102%" y="917" width="0.0174%" height="15" fill="rgb(246,142,3)" fg:x="140" fg:w="3"/><text x="1.0602%" y="927.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="0.8160%" y="901" width="0.0116%" height="15" fill="rgb(241,25,7)" fg:x="141" fg:w="2"/><text x="1.0660%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="0.8334%" y="885" width="0.0116%" height="15" fill="rgb(242,119,39)" fg:x="144" fg:w="2"/><text x="1.0834%" y="895.50"></text></g><g><title>rayon::slice::quicksort::partition (9 samples, 0.05%)</title><rect x="0.8276%" y="917" width="0.0521%" height="15" fill="rgb(241,98,45)" fg:x="143" fg:w="9"/><text x="1.0776%" y="927.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (8 samples, 0.05%)</title><rect x="0.8334%" y="901" width="0.0463%" height="15" fill="rgb(254,28,30)" fg:x="144" fg:w="8"/><text x="1.0834%" y="911.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="0.8507%" y="885" width="0.0289%" height="15" fill="rgb(241,142,54)" fg:x="147" fg:w="5"/><text x="1.1007%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="0.8565%" y="869" width="0.0231%" height="15" fill="rgb(222,85,15)" fg:x="148" fg:w="4"/><text x="1.1065%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.02%)</title><rect x="0.8565%" y="853" width="0.0231%" height="15" fill="rgb(210,85,47)" fg:x="148" fg:w="4"/><text x="1.1065%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="0.8565%" y="837" width="0.0231%" height="15" fill="rgb(224,206,25)" fg:x="148" fg:w="4"/><text x="1.1065%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="0.8797%" y="885" width="0.0174%" height="15" fill="rgb(243,201,19)" fg:x="152" fg:w="3"/><text x="1.1297%" y="895.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="0.8797%" y="869" width="0.0174%" height="15" fill="rgb(236,59,4)" fg:x="152" fg:w="3"/><text x="1.1297%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="0.9028%" y="869" width="0.0116%" height="15" fill="rgb(254,179,45)" fg:x="156" fg:w="2"/><text x="1.1528%" y="879.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (8 samples, 0.05%)</title><rect x="0.8797%" y="901" width="0.0463%" height="15" fill="rgb(226,14,10)" fg:x="152" fg:w="8"/><text x="1.1297%" y="911.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (5 samples, 0.03%)</title><rect x="0.8970%" y="885" width="0.0289%" height="15" fill="rgb(244,27,41)" fg:x="155" fg:w="5"/><text x="1.1470%" y="895.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="0.9144%" y="869" width="0.0116%" height="15" fill="rgb(235,35,32)" fg:x="158" fg:w="2"/><text x="1.1644%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="0.9144%" y="853" width="0.0116%" height="15" fill="rgb(218,68,31)" fg:x="158" fg:w="2"/><text x="1.1644%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="0.9144%" y="837" width="0.0116%" height="15" fill="rgb(207,120,37)" fg:x="158" fg:w="2"/><text x="1.1644%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="0.9144%" y="821" width="0.0116%" height="15" fill="rgb(227,98,0)" fg:x="158" fg:w="2"/><text x="1.1644%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (26 samples, 0.15%)</title><rect x="0.7813%" y="997" width="0.1505%" height="15" fill="rgb(207,7,3)" fg:x="135" fg:w="26"/><text x="1.0313%" y="1007.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (24 samples, 0.14%)</title><rect x="0.7929%" y="981" width="0.1389%" height="15" fill="rgb(206,98,19)" fg:x="137" fg:w="24"/><text x="1.0429%" y="991.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (24 samples, 0.14%)</title><rect x="0.7929%" y="965" width="0.1389%" height="15" fill="rgb(217,5,26)" fg:x="137" fg:w="24"/><text x="1.0429%" y="975.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (24 samples, 0.14%)</title><rect x="0.7929%" y="949" width="0.1389%" height="15" fill="rgb(235,190,38)" fg:x="137" fg:w="24"/><text x="1.0429%" y="959.50"></text></g><g><title>rayon::slice::quicksort::recurse (24 samples, 0.14%)</title><rect x="0.7929%" y="933" width="0.1389%" height="15" fill="rgb(247,86,24)" fg:x="137" fg:w="24"/><text x="1.0429%" y="943.50"></text></g><g><title>rayon::slice::quicksort::recurse (9 samples, 0.05%)</title><rect x="0.8797%" y="917" width="0.0521%" height="15" fill="rgb(205,101,16)" fg:x="152" fg:w="9"/><text x="1.1297%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.9318%" y="981" width="0.0116%" height="15" fill="rgb(246,168,33)" fg:x="161" fg:w="2"/><text x="1.1818%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="0.9318%" y="965" width="0.0116%" height="15" fill="rgb(231,114,1)" fg:x="161" fg:w="2"/><text x="1.1818%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="0.9318%" y="949" width="0.0116%" height="15" fill="rgb(207,184,53)" fg:x="161" fg:w="2"/><text x="1.1818%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.9318%" y="933" width="0.0116%" height="15" fill="rgb(224,95,51)" fg:x="161" fg:w="2"/><text x="1.1818%" y="943.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (5 samples, 0.03%)</title><rect x="0.9549%" y="933" width="0.0289%" height="15" fill="rgb(212,188,45)" fg:x="165" fg:w="5"/><text x="1.2049%" y="943.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="0.9665%" y="917" width="0.0174%" height="15" fill="rgb(223,154,38)" fg:x="167" fg:w="3"/><text x="1.2165%" y="927.50"></text></g><g><title>rayon::slice::quicksort::partition (9 samples, 0.05%)</title><rect x="0.9839%" y="933" width="0.0521%" height="15" fill="rgb(251,22,52)" fg:x="170" fg:w="9"/><text x="1.2339%" y="943.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (8 samples, 0.05%)</title><rect x="0.9896%" y="917" width="0.0463%" height="15" fill="rgb(229,209,22)" fg:x="171" fg:w="8"/><text x="1.2396%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="1.0128%" y="901" width="0.0231%" height="15" fill="rgb(234,138,34)" fg:x="175" fg:w="4"/><text x="1.2628%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="1.0128%" y="885" width="0.0231%" height="15" fill="rgb(212,95,11)" fg:x="175" fg:w="4"/><text x="1.2628%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.02%)</title><rect x="1.0128%" y="869" width="0.0231%" height="15" fill="rgb(240,179,47)" fg:x="175" fg:w="4"/><text x="1.2628%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="1.0128%" y="853" width="0.0231%" height="15" fill="rgb(240,163,11)" fg:x="175" fg:w="4"/><text x="1.2628%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="1.0244%" y="837" width="0.0116%" height="15" fill="rgb(236,37,12)" fg:x="177" fg:w="2"/><text x="1.2744%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="1.0244%" y="821" width="0.0116%" height="15" fill="rgb(232,164,16)" fg:x="177" fg:w="2"/><text x="1.2744%" y="831.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="1.0475%" y="917" width="0.0116%" height="15" fill="rgb(244,205,15)" fg:x="181" fg:w="2"/><text x="1.2975%" y="927.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="1.0475%" y="901" width="0.0116%" height="15" fill="rgb(223,117,47)" fg:x="181" fg:w="2"/><text x="1.2975%" y="911.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="1.0475%" y="885" width="0.0116%" height="15" fill="rgb(244,107,35)" fg:x="181" fg:w="2"/><text x="1.2975%" y="895.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.0475%" y="869" width="0.0116%" height="15" fill="rgb(205,140,8)" fg:x="181" fg:w="2"/><text x="1.2975%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.0475%" y="853" width="0.0116%" height="15" fill="rgb(228,84,46)" fg:x="181" fg:w="2"/><text x="1.2975%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.0475%" y="837" width="0.0116%" height="15" fill="rgb(254,188,9)" fg:x="181" fg:w="2"/><text x="1.2975%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.0475%" y="821" width="0.0116%" height="15" fill="rgb(206,112,54)" fg:x="181" fg:w="2"/><text x="1.2975%" y="831.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (10 samples, 0.06%)</title><rect x="1.0591%" y="917" width="0.0579%" height="15" fill="rgb(216,84,49)" fg:x="183" fg:w="10"/><text x="1.3091%" y="927.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (9 samples, 0.05%)</title><rect x="1.0649%" y="901" width="0.0521%" height="15" fill="rgb(214,194,35)" fg:x="184" fg:w="9"/><text x="1.3149%" y="911.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (6 samples, 0.03%)</title><rect x="1.0822%" y="885" width="0.0347%" height="15" fill="rgb(249,28,3)" fg:x="187" fg:w="6"/><text x="1.3322%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="1.0880%" y="869" width="0.0289%" height="15" fill="rgb(222,56,52)" fg:x="188" fg:w="5"/><text x="1.3380%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="1.0880%" y="853" width="0.0289%" height="15" fill="rgb(245,217,50)" fg:x="188" fg:w="5"/><text x="1.3380%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="1.0880%" y="837" width="0.0289%" height="15" fill="rgb(213,201,24)" fg:x="188" fg:w="5"/><text x="1.3380%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.01%)</title><rect x="1.1054%" y="821" width="0.0116%" height="15" fill="rgb(248,116,28)" fg:x="191" fg:w="2"/><text x="1.3554%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (2 samples, 0.01%)</title><rect x="1.1054%" y="805" width="0.0116%" height="15" fill="rgb(219,72,43)" fg:x="191" fg:w="2"/><text x="1.3554%" y="815.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.1170%" y="901" width="0.0174%" height="15" fill="rgb(209,138,14)" fg:x="193" fg:w="3"/><text x="1.3670%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.1170%" y="885" width="0.0174%" height="15" fill="rgb(222,18,33)" fg:x="193" fg:w="3"/><text x="1.3670%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.1170%" y="869" width="0.0174%" height="15" fill="rgb(213,199,7)" fg:x="193" fg:w="3"/><text x="1.3670%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.1170%" y="853" width="0.0174%" height="15" fill="rgb(250,110,10)" fg:x="193" fg:w="3"/><text x="1.3670%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition (6 samples, 0.03%)</title><rect x="1.1170%" y="917" width="0.0347%" height="15" fill="rgb(248,123,6)" fg:x="193" fg:w="6"/><text x="1.3670%" y="927.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="1.1343%" y="901" width="0.0174%" height="15" fill="rgb(206,91,31)" fg:x="196" fg:w="3"/><text x="1.3843%" y="911.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.1343%" y="885" width="0.0174%" height="15" fill="rgb(211,154,13)" fg:x="196" fg:w="3"/><text x="1.3843%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.1401%" y="869" width="0.0116%" height="15" fill="rgb(225,148,7)" fg:x="197" fg:w="2"/><text x="1.3901%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.1401%" y="853" width="0.0116%" height="15" fill="rgb(220,160,43)" fg:x="197" fg:w="2"/><text x="1.3901%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.1401%" y="837" width="0.0116%" height="15" fill="rgb(213,52,39)" fg:x="197" fg:w="2"/><text x="1.3901%" y="847.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (65 samples, 0.38%)</title><rect x="0.7813%" y="1269" width="0.3762%" height="15" fill="rgb(243,137,7)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (65 samples, 0.38%)</title><rect x="0.7813%" y="1253" width="0.3762%" height="15" fill="rgb(230,79,13)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (65 samples, 0.38%)</title><rect x="0.7813%" y="1237" width="0.3762%" height="15" fill="rgb(247,105,23)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (65 samples, 0.38%)</title><rect x="0.7813%" y="1221" width="0.3762%" height="15" fill="rgb(223,179,41)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (65 samples, 0.38%)</title><rect x="0.7813%" y="1205" width="0.3762%" height="15" fill="rgb(218,9,34)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1215.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (65 samples, 0.38%)</title><rect x="0.7813%" y="1189" width="0.3762%" height="15" fill="rgb(222,106,8)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1199.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (65 samples, 0.38%)</title><rect x="0.7813%" y="1173" width="0.3762%" height="15" fill="rgb(211,220,0)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.38%)</title><rect x="0.7813%" y="1157" width="0.3762%" height="15" fill="rgb(229,52,16)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 0.38%)</title><rect x="0.7813%" y="1141" width="0.3762%" height="15" fill="rgb(212,155,18)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 0.38%)</title><rect x="0.7813%" y="1125" width="0.3762%" height="15" fill="rgb(242,21,14)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (65 samples, 0.38%)</title><rect x="0.7813%" y="1109" width="0.3762%" height="15" fill="rgb(222,19,48)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (65 samples, 0.38%)</title><rect x="0.7813%" y="1093" width="0.3762%" height="15" fill="rgb(232,45,27)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1103.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (65 samples, 0.38%)</title><rect x="0.7813%" y="1077" width="0.3762%" height="15" fill="rgb(249,103,42)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (65 samples, 0.38%)</title><rect x="0.7813%" y="1061" width="0.3762%" height="15" fill="rgb(246,81,33)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1071.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (65 samples, 0.38%)</title><rect x="0.7813%" y="1045" width="0.3762%" height="15" fill="rgb(252,33,42)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (65 samples, 0.38%)</title><rect x="0.7813%" y="1029" width="0.3762%" height="15" fill="rgb(209,212,41)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1039.50"></text></g><g><title>criterion::analysis::estimates::stats (65 samples, 0.38%)</title><rect x="0.7813%" y="1013" width="0.3762%" height="15" fill="rgb(207,154,6)" fg:x="135" fg:w="65"/><text x="1.0313%" y="1023.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (39 samples, 0.23%)</title><rect x="0.9318%" y="997" width="0.2257%" height="15" fill="rgb(223,64,47)" fg:x="161" fg:w="39"/><text x="1.1818%" y="1007.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (37 samples, 0.21%)</title><rect x="0.9433%" y="981" width="0.2141%" height="15" fill="rgb(211,161,38)" fg:x="163" fg:w="37"/><text x="1.1933%" y="991.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (37 samples, 0.21%)</title><rect x="0.9433%" y="965" width="0.2141%" height="15" fill="rgb(219,138,40)" fg:x="163" fg:w="37"/><text x="1.1933%" y="975.50"></text></g><g><title>rayon::slice::quicksort::recurse (37 samples, 0.21%)</title><rect x="0.9433%" y="949" width="0.2141%" height="15" fill="rgb(241,228,46)" fg:x="163" fg:w="37"/><text x="1.1933%" y="959.50"></text></g><g><title>rayon::slice::quicksort::recurse (21 samples, 0.12%)</title><rect x="1.0359%" y="933" width="0.1215%" height="15" fill="rgb(223,209,38)" fg:x="179" fg:w="21"/><text x="1.2859%" y="943.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="1.1864%" y="837" width="0.0116%" height="15" fill="rgb(236,164,45)" fg:x="205" fg:w="2"/><text x="1.4364%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="1.1864%" y="821" width="0.0116%" height="15" fill="rgb(231,15,5)" fg:x="205" fg:w="2"/><text x="1.4364%" y="831.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="1.1864%" y="853" width="0.0174%" height="15" fill="rgb(252,35,15)" fg:x="205" fg:w="3"/><text x="1.4364%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="1.2096%" y="821" width="0.0174%" height="15" fill="rgb(248,181,18)" fg:x="209" fg:w="3"/><text x="1.4596%" y="831.50"></text></g><g><title>core::ptr::swap (2 samples, 0.01%)</title><rect x="1.2269%" y="821" width="0.0116%" height="15" fill="rgb(233,39,42)" fg:x="212" fg:w="2"/><text x="1.4769%" y="831.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="1.2038%" y="853" width="0.0463%" height="15" fill="rgb(238,110,33)" fg:x="208" fg:w="8"/><text x="1.4538%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (8 samples, 0.05%)</title><rect x="1.2038%" y="837" width="0.0463%" height="15" fill="rgb(233,195,10)" fg:x="208" fg:w="8"/><text x="1.4538%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.2385%" y="821" width="0.0116%" height="15" fill="rgb(254,105,3)" fg:x="214" fg:w="2"/><text x="1.4885%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.2385%" y="805" width="0.0116%" height="15" fill="rgb(221,225,9)" fg:x="214" fg:w="2"/><text x="1.4885%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.2385%" y="789" width="0.0116%" height="15" fill="rgb(224,227,45)" fg:x="214" fg:w="2"/><text x="1.4885%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.2385%" y="773" width="0.0116%" height="15" fill="rgb(229,198,43)" fg:x="214" fg:w="2"/><text x="1.4885%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="1.2964%" y="741" width="0.0116%" height="15" fill="rgb(206,209,35)" fg:x="224" fg:w="2"/><text x="1.5464%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="1.2964%" y="725" width="0.0116%" height="15" fill="rgb(245,195,53)" fg:x="224" fg:w="2"/><text x="1.5464%" y="735.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (10 samples, 0.06%)</title><rect x="1.2559%" y="837" width="0.0579%" height="15" fill="rgb(240,92,26)" fg:x="217" fg:w="10"/><text x="1.5059%" y="847.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (10 samples, 0.06%)</title><rect x="1.2559%" y="821" width="0.0579%" height="15" fill="rgb(207,40,23)" fg:x="217" fg:w="10"/><text x="1.5059%" y="831.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (8 samples, 0.05%)</title><rect x="1.2674%" y="805" width="0.0463%" height="15" fill="rgb(223,111,35)" fg:x="219" fg:w="8"/><text x="1.5174%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.04%)</title><rect x="1.2732%" y="789" width="0.0405%" height="15" fill="rgb(229,147,28)" fg:x="220" fg:w="7"/><text x="1.5232%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (7 samples, 0.04%)</title><rect x="1.2732%" y="773" width="0.0405%" height="15" fill="rgb(211,29,28)" fg:x="220" fg:w="7"/><text x="1.5232%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (7 samples, 0.04%)</title><rect x="1.2732%" y="757" width="0.0405%" height="15" fill="rgb(228,72,33)" fg:x="220" fg:w="7"/><text x="1.5232%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (28 samples, 0.16%)</title><rect x="1.1633%" y="933" width="0.1620%" height="15" fill="rgb(205,214,31)" fg:x="201" fg:w="28"/><text x="1.4133%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (27 samples, 0.16%)</title><rect x="1.1690%" y="917" width="0.1563%" height="15" fill="rgb(224,111,15)" fg:x="202" fg:w="27"/><text x="1.4190%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (27 samples, 0.16%)</title><rect x="1.1690%" y="901" width="0.1563%" height="15" fill="rgb(253,21,26)" fg:x="202" fg:w="27"/><text x="1.4190%" y="911.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (27 samples, 0.16%)</title><rect x="1.1690%" y="885" width="0.1563%" height="15" fill="rgb(245,139,43)" fg:x="202" fg:w="27"/><text x="1.4190%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (27 samples, 0.16%)</title><rect x="1.1690%" y="869" width="0.1563%" height="15" fill="rgb(252,170,7)" fg:x="202" fg:w="27"/><text x="1.4190%" y="879.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.08%)</title><rect x="1.2501%" y="853" width="0.0752%" height="15" fill="rgb(231,118,14)" fg:x="216" fg:w="13"/><text x="1.5001%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="1.3137%" y="837" width="0.0116%" height="15" fill="rgb(238,83,0)" fg:x="227" fg:w="2"/><text x="1.5637%" y="847.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="1.3311%" y="869" width="0.0174%" height="15" fill="rgb(221,39,39)" fg:x="230" fg:w="3"/><text x="1.5811%" y="879.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="1.3369%" y="853" width="0.0116%" height="15" fill="rgb(222,119,46)" fg:x="231" fg:w="2"/><text x="1.5869%" y="863.50"></text></g><g><title>core::ptr::swap (2 samples, 0.01%)</title><rect x="1.3716%" y="837" width="0.0116%" height="15" fill="rgb(222,165,49)" fg:x="237" fg:w="2"/><text x="1.6216%" y="847.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="1.3832%" y="821" width="0.0116%" height="15" fill="rgb(219,113,52)" fg:x="239" fg:w="2"/><text x="1.6332%" y="831.50"></text></g><g><title>rayon::slice::quicksort::partition (11 samples, 0.06%)</title><rect x="1.3485%" y="869" width="0.0637%" height="15" fill="rgb(214,7,15)" fg:x="233" fg:w="11"/><text x="1.5985%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (10 samples, 0.06%)</title><rect x="1.3542%" y="853" width="0.0579%" height="15" fill="rgb(235,32,4)" fg:x="234" fg:w="10"/><text x="1.6042%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="1.3832%" y="837" width="0.0289%" height="15" fill="rgb(238,90,54)" fg:x="239" fg:w="5"/><text x="1.6332%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.3948%" y="821" width="0.0174%" height="15" fill="rgb(213,208,19)" fg:x="241" fg:w="3"/><text x="1.6448%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.3948%" y="805" width="0.0174%" height="15" fill="rgb(233,156,4)" fg:x="241" fg:w="3"/><text x="1.6448%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.3948%" y="789" width="0.0174%" height="15" fill="rgb(207,194,5)" fg:x="241" fg:w="3"/><text x="1.6448%" y="799.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="1.4121%" y="853" width="0.0116%" height="15" fill="rgb(206,111,30)" fg:x="244" fg:w="2"/><text x="1.6621%" y="863.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="1.4411%" y="805" width="0.0116%" height="15" fill="rgb(243,70,54)" fg:x="249" fg:w="2"/><text x="1.6911%" y="815.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.04%)</title><rect x="1.4237%" y="853" width="0.0405%" height="15" fill="rgb(242,28,8)" fg:x="246" fg:w="7"/><text x="1.6737%" y="863.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.03%)</title><rect x="1.4295%" y="837" width="0.0347%" height="15" fill="rgb(219,106,18)" fg:x="247" fg:w="6"/><text x="1.6795%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="1.4411%" y="821" width="0.0231%" height="15" fill="rgb(244,222,10)" fg:x="249" fg:w="4"/><text x="1.6911%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.4526%" y="805" width="0.0116%" height="15" fill="rgb(236,179,52)" fg:x="251" fg:w="2"/><text x="1.7026%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.4526%" y="789" width="0.0116%" height="15" fill="rgb(213,23,39)" fg:x="251" fg:w="2"/><text x="1.7026%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.4526%" y="773" width="0.0116%" height="15" fill="rgb(238,48,10)" fg:x="251" fg:w="2"/><text x="1.7026%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.4642%" y="837" width="0.0116%" height="15" fill="rgb(251,196,23)" fg:x="253" fg:w="2"/><text x="1.7142%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (57 samples, 0.33%)</title><rect x="1.1575%" y="965" width="0.3299%" height="15" fill="rgb(250,152,24)" fg:x="200" fg:w="57"/><text x="1.4075%" y="975.50"></text></g><g><title>criterion::analysis::estimates::stats (57 samples, 0.33%)</title><rect x="1.1575%" y="949" width="0.3299%" height="15" fill="rgb(209,150,17)" fg:x="200" fg:w="57"/><text x="1.4075%" y="959.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (28 samples, 0.16%)</title><rect x="1.3253%" y="933" width="0.1620%" height="15" fill="rgb(234,202,34)" fg:x="229" fg:w="28"/><text x="1.5753%" y="943.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (28 samples, 0.16%)</title><rect x="1.3253%" y="917" width="0.1620%" height="15" fill="rgb(253,148,53)" fg:x="229" fg:w="28"/><text x="1.5753%" y="927.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (28 samples, 0.16%)</title><rect x="1.3253%" y="901" width="0.1620%" height="15" fill="rgb(218,129,16)" fg:x="229" fg:w="28"/><text x="1.5753%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (28 samples, 0.16%)</title><rect x="1.3253%" y="885" width="0.1620%" height="15" fill="rgb(216,85,19)" fg:x="229" fg:w="28"/><text x="1.5753%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.08%)</title><rect x="1.4121%" y="869" width="0.0752%" height="15" fill="rgb(235,228,7)" fg:x="244" fg:w="13"/><text x="1.6621%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.02%)</title><rect x="1.4642%" y="853" width="0.0231%" height="15" fill="rgb(245,175,0)" fg:x="253" fg:w="4"/><text x="1.7142%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (2 samples, 0.01%)</title><rect x="1.4758%" y="837" width="0.0116%" height="15" fill="rgb(208,168,36)" fg:x="255" fg:w="2"/><text x="1.7258%" y="847.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.5105%" y="949" width="0.0116%" height="15" fill="rgb(246,171,24)" fg:x="261" fg:w="2"/><text x="1.7605%" y="959.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (140 samples, 0.81%)</title><rect x="0.7813%" y="1381" width="0.8102%" height="15" fill="rgb(215,142,24)" fg:x="135" fg:w="140"/><text x="1.0313%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (140 samples, 0.81%)</title><rect x="0.7813%" y="1365" width="0.8102%" height="15" fill="rgb(250,187,7)" fg:x="135" fg:w="140"/><text x="1.0313%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (140 samples, 0.81%)</title><rect x="0.7813%" y="1349" width="0.8102%" height="15" fill="rgb(228,66,33)" fg:x="135" fg:w="140"/><text x="1.0313%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (140 samples, 0.81%)</title><rect x="0.7813%" y="1333" width="0.8102%" height="15" fill="rgb(234,215,21)" fg:x="135" fg:w="140"/><text x="1.0313%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (140 samples, 0.81%)</title><rect x="0.7813%" y="1317" width="0.8102%" height="15" fill="rgb(222,191,20)" fg:x="135" fg:w="140"/><text x="1.0313%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (140 samples, 0.81%)</title><rect x="0.7813%" y="1301" width="0.8102%" height="15" fill="rgb(245,79,54)" fg:x="135" fg:w="140"/><text x="1.0313%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (140 samples, 0.81%)</title><rect x="0.7813%" y="1285" width="0.8102%" height="15" fill="rgb(240,10,37)" fg:x="135" fg:w="140"/><text x="1.0313%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (75 samples, 0.43%)</title><rect x="1.1575%" y="1269" width="0.4341%" height="15" fill="rgb(214,192,32)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (75 samples, 0.43%)</title><rect x="1.1575%" y="1253" width="0.4341%" height="15" fill="rgb(209,36,54)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1263.50"></text></g><g><title>std::panicking::try (75 samples, 0.43%)</title><rect x="1.1575%" y="1237" width="0.4341%" height="15" fill="rgb(220,10,11)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (75 samples, 0.43%)</title><rect x="1.1575%" y="1221" width="0.4341%" height="15" fill="rgb(221,106,17)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 0.43%)</title><rect x="1.1575%" y="1205" width="0.4341%" height="15" fill="rgb(251,142,44)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (75 samples, 0.43%)</title><rect x="1.1575%" y="1189" width="0.4341%" height="15" fill="rgb(238,13,15)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (75 samples, 0.43%)</title><rect x="1.1575%" y="1173" width="0.4341%" height="15" fill="rgb(208,107,27)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (75 samples, 0.43%)</title><rect x="1.1575%" y="1157" width="0.4341%" height="15" fill="rgb(205,136,37)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (75 samples, 0.43%)</title><rect x="1.1575%" y="1141" width="0.4341%" height="15" fill="rgb(250,205,27)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1151.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (75 samples, 0.43%)</title><rect x="1.1575%" y="1125" width="0.4341%" height="15" fill="rgb(210,80,43)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1135.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (75 samples, 0.43%)</title><rect x="1.1575%" y="1109" width="0.4341%" height="15" fill="rgb(247,160,36)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 0.43%)</title><rect x="1.1575%" y="1093" width="0.4341%" height="15" fill="rgb(234,13,49)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.43%)</title><rect x="1.1575%" y="1077" width="0.4341%" height="15" fill="rgb(234,122,0)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.43%)</title><rect x="1.1575%" y="1061" width="0.4341%" height="15" fill="rgb(207,146,38)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (75 samples, 0.43%)</title><rect x="1.1575%" y="1045" width="0.4341%" height="15" fill="rgb(207,177,25)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (75 samples, 0.43%)</title><rect x="1.1575%" y="1029" width="0.4341%" height="15" fill="rgb(211,178,42)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (75 samples, 0.43%)</title><rect x="1.1575%" y="1013" width="0.4341%" height="15" fill="rgb(230,69,54)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (75 samples, 0.43%)</title><rect x="1.1575%" y="997" width="0.4341%" height="15" fill="rgb(214,135,41)" fg:x="200" fg:w="75"/><text x="1.4075%" y="1007.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (75 samples, 0.43%)</title><rect x="1.1575%" y="981" width="0.4341%" height="15" fill="rgb(237,67,25)" fg:x="200" fg:w="75"/><text x="1.4075%" y="991.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (18 samples, 0.10%)</title><rect x="1.4874%" y="965" width="0.1042%" height="15" fill="rgb(222,189,50)" fg:x="257" fg:w="18"/><text x="1.7374%" y="975.50"></text></g><g><title>oorandom::Rand64::rand_range (12 samples, 0.07%)</title><rect x="1.5221%" y="949" width="0.0694%" height="15" fill="rgb(245,148,34)" fg:x="263" fg:w="12"/><text x="1.7721%" y="959.50"></text></g><g><title>oorandom::Rand64::rand_u64 (7 samples, 0.04%)</title><rect x="1.5510%" y="933" width="0.0405%" height="15" fill="rgb(222,29,6)" fg:x="268" fg:w="7"/><text x="1.8010%" y="943.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="1.5800%" y="917" width="0.0116%" height="15" fill="rgb(221,189,43)" fg:x="273" fg:w="2"/><text x="1.8300%" y="927.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (2 samples, 0.01%)</title><rect x="1.5915%" y="933" width="0.0116%" height="15" fill="rgb(207,36,27)" fg:x="275" fg:w="2"/><text x="1.8415%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (2 samples, 0.01%)</title><rect x="1.5915%" y="917" width="0.0116%" height="15" fill="rgb(217,90,24)" fg:x="275" fg:w="2"/><text x="1.8415%" y="927.50"></text></g><g><title>criterion::stats::sum (2 samples, 0.01%)</title><rect x="1.5915%" y="901" width="0.0116%" height="15" fill="rgb(224,66,35)" fg:x="275" fg:w="2"/><text x="1.8415%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="1.5915%" y="885" width="0.0116%" height="15" fill="rgb(221,13,50)" fg:x="275" fg:w="2"/><text x="1.8415%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="1.5915%" y="869" width="0.0116%" height="15" fill="rgb(236,68,49)" fg:x="275" fg:w="2"/><text x="1.8415%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="1.5915%" y="853" width="0.0116%" height="15" fill="rgb(229,146,28)" fg:x="275" fg:w="2"/><text x="1.8415%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="1.6378%" y="853" width="0.0463%" height="15" fill="rgb(225,31,38)" fg:x="283" fg:w="8"/><text x="1.8878%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.03%)</title><rect x="1.6494%" y="837" width="0.0347%" height="15" fill="rgb(250,208,3)" fg:x="285" fg:w="6"/><text x="1.8994%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.6726%" y="821" width="0.0116%" height="15" fill="rgb(246,54,23)" fg:x="289" fg:w="2"/><text x="1.9226%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.6726%" y="805" width="0.0116%" height="15" fill="rgb(243,76,11)" fg:x="289" fg:w="2"/><text x="1.9226%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.6726%" y="789" width="0.0116%" height="15" fill="rgb(245,21,50)" fg:x="289" fg:w="2"/><text x="1.9226%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.6726%" y="773" width="0.0116%" height="15" fill="rgb(228,9,43)" fg:x="289" fg:w="2"/><text x="1.9226%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="1.6726%" y="757" width="0.0116%" height="15" fill="rgb(208,100,47)" fg:x="289" fg:w="2"/><text x="1.9226%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="1.6726%" y="741" width="0.0116%" height="15" fill="rgb(232,26,8)" fg:x="289" fg:w="2"/><text x="1.9226%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="1.6957%" y="821" width="0.0116%" height="15" fill="rgb(216,166,38)" fg:x="293" fg:w="2"/><text x="1.9457%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="1.6957%" y="805" width="0.0116%" height="15" fill="rgb(251,202,51)" fg:x="293" fg:w="2"/><text x="1.9457%" y="815.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (6 samples, 0.03%)</title><rect x="1.6957%" y="837" width="0.0347%" height="15" fill="rgb(254,216,34)" fg:x="293" fg:w="6"/><text x="1.9457%" y="847.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.02%)</title><rect x="1.7073%" y="821" width="0.0231%" height="15" fill="rgb(251,32,27)" fg:x="295" fg:w="4"/><text x="1.9573%" y="831.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="1.7131%" y="805" width="0.0174%" height="15" fill="rgb(208,127,28)" fg:x="296" fg:w="3"/><text x="1.9631%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.7131%" y="789" width="0.0174%" height="15" fill="rgb(224,137,22)" fg:x="296" fg:w="3"/><text x="1.9631%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.7131%" y="773" width="0.0174%" height="15" fill="rgb(254,70,32)" fg:x="296" fg:w="3"/><text x="1.9631%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.7131%" y="757" width="0.0174%" height="15" fill="rgb(229,75,37)" fg:x="296" fg:w="3"/><text x="1.9631%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="1.7188%" y="741" width="0.0116%" height="15" fill="rgb(252,64,23)" fg:x="297" fg:w="2"/><text x="1.9688%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="1.7188%" y="725" width="0.0116%" height="15" fill="rgb(232,162,48)" fg:x="297" fg:w="2"/><text x="1.9688%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (25 samples, 0.14%)</title><rect x="1.6031%" y="933" width="0.1447%" height="15" fill="rgb(246,160,12)" fg:x="277" fg:w="25"/><text x="1.8531%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (23 samples, 0.13%)</title><rect x="1.6147%" y="917" width="0.1331%" height="15" fill="rgb(247,166,0)" fg:x="279" fg:w="23"/><text x="1.8647%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (22 samples, 0.13%)</title><rect x="1.6205%" y="901" width="0.1273%" height="15" fill="rgb(249,219,21)" fg:x="280" fg:w="22"/><text x="1.8705%" y="911.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (22 samples, 0.13%)</title><rect x="1.6205%" y="885" width="0.1273%" height="15" fill="rgb(205,209,3)" fg:x="280" fg:w="22"/><text x="1.8705%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (22 samples, 0.13%)</title><rect x="1.6205%" y="869" width="0.1273%" height="15" fill="rgb(243,44,1)" fg:x="280" fg:w="22"/><text x="1.8705%" y="879.50"></text></g><g><title>rayon::slice::quicksort::recurse (11 samples, 0.06%)</title><rect x="1.6841%" y="853" width="0.0637%" height="15" fill="rgb(206,159,16)" fg:x="291" fg:w="11"/><text x="1.9341%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition (3 samples, 0.02%)</title><rect x="1.7304%" y="837" width="0.0174%" height="15" fill="rgb(244,77,30)" fg:x="299" fg:w="3"/><text x="1.9804%" y="847.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (2 samples, 0.01%)</title><rect x="1.7362%" y="821" width="0.0116%" height="15" fill="rgb(218,69,12)" fg:x="300" fg:w="2"/><text x="1.9862%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="1.7536%" y="853" width="0.0174%" height="15" fill="rgb(212,87,7)" fg:x="303" fg:w="3"/><text x="2.0036%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="1.7536%" y="837" width="0.0174%" height="15" fill="rgb(245,114,25)" fg:x="303" fg:w="3"/><text x="2.0036%" y="847.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="1.7825%" y="821" width="0.0116%" height="15" fill="rgb(210,61,42)" fg:x="308" fg:w="2"/><text x="2.0325%" y="831.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (10 samples, 0.06%)</title><rect x="1.7536%" y="869" width="0.0579%" height="15" fill="rgb(211,52,33)" fg:x="303" fg:w="10"/><text x="2.0036%" y="879.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (7 samples, 0.04%)</title><rect x="1.7709%" y="853" width="0.0405%" height="15" fill="rgb(234,58,33)" fg:x="306" fg:w="7"/><text x="2.0209%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="1.7825%" y="837" width="0.0289%" height="15" fill="rgb(220,115,36)" fg:x="308" fg:w="5"/><text x="2.0325%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="1.7941%" y="821" width="0.0174%" height="15" fill="rgb(243,153,54)" fg:x="310" fg:w="3"/><text x="2.0441%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="1.7941%" y="805" width="0.0174%" height="15" fill="rgb(251,47,18)" fg:x="310" fg:w="3"/><text x="2.0441%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="1.7941%" y="789" width="0.0174%" height="15" fill="rgb(242,102,42)" fg:x="310" fg:w="3"/><text x="2.0441%" y="799.50"></text></g><g><title>rayon::slice::quicksort::partition (5 samples, 0.03%)</title><rect x="1.8114%" y="869" width="0.0289%" height="15" fill="rgb(234,31,38)" fg:x="313" fg:w="5"/><text x="2.0614%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (4 samples, 0.02%)</title><rect x="1.8172%" y="853" width="0.0231%" height="15" fill="rgb(221,117,51)" fg:x="314" fg:w="4"/><text x="2.0672%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.8288%" y="837" width="0.0116%" height="15" fill="rgb(212,20,18)" fg:x="316" fg:w="2"/><text x="2.0788%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="1.8288%" y="821" width="0.0116%" height="15" fill="rgb(245,133,36)" fg:x="316" fg:w="2"/><text x="2.0788%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="1.8288%" y="805" width="0.0116%" height="15" fill="rgb(212,6,19)" fg:x="316" fg:w="2"/><text x="2.0788%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="1.8288%" y="789" width="0.0116%" height="15" fill="rgb(218,1,36)" fg:x="316" fg:w="2"/><text x="2.0788%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (2 samples, 0.01%)</title><rect x="1.8462%" y="821" width="0.0116%" height="15" fill="rgb(246,84,54)" fg:x="319" fg:w="2"/><text x="2.0962%" y="831.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="1.8462%" y="805" width="0.0116%" height="15" fill="rgb(242,110,6)" fg:x="319" fg:w="2"/><text x="2.0962%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="1.8462%" y="789" width="0.0116%" height="15" fill="rgb(214,47,5)" fg:x="319" fg:w="2"/><text x="2.0962%" y="799.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="1.8577%" y="805" width="0.0116%" height="15" fill="rgb(218,159,25)" fg:x="321" fg:w="2"/><text x="2.1077%" y="815.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (9 samples, 0.05%)</title><rect x="1.8462%" y="853" width="0.0521%" height="15" fill="rgb(215,211,28)" fg:x="319" fg:w="9"/><text x="2.0962%" y="863.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (9 samples, 0.05%)</title><rect x="1.8462%" y="837" width="0.0521%" height="15" fill="rgb(238,59,32)" fg:x="319" fg:w="9"/><text x="2.0962%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (7 samples, 0.04%)</title><rect x="1.8577%" y="821" width="0.0405%" height="15" fill="rgb(226,82,3)" fg:x="321" fg:w="7"/><text x="2.1077%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.03%)</title><rect x="1.8693%" y="805" width="0.0289%" height="15" fill="rgb(240,164,32)" fg:x="323" fg:w="5"/><text x="2.1193%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (5 samples, 0.03%)</title><rect x="1.8693%" y="789" width="0.0289%" height="15" fill="rgb(232,46,7)" fg:x="323" fg:w="5"/><text x="2.1193%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (5 samples, 0.03%)</title><rect x="1.8693%" y="773" width="0.0289%" height="15" fill="rgb(229,129,53)" fg:x="323" fg:w="5"/><text x="2.1193%" y="783.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="1.8983%" y="853" width="0.0116%" height="15" fill="rgb(234,188,29)" fg:x="328" fg:w="2"/><text x="2.1483%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (2 samples, 0.01%)</title><rect x="1.8983%" y="837" width="0.0116%" height="15" fill="rgb(246,141,4)" fg:x="328" fg:w="2"/><text x="2.1483%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="1.8983%" y="821" width="0.0116%" height="15" fill="rgb(229,23,39)" fg:x="328" fg:w="2"/><text x="2.1483%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (29 samples, 0.17%)</title><rect x="1.7478%" y="933" width="0.1678%" height="15" fill="rgb(206,12,3)" fg:x="302" fg:w="29"/><text x="1.9978%" y="943.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (29 samples, 0.17%)</title><rect x="1.7478%" y="917" width="0.1678%" height="15" fill="rgb(252,226,20)" fg:x="302" fg:w="29"/><text x="1.9978%" y="927.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (29 samples, 0.17%)</title><rect x="1.7478%" y="901" width="0.1678%" height="15" fill="rgb(216,123,35)" fg:x="302" fg:w="29"/><text x="1.9978%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (29 samples, 0.17%)</title><rect x="1.7478%" y="885" width="0.1678%" height="15" fill="rgb(212,68,40)" fg:x="302" fg:w="29"/><text x="1.9978%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.08%)</title><rect x="1.8404%" y="869" width="0.0752%" height="15" fill="rgb(254,125,32)" fg:x="318" fg:w="13"/><text x="2.0904%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (57 samples, 0.33%)</title><rect x="1.5915%" y="965" width="0.3299%" height="15" fill="rgb(253,97,22)" fg:x="275" fg:w="57"/><text x="1.8415%" y="975.50"></text></g><g><title>criterion::analysis::estimates::stats (57 samples, 0.33%)</title><rect x="1.5915%" y="949" width="0.3299%" height="15" fill="rgb(241,101,14)" fg:x="275" fg:w="57"/><text x="1.8415%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.9214%" y="949" width="0.0116%" height="15" fill="rgb(238,103,29)" fg:x="332" fg:w="2"/><text x="2.1714%" y="959.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (69 samples, 0.40%)</title><rect x="1.5915%" y="1205" width="0.3993%" height="15" fill="rgb(233,195,47)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (69 samples, 0.40%)</title><rect x="1.5915%" y="1189" width="0.3993%" height="15" fill="rgb(246,218,30)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (69 samples, 0.40%)</title><rect x="1.5915%" y="1173" width="0.3993%" height="15" fill="rgb(219,145,47)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (69 samples, 0.40%)</title><rect x="1.5915%" y="1157" width="0.3993%" height="15" fill="rgb(243,12,26)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (69 samples, 0.40%)</title><rect x="1.5915%" y="1141" width="0.3993%" height="15" fill="rgb(214,87,16)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1151.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (69 samples, 0.40%)</title><rect x="1.5915%" y="1125" width="0.3993%" height="15" fill="rgb(208,99,42)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1135.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (69 samples, 0.40%)</title><rect x="1.5915%" y="1109" width="0.3993%" height="15" fill="rgb(253,99,2)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.40%)</title><rect x="1.5915%" y="1093" width="0.3993%" height="15" fill="rgb(220,168,23)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.40%)</title><rect x="1.5915%" y="1077" width="0.3993%" height="15" fill="rgb(242,38,24)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.40%)</title><rect x="1.5915%" y="1061" width="0.3993%" height="15" fill="rgb(225,182,9)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (69 samples, 0.40%)</title><rect x="1.5915%" y="1045" width="0.3993%" height="15" fill="rgb(243,178,37)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (69 samples, 0.40%)</title><rect x="1.5915%" y="1029" width="0.3993%" height="15" fill="rgb(232,139,19)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (69 samples, 0.40%)</title><rect x="1.5915%" y="1013" width="0.3993%" height="15" fill="rgb(225,201,24)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (69 samples, 0.40%)</title><rect x="1.5915%" y="997" width="0.3993%" height="15" fill="rgb(221,47,46)" fg:x="275" fg:w="69"/><text x="1.8415%" y="1007.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (69 samples, 0.40%)</title><rect x="1.5915%" y="981" width="0.3993%" height="15" fill="rgb(249,23,13)" fg:x="275" fg:w="69"/><text x="1.8415%" y="991.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (12 samples, 0.07%)</title><rect x="1.9214%" y="965" width="0.0694%" height="15" fill="rgb(219,9,5)" fg:x="332" fg:w="12"/><text x="2.1714%" y="975.50"></text></g><g><title>oorandom::Rand64::rand_range (10 samples, 0.06%)</title><rect x="1.9330%" y="949" width="0.0579%" height="15" fill="rgb(254,171,16)" fg:x="334" fg:w="10"/><text x="2.1830%" y="959.50"></text></g><g><title>oorandom::Rand64::rand_u64 (8 samples, 0.05%)</title><rect x="1.9446%" y="933" width="0.0463%" height="15" fill="rgb(230,171,20)" fg:x="336" fg:w="8"/><text x="2.1946%" y="943.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="1.9793%" y="917" width="0.0116%" height="15" fill="rgb(210,71,41)" fg:x="342" fg:w="2"/><text x="2.2293%" y="927.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (2 samples, 0.01%)</title><rect x="1.9966%" y="869" width="0.0116%" height="15" fill="rgb(206,173,20)" fg:x="345" fg:w="2"/><text x="2.2466%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (2 samples, 0.01%)</title><rect x="1.9966%" y="853" width="0.0116%" height="15" fill="rgb(233,88,34)" fg:x="345" fg:w="2"/><text x="2.2466%" y="863.50"></text></g><g><title>criterion::stats::sum (2 samples, 0.01%)</title><rect x="1.9966%" y="837" width="0.0116%" height="15" fill="rgb(223,209,46)" fg:x="345" fg:w="2"/><text x="2.2466%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="1.9966%" y="821" width="0.0116%" height="15" fill="rgb(250,43,18)" fg:x="345" fg:w="2"/><text x="2.2466%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="1.9966%" y="805" width="0.0116%" height="15" fill="rgb(208,13,10)" fg:x="345" fg:w="2"/><text x="2.2466%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="1.9966%" y="789" width="0.0116%" height="15" fill="rgb(212,200,36)" fg:x="345" fg:w="2"/><text x="2.2466%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.9966%" y="773" width="0.0116%" height="15" fill="rgb(225,90,30)" fg:x="345" fg:w="2"/><text x="2.2466%" y="783.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (3 samples, 0.02%)</title><rect x="2.0140%" y="789" width="0.0174%" height="15" fill="rgb(236,182,39)" fg:x="348" fg:w="3"/><text x="2.2640%" y="799.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="2.0198%" y="773" width="0.0116%" height="15" fill="rgb(212,144,35)" fg:x="349" fg:w="2"/><text x="2.2698%" y="783.50"></text></g><g><title>rayon::slice::quicksort::partition (9 samples, 0.05%)</title><rect x="2.0314%" y="789" width="0.0521%" height="15" fill="rgb(228,63,44)" fg:x="351" fg:w="9"/><text x="2.2814%" y="799.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (8 samples, 0.05%)</title><rect x="2.0372%" y="773" width="0.0463%" height="15" fill="rgb(228,109,6)" fg:x="352" fg:w="8"/><text x="2.2872%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="2.0603%" y="757" width="0.0231%" height="15" fill="rgb(238,117,24)" fg:x="356" fg:w="4"/><text x="2.3103%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="2.0661%" y="741" width="0.0174%" height="15" fill="rgb(242,26,26)" fg:x="357" fg:w="3"/><text x="2.3161%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="2.0661%" y="725" width="0.0174%" height="15" fill="rgb(221,92,48)" fg:x="357" fg:w="3"/><text x="2.3161%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="2.0661%" y="709" width="0.0174%" height="15" fill="rgb(209,209,32)" fg:x="357" fg:w="3"/><text x="2.3161%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (14 samples, 0.08%)</title><rect x="2.0082%" y="869" width="0.0810%" height="15" fill="rgb(221,70,22)" fg:x="347" fg:w="14"/><text x="2.2582%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.08%)</title><rect x="2.0082%" y="853" width="0.0810%" height="15" fill="rgb(248,145,5)" fg:x="347" fg:w="14"/><text x="2.2582%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (14 samples, 0.08%)</title><rect x="2.0082%" y="837" width="0.0810%" height="15" fill="rgb(226,116,26)" fg:x="347" fg:w="14"/><text x="2.2582%" y="847.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (14 samples, 0.08%)</title><rect x="2.0082%" y="821" width="0.0810%" height="15" fill="rgb(244,5,17)" fg:x="347" fg:w="14"/><text x="2.2582%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.08%)</title><rect x="2.0082%" y="805" width="0.0810%" height="15" fill="rgb(252,159,33)" fg:x="347" fg:w="14"/><text x="2.2582%" y="815.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.0950%" y="757" width="0.0116%" height="15" fill="rgb(206,71,0)" fg:x="362" fg:w="2"/><text x="2.3450%" y="767.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (3 samples, 0.02%)</title><rect x="2.0950%" y="805" width="0.0174%" height="15" fill="rgb(233,118,54)" fg:x="362" fg:w="3"/><text x="2.3450%" y="815.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="2.0950%" y="789" width="0.0174%" height="15" fill="rgb(234,83,48)" fg:x="362" fg:w="3"/><text x="2.3450%" y="799.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="2.0950%" y="773" width="0.0174%" height="15" fill="rgb(228,3,54)" fg:x="362" fg:w="3"/><text x="2.3450%" y="783.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="2.1124%" y="789" width="0.0174%" height="15" fill="rgb(226,155,13)" fg:x="365" fg:w="3"/><text x="2.3624%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="2.1124%" y="773" width="0.0174%" height="15" fill="rgb(241,28,37)" fg:x="365" fg:w="3"/><text x="2.3624%" y="783.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (10 samples, 0.06%)</title><rect x="2.1124%" y="805" width="0.0579%" height="15" fill="rgb(233,93,10)" fg:x="365" fg:w="10"/><text x="2.3624%" y="815.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (7 samples, 0.04%)</title><rect x="2.1298%" y="789" width="0.0405%" height="15" fill="rgb(225,113,19)" fg:x="368" fg:w="7"/><text x="2.3798%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="2.1413%" y="773" width="0.0289%" height="15" fill="rgb(241,2,18)" fg:x="370" fg:w="5"/><text x="2.3913%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="2.1471%" y="757" width="0.0231%" height="15" fill="rgb(228,207,21)" fg:x="371" fg:w="4"/><text x="2.3971%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.02%)</title><rect x="2.1471%" y="741" width="0.0231%" height="15" fill="rgb(213,211,35)" fg:x="371" fg:w="4"/><text x="2.3971%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="2.1471%" y="725" width="0.0231%" height="15" fill="rgb(209,83,10)" fg:x="371" fg:w="4"/><text x="2.3971%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.10%)</title><rect x="2.0892%" y="869" width="0.1042%" height="15" fill="rgb(209,164,1)" fg:x="361" fg:w="18"/><text x="2.3392%" y="879.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (18 samples, 0.10%)</title><rect x="2.0892%" y="853" width="0.1042%" height="15" fill="rgb(213,184,43)" fg:x="361" fg:w="18"/><text x="2.3392%" y="863.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (18 samples, 0.10%)</title><rect x="2.0892%" y="837" width="0.1042%" height="15" fill="rgb(231,61,34)" fg:x="361" fg:w="18"/><text x="2.3392%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="2.0892%" y="821" width="0.1042%" height="15" fill="rgb(235,75,3)" fg:x="361" fg:w="18"/><text x="2.3392%" y="831.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.02%)</title><rect x="2.1703%" y="805" width="0.0231%" height="15" fill="rgb(220,106,47)" fg:x="375" fg:w="4"/><text x="2.4203%" y="815.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="2.1761%" y="789" width="0.0174%" height="15" fill="rgb(210,196,33)" fg:x="376" fg:w="3"/><text x="2.4261%" y="799.50"></text></g><g><title>core::ops::function::Fn::call (37 samples, 0.21%)</title><rect x="1.9966%" y="901" width="0.2141%" height="15" fill="rgb(229,154,42)" fg:x="345" fg:w="37"/><text x="2.2466%" y="911.50"></text></g><g><title>criterion::analysis::estimates::stats (37 samples, 0.21%)</title><rect x="1.9966%" y="885" width="0.2141%" height="15" fill="rgb(228,114,26)" fg:x="345" fg:w="37"/><text x="2.2466%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (3 samples, 0.02%)</title><rect x="2.1934%" y="869" width="0.0174%" height="15" fill="rgb(208,144,1)" fg:x="379" fg:w="3"/><text x="2.4434%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (3 samples, 0.02%)</title><rect x="2.1934%" y="853" width="0.0174%" height="15" fill="rgb(239,112,37)" fg:x="379" fg:w="3"/><text x="2.4434%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="2.1934%" y="837" width="0.0174%" height="15" fill="rgb(210,96,50)" fg:x="379" fg:w="3"/><text x="2.4434%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="2.1934%" y="821" width="0.0174%" height="15" fill="rgb(222,178,2)" fg:x="379" fg:w="3"/><text x="2.4434%" y="831.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (249 samples, 1.44%)</title><rect x="0.7813%" y="1493" width="1.4411%" height="15" fill="rgb(226,74,18)" fg:x="135" fg:w="249"/><text x="1.0313%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (249 samples, 1.44%)</title><rect x="0.7813%" y="1477" width="1.4411%" height="15" fill="rgb(225,67,54)" fg:x="135" fg:w="249"/><text x="1.0313%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (249 samples, 1.44%)</title><rect x="0.7813%" y="1461" width="1.4411%" height="15" fill="rgb(251,92,32)" fg:x="135" fg:w="249"/><text x="1.0313%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (249 samples, 1.44%)</title><rect x="0.7813%" y="1445" width="1.4411%" height="15" fill="rgb(228,149,22)" fg:x="135" fg:w="249"/><text x="1.0313%" y="1455.50"></text></g><g><title>rayon_core::join::join_context (249 samples, 1.44%)</title><rect x="0.7813%" y="1429" width="1.4411%" height="15" fill="rgb(243,54,13)" fg:x="135" fg:w="249"/><text x="1.0313%" y="1439.50"></text></g><g><title>rayon_core::registry::in_worker (249 samples, 1.44%)</title><rect x="0.7813%" y="1413" width="1.4411%" height="15" fill="rgb(243,180,28)" fg:x="135" fg:w="249"/><text x="1.0313%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (249 samples, 1.44%)</title><rect x="0.7813%" y="1397" width="1.4411%" height="15" fill="rgb(208,167,24)" fg:x="135" fg:w="249"/><text x="1.0313%" y="1407.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (109 samples, 0.63%)</title><rect x="1.5915%" y="1381" width="0.6308%" height="15" fill="rgb(245,73,45)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (109 samples, 0.63%)</title><rect x="1.5915%" y="1365" width="0.6308%" height="15" fill="rgb(237,203,48)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1375.50"></text></g><g><title>std::panicking::try (109 samples, 0.63%)</title><rect x="1.5915%" y="1349" width="0.6308%" height="15" fill="rgb(211,197,16)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (109 samples, 0.63%)</title><rect x="1.5915%" y="1333" width="0.6308%" height="15" fill="rgb(243,99,51)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1343.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (109 samples, 0.63%)</title><rect x="1.5915%" y="1317" width="0.6308%" height="15" fill="rgb(215,123,29)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (109 samples, 0.63%)</title><rect x="1.5915%" y="1301" width="0.6308%" height="15" fill="rgb(239,186,37)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (109 samples, 0.63%)</title><rect x="1.5915%" y="1285" width="0.6308%" height="15" fill="rgb(252,136,39)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (109 samples, 0.63%)</title><rect x="1.5915%" y="1269" width="0.6308%" height="15" fill="rgb(223,213,32)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (109 samples, 0.63%)</title><rect x="1.5915%" y="1253" width="0.6308%" height="15" fill="rgb(233,115,5)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (109 samples, 0.63%)</title><rect x="1.5915%" y="1237" width="0.6308%" height="15" fill="rgb(207,226,44)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (109 samples, 0.63%)</title><rect x="1.5915%" y="1221" width="0.6308%" height="15" fill="rgb(208,126,0)" fg:x="275" fg:w="109"/><text x="1.8415%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.23%)</title><rect x="1.9909%" y="1205" width="0.2315%" height="15" fill="rgb(244,66,21)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.23%)</title><rect x="1.9909%" y="1189" width="0.2315%" height="15" fill="rgb(222,97,12)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1199.50"></text></g><g><title>std::panicking::try (40 samples, 0.23%)</title><rect x="1.9909%" y="1173" width="0.2315%" height="15" fill="rgb(219,213,19)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.23%)</title><rect x="1.9909%" y="1157" width="0.2315%" height="15" fill="rgb(252,169,30)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1167.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.23%)</title><rect x="1.9909%" y="1141" width="0.2315%" height="15" fill="rgb(206,32,51)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (40 samples, 0.23%)</title><rect x="1.9909%" y="1125" width="0.2315%" height="15" fill="rgb(250,172,42)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.23%)</title><rect x="1.9909%" y="1109" width="0.2315%" height="15" fill="rgb(209,34,43)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.23%)</title><rect x="1.9909%" y="1093" width="0.2315%" height="15" fill="rgb(223,11,35)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (40 samples, 0.23%)</title><rect x="1.9909%" y="1077" width="0.2315%" height="15" fill="rgb(251,219,26)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (40 samples, 0.23%)</title><rect x="1.9909%" y="1061" width="0.2315%" height="15" fill="rgb(231,119,3)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1071.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (40 samples, 0.23%)</title><rect x="1.9909%" y="1045" width="0.2315%" height="15" fill="rgb(216,97,11)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.23%)</title><rect x="1.9909%" y="1029" width="0.2315%" height="15" fill="rgb(223,59,9)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.23%)</title><rect x="1.9909%" y="1013" width="0.2315%" height="15" fill="rgb(233,93,31)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.23%)</title><rect x="1.9909%" y="997" width="0.2315%" height="15" fill="rgb(239,81,33)" fg:x="344" fg:w="40"/><text x="2.2409%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.23%)</title><rect x="1.9909%" y="981" width="0.2315%" height="15" fill="rgb(213,120,34)" fg:x="344" fg:w="40"/><text x="2.2409%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (40 samples, 0.23%)</title><rect x="1.9909%" y="965" width="0.2315%" height="15" fill="rgb(243,49,53)" fg:x="344" fg:w="40"/><text x="2.2409%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (39 samples, 0.23%)</title><rect x="1.9966%" y="949" width="0.2257%" height="15" fill="rgb(247,216,33)" fg:x="345" fg:w="39"/><text x="2.2466%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (39 samples, 0.23%)</title><rect x="1.9966%" y="933" width="0.2257%" height="15" fill="rgb(226,26,14)" fg:x="345" fg:w="39"/><text x="2.2466%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (39 samples, 0.23%)</title><rect x="1.9966%" y="917" width="0.2257%" height="15" fill="rgb(215,49,53)" fg:x="345" fg:w="39"/><text x="2.2466%" y="927.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (2 samples, 0.01%)</title><rect x="2.2108%" y="901" width="0.0116%" height="15" fill="rgb(245,162,40)" fg:x="382" fg:w="2"/><text x="2.4608%" y="911.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="2.2281%" y="917" width="0.0116%" height="15" fill="rgb(229,68,17)" fg:x="385" fg:w="2"/><text x="2.4781%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (2 samples, 0.01%)</title><rect x="2.2281%" y="901" width="0.0116%" height="15" fill="rgb(213,182,10)" fg:x="385" fg:w="2"/><text x="2.4781%" y="911.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (3 samples, 0.02%)</title><rect x="2.2397%" y="853" width="0.0174%" height="15" fill="rgb(245,125,30)" fg:x="387" fg:w="3"/><text x="2.4897%" y="863.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.2455%" y="837" width="0.0116%" height="15" fill="rgb(232,202,2)" fg:x="388" fg:w="2"/><text x="2.4955%" y="847.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.2455%" y="821" width="0.0116%" height="15" fill="rgb(237,140,51)" fg:x="388" fg:w="2"/><text x="2.4955%" y="831.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.2455%" y="805" width="0.0116%" height="15" fill="rgb(236,157,25)" fg:x="388" fg:w="2"/><text x="2.4955%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="2.2629%" y="821" width="0.0116%" height="15" fill="rgb(219,209,0)" fg:x="391" fg:w="2"/><text x="2.5129%" y="831.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (5 samples, 0.03%)</title><rect x="2.2571%" y="853" width="0.0289%" height="15" fill="rgb(240,116,54)" fg:x="390" fg:w="5"/><text x="2.5071%" y="863.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.02%)</title><rect x="2.2629%" y="837" width="0.0231%" height="15" fill="rgb(216,10,36)" fg:x="391" fg:w="4"/><text x="2.5129%" y="847.50"></text></g><g><title>rayon::slice::quicksort::partition (14 samples, 0.08%)</title><rect x="2.2860%" y="853" width="0.0810%" height="15" fill="rgb(222,72,44)" fg:x="395" fg:w="14"/><text x="2.5360%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (12 samples, 0.07%)</title><rect x="2.2976%" y="837" width="0.0694%" height="15" fill="rgb(232,159,9)" fg:x="397" fg:w="12"/><text x="2.5476%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (9 samples, 0.05%)</title><rect x="2.3149%" y="821" width="0.0521%" height="15" fill="rgb(210,39,32)" fg:x="400" fg:w="9"/><text x="2.5649%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.05%)</title><rect x="2.3149%" y="805" width="0.0521%" height="15" fill="rgb(216,194,45)" fg:x="400" fg:w="9"/><text x="2.5649%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (9 samples, 0.05%)</title><rect x="2.3149%" y="789" width="0.0521%" height="15" fill="rgb(218,18,35)" fg:x="400" fg:w="9"/><text x="2.5649%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (9 samples, 0.05%)</title><rect x="2.3149%" y="773" width="0.0521%" height="15" fill="rgb(207,83,51)" fg:x="400" fg:w="9"/><text x="2.5649%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (4 samples, 0.02%)</title><rect x="2.3439%" y="757" width="0.0231%" height="15" fill="rgb(225,63,43)" fg:x="405" fg:w="4"/><text x="2.5939%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (4 samples, 0.02%)</title><rect x="2.3439%" y="741" width="0.0231%" height="15" fill="rgb(207,57,36)" fg:x="405" fg:w="4"/><text x="2.5939%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;rayon::slice::quicksort::CopyOnDrop&lt;f64&gt;&gt; (2 samples, 0.01%)</title><rect x="2.3844%" y="805" width="0.0116%" height="15" fill="rgb(216,99,33)" fg:x="412" fg:w="2"/><text x="2.6344%" y="815.50"></text></g><g><title>&lt;rayon::slice::quicksort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="2.3844%" y="789" width="0.0116%" height="15" fill="rgb(225,42,16)" fg:x="412" fg:w="2"/><text x="2.6344%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="2.3844%" y="773" width="0.0116%" height="15" fill="rgb(220,201,45)" fg:x="412" fg:w="2"/><text x="2.6344%" y="783.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="2.3960%" y="789" width="0.0174%" height="15" fill="rgb(225,33,4)" fg:x="414" fg:w="3"/><text x="2.6460%" y="799.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.04%)</title><rect x="2.3786%" y="837" width="0.0405%" height="15" fill="rgb(224,33,50)" fg:x="411" fg:w="7"/><text x="2.6286%" y="847.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (7 samples, 0.04%)</title><rect x="2.3786%" y="821" width="0.0405%" height="15" fill="rgb(246,198,51)" fg:x="411" fg:w="7"/><text x="2.6286%" y="831.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="2.3960%" y="805" width="0.0231%" height="15" fill="rgb(205,22,4)" fg:x="414" fg:w="4"/><text x="2.6460%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (36 samples, 0.21%)</title><rect x="2.2281%" y="933" width="0.2083%" height="15" fill="rgb(206,3,8)" fg:x="385" fg:w="36"/><text x="2.4781%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (34 samples, 0.20%)</title><rect x="2.2397%" y="917" width="0.1968%" height="15" fill="rgb(251,23,15)" fg:x="387" fg:w="34"/><text x="2.4897%" y="927.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (34 samples, 0.20%)</title><rect x="2.2397%" y="901" width="0.1968%" height="15" fill="rgb(252,88,28)" fg:x="387" fg:w="34"/><text x="2.4897%" y="911.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (34 samples, 0.20%)</title><rect x="2.2397%" y="885" width="0.1968%" height="15" fill="rgb(212,127,14)" fg:x="387" fg:w="34"/><text x="2.4897%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (34 samples, 0.20%)</title><rect x="2.2397%" y="869" width="0.1968%" height="15" fill="rgb(247,145,37)" fg:x="387" fg:w="34"/><text x="2.4897%" y="879.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.07%)</title><rect x="2.3670%" y="853" width="0.0694%" height="15" fill="rgb(209,117,53)" fg:x="409" fg:w="12"/><text x="2.6170%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition (3 samples, 0.02%)</title><rect x="2.4191%" y="837" width="0.0174%" height="15" fill="rgb(212,90,42)" fg:x="418" fg:w="3"/><text x="2.6691%" y="847.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="2.4191%" y="821" width="0.0174%" height="15" fill="rgb(218,164,37)" fg:x="418" fg:w="3"/><text x="2.6691%" y="831.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="2.4423%" y="869" width="0.0116%" height="15" fill="rgb(246,65,34)" fg:x="422" fg:w="2"/><text x="2.6923%" y="879.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.4423%" y="853" width="0.0116%" height="15" fill="rgb(231,100,33)" fg:x="422" fg:w="2"/><text x="2.6923%" y="863.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.4423%" y="837" width="0.0116%" height="15" fill="rgb(228,126,14)" fg:x="422" fg:w="2"/><text x="2.6923%" y="847.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (2 samples, 0.01%)</title><rect x="2.4538%" y="869" width="0.0116%" height="15" fill="rgb(215,173,21)" fg:x="424" fg:w="2"/><text x="2.7038%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition (7 samples, 0.04%)</title><rect x="2.4654%" y="869" width="0.0405%" height="15" fill="rgb(210,6,40)" fg:x="426" fg:w="7"/><text x="2.7154%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.03%)</title><rect x="2.4712%" y="853" width="0.0347%" height="15" fill="rgb(212,48,18)" fg:x="427" fg:w="6"/><text x="2.7212%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.4944%" y="837" width="0.0116%" height="15" fill="rgb(230,214,11)" fg:x="431" fg:w="2"/><text x="2.7444%" y="847.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="2.4944%" y="821" width="0.0116%" height="15" fill="rgb(254,105,39)" fg:x="431" fg:w="2"/><text x="2.7444%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="2.5233%" y="821" width="0.0174%" height="15" fill="rgb(245,158,5)" fg:x="436" fg:w="3"/><text x="2.7733%" y="831.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (9 samples, 0.05%)</title><rect x="2.5117%" y="853" width="0.0521%" height="15" fill="rgb(249,208,11)" fg:x="434" fg:w="9"/><text x="2.7617%" y="863.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (8 samples, 0.05%)</title><rect x="2.5175%" y="837" width="0.0463%" height="15" fill="rgb(210,39,28)" fg:x="435" fg:w="8"/><text x="2.7675%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="2.5407%" y="821" width="0.0231%" height="15" fill="rgb(211,56,53)" fg:x="439" fg:w="4"/><text x="2.7907%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="2.5464%" y="805" width="0.0174%" height="15" fill="rgb(226,201,30)" fg:x="440" fg:w="3"/><text x="2.7964%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="2.5464%" y="789" width="0.0174%" height="15" fill="rgb(239,101,34)" fg:x="440" fg:w="3"/><text x="2.7964%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="2.5464%" y="773" width="0.0174%" height="15" fill="rgb(226,209,5)" fg:x="440" fg:w="3"/><text x="2.7964%" y="783.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.02%)</title><rect x="2.5638%" y="853" width="0.0231%" height="15" fill="rgb(250,105,47)" fg:x="443" fg:w="4"/><text x="2.8138%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="2.5696%" y="837" width="0.0174%" height="15" fill="rgb(230,72,3)" fg:x="444" fg:w="3"/><text x="2.8196%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (27 samples, 0.16%)</title><rect x="2.4365%" y="933" width="0.1563%" height="15" fill="rgb(232,218,39)" fg:x="421" fg:w="27"/><text x="2.6865%" y="943.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (27 samples, 0.16%)</title><rect x="2.4365%" y="917" width="0.1563%" height="15" fill="rgb(248,166,6)" fg:x="421" fg:w="27"/><text x="2.6865%" y="927.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (27 samples, 0.16%)</title><rect x="2.4365%" y="901" width="0.1563%" height="15" fill="rgb(247,89,20)" fg:x="421" fg:w="27"/><text x="2.6865%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (27 samples, 0.16%)</title><rect x="2.4365%" y="885" width="0.1563%" height="15" fill="rgb(248,130,54)" fg:x="421" fg:w="27"/><text x="2.6865%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.09%)</title><rect x="2.5059%" y="869" width="0.0868%" height="15" fill="rgb(234,196,4)" fg:x="433" fg:w="15"/><text x="2.7559%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (65 samples, 0.38%)</title><rect x="2.2224%" y="965" width="0.3762%" height="15" fill="rgb(250,143,31)" fg:x="384" fg:w="65"/><text x="2.4724%" y="975.50"></text></g><g><title>criterion::analysis::estimates::stats (65 samples, 0.38%)</title><rect x="2.2224%" y="949" width="0.3762%" height="15" fill="rgb(211,110,34)" fg:x="384" fg:w="65"/><text x="2.4724%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="2.6159%" y="949" width="0.0174%" height="15" fill="rgb(215,124,48)" fg:x="452" fg:w="3"/><text x="2.8659%" y="959.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (74 samples, 0.43%)</title><rect x="2.2224%" y="1205" width="0.4283%" height="15" fill="rgb(216,46,13)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (74 samples, 0.43%)</title><rect x="2.2224%" y="1189" width="0.4283%" height="15" fill="rgb(205,184,25)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (74 samples, 0.43%)</title><rect x="2.2224%" y="1173" width="0.4283%" height="15" fill="rgb(228,1,10)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (74 samples, 0.43%)</title><rect x="2.2224%" y="1157" width="0.4283%" height="15" fill="rgb(213,116,27)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (74 samples, 0.43%)</title><rect x="2.2224%" y="1141" width="0.4283%" height="15" fill="rgb(241,95,50)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1151.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (74 samples, 0.43%)</title><rect x="2.2224%" y="1125" width="0.4283%" height="15" fill="rgb(238,48,32)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1135.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (74 samples, 0.43%)</title><rect x="2.2224%" y="1109" width="0.4283%" height="15" fill="rgb(235,113,49)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (74 samples, 0.43%)</title><rect x="2.2224%" y="1093" width="0.4283%" height="15" fill="rgb(205,127,43)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74 samples, 0.43%)</title><rect x="2.2224%" y="1077" width="0.4283%" height="15" fill="rgb(250,162,2)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74 samples, 0.43%)</title><rect x="2.2224%" y="1061" width="0.4283%" height="15" fill="rgb(220,13,41)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74 samples, 0.43%)</title><rect x="2.2224%" y="1045" width="0.4283%" height="15" fill="rgb(249,221,25)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (74 samples, 0.43%)</title><rect x="2.2224%" y="1029" width="0.4283%" height="15" fill="rgb(215,208,19)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1039.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (74 samples, 0.43%)</title><rect x="2.2224%" y="1013" width="0.4283%" height="15" fill="rgb(236,175,2)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (74 samples, 0.43%)</title><rect x="2.2224%" y="997" width="0.4283%" height="15" fill="rgb(241,52,2)" fg:x="384" fg:w="74"/><text x="2.4724%" y="1007.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (74 samples, 0.43%)</title><rect x="2.2224%" y="981" width="0.4283%" height="15" fill="rgb(248,140,14)" fg:x="384" fg:w="74"/><text x="2.4724%" y="991.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (9 samples, 0.05%)</title><rect x="2.5985%" y="965" width="0.0521%" height="15" fill="rgb(253,22,42)" fg:x="449" fg:w="9"/><text x="2.8485%" y="975.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="2.6333%" y="949" width="0.0174%" height="15" fill="rgb(234,61,47)" fg:x="455" fg:w="3"/><text x="2.8833%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (2 samples, 0.01%)</title><rect x="2.6506%" y="949" width="0.0116%" height="15" fill="rgb(208,226,15)" fg:x="458" fg:w="2"/><text x="2.9006%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (2 samples, 0.01%)</title><rect x="2.6506%" y="933" width="0.0116%" height="15" fill="rgb(217,221,4)" fg:x="458" fg:w="2"/><text x="2.9006%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.01%)</title><rect x="2.6506%" y="917" width="0.0116%" height="15" fill="rgb(212,174,34)" fg:x="458" fg:w="2"/><text x="2.9006%" y="927.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (2 samples, 0.01%)</title><rect x="2.6506%" y="901" width="0.0116%" height="15" fill="rgb(253,83,4)" fg:x="458" fg:w="2"/><text x="2.9006%" y="911.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="2.6738%" y="853" width="0.0116%" height="15" fill="rgb(250,195,49)" fg:x="462" fg:w="2"/><text x="2.9238%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (2 samples, 0.01%)</title><rect x="2.6738%" y="837" width="0.0116%" height="15" fill="rgb(241,192,25)" fg:x="462" fg:w="2"/><text x="2.9238%" y="847.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (5 samples, 0.03%)</title><rect x="2.6911%" y="789" width="0.0289%" height="15" fill="rgb(208,124,10)" fg:x="465" fg:w="5"/><text x="2.9411%" y="799.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.02%)</title><rect x="2.6969%" y="773" width="0.0231%" height="15" fill="rgb(222,33,0)" fg:x="466" fg:w="4"/><text x="2.9469%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.7085%" y="757" width="0.0116%" height="15" fill="rgb(234,209,28)" fg:x="468" fg:w="2"/><text x="2.9585%" y="767.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="2.7085%" y="741" width="0.0116%" height="15" fill="rgb(224,11,23)" fg:x="468" fg:w="2"/><text x="2.9585%" y="751.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="2.7316%" y="741" width="0.0116%" height="15" fill="rgb(232,99,1)" fg:x="472" fg:w="2"/><text x="2.9816%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.10%)</title><rect x="2.6680%" y="869" width="0.0984%" height="15" fill="rgb(237,95,45)" fg:x="461" fg:w="17"/><text x="2.9180%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (14 samples, 0.08%)</title><rect x="2.6853%" y="853" width="0.0810%" height="15" fill="rgb(208,109,11)" fg:x="464" fg:w="14"/><text x="2.9353%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (14 samples, 0.08%)</title><rect x="2.6853%" y="837" width="0.0810%" height="15" fill="rgb(216,190,48)" fg:x="464" fg:w="14"/><text x="2.9353%" y="847.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (14 samples, 0.08%)</title><rect x="2.6853%" y="821" width="0.0810%" height="15" fill="rgb(251,171,36)" fg:x="464" fg:w="14"/><text x="2.9353%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (14 samples, 0.08%)</title><rect x="2.6853%" y="805" width="0.0810%" height="15" fill="rgb(230,62,22)" fg:x="464" fg:w="14"/><text x="2.9353%" y="815.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="2.7201%" y="789" width="0.0463%" height="15" fill="rgb(225,114,35)" fg:x="470" fg:w="8"/><text x="2.9701%" y="799.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (8 samples, 0.05%)</title><rect x="2.7201%" y="773" width="0.0463%" height="15" fill="rgb(215,118,42)" fg:x="470" fg:w="8"/><text x="2.9701%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (6 samples, 0.03%)</title><rect x="2.7316%" y="757" width="0.0347%" height="15" fill="rgb(243,119,21)" fg:x="472" fg:w="6"/><text x="2.9816%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="2.7432%" y="741" width="0.0231%" height="15" fill="rgb(252,177,53)" fg:x="474" fg:w="4"/><text x="2.9932%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.02%)</title><rect x="2.7432%" y="725" width="0.0231%" height="15" fill="rgb(237,209,29)" fg:x="474" fg:w="4"/><text x="2.9932%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="2.7432%" y="709" width="0.0231%" height="15" fill="rgb(212,65,23)" fg:x="474" fg:w="4"/><text x="2.9932%" y="719.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (4 samples, 0.02%)</title><rect x="2.7722%" y="805" width="0.0231%" height="15" fill="rgb(230,222,46)" fg:x="479" fg:w="4"/><text x="3.0222%" y="815.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="2.7779%" y="789" width="0.0174%" height="15" fill="rgb(215,135,32)" fg:x="480" fg:w="3"/><text x="3.0279%" y="799.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (3 samples, 0.02%)</title><rect x="2.7779%" y="773" width="0.0174%" height="15" fill="rgb(246,101,22)" fg:x="480" fg:w="3"/><text x="3.0279%" y="783.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.7837%" y="757" width="0.0116%" height="15" fill="rgb(206,107,13)" fg:x="481" fg:w="2"/><text x="3.0337%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.7837%" y="741" width="0.0116%" height="15" fill="rgb(250,100,44)" fg:x="481" fg:w="2"/><text x="3.0337%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.7837%" y="725" width="0.0116%" height="15" fill="rgb(231,147,38)" fg:x="481" fg:w="2"/><text x="3.0337%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.7837%" y="709" width="0.0116%" height="15" fill="rgb(229,8,40)" fg:x="481" fg:w="2"/><text x="3.0337%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.7837%" y="693" width="0.0116%" height="15" fill="rgb(221,135,30)" fg:x="481" fg:w="2"/><text x="3.0337%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="2.7953%" y="789" width="0.0116%" height="15" fill="rgb(249,193,18)" fg:x="483" fg:w="2"/><text x="3.0453%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="2.7953%" y="773" width="0.0116%" height="15" fill="rgb(209,133,39)" fg:x="483" fg:w="2"/><text x="3.0453%" y="783.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (4 samples, 0.02%)</title><rect x="2.7953%" y="805" width="0.0231%" height="15" fill="rgb(232,100,14)" fg:x="483" fg:w="4"/><text x="3.0453%" y="815.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="2.8069%" y="789" width="0.0116%" height="15" fill="rgb(224,185,1)" fg:x="485" fg:w="2"/><text x="3.0569%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.8069%" y="773" width="0.0116%" height="15" fill="rgb(223,139,8)" fg:x="485" fg:w="2"/><text x="3.0569%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.8069%" y="757" width="0.0116%" height="15" fill="rgb(232,213,38)" fg:x="485" fg:w="2"/><text x="3.0569%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.8069%" y="741" width="0.0116%" height="15" fill="rgb(207,94,22)" fg:x="485" fg:w="2"/><text x="3.0569%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.8069%" y="725" width="0.0116%" height="15" fill="rgb(219,183,54)" fg:x="485" fg:w="2"/><text x="3.0569%" y="735.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (15 samples, 0.09%)</title><rect x="2.7664%" y="869" width="0.0868%" height="15" fill="rgb(216,185,54)" fg:x="478" fg:w="15"/><text x="3.0164%" y="879.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (15 samples, 0.09%)</title><rect x="2.7664%" y="853" width="0.0868%" height="15" fill="rgb(254,217,39)" fg:x="478" fg:w="15"/><text x="3.0164%" y="863.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (15 samples, 0.09%)</title><rect x="2.7664%" y="837" width="0.0868%" height="15" fill="rgb(240,178,23)" fg:x="478" fg:w="15"/><text x="3.0164%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.09%)</title><rect x="2.7664%" y="821" width="0.0868%" height="15" fill="rgb(218,11,47)" fg:x="478" fg:w="15"/><text x="3.0164%" y="831.50"></text></g><g><title>rayon::slice::quicksort::partition (6 samples, 0.03%)</title><rect x="2.8185%" y="805" width="0.0347%" height="15" fill="rgb(218,51,51)" fg:x="487" fg:w="6"/><text x="3.0685%" y="815.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="2.8242%" y="789" width="0.0289%" height="15" fill="rgb(238,126,27)" fg:x="488" fg:w="5"/><text x="3.0742%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="2.8358%" y="773" width="0.0174%" height="15" fill="rgb(249,202,22)" fg:x="490" fg:w="3"/><text x="3.0858%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.8416%" y="757" width="0.0116%" height="15" fill="rgb(254,195,49)" fg:x="491" fg:w="2"/><text x="3.0916%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.8416%" y="741" width="0.0116%" height="15" fill="rgb(208,123,14)" fg:x="491" fg:w="2"/><text x="3.0916%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.8416%" y="725" width="0.0116%" height="15" fill="rgb(224,200,8)" fg:x="491" fg:w="2"/><text x="3.0916%" y="735.50"></text></g><g><title>core::ops::function::Fn::call (34 samples, 0.20%)</title><rect x="2.6622%" y="901" width="0.1968%" height="15" fill="rgb(217,61,36)" fg:x="460" fg:w="34"/><text x="2.9122%" y="911.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.20%)</title><rect x="2.6622%" y="885" width="0.1968%" height="15" fill="rgb(206,35,45)" fg:x="460" fg:w="34"/><text x="2.9122%" y="895.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="2.8590%" y="885" width="0.0116%" height="15" fill="rgb(217,65,33)" fg:x="494" fg:w="2"/><text x="3.1090%" y="895.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (116 samples, 0.67%)</title><rect x="2.2224%" y="1317" width="0.6713%" height="15" fill="rgb(222,158,48)" fg:x="384" fg:w="116"/><text x="2.4724%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (116 samples, 0.67%)</title><rect x="2.2224%" y="1301" width="0.6713%" height="15" fill="rgb(254,2,54)" fg:x="384" fg:w="116"/><text x="2.4724%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (116 samples, 0.67%)</title><rect x="2.2224%" y="1285" width="0.6713%" height="15" fill="rgb(250,143,38)" fg:x="384" fg:w="116"/><text x="2.4724%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (116 samples, 0.67%)</title><rect x="2.2224%" y="1269" width="0.6713%" height="15" fill="rgb(248,25,0)" fg:x="384" fg:w="116"/><text x="2.4724%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (116 samples, 0.67%)</title><rect x="2.2224%" y="1253" width="0.6713%" height="15" fill="rgb(206,152,27)" fg:x="384" fg:w="116"/><text x="2.4724%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (116 samples, 0.67%)</title><rect x="2.2224%" y="1237" width="0.6713%" height="15" fill="rgb(240,77,30)" fg:x="384" fg:w="116"/><text x="2.4724%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (116 samples, 0.67%)</title><rect x="2.2224%" y="1221" width="0.6713%" height="15" fill="rgb(231,5,3)" fg:x="384" fg:w="116"/><text x="2.4724%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.24%)</title><rect x="2.6506%" y="1205" width="0.2431%" height="15" fill="rgb(207,226,32)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.24%)</title><rect x="2.6506%" y="1189" width="0.2431%" height="15" fill="rgb(222,207,47)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1199.50"></text></g><g><title>std::panicking::try (42 samples, 0.24%)</title><rect x="2.6506%" y="1173" width="0.2431%" height="15" fill="rgb(229,115,45)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.24%)</title><rect x="2.6506%" y="1157" width="0.2431%" height="15" fill="rgb(224,191,6)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1167.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.24%)</title><rect x="2.6506%" y="1141" width="0.2431%" height="15" fill="rgb(230,227,24)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (42 samples, 0.24%)</title><rect x="2.6506%" y="1125" width="0.2431%" height="15" fill="rgb(228,80,19)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (42 samples, 0.24%)</title><rect x="2.6506%" y="1109" width="0.2431%" height="15" fill="rgb(247,229,0)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.24%)</title><rect x="2.6506%" y="1093" width="0.2431%" height="15" fill="rgb(237,194,15)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (42 samples, 0.24%)</title><rect x="2.6506%" y="1077" width="0.2431%" height="15" fill="rgb(219,203,20)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (42 samples, 0.24%)</title><rect x="2.6506%" y="1061" width="0.2431%" height="15" fill="rgb(234,128,8)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1071.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (42 samples, 0.24%)</title><rect x="2.6506%" y="1045" width="0.2431%" height="15" fill="rgb(248,202,8)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.24%)</title><rect x="2.6506%" y="1029" width="0.2431%" height="15" fill="rgb(206,104,37)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (42 samples, 0.24%)</title><rect x="2.6506%" y="1013" width="0.2431%" height="15" fill="rgb(223,8,27)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (42 samples, 0.24%)</title><rect x="2.6506%" y="997" width="0.2431%" height="15" fill="rgb(216,217,28)" fg:x="458" fg:w="42"/><text x="2.9006%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (42 samples, 0.24%)</title><rect x="2.6506%" y="981" width="0.2431%" height="15" fill="rgb(249,199,1)" fg:x="458" fg:w="42"/><text x="2.9006%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (42 samples, 0.24%)</title><rect x="2.6506%" y="965" width="0.2431%" height="15" fill="rgb(240,85,17)" fg:x="458" fg:w="42"/><text x="2.9006%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (40 samples, 0.23%)</title><rect x="2.6622%" y="949" width="0.2315%" height="15" fill="rgb(206,108,45)" fg:x="460" fg:w="40"/><text x="2.9122%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (40 samples, 0.23%)</title><rect x="2.6622%" y="933" width="0.2315%" height="15" fill="rgb(245,210,41)" fg:x="460" fg:w="40"/><text x="2.9122%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (40 samples, 0.23%)</title><rect x="2.6622%" y="917" width="0.2315%" height="15" fill="rgb(206,13,37)" fg:x="460" fg:w="40"/><text x="2.9122%" y="927.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (6 samples, 0.03%)</title><rect x="2.8590%" y="901" width="0.0347%" height="15" fill="rgb(250,61,18)" fg:x="494" fg:w="6"/><text x="3.1090%" y="911.50"></text></g><g><title>oorandom::Rand64::rand_range (4 samples, 0.02%)</title><rect x="2.8705%" y="885" width="0.0231%" height="15" fill="rgb(235,172,48)" fg:x="496" fg:w="4"/><text x="3.1205%" y="895.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="2.9110%" y="789" width="0.0116%" height="15" fill="rgb(249,201,17)" fg:x="503" fg:w="2"/><text x="3.1610%" y="799.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.9110%" y="773" width="0.0116%" height="15" fill="rgb(219,208,6)" fg:x="503" fg:w="2"/><text x="3.1610%" y="783.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.9110%" y="757" width="0.0116%" height="15" fill="rgb(248,31,23)" fg:x="503" fg:w="2"/><text x="3.1610%" y="767.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="2.9110%" y="741" width="0.0116%" height="15" fill="rgb(245,15,42)" fg:x="503" fg:w="2"/><text x="3.1610%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="2.9110%" y="725" width="0.0116%" height="15" fill="rgb(222,217,39)" fg:x="503" fg:w="2"/><text x="3.1610%" y="735.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="2.9110%" y="709" width="0.0116%" height="15" fill="rgb(210,219,27)" fg:x="503" fg:w="2"/><text x="3.1610%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="2.9110%" y="693" width="0.0116%" height="15" fill="rgb(252,166,36)" fg:x="503" fg:w="2"/><text x="3.1610%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="2.9110%" y="677" width="0.0116%" height="15" fill="rgb(245,132,34)" fg:x="503" fg:w="2"/><text x="3.1610%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="2.9284%" y="757" width="0.0116%" height="15" fill="rgb(236,54,3)" fg:x="506" fg:w="2"/><text x="3.1784%" y="767.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (4 samples, 0.02%)</title><rect x="2.9226%" y="789" width="0.0231%" height="15" fill="rgb(241,173,43)" fg:x="505" fg:w="4"/><text x="3.1726%" y="799.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="2.9284%" y="773" width="0.0174%" height="15" fill="rgb(215,190,9)" fg:x="506" fg:w="3"/><text x="3.1784%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="2.9689%" y="757" width="0.0116%" height="15" fill="rgb(242,101,16)" fg:x="513" fg:w="2"/><text x="3.2189%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (17 samples, 0.10%)</title><rect x="2.9110%" y="869" width="0.0984%" height="15" fill="rgb(223,190,21)" fg:x="503" fg:w="17"/><text x="3.1610%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (17 samples, 0.10%)</title><rect x="2.9110%" y="853" width="0.0984%" height="15" fill="rgb(215,228,25)" fg:x="503" fg:w="17"/><text x="3.1610%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (17 samples, 0.10%)</title><rect x="2.9110%" y="837" width="0.0984%" height="15" fill="rgb(225,36,22)" fg:x="503" fg:w="17"/><text x="3.1610%" y="847.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (17 samples, 0.10%)</title><rect x="2.9110%" y="821" width="0.0984%" height="15" fill="rgb(251,106,46)" fg:x="503" fg:w="17"/><text x="3.1610%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (17 samples, 0.10%)</title><rect x="2.9110%" y="805" width="0.0984%" height="15" fill="rgb(208,90,1)" fg:x="503" fg:w="17"/><text x="3.1610%" y="815.50"></text></g><g><title>rayon::slice::quicksort::partition (11 samples, 0.06%)</title><rect x="2.9458%" y="789" width="0.0637%" height="15" fill="rgb(243,10,4)" fg:x="509" fg:w="11"/><text x="3.1958%" y="799.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (9 samples, 0.05%)</title><rect x="2.9573%" y="773" width="0.0521%" height="15" fill="rgb(212,137,27)" fg:x="511" fg:w="9"/><text x="3.2073%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="2.9805%" y="757" width="0.0289%" height="15" fill="rgb(231,220,49)" fg:x="515" fg:w="5"/><text x="3.2305%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="2.9863%" y="741" width="0.0231%" height="15" fill="rgb(237,96,20)" fg:x="516" fg:w="4"/><text x="3.2363%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.02%)</title><rect x="2.9863%" y="725" width="0.0231%" height="15" fill="rgb(239,229,30)" fg:x="516" fg:w="4"/><text x="3.2363%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="2.9863%" y="709" width="0.0231%" height="15" fill="rgb(219,65,33)" fg:x="516" fg:w="4"/><text x="3.2363%" y="719.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (2 samples, 0.01%)</title><rect x="3.0094%" y="805" width="0.0116%" height="15" fill="rgb(243,134,7)" fg:x="520" fg:w="2"/><text x="3.2594%" y="815.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.0094%" y="789" width="0.0116%" height="15" fill="rgb(216,177,54)" fg:x="520" fg:w="2"/><text x="3.2594%" y="799.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.0094%" y="773" width="0.0116%" height="15" fill="rgb(211,160,20)" fg:x="520" fg:w="2"/><text x="3.2594%" y="783.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (5 samples, 0.03%)</title><rect x="3.0210%" y="805" width="0.0289%" height="15" fill="rgb(239,85,39)" fg:x="522" fg:w="5"/><text x="3.2710%" y="815.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (4 samples, 0.02%)</title><rect x="3.0268%" y="789" width="0.0231%" height="15" fill="rgb(232,125,22)" fg:x="523" fg:w="4"/><text x="3.2768%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (3 samples, 0.02%)</title><rect x="3.0326%" y="773" width="0.0174%" height="15" fill="rgb(244,57,34)" fg:x="524" fg:w="3"/><text x="3.2826%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="3.0326%" y="757" width="0.0174%" height="15" fill="rgb(214,203,32)" fg:x="524" fg:w="3"/><text x="3.2826%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="3.0326%" y="741" width="0.0174%" height="15" fill="rgb(207,58,43)" fg:x="524" fg:w="3"/><text x="3.2826%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="3.0326%" y="725" width="0.0174%" height="15" fill="rgb(215,193,15)" fg:x="524" fg:w="3"/><text x="3.2826%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="3.0905%" y="757" width="0.0116%" height="15" fill="rgb(232,15,44)" fg:x="534" fg:w="2"/><text x="3.3405%" y="767.50"></text></g><g><title>rayon::slice::quicksort::partition (12 samples, 0.07%)</title><rect x="3.0499%" y="805" width="0.0694%" height="15" fill="rgb(212,3,48)" fg:x="527" fg:w="12"/><text x="3.2999%" y="815.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (10 samples, 0.06%)</title><rect x="3.0615%" y="789" width="0.0579%" height="15" fill="rgb(218,128,7)" fg:x="529" fg:w="10"/><text x="3.3115%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (5 samples, 0.03%)</title><rect x="3.0905%" y="773" width="0.0289%" height="15" fill="rgb(226,216,39)" fg:x="534" fg:w="5"/><text x="3.3405%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="3.1020%" y="757" width="0.0174%" height="15" fill="rgb(243,47,51)" fg:x="536" fg:w="3"/><text x="3.3520%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="3.1020%" y="741" width="0.0174%" height="15" fill="rgb(241,183,40)" fg:x="536" fg:w="3"/><text x="3.3520%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="3.1020%" y="725" width="0.0174%" height="15" fill="rgb(231,217,32)" fg:x="536" fg:w="3"/><text x="3.3520%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="3.1078%" y="709" width="0.0116%" height="15" fill="rgb(229,61,38)" fg:x="537" fg:w="2"/><text x="3.3578%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="3.1078%" y="693" width="0.0116%" height="15" fill="rgb(225,210,5)" fg:x="537" fg:w="2"/><text x="3.3578%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (20 samples, 0.12%)</title><rect x="3.0094%" y="869" width="0.1157%" height="15" fill="rgb(231,79,45)" fg:x="520" fg:w="20"/><text x="3.2594%" y="879.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (20 samples, 0.12%)</title><rect x="3.0094%" y="853" width="0.1157%" height="15" fill="rgb(224,100,7)" fg:x="520" fg:w="20"/><text x="3.2594%" y="863.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (20 samples, 0.12%)</title><rect x="3.0094%" y="837" width="0.1157%" height="15" fill="rgb(241,198,18)" fg:x="520" fg:w="20"/><text x="3.2594%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (20 samples, 0.12%)</title><rect x="3.0094%" y="821" width="0.1157%" height="15" fill="rgb(252,97,53)" fg:x="520" fg:w="20"/><text x="3.2594%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (41 samples, 0.24%)</title><rect x="2.8995%" y="901" width="0.2373%" height="15" fill="rgb(220,88,7)" fg:x="501" fg:w="41"/><text x="3.1495%" y="911.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.24%)</title><rect x="2.8995%" y="885" width="0.2373%" height="15" fill="rgb(213,176,14)" fg:x="501" fg:w="41"/><text x="3.1495%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (2 samples, 0.01%)</title><rect x="3.1252%" y="869" width="0.0116%" height="15" fill="rgb(246,73,7)" fg:x="540" fg:w="2"/><text x="3.3752%" y="879.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (51 samples, 0.30%)</title><rect x="2.8937%" y="1141" width="0.2952%" height="15" fill="rgb(245,64,36)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (51 samples, 0.30%)</title><rect x="2.8937%" y="1125" width="0.2952%" height="15" fill="rgb(245,80,10)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (51 samples, 0.30%)</title><rect x="2.8937%" y="1109" width="0.2952%" height="15" fill="rgb(232,107,50)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.30%)</title><rect x="2.8937%" y="1093" width="0.2952%" height="15" fill="rgb(253,3,0)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (51 samples, 0.30%)</title><rect x="2.8937%" y="1077" width="0.2952%" height="15" fill="rgb(212,99,53)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (51 samples, 0.30%)</title><rect x="2.8937%" y="1061" width="0.2952%" height="15" fill="rgb(249,111,54)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1071.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (51 samples, 0.30%)</title><rect x="2.8937%" y="1045" width="0.2952%" height="15" fill="rgb(249,55,30)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (51 samples, 0.30%)</title><rect x="2.8937%" y="1029" width="0.2952%" height="15" fill="rgb(237,47,42)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.30%)</title><rect x="2.8937%" y="1013" width="0.2952%" height="15" fill="rgb(211,20,18)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.30%)</title><rect x="2.8937%" y="997" width="0.2952%" height="15" fill="rgb(231,203,46)" fg:x="500" fg:w="51"/><text x="3.1437%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (51 samples, 0.30%)</title><rect x="2.8937%" y="981" width="0.2952%" height="15" fill="rgb(237,142,3)" fg:x="500" fg:w="51"/><text x="3.1437%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (51 samples, 0.30%)</title><rect x="2.8937%" y="965" width="0.2952%" height="15" fill="rgb(241,107,1)" fg:x="500" fg:w="51"/><text x="3.1437%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (50 samples, 0.29%)</title><rect x="2.8995%" y="949" width="0.2894%" height="15" fill="rgb(229,83,13)" fg:x="501" fg:w="50"/><text x="3.1495%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (50 samples, 0.29%)</title><rect x="2.8995%" y="933" width="0.2894%" height="15" fill="rgb(241,91,40)" fg:x="501" fg:w="50"/><text x="3.1495%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (50 samples, 0.29%)</title><rect x="2.8995%" y="917" width="0.2894%" height="15" fill="rgb(225,3,45)" fg:x="501" fg:w="50"/><text x="3.1495%" y="927.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (9 samples, 0.05%)</title><rect x="3.1368%" y="901" width="0.0521%" height="15" fill="rgb(244,223,14)" fg:x="542" fg:w="9"/><text x="3.3868%" y="911.50"></text></g><g><title>oorandom::Rand64::rand_range (7 samples, 0.04%)</title><rect x="3.1483%" y="885" width="0.0405%" height="15" fill="rgb(224,124,37)" fg:x="544" fg:w="7"/><text x="3.3983%" y="895.50"></text></g><g><title>oorandom::Rand64::rand_u64 (5 samples, 0.03%)</title><rect x="3.1599%" y="869" width="0.0289%" height="15" fill="rgb(251,171,30)" fg:x="546" fg:w="5"/><text x="3.4099%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (2 samples, 0.01%)</title><rect x="3.1946%" y="805" width="0.0116%" height="15" fill="rgb(236,46,54)" fg:x="552" fg:w="2"/><text x="3.4446%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (2 samples, 0.01%)</title><rect x="3.1946%" y="789" width="0.0116%" height="15" fill="rgb(245,213,5)" fg:x="552" fg:w="2"/><text x="3.4446%" y="799.50"></text></g><g><title>criterion::stats::sum (2 samples, 0.01%)</title><rect x="3.1946%" y="773" width="0.0116%" height="15" fill="rgb(230,144,27)" fg:x="552" fg:w="2"/><text x="3.4446%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.1946%" y="757" width="0.0116%" height="15" fill="rgb(220,86,6)" fg:x="552" fg:w="2"/><text x="3.4446%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.1946%" y="741" width="0.0116%" height="15" fill="rgb(240,20,13)" fg:x="552" fg:w="2"/><text x="3.4446%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="3.1946%" y="725" width="0.0116%" height="15" fill="rgb(217,89,34)" fg:x="552" fg:w="2"/><text x="3.4446%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="3.1946%" y="709" width="0.0116%" height="15" fill="rgb(229,13,5)" fg:x="552" fg:w="2"/><text x="3.4446%" y="719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.01%)</title><rect x="3.1946%" y="693" width="0.0116%" height="15" fill="rgb(244,67,35)" fg:x="552" fg:w="2"/><text x="3.4446%" y="703.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.01%)</title><rect x="3.1946%" y="677" width="0.0116%" height="15" fill="rgb(221,40,2)" fg:x="552" fg:w="2"/><text x="3.4446%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="3.2178%" y="709" width="0.0116%" height="15" fill="rgb(237,157,21)" fg:x="556" fg:w="2"/><text x="3.4678%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="3.2178%" y="693" width="0.0116%" height="15" fill="rgb(222,94,11)" fg:x="556" fg:w="2"/><text x="3.4678%" y="703.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (4 samples, 0.02%)</title><rect x="3.2178%" y="725" width="0.0231%" height="15" fill="rgb(249,113,6)" fg:x="556" fg:w="4"/><text x="3.4678%" y="735.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="3.2294%" y="709" width="0.0116%" height="15" fill="rgb(238,137,36)" fg:x="558" fg:w="2"/><text x="3.4794%" y="719.50"></text></g><g><title>rayon::slice::quicksort::partition (6 samples, 0.03%)</title><rect x="3.2409%" y="725" width="0.0347%" height="15" fill="rgb(210,102,26)" fg:x="560" fg:w="6"/><text x="3.4909%" y="735.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (5 samples, 0.03%)</title><rect x="3.2467%" y="709" width="0.0289%" height="15" fill="rgb(218,30,30)" fg:x="561" fg:w="5"/><text x="3.4967%" y="719.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="3.2525%" y="693" width="0.0231%" height="15" fill="rgb(214,67,26)" fg:x="562" fg:w="4"/><text x="3.5025%" y="703.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="3.2583%" y="677" width="0.0174%" height="15" fill="rgb(251,9,53)" fg:x="563" fg:w="3"/><text x="3.5083%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="3.2583%" y="661" width="0.0174%" height="15" fill="rgb(228,204,25)" fg:x="563" fg:w="3"/><text x="3.5083%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="3.2583%" y="645" width="0.0174%" height="15" fill="rgb(207,153,8)" fg:x="563" fg:w="3"/><text x="3.5083%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.08%)</title><rect x="3.2062%" y="805" width="0.0752%" height="15" fill="rgb(242,9,16)" fg:x="554" fg:w="13"/><text x="3.4562%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (12 samples, 0.07%)</title><rect x="3.2120%" y="789" width="0.0694%" height="15" fill="rgb(217,211,10)" fg:x="555" fg:w="12"/><text x="3.4620%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (12 samples, 0.07%)</title><rect x="3.2120%" y="773" width="0.0694%" height="15" fill="rgb(219,228,52)" fg:x="555" fg:w="12"/><text x="3.4620%" y="783.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (12 samples, 0.07%)</title><rect x="3.2120%" y="757" width="0.0694%" height="15" fill="rgb(231,92,29)" fg:x="555" fg:w="12"/><text x="3.4620%" y="767.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.07%)</title><rect x="3.2120%" y="741" width="0.0694%" height="15" fill="rgb(232,8,23)" fg:x="555" fg:w="12"/><text x="3.4620%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.2988%" y="693" width="0.0116%" height="15" fill="rgb(216,211,34)" fg:x="570" fg:w="2"/><text x="3.5488%" y="703.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (4 samples, 0.02%)</title><rect x="3.2988%" y="741" width="0.0231%" height="15" fill="rgb(236,151,0)" fg:x="570" fg:w="4"/><text x="3.5488%" y="751.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (4 samples, 0.02%)</title><rect x="3.2988%" y="725" width="0.0231%" height="15" fill="rgb(209,168,3)" fg:x="570" fg:w="4"/><text x="3.5488%" y="735.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (4 samples, 0.02%)</title><rect x="3.2988%" y="709" width="0.0231%" height="15" fill="rgb(208,129,28)" fg:x="570" fg:w="4"/><text x="3.5488%" y="719.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::{{closure}} (2 samples, 0.01%)</title><rect x="3.3104%" y="693" width="0.0116%" height="15" fill="rgb(229,78,22)" fg:x="572" fg:w="2"/><text x="3.5604%" y="703.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (4 samples, 0.02%)</title><rect x="3.3220%" y="741" width="0.0231%" height="15" fill="rgb(228,187,13)" fg:x="574" fg:w="4"/><text x="3.5720%" y="751.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (3 samples, 0.02%)</title><rect x="3.3277%" y="725" width="0.0174%" height="15" fill="rgb(240,119,24)" fg:x="575" fg:w="3"/><text x="3.5777%" y="735.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.3335%" y="709" width="0.0116%" height="15" fill="rgb(209,194,42)" fg:x="576" fg:w="2"/><text x="3.5835%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="3.3335%" y="693" width="0.0116%" height="15" fill="rgb(247,200,46)" fg:x="576" fg:w="2"/><text x="3.5835%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="3.3335%" y="677" width="0.0116%" height="15" fill="rgb(218,76,16)" fg:x="576" fg:w="2"/><text x="3.5835%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="3.3335%" y="661" width="0.0116%" height="15" fill="rgb(225,21,48)" fg:x="576" fg:w="2"/><text x="3.5835%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="3.3335%" y="645" width="0.0116%" height="15" fill="rgb(239,223,50)" fg:x="576" fg:w="2"/><text x="3.5835%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="3.3335%" y="629" width="0.0116%" height="15" fill="rgb(244,45,21)" fg:x="576" fg:w="2"/><text x="3.5835%" y="639.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="3.3625%" y="693" width="0.0174%" height="15" fill="rgb(232,33,43)" fg:x="581" fg:w="3"/><text x="3.6125%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (24 samples, 0.14%)</title><rect x="3.2814%" y="805" width="0.1389%" height="15" fill="rgb(209,8,3)" fg:x="567" fg:w="24"/><text x="3.5314%" y="815.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (23 samples, 0.13%)</title><rect x="3.2872%" y="789" width="0.1331%" height="15" fill="rgb(214,25,53)" fg:x="568" fg:w="23"/><text x="3.5372%" y="799.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (23 samples, 0.13%)</title><rect x="3.2872%" y="773" width="0.1331%" height="15" fill="rgb(254,186,54)" fg:x="568" fg:w="23"/><text x="3.5372%" y="783.50"></text></g><g><title>rayon::slice::quicksort::recurse (23 samples, 0.13%)</title><rect x="3.2872%" y="757" width="0.1331%" height="15" fill="rgb(208,174,49)" fg:x="568" fg:w="23"/><text x="3.5372%" y="767.50"></text></g><g><title>rayon::slice::quicksort::partition (13 samples, 0.08%)</title><rect x="3.3451%" y="741" width="0.0752%" height="15" fill="rgb(233,191,51)" fg:x="578" fg:w="13"/><text x="3.5951%" y="751.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (11 samples, 0.06%)</title><rect x="3.3567%" y="725" width="0.0637%" height="15" fill="rgb(222,134,10)" fg:x="580" fg:w="11"/><text x="3.6067%" y="735.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (10 samples, 0.06%)</title><rect x="3.3625%" y="709" width="0.0579%" height="15" fill="rgb(230,226,20)" fg:x="581" fg:w="10"/><text x="3.6125%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.04%)</title><rect x="3.3798%" y="693" width="0.0405%" height="15" fill="rgb(251,111,25)" fg:x="584" fg:w="7"/><text x="3.6298%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (7 samples, 0.04%)</title><rect x="3.3798%" y="677" width="0.0405%" height="15" fill="rgb(224,40,46)" fg:x="584" fg:w="7"/><text x="3.6298%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (7 samples, 0.04%)</title><rect x="3.3798%" y="661" width="0.0405%" height="15" fill="rgb(236,108,47)" fg:x="584" fg:w="7"/><text x="3.6298%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="3.4088%" y="645" width="0.0116%" height="15" fill="rgb(234,93,0)" fg:x="589" fg:w="2"/><text x="3.6588%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="3.4088%" y="629" width="0.0116%" height="15" fill="rgb(224,213,32)" fg:x="589" fg:w="2"/><text x="3.6588%" y="639.50"></text></g><g><title>core::ops::function::Fn::call (41 samples, 0.24%)</title><rect x="3.1946%" y="837" width="0.2373%" height="15" fill="rgb(251,11,48)" fg:x="552" fg:w="41"/><text x="3.4446%" y="847.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.24%)</title><rect x="3.1946%" y="821" width="0.2373%" height="15" fill="rgb(236,173,5)" fg:x="552" fg:w="41"/><text x="3.4446%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (2 samples, 0.01%)</title><rect x="3.4203%" y="805" width="0.0116%" height="15" fill="rgb(230,95,12)" fg:x="591" fg:w="2"/><text x="3.6703%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (2 samples, 0.01%)</title><rect x="3.4203%" y="789" width="0.0116%" height="15" fill="rgb(232,209,1)" fg:x="591" fg:w="2"/><text x="3.6703%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.4203%" y="773" width="0.0116%" height="15" fill="rgb(232,6,1)" fg:x="591" fg:w="2"/><text x="3.6703%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="3.4203%" y="757" width="0.0116%" height="15" fill="rgb(210,224,50)" fg:x="591" fg:w="2"/><text x="3.6703%" y="767.50"></text></g><g><title>rayon_core::join::join_context (469 samples, 2.71%)</title><rect x="0.7813%" y="1541" width="2.7143%" height="15" fill="rgb(228,127,35)" fg:x="135" fg:w="469"/><text x="1.0313%" y="1551.50">ra..</text></g><g><title>rayon_core::registry::in_worker (469 samples, 2.71%)</title><rect x="0.7813%" y="1525" width="2.7143%" height="15" fill="rgb(245,102,45)" fg:x="135" fg:w="469"/><text x="1.0313%" y="1535.50">ra..</text></g><g><title>rayon_core::join::join_context::{{closure}} (469 samples, 2.71%)</title><rect x="0.7813%" y="1509" width="2.7143%" height="15" fill="rgb(214,1,49)" fg:x="135" fg:w="469"/><text x="1.0313%" y="1519.50">ra..</text></g><g><title>rayon_core::unwind::halt_unwinding (220 samples, 1.27%)</title><rect x="2.2224%" y="1493" width="1.2732%" height="15" fill="rgb(226,163,40)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (220 samples, 1.27%)</title><rect x="2.2224%" y="1477" width="1.2732%" height="15" fill="rgb(239,212,28)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1487.50"></text></g><g><title>std::panicking::try (220 samples, 1.27%)</title><rect x="2.2224%" y="1461" width="1.2732%" height="15" fill="rgb(220,20,13)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (220 samples, 1.27%)</title><rect x="2.2224%" y="1445" width="1.2732%" height="15" fill="rgb(210,164,35)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1455.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (220 samples, 1.27%)</title><rect x="2.2224%" y="1429" width="1.2732%" height="15" fill="rgb(248,109,41)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (220 samples, 1.27%)</title><rect x="2.2224%" y="1413" width="1.2732%" height="15" fill="rgb(238,23,50)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (220 samples, 1.27%)</title><rect x="2.2224%" y="1397" width="1.2732%" height="15" fill="rgb(211,48,49)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (220 samples, 1.27%)</title><rect x="2.2224%" y="1381" width="1.2732%" height="15" fill="rgb(223,36,21)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (220 samples, 1.27%)</title><rect x="2.2224%" y="1365" width="1.2732%" height="15" fill="rgb(207,123,46)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1375.50"></text></g><g><title>rayon_core::registry::in_worker (220 samples, 1.27%)</title><rect x="2.2224%" y="1349" width="1.2732%" height="15" fill="rgb(240,218,32)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (220 samples, 1.27%)</title><rect x="2.2224%" y="1333" width="1.2732%" height="15" fill="rgb(252,5,43)" fg:x="384" fg:w="220"/><text x="2.4724%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (104 samples, 0.60%)</title><rect x="2.8937%" y="1317" width="0.6019%" height="15" fill="rgb(252,84,19)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (104 samples, 0.60%)</title><rect x="2.8937%" y="1301" width="0.6019%" height="15" fill="rgb(243,152,39)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1311.50"></text></g><g><title>std::panicking::try (104 samples, 0.60%)</title><rect x="2.8937%" y="1285" width="0.6019%" height="15" fill="rgb(234,160,15)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (104 samples, 0.60%)</title><rect x="2.8937%" y="1269" width="0.6019%" height="15" fill="rgb(237,34,20)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1279.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (104 samples, 0.60%)</title><rect x="2.8937%" y="1253" width="0.6019%" height="15" fill="rgb(229,97,13)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (104 samples, 0.60%)</title><rect x="2.8937%" y="1237" width="0.6019%" height="15" fill="rgb(234,71,50)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (104 samples, 0.60%)</title><rect x="2.8937%" y="1221" width="0.6019%" height="15" fill="rgb(253,155,4)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (104 samples, 0.60%)</title><rect x="2.8937%" y="1205" width="0.6019%" height="15" fill="rgb(222,185,37)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1215.50"></text></g><g><title>rayon_core::join::join_context (104 samples, 0.60%)</title><rect x="2.8937%" y="1189" width="0.6019%" height="15" fill="rgb(251,177,13)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (104 samples, 0.60%)</title><rect x="2.8937%" y="1173" width="0.6019%" height="15" fill="rgb(250,179,40)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (104 samples, 0.60%)</title><rect x="2.8937%" y="1157" width="0.6019%" height="15" fill="rgb(242,44,2)" fg:x="500" fg:w="104"/><text x="3.1437%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (53 samples, 0.31%)</title><rect x="3.1888%" y="1141" width="0.3067%" height="15" fill="rgb(216,177,13)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (53 samples, 0.31%)</title><rect x="3.1888%" y="1125" width="0.3067%" height="15" fill="rgb(216,106,43)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1135.50"></text></g><g><title>std::panicking::try (53 samples, 0.31%)</title><rect x="3.1888%" y="1109" width="0.3067%" height="15" fill="rgb(216,183,2)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (53 samples, 0.31%)</title><rect x="3.1888%" y="1093" width="0.3067%" height="15" fill="rgb(249,75,3)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (53 samples, 0.31%)</title><rect x="3.1888%" y="1077" width="0.3067%" height="15" fill="rgb(219,67,39)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (53 samples, 0.31%)</title><rect x="3.1888%" y="1061" width="0.3067%" height="15" fill="rgb(253,228,2)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (53 samples, 0.31%)</title><rect x="3.1888%" y="1045" width="0.3067%" height="15" fill="rgb(235,138,27)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (53 samples, 0.31%)</title><rect x="3.1888%" y="1029" width="0.3067%" height="15" fill="rgb(236,97,51)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (53 samples, 0.31%)</title><rect x="3.1888%" y="1013" width="0.3067%" height="15" fill="rgb(240,80,30)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1023.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (53 samples, 0.31%)</title><rect x="3.1888%" y="997" width="0.3067%" height="15" fill="rgb(230,178,19)" fg:x="551" fg:w="53"/><text x="3.4388%" y="1007.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (53 samples, 0.31%)</title><rect x="3.1888%" y="981" width="0.3067%" height="15" fill="rgb(210,190,27)" fg:x="551" fg:w="53"/><text x="3.4388%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 0.31%)</title><rect x="3.1888%" y="965" width="0.3067%" height="15" fill="rgb(222,107,31)" fg:x="551" fg:w="53"/><text x="3.4388%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.31%)</title><rect x="3.1888%" y="949" width="0.3067%" height="15" fill="rgb(216,127,34)" fg:x="551" fg:w="53"/><text x="3.4388%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.31%)</title><rect x="3.1888%" y="933" width="0.3067%" height="15" fill="rgb(234,116,52)" fg:x="551" fg:w="53"/><text x="3.4388%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 0.31%)</title><rect x="3.1888%" y="917" width="0.3067%" height="15" fill="rgb(222,124,15)" fg:x="551" fg:w="53"/><text x="3.4388%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (53 samples, 0.31%)</title><rect x="3.1888%" y="901" width="0.3067%" height="15" fill="rgb(231,179,28)" fg:x="551" fg:w="53"/><text x="3.4388%" y="911.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (52 samples, 0.30%)</title><rect x="3.1946%" y="885" width="0.3009%" height="15" fill="rgb(226,93,45)" fg:x="552" fg:w="52"/><text x="3.4446%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (52 samples, 0.30%)</title><rect x="3.1946%" y="869" width="0.3009%" height="15" fill="rgb(215,8,51)" fg:x="552" fg:w="52"/><text x="3.4446%" y="879.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (52 samples, 0.30%)</title><rect x="3.1946%" y="853" width="0.3009%" height="15" fill="rgb(223,106,5)" fg:x="552" fg:w="52"/><text x="3.4446%" y="863.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (11 samples, 0.06%)</title><rect x="3.4319%" y="837" width="0.0637%" height="15" fill="rgb(250,191,5)" fg:x="593" fg:w="11"/><text x="3.6819%" y="847.50"></text></g><g><title>oorandom::Rand64::rand_range (4 samples, 0.02%)</title><rect x="3.4724%" y="821" width="0.0231%" height="15" fill="rgb(242,132,44)" fg:x="600" fg:w="4"/><text x="3.7224%" y="831.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="3.4782%" y="805" width="0.0174%" height="15" fill="rgb(251,152,29)" fg:x="601" fg:w="3"/><text x="3.7282%" y="815.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="3.4840%" y="789" width="0.0116%" height="15" fill="rgb(218,179,5)" fg:x="602" fg:w="2"/><text x="3.7340%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.03%)</title><rect x="3.4956%" y="901" width="0.0347%" height="15" fill="rgb(227,67,19)" fg:x="604" fg:w="6"/><text x="3.7456%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.03%)</title><rect x="3.4956%" y="885" width="0.0347%" height="15" fill="rgb(233,119,31)" fg:x="604" fg:w="6"/><text x="3.7456%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.03%)</title><rect x="3.4956%" y="869" width="0.0347%" height="15" fill="rgb(241,120,22)" fg:x="604" fg:w="6"/><text x="3.7456%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.03%)</title><rect x="3.4956%" y="853" width="0.0347%" height="15" fill="rgb(224,102,30)" fg:x="604" fg:w="6"/><text x="3.7456%" y="863.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.03%)</title><rect x="3.4956%" y="837" width="0.0347%" height="15" fill="rgb(210,164,37)" fg:x="604" fg:w="6"/><text x="3.7456%" y="847.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="3.4956%" y="821" width="0.0347%" height="15" fill="rgb(226,191,16)" fg:x="604" fg:w="6"/><text x="3.7456%" y="831.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="3.4956%" y="805" width="0.0347%" height="15" fill="rgb(214,40,45)" fg:x="604" fg:w="6"/><text x="3.7456%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="3.4956%" y="789" width="0.0347%" height="15" fill="rgb(244,29,26)" fg:x="604" fg:w="6"/><text x="3.7456%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="3.4956%" y="773" width="0.0347%" height="15" fill="rgb(216,16,5)" fg:x="604" fg:w="6"/><text x="3.7456%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="3.4956%" y="757" width="0.0347%" height="15" fill="rgb(249,76,35)" fg:x="604" fg:w="6"/><text x="3.7456%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.03%)</title><rect x="3.4956%" y="741" width="0.0347%" height="15" fill="rgb(207,11,44)" fg:x="604" fg:w="6"/><text x="3.7456%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.03%)</title><rect x="3.4956%" y="725" width="0.0347%" height="15" fill="rgb(228,190,49)" fg:x="604" fg:w="6"/><text x="3.7456%" y="735.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (6 samples, 0.03%)</title><rect x="3.4956%" y="709" width="0.0347%" height="15" fill="rgb(214,173,12)" fg:x="604" fg:w="6"/><text x="3.7456%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (6 samples, 0.03%)</title><rect x="3.4956%" y="693" width="0.0347%" height="15" fill="rgb(218,26,35)" fg:x="604" fg:w="6"/><text x="3.7456%" y="703.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (6 samples, 0.03%)</title><rect x="3.4956%" y="677" width="0.0347%" height="15" fill="rgb(220,200,19)" fg:x="604" fg:w="6"/><text x="3.7456%" y="687.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.03%)</title><rect x="3.4956%" y="661" width="0.0347%" height="15" fill="rgb(239,95,49)" fg:x="604" fg:w="6"/><text x="3.7456%" y="671.50"></text></g><g><title>oorandom::Rand64::rand_range (5 samples, 0.03%)</title><rect x="3.5014%" y="645" width="0.0289%" height="15" fill="rgb(235,85,53)" fg:x="605" fg:w="5"/><text x="3.7514%" y="655.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="3.5129%" y="629" width="0.0174%" height="15" fill="rgb(233,133,31)" fg:x="607" fg:w="3"/><text x="3.7629%" y="639.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="3.5187%" y="613" width="0.0116%" height="15" fill="rgb(218,25,20)" fg:x="608" fg:w="2"/><text x="3.7687%" y="623.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="3.5303%" y="453" width="0.0174%" height="15" fill="rgb(252,210,38)" fg:x="610" fg:w="3"/><text x="3.7803%" y="463.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="3.5303%" y="437" width="0.0174%" height="15" fill="rgb(242,134,21)" fg:x="610" fg:w="3"/><text x="3.7803%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="3.5303%" y="421" width="0.0174%" height="15" fill="rgb(213,28,48)" fg:x="610" fg:w="3"/><text x="3.7803%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="3.5303%" y="405" width="0.0174%" height="15" fill="rgb(250,196,2)" fg:x="610" fg:w="3"/><text x="3.7803%" y="415.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="3.5303%" y="389" width="0.0174%" height="15" fill="rgb(227,5,17)" fg:x="610" fg:w="3"/><text x="3.7803%" y="399.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="3.5303%" y="373" width="0.0174%" height="15" fill="rgb(221,226,24)" fg:x="610" fg:w="3"/><text x="3.7803%" y="383.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="3.5303%" y="357" width="0.0174%" height="15" fill="rgb(211,5,48)" fg:x="610" fg:w="3"/><text x="3.7803%" y="367.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="3.5361%" y="341" width="0.0116%" height="15" fill="rgb(219,150,6)" fg:x="611" fg:w="2"/><text x="3.7861%" y="351.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="3.5361%" y="325" width="0.0116%" height="15" fill="rgb(251,46,16)" fg:x="611" fg:w="2"/><text x="3.7861%" y="335.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="3.5361%" y="309" width="0.0116%" height="15" fill="rgb(220,204,40)" fg:x="611" fg:w="2"/><text x="3.7861%" y="319.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="3.5361%" y="293" width="0.0116%" height="15" fill="rgb(211,85,2)" fg:x="611" fg:w="2"/><text x="3.7861%" y="303.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="3.5361%" y="277" width="0.0116%" height="15" fill="rgb(229,17,7)" fg:x="611" fg:w="2"/><text x="3.7861%" y="287.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="3.5361%" y="261" width="0.0116%" height="15" fill="rgb(239,72,28)" fg:x="611" fg:w="2"/><text x="3.7861%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="3.5361%" y="245" width="0.0116%" height="15" fill="rgb(230,47,54)" fg:x="611" fg:w="2"/><text x="3.7861%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="3.5361%" y="229" width="0.0116%" height="15" fill="rgb(214,50,8)" fg:x="611" fg:w="2"/><text x="3.7861%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.01%)</title><rect x="3.5361%" y="213" width="0.0116%" height="15" fill="rgb(216,198,43)" fg:x="611" fg:w="2"/><text x="3.7861%" y="223.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.01%)</title><rect x="3.5361%" y="197" width="0.0116%" height="15" fill="rgb(234,20,35)" fg:x="611" fg:w="2"/><text x="3.7861%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (2 samples, 0.01%)</title><rect x="3.5361%" y="181" width="0.0116%" height="15" fill="rgb(254,45,19)" fg:x="611" fg:w="2"/><text x="3.7861%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.5361%" y="165" width="0.0116%" height="15" fill="rgb(219,14,44)" fg:x="611" fg:w="2"/><text x="3.7861%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="3.5361%" y="149" width="0.0116%" height="15" fill="rgb(217,220,26)" fg:x="611" fg:w="2"/><text x="3.7861%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.01%)</title><rect x="3.5361%" y="133" width="0.0116%" height="15" fill="rgb(213,158,28)" fg:x="611" fg:w="2"/><text x="3.7861%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.01%)</title><rect x="3.5361%" y="117" width="0.0116%" height="15" fill="rgb(252,51,52)" fg:x="611" fg:w="2"/><text x="3.7861%" y="127.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (2 samples, 0.01%)</title><rect x="3.5361%" y="101" width="0.0116%" height="15" fill="rgb(246,89,16)" fg:x="611" fg:w="2"/><text x="3.7861%" y="111.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (2 samples, 0.01%)</title><rect x="3.5361%" y="85" width="0.0116%" height="15" fill="rgb(216,158,49)" fg:x="611" fg:w="2"/><text x="3.7861%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="3.5361%" y="69" width="0.0116%" height="15" fill="rgb(236,107,19)" fg:x="611" fg:w="2"/><text x="3.7861%" y="79.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (2 samples, 0.01%)</title><rect x="3.5361%" y="53" width="0.0116%" height="15" fill="rgb(228,185,30)" fg:x="611" fg:w="2"/><text x="3.7861%" y="63.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (2 samples, 0.01%)</title><rect x="3.5361%" y="37" width="0.0116%" height="15" fill="rgb(246,134,8)" fg:x="611" fg:w="2"/><text x="3.7861%" y="47.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.03%)</title><rect x="3.5303%" y="901" width="0.0289%" height="15" fill="rgb(214,143,50)" fg:x="610" fg:w="5"/><text x="3.7803%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.03%)</title><rect x="3.5303%" y="885" width="0.0289%" height="15" fill="rgb(228,75,8)" fg:x="610" fg:w="5"/><text x="3.7803%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.03%)</title><rect x="3.5303%" y="869" width="0.0289%" height="15" fill="rgb(207,175,4)" fg:x="610" fg:w="5"/><text x="3.7803%" y="879.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.03%)</title><rect x="3.5303%" y="853" width="0.0289%" height="15" fill="rgb(205,108,24)" fg:x="610" fg:w="5"/><text x="3.7803%" y="863.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.03%)</title><rect x="3.5303%" y="837" width="0.0289%" height="15" fill="rgb(244,120,49)" fg:x="610" fg:w="5"/><text x="3.7803%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="3.5303%" y="821" width="0.0289%" height="15" fill="rgb(223,47,38)" fg:x="610" fg:w="5"/><text x="3.7803%" y="831.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="3.5303%" y="805" width="0.0289%" height="15" fill="rgb(229,179,11)" fg:x="610" fg:w="5"/><text x="3.7803%" y="815.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="3.5303%" y="789" width="0.0289%" height="15" fill="rgb(231,122,1)" fg:x="610" fg:w="5"/><text x="3.7803%" y="799.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="3.5303%" y="773" width="0.0289%" height="15" fill="rgb(245,119,9)" fg:x="610" fg:w="5"/><text x="3.7803%" y="783.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="3.5303%" y="757" width="0.0289%" height="15" fill="rgb(241,163,25)" fg:x="610" fg:w="5"/><text x="3.7803%" y="767.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5 samples, 0.03%)</title><rect x="3.5303%" y="741" width="0.0289%" height="15" fill="rgb(217,214,3)" fg:x="610" fg:w="5"/><text x="3.7803%" y="751.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.03%)</title><rect x="3.5303%" y="725" width="0.0289%" height="15" fill="rgb(240,86,28)" fg:x="610" fg:w="5"/><text x="3.7803%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.5303%" y="709" width="0.0289%" height="15" fill="rgb(215,47,9)" fg:x="610" fg:w="5"/><text x="3.7803%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.5303%" y="693" width="0.0289%" height="15" fill="rgb(252,25,45)" fg:x="610" fg:w="5"/><text x="3.7803%" y="703.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.03%)</title><rect x="3.5303%" y="677" width="0.0289%" height="15" fill="rgb(251,164,9)" fg:x="610" fg:w="5"/><text x="3.7803%" y="687.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.03%)</title><rect x="3.5303%" y="661" width="0.0289%" height="15" fill="rgb(233,194,0)" fg:x="610" fg:w="5"/><text x="3.7803%" y="671.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.03%)</title><rect x="3.5303%" y="645" width="0.0289%" height="15" fill="rgb(249,111,24)" fg:x="610" fg:w="5"/><text x="3.7803%" y="655.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="3.5303%" y="629" width="0.0289%" height="15" fill="rgb(250,223,3)" fg:x="610" fg:w="5"/><text x="3.7803%" y="639.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="3.5303%" y="613" width="0.0289%" height="15" fill="rgb(236,178,37)" fg:x="610" fg:w="5"/><text x="3.7803%" y="623.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="3.5303%" y="597" width="0.0289%" height="15" fill="rgb(241,158,50)" fg:x="610" fg:w="5"/><text x="3.7803%" y="607.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="3.5303%" y="581" width="0.0289%" height="15" fill="rgb(213,121,41)" fg:x="610" fg:w="5"/><text x="3.7803%" y="591.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="3.5303%" y="565" width="0.0289%" height="15" fill="rgb(240,92,3)" fg:x="610" fg:w="5"/><text x="3.7803%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="3.5303%" y="549" width="0.0289%" height="15" fill="rgb(205,123,3)" fg:x="610" fg:w="5"/><text x="3.7803%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.5303%" y="533" width="0.0289%" height="15" fill="rgb(205,97,47)" fg:x="610" fg:w="5"/><text x="3.7803%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.5303%" y="517" width="0.0289%" height="15" fill="rgb(247,152,14)" fg:x="610" fg:w="5"/><text x="3.7803%" y="527.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.03%)</title><rect x="3.5303%" y="501" width="0.0289%" height="15" fill="rgb(248,195,53)" fg:x="610" fg:w="5"/><text x="3.7803%" y="511.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.03%)</title><rect x="3.5303%" y="485" width="0.0289%" height="15" fill="rgb(226,201,16)" fg:x="610" fg:w="5"/><text x="3.7803%" y="495.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.03%)</title><rect x="3.5303%" y="469" width="0.0289%" height="15" fill="rgb(205,98,0)" fg:x="610" fg:w="5"/><text x="3.7803%" y="479.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="3.5477%" y="453" width="0.0116%" height="15" fill="rgb(214,191,48)" fg:x="613" fg:w="2"/><text x="3.7977%" y="463.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="3.5477%" y="437" width="0.0116%" height="15" fill="rgb(237,112,39)" fg:x="613" fg:w="2"/><text x="3.7977%" y="447.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="3.5477%" y="421" width="0.0116%" height="15" fill="rgb(247,203,27)" fg:x="613" fg:w="2"/><text x="3.7977%" y="431.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="3.5477%" y="405" width="0.0116%" height="15" fill="rgb(235,124,28)" fg:x="613" fg:w="2"/><text x="3.7977%" y="415.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="3.5477%" y="389" width="0.0116%" height="15" fill="rgb(208,207,46)" fg:x="613" fg:w="2"/><text x="3.7977%" y="399.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="3.5477%" y="373" width="0.0116%" height="15" fill="rgb(234,176,4)" fg:x="613" fg:w="2"/><text x="3.7977%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="3.5477%" y="357" width="0.0116%" height="15" fill="rgb(230,133,28)" fg:x="613" fg:w="2"/><text x="3.7977%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="3.5477%" y="341" width="0.0116%" height="15" fill="rgb(211,137,40)" fg:x="613" fg:w="2"/><text x="3.7977%" y="351.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="3.5477%" y="325" width="0.0116%" height="15" fill="rgb(254,35,13)" fg:x="613" fg:w="2"/><text x="3.7977%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="3.5477%" y="309" width="0.0116%" height="15" fill="rgb(225,49,51)" fg:x="613" fg:w="2"/><text x="3.7977%" y="319.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="3.5477%" y="293" width="0.0116%" height="15" fill="rgb(251,10,15)" fg:x="613" fg:w="2"/><text x="3.7977%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.09%)</title><rect x="3.4956%" y="1013" width="0.0926%" height="15" fill="rgb(228,207,15)" fg:x="604" fg:w="16"/><text x="3.7456%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (16 samples, 0.09%)</title><rect x="3.4956%" y="997" width="0.0926%" height="15" fill="rgb(241,99,19)" fg:x="604" fg:w="16"/><text x="3.7456%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.09%)</title><rect x="3.4956%" y="981" width="0.0926%" height="15" fill="rgb(207,104,49)" fg:x="604" fg:w="16"/><text x="3.7456%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.09%)</title><rect x="3.4956%" y="965" width="0.0926%" height="15" fill="rgb(234,99,18)" fg:x="604" fg:w="16"/><text x="3.7456%" y="975.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.09%)</title><rect x="3.4956%" y="949" width="0.0926%" height="15" fill="rgb(213,191,49)" fg:x="604" fg:w="16"/><text x="3.7456%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.09%)</title><rect x="3.4956%" y="933" width="0.0926%" height="15" fill="rgb(210,226,19)" fg:x="604" fg:w="16"/><text x="3.7456%" y="943.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.09%)</title><rect x="3.4956%" y="917" width="0.0926%" height="15" fill="rgb(229,97,18)" fg:x="604" fg:w="16"/><text x="3.7456%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="3.5592%" y="901" width="0.0289%" height="15" fill="rgb(211,167,15)" fg:x="615" fg:w="5"/><text x="3.8092%" y="911.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="3.5592%" y="885" width="0.0289%" height="15" fill="rgb(210,169,34)" fg:x="615" fg:w="5"/><text x="3.8092%" y="895.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="3.5592%" y="869" width="0.0289%" height="15" fill="rgb(241,121,31)" fg:x="615" fg:w="5"/><text x="3.8092%" y="879.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="3.5592%" y="853" width="0.0289%" height="15" fill="rgb(232,40,11)" fg:x="615" fg:w="5"/><text x="3.8092%" y="863.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="3.5592%" y="837" width="0.0289%" height="15" fill="rgb(205,86,26)" fg:x="615" fg:w="5"/><text x="3.8092%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="3.5592%" y="821" width="0.0289%" height="15" fill="rgb(231,126,28)" fg:x="615" fg:w="5"/><text x="3.8092%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.5592%" y="805" width="0.0289%" height="15" fill="rgb(219,221,18)" fg:x="615" fg:w="5"/><text x="3.8092%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.5592%" y="789" width="0.0289%" height="15" fill="rgb(211,40,0)" fg:x="615" fg:w="5"/><text x="3.8092%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.03%)</title><rect x="3.5592%" y="773" width="0.0289%" height="15" fill="rgb(239,85,43)" fg:x="615" fg:w="5"/><text x="3.8092%" y="783.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.5592%" y="757" width="0.0289%" height="15" fill="rgb(231,55,21)" fg:x="615" fg:w="5"/><text x="3.8092%" y="767.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.5592%" y="741" width="0.0289%" height="15" fill="rgb(225,184,43)" fg:x="615" fg:w="5"/><text x="3.8092%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="3.5592%" y="725" width="0.0289%" height="15" fill="rgb(251,158,41)" fg:x="615" fg:w="5"/><text x="3.8092%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.5592%" y="709" width="0.0289%" height="15" fill="rgb(234,159,37)" fg:x="615" fg:w="5"/><text x="3.8092%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.5592%" y="693" width="0.0289%" height="15" fill="rgb(216,204,22)" fg:x="615" fg:w="5"/><text x="3.8092%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="3.5592%" y="677" width="0.0289%" height="15" fill="rgb(214,17,3)" fg:x="615" fg:w="5"/><text x="3.8092%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="3.5592%" y="661" width="0.0289%" height="15" fill="rgb(212,111,17)" fg:x="615" fg:w="5"/><text x="3.8092%" y="671.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="3.5592%" y="645" width="0.0289%" height="15" fill="rgb(221,157,24)" fg:x="615" fg:w="5"/><text x="3.8092%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="3.5592%" y="629" width="0.0289%" height="15" fill="rgb(252,16,13)" fg:x="615" fg:w="5"/><text x="3.8092%" y="639.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="3.5592%" y="613" width="0.0289%" height="15" fill="rgb(221,62,2)" fg:x="615" fg:w="5"/><text x="3.8092%" y="623.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="3.5592%" y="597" width="0.0289%" height="15" fill="rgb(247,87,22)" fg:x="615" fg:w="5"/><text x="3.8092%" y="607.50"></text></g><g><title>oorandom::Rand64::rand_range (4 samples, 0.02%)</title><rect x="3.5650%" y="581" width="0.0231%" height="15" fill="rgb(215,73,9)" fg:x="616" fg:w="4"/><text x="3.8150%" y="591.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="3.5708%" y="565" width="0.0174%" height="15" fill="rgb(207,175,33)" fg:x="617" fg:w="3"/><text x="3.8208%" y="575.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="3.5882%" y="837" width="0.0174%" height="15" fill="rgb(243,129,54)" fg:x="620" fg:w="3"/><text x="3.8382%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="3.5882%" y="821" width="0.0174%" height="15" fill="rgb(227,119,45)" fg:x="620" fg:w="3"/><text x="3.8382%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="3.5882%" y="805" width="0.0174%" height="15" fill="rgb(205,109,36)" fg:x="620" fg:w="3"/><text x="3.8382%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="3.5882%" y="789" width="0.0174%" height="15" fill="rgb(205,6,39)" fg:x="620" fg:w="3"/><text x="3.8382%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.02%)</title><rect x="3.5882%" y="773" width="0.0174%" height="15" fill="rgb(221,32,16)" fg:x="620" fg:w="3"/><text x="3.8382%" y="783.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.02%)</title><rect x="3.5882%" y="757" width="0.0174%" height="15" fill="rgb(228,144,50)" fg:x="620" fg:w="3"/><text x="3.8382%" y="767.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.02%)</title><rect x="3.5882%" y="741" width="0.0174%" height="15" fill="rgb(229,201,53)" fg:x="620" fg:w="3"/><text x="3.8382%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="3.5882%" y="725" width="0.0174%" height="15" fill="rgb(249,153,27)" fg:x="620" fg:w="3"/><text x="3.8382%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.5882%" y="709" width="0.0174%" height="15" fill="rgb(227,106,25)" fg:x="620" fg:w="3"/><text x="3.8382%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.5882%" y="693" width="0.0174%" height="15" fill="rgb(230,65,29)" fg:x="620" fg:w="3"/><text x="3.8382%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="3.5882%" y="677" width="0.0174%" height="15" fill="rgb(221,57,46)" fg:x="620" fg:w="3"/><text x="3.8382%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="3.5882%" y="661" width="0.0174%" height="15" fill="rgb(229,161,17)" fg:x="620" fg:w="3"/><text x="3.8382%" y="671.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (3 samples, 0.02%)</title><rect x="3.5882%" y="645" width="0.0174%" height="15" fill="rgb(222,213,11)" fg:x="620" fg:w="3"/><text x="3.8382%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (3 samples, 0.02%)</title><rect x="3.5882%" y="629" width="0.0174%" height="15" fill="rgb(235,35,13)" fg:x="620" fg:w="3"/><text x="3.8382%" y="639.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (3 samples, 0.02%)</title><rect x="3.5882%" y="613" width="0.0174%" height="15" fill="rgb(233,158,34)" fg:x="620" fg:w="3"/><text x="3.8382%" y="623.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="3.5882%" y="597" width="0.0174%" height="15" fill="rgb(215,151,48)" fg:x="620" fg:w="3"/><text x="3.8382%" y="607.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="3.5940%" y="581" width="0.0116%" height="15" fill="rgb(229,84,14)" fg:x="621" fg:w="2"/><text x="3.8440%" y="591.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="3.5940%" y="565" width="0.0116%" height="15" fill="rgb(229,68,14)" fg:x="621" fg:w="2"/><text x="3.8440%" y="575.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (23 samples, 0.13%)</title><rect x="3.4956%" y="1125" width="0.1331%" height="15" fill="rgb(243,106,26)" fg:x="604" fg:w="23"/><text x="3.7456%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (23 samples, 0.13%)</title><rect x="3.4956%" y="1109" width="0.1331%" height="15" fill="rgb(206,45,38)" fg:x="604" fg:w="23"/><text x="3.7456%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.13%)</title><rect x="3.4956%" y="1093" width="0.1331%" height="15" fill="rgb(226,6,15)" fg:x="604" fg:w="23"/><text x="3.7456%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.13%)</title><rect x="3.4956%" y="1077" width="0.1331%" height="15" fill="rgb(232,22,54)" fg:x="604" fg:w="23"/><text x="3.7456%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.13%)</title><rect x="3.4956%" y="1061" width="0.1331%" height="15" fill="rgb(229,222,32)" fg:x="604" fg:w="23"/><text x="3.7456%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.13%)</title><rect x="3.4956%" y="1045" width="0.1331%" height="15" fill="rgb(228,62,29)" fg:x="604" fg:w="23"/><text x="3.7456%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.13%)</title><rect x="3.4956%" y="1029" width="0.1331%" height="15" fill="rgb(251,103,34)" fg:x="604" fg:w="23"/><text x="3.7456%" y="1039.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.04%)</title><rect x="3.5882%" y="1013" width="0.0405%" height="15" fill="rgb(233,12,30)" fg:x="620" fg:w="7"/><text x="3.8382%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.04%)</title><rect x="3.5882%" y="997" width="0.0405%" height="15" fill="rgb(238,52,0)" fg:x="620" fg:w="7"/><text x="3.8382%" y="1007.50"></text></g><g><title>std::panicking::try (7 samples, 0.04%)</title><rect x="3.5882%" y="981" width="0.0405%" height="15" fill="rgb(223,98,5)" fg:x="620" fg:w="7"/><text x="3.8382%" y="991.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.04%)</title><rect x="3.5882%" y="965" width="0.0405%" height="15" fill="rgb(228,75,37)" fg:x="620" fg:w="7"/><text x="3.8382%" y="975.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.04%)</title><rect x="3.5882%" y="949" width="0.0405%" height="15" fill="rgb(205,115,49)" fg:x="620" fg:w="7"/><text x="3.8382%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.04%)</title><rect x="3.5882%" y="933" width="0.0405%" height="15" fill="rgb(250,154,43)" fg:x="620" fg:w="7"/><text x="3.8382%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.04%)</title><rect x="3.5882%" y="917" width="0.0405%" height="15" fill="rgb(226,43,29)" fg:x="620" fg:w="7"/><text x="3.8382%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.04%)</title><rect x="3.5882%" y="901" width="0.0405%" height="15" fill="rgb(249,228,39)" fg:x="620" fg:w="7"/><text x="3.8382%" y="911.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.04%)</title><rect x="3.5882%" y="885" width="0.0405%" height="15" fill="rgb(216,79,43)" fg:x="620" fg:w="7"/><text x="3.8382%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.04%)</title><rect x="3.5882%" y="869" width="0.0405%" height="15" fill="rgb(228,95,12)" fg:x="620" fg:w="7"/><text x="3.8382%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.04%)</title><rect x="3.5882%" y="853" width="0.0405%" height="15" fill="rgb(249,221,15)" fg:x="620" fg:w="7"/><text x="3.8382%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.02%)</title><rect x="3.6055%" y="837" width="0.0231%" height="15" fill="rgb(233,34,13)" fg:x="623" fg:w="4"/><text x="3.8555%" y="847.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.02%)</title><rect x="3.6055%" y="821" width="0.0231%" height="15" fill="rgb(214,103,39)" fg:x="623" fg:w="4"/><text x="3.8555%" y="831.50"></text></g><g><title>std::panicking::try (4 samples, 0.02%)</title><rect x="3.6055%" y="805" width="0.0231%" height="15" fill="rgb(251,126,39)" fg:x="623" fg:w="4"/><text x="3.8555%" y="815.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.02%)</title><rect x="3.6055%" y="789" width="0.0231%" height="15" fill="rgb(214,216,36)" fg:x="623" fg:w="4"/><text x="3.8555%" y="799.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.02%)</title><rect x="3.6055%" y="773" width="0.0231%" height="15" fill="rgb(220,221,8)" fg:x="623" fg:w="4"/><text x="3.8555%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.02%)</title><rect x="3.6055%" y="757" width="0.0231%" height="15" fill="rgb(240,216,3)" fg:x="623" fg:w="4"/><text x="3.8555%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.02%)</title><rect x="3.6055%" y="741" width="0.0231%" height="15" fill="rgb(232,218,17)" fg:x="623" fg:w="4"/><text x="3.8555%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.02%)</title><rect x="3.6055%" y="725" width="0.0231%" height="15" fill="rgb(229,163,45)" fg:x="623" fg:w="4"/><text x="3.8555%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.02%)</title><rect x="3.6055%" y="709" width="0.0231%" height="15" fill="rgb(231,110,42)" fg:x="623" fg:w="4"/><text x="3.8555%" y="719.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.02%)</title><rect x="3.6055%" y="693" width="0.0231%" height="15" fill="rgb(208,170,48)" fg:x="623" fg:w="4"/><text x="3.8555%" y="703.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.02%)</title><rect x="3.6055%" y="677" width="0.0231%" height="15" fill="rgb(239,116,25)" fg:x="623" fg:w="4"/><text x="3.8555%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="3.6055%" y="661" width="0.0231%" height="15" fill="rgb(219,200,50)" fg:x="623" fg:w="4"/><text x="3.8555%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="3.6055%" y="645" width="0.0231%" height="15" fill="rgb(245,200,0)" fg:x="623" fg:w="4"/><text x="3.8555%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="3.6055%" y="629" width="0.0231%" height="15" fill="rgb(245,119,33)" fg:x="623" fg:w="4"/><text x="3.8555%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="3.6055%" y="613" width="0.0231%" height="15" fill="rgb(231,125,12)" fg:x="623" fg:w="4"/><text x="3.8555%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.02%)</title><rect x="3.6055%" y="597" width="0.0231%" height="15" fill="rgb(216,96,41)" fg:x="623" fg:w="4"/><text x="3.8555%" y="607.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.02%)</title><rect x="3.6055%" y="581" width="0.0231%" height="15" fill="rgb(248,43,45)" fg:x="623" fg:w="4"/><text x="3.8555%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.02%)</title><rect x="3.6055%" y="565" width="0.0231%" height="15" fill="rgb(217,222,7)" fg:x="623" fg:w="4"/><text x="3.8555%" y="575.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.02%)</title><rect x="3.6055%" y="549" width="0.0231%" height="15" fill="rgb(233,28,6)" fg:x="623" fg:w="4"/><text x="3.8555%" y="559.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.02%)</title><rect x="3.6055%" y="533" width="0.0231%" height="15" fill="rgb(231,218,15)" fg:x="623" fg:w="4"/><text x="3.8555%" y="543.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.03%)</title><rect x="3.6287%" y="837" width="0.0289%" height="15" fill="rgb(226,171,48)" fg:x="627" fg:w="5"/><text x="3.8787%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.03%)</title><rect x="3.6287%" y="821" width="0.0289%" height="15" fill="rgb(235,201,9)" fg:x="627" fg:w="5"/><text x="3.8787%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.6287%" y="805" width="0.0289%" height="15" fill="rgb(217,80,15)" fg:x="627" fg:w="5"/><text x="3.8787%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.6287%" y="789" width="0.0289%" height="15" fill="rgb(219,152,8)" fg:x="627" fg:w="5"/><text x="3.8787%" y="799.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.03%)</title><rect x="3.6287%" y="773" width="0.0289%" height="15" fill="rgb(243,107,38)" fg:x="627" fg:w="5"/><text x="3.8787%" y="783.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.6287%" y="757" width="0.0289%" height="15" fill="rgb(231,17,5)" fg:x="627" fg:w="5"/><text x="3.8787%" y="767.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.6287%" y="741" width="0.0289%" height="15" fill="rgb(209,25,54)" fg:x="627" fg:w="5"/><text x="3.8787%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="3.6287%" y="725" width="0.0289%" height="15" fill="rgb(219,0,2)" fg:x="627" fg:w="5"/><text x="3.8787%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.6287%" y="709" width="0.0289%" height="15" fill="rgb(246,9,5)" fg:x="627" fg:w="5"/><text x="3.8787%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.6287%" y="693" width="0.0289%" height="15" fill="rgb(226,159,4)" fg:x="627" fg:w="5"/><text x="3.8787%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="3.6287%" y="677" width="0.0289%" height="15" fill="rgb(219,175,34)" fg:x="627" fg:w="5"/><text x="3.8787%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="3.6287%" y="661" width="0.0289%" height="15" fill="rgb(236,10,46)" fg:x="627" fg:w="5"/><text x="3.8787%" y="671.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="3.6287%" y="645" width="0.0289%" height="15" fill="rgb(240,211,16)" fg:x="627" fg:w="5"/><text x="3.8787%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="3.6287%" y="629" width="0.0289%" height="15" fill="rgb(205,3,43)" fg:x="627" fg:w="5"/><text x="3.8787%" y="639.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="3.6287%" y="613" width="0.0289%" height="15" fill="rgb(245,7,22)" fg:x="627" fg:w="5"/><text x="3.8787%" y="623.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="3.6287%" y="597" width="0.0289%" height="15" fill="rgb(239,132,32)" fg:x="627" fg:w="5"/><text x="3.8787%" y="607.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.05%)</title><rect x="3.6287%" y="949" width="0.0521%" height="15" fill="rgb(228,202,34)" fg:x="627" fg:w="9"/><text x="3.8787%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.05%)</title><rect x="3.6287%" y="933" width="0.0521%" height="15" fill="rgb(254,200,22)" fg:x="627" fg:w="9"/><text x="3.8787%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.05%)</title><rect x="3.6287%" y="917" width="0.0521%" height="15" fill="rgb(219,10,39)" fg:x="627" fg:w="9"/><text x="3.8787%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.05%)</title><rect x="3.6287%" y="901" width="0.0521%" height="15" fill="rgb(226,210,39)" fg:x="627" fg:w="9"/><text x="3.8787%" y="911.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.05%)</title><rect x="3.6287%" y="885" width="0.0521%" height="15" fill="rgb(208,219,16)" fg:x="627" fg:w="9"/><text x="3.8787%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.05%)</title><rect x="3.6287%" y="869" width="0.0521%" height="15" fill="rgb(216,158,51)" fg:x="627" fg:w="9"/><text x="3.8787%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.05%)</title><rect x="3.6287%" y="853" width="0.0521%" height="15" fill="rgb(233,14,44)" fg:x="627" fg:w="9"/><text x="3.8787%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.02%)</title><rect x="3.6576%" y="837" width="0.0231%" height="15" fill="rgb(237,97,39)" fg:x="632" fg:w="4"/><text x="3.9076%" y="847.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.02%)</title><rect x="3.6576%" y="821" width="0.0231%" height="15" fill="rgb(218,198,43)" fg:x="632" fg:w="4"/><text x="3.9076%" y="831.50"></text></g><g><title>std::panicking::try (4 samples, 0.02%)</title><rect x="3.6576%" y="805" width="0.0231%" height="15" fill="rgb(231,104,20)" fg:x="632" fg:w="4"/><text x="3.9076%" y="815.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.02%)</title><rect x="3.6576%" y="789" width="0.0231%" height="15" fill="rgb(254,36,13)" fg:x="632" fg:w="4"/><text x="3.9076%" y="799.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.02%)</title><rect x="3.6576%" y="773" width="0.0231%" height="15" fill="rgb(248,14,50)" fg:x="632" fg:w="4"/><text x="3.9076%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.02%)</title><rect x="3.6576%" y="757" width="0.0231%" height="15" fill="rgb(217,107,29)" fg:x="632" fg:w="4"/><text x="3.9076%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.02%)</title><rect x="3.6576%" y="741" width="0.0231%" height="15" fill="rgb(251,169,33)" fg:x="632" fg:w="4"/><text x="3.9076%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.02%)</title><rect x="3.6576%" y="725" width="0.0231%" height="15" fill="rgb(217,108,32)" fg:x="632" fg:w="4"/><text x="3.9076%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.02%)</title><rect x="3.6576%" y="709" width="0.0231%" height="15" fill="rgb(219,66,42)" fg:x="632" fg:w="4"/><text x="3.9076%" y="719.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.02%)</title><rect x="3.6576%" y="693" width="0.0231%" height="15" fill="rgb(206,180,7)" fg:x="632" fg:w="4"/><text x="3.9076%" y="703.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.02%)</title><rect x="3.6576%" y="677" width="0.0231%" height="15" fill="rgb(208,226,31)" fg:x="632" fg:w="4"/><text x="3.9076%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="3.6576%" y="661" width="0.0231%" height="15" fill="rgb(218,26,49)" fg:x="632" fg:w="4"/><text x="3.9076%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="3.6576%" y="645" width="0.0231%" height="15" fill="rgb(233,197,48)" fg:x="632" fg:w="4"/><text x="3.9076%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="3.6576%" y="629" width="0.0231%" height="15" fill="rgb(252,181,51)" fg:x="632" fg:w="4"/><text x="3.9076%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="3.6576%" y="613" width="0.0231%" height="15" fill="rgb(253,90,19)" fg:x="632" fg:w="4"/><text x="3.9076%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.02%)</title><rect x="3.6576%" y="597" width="0.0231%" height="15" fill="rgb(215,171,30)" fg:x="632" fg:w="4"/><text x="3.9076%" y="607.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.02%)</title><rect x="3.6576%" y="581" width="0.0231%" height="15" fill="rgb(214,222,9)" fg:x="632" fg:w="4"/><text x="3.9076%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.02%)</title><rect x="3.6576%" y="565" width="0.0231%" height="15" fill="rgb(223,3,22)" fg:x="632" fg:w="4"/><text x="3.9076%" y="575.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.02%)</title><rect x="3.6576%" y="549" width="0.0231%" height="15" fill="rgb(225,196,46)" fg:x="632" fg:w="4"/><text x="3.9076%" y="559.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.02%)</title><rect x="3.6576%" y="533" width="0.0231%" height="15" fill="rgb(209,110,37)" fg:x="632" fg:w="4"/><text x="3.9076%" y="543.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="3.6634%" y="517" width="0.0174%" height="15" fill="rgb(249,89,12)" fg:x="633" fg:w="3"/><text x="3.9134%" y="527.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="3.6634%" y="501" width="0.0174%" height="15" fill="rgb(226,27,33)" fg:x="633" fg:w="3"/><text x="3.9134%" y="511.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.03%)</title><rect x="3.6808%" y="773" width="0.0289%" height="15" fill="rgb(213,82,22)" fg:x="636" fg:w="5"/><text x="3.9308%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.03%)</title><rect x="3.6808%" y="757" width="0.0289%" height="15" fill="rgb(248,140,0)" fg:x="636" fg:w="5"/><text x="3.9308%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.6808%" y="741" width="0.0289%" height="15" fill="rgb(228,106,3)" fg:x="636" fg:w="5"/><text x="3.9308%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.6808%" y="725" width="0.0289%" height="15" fill="rgb(209,23,37)" fg:x="636" fg:w="5"/><text x="3.9308%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.03%)</title><rect x="3.6808%" y="709" width="0.0289%" height="15" fill="rgb(241,93,50)" fg:x="636" fg:w="5"/><text x="3.9308%" y="719.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.6808%" y="693" width="0.0289%" height="15" fill="rgb(253,46,43)" fg:x="636" fg:w="5"/><text x="3.9308%" y="703.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.6808%" y="677" width="0.0289%" height="15" fill="rgb(226,206,43)" fg:x="636" fg:w="5"/><text x="3.9308%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="3.6808%" y="661" width="0.0289%" height="15" fill="rgb(217,54,7)" fg:x="636" fg:w="5"/><text x="3.9308%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.6808%" y="645" width="0.0289%" height="15" fill="rgb(223,5,52)" fg:x="636" fg:w="5"/><text x="3.9308%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.6808%" y="629" width="0.0289%" height="15" fill="rgb(206,52,46)" fg:x="636" fg:w="5"/><text x="3.9308%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="3.6808%" y="613" width="0.0289%" height="15" fill="rgb(253,136,11)" fg:x="636" fg:w="5"/><text x="3.9308%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="3.6808%" y="597" width="0.0289%" height="15" fill="rgb(208,106,33)" fg:x="636" fg:w="5"/><text x="3.9308%" y="607.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="3.6808%" y="581" width="0.0289%" height="15" fill="rgb(206,54,4)" fg:x="636" fg:w="5"/><text x="3.9308%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="3.6808%" y="565" width="0.0289%" height="15" fill="rgb(213,3,15)" fg:x="636" fg:w="5"/><text x="3.9308%" y="575.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="3.6808%" y="549" width="0.0289%" height="15" fill="rgb(252,211,39)" fg:x="636" fg:w="5"/><text x="3.9308%" y="559.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="3.6808%" y="533" width="0.0289%" height="15" fill="rgb(223,6,36)" fg:x="636" fg:w="5"/><text x="3.9308%" y="543.50"></text></g><g><title>oorandom::Rand64::rand_range (5 samples, 0.03%)</title><rect x="3.6808%" y="517" width="0.0289%" height="15" fill="rgb(252,169,45)" fg:x="636" fg:w="5"/><text x="3.9308%" y="527.50"></text></g><g><title>oorandom::Rand64::rand_u64 (5 samples, 0.03%)</title><rect x="3.6808%" y="501" width="0.0289%" height="15" fill="rgb(212,48,26)" fg:x="636" fg:w="5"/><text x="3.9308%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="3.6981%" y="485" width="0.0116%" height="15" fill="rgb(251,102,48)" fg:x="639" fg:w="2"/><text x="3.9481%" y="495.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (42 samples, 0.24%)</title><rect x="3.4956%" y="1541" width="0.2431%" height="15" fill="rgb(243,208,16)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1551.50"></text></g><g><title>rayon_core::registry::main_loop (42 samples, 0.24%)</title><rect x="3.4956%" y="1525" width="0.2431%" height="15" fill="rgb(219,96,24)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1535.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (42 samples, 0.24%)</title><rect x="3.4956%" y="1509" width="0.2431%" height="15" fill="rgb(219,33,29)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (42 samples, 0.24%)</title><rect x="3.4956%" y="1493" width="0.2431%" height="15" fill="rgb(223,176,5)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (42 samples, 0.24%)</title><rect x="3.4956%" y="1477" width="0.2431%" height="15" fill="rgb(228,140,14)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1487.50"></text></g><g><title>rayon_core::job::JobRef::execute (42 samples, 0.24%)</title><rect x="3.4956%" y="1461" width="0.2431%" height="15" fill="rgb(217,179,31)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1471.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (42 samples, 0.24%)</title><rect x="3.4956%" y="1445" width="0.2431%" height="15" fill="rgb(230,9,30)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1455.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.24%)</title><rect x="3.4956%" y="1429" width="0.2431%" height="15" fill="rgb(230,136,20)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.24%)</title><rect x="3.4956%" y="1413" width="0.2431%" height="15" fill="rgb(215,210,22)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1423.50"></text></g><g><title>std::panicking::try (42 samples, 0.24%)</title><rect x="3.4956%" y="1397" width="0.2431%" height="15" fill="rgb(218,43,5)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.24%)</title><rect x="3.4956%" y="1381" width="0.2431%" height="15" fill="rgb(216,11,5)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1391.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.24%)</title><rect x="3.4956%" y="1365" width="0.2431%" height="15" fill="rgb(209,82,29)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (42 samples, 0.24%)</title><rect x="3.4956%" y="1349" width="0.2431%" height="15" fill="rgb(244,115,12)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1359.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (42 samples, 0.24%)</title><rect x="3.4956%" y="1333" width="0.2431%" height="15" fill="rgb(222,82,18)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.24%)</title><rect x="3.4956%" y="1317" width="0.2431%" height="15" fill="rgb(249,227,8)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.24%)</title><rect x="3.4956%" y="1301" width="0.2431%" height="15" fill="rgb(253,141,45)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.24%)</title><rect x="3.4956%" y="1285" width="0.2431%" height="15" fill="rgb(234,184,4)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1295.50"></text></g><g><title>std::panicking::try (42 samples, 0.24%)</title><rect x="3.4956%" y="1269" width="0.2431%" height="15" fill="rgb(218,194,23)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.24%)</title><rect x="3.4956%" y="1253" width="0.2431%" height="15" fill="rgb(235,66,41)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1263.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.24%)</title><rect x="3.4956%" y="1237" width="0.2431%" height="15" fill="rgb(245,217,1)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (42 samples, 0.24%)</title><rect x="3.4956%" y="1221" width="0.2431%" height="15" fill="rgb(229,91,1)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (42 samples, 0.24%)</title><rect x="3.4956%" y="1205" width="0.2431%" height="15" fill="rgb(207,101,30)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.24%)</title><rect x="3.4956%" y="1189" width="0.2431%" height="15" fill="rgb(223,82,49)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (42 samples, 0.24%)</title><rect x="3.4956%" y="1173" width="0.2431%" height="15" fill="rgb(218,167,17)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.24%)</title><rect x="3.4956%" y="1157" width="0.2431%" height="15" fill="rgb(208,103,14)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.24%)</title><rect x="3.4956%" y="1141" width="0.2431%" height="15" fill="rgb(238,20,8)" fg:x="604" fg:w="42"/><text x="3.7456%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.11%)</title><rect x="3.6287%" y="1125" width="0.1100%" height="15" fill="rgb(218,80,54)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.11%)</title><rect x="3.6287%" y="1109" width="0.1100%" height="15" fill="rgb(240,144,17)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1119.50"></text></g><g><title>std::panicking::try (19 samples, 0.11%)</title><rect x="3.6287%" y="1093" width="0.1100%" height="15" fill="rgb(245,27,50)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.11%)</title><rect x="3.6287%" y="1077" width="0.1100%" height="15" fill="rgb(251,51,7)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1087.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.11%)</title><rect x="3.6287%" y="1061" width="0.1100%" height="15" fill="rgb(245,217,29)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.11%)</title><rect x="3.6287%" y="1045" width="0.1100%" height="15" fill="rgb(221,176,29)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.11%)</title><rect x="3.6287%" y="1029" width="0.1100%" height="15" fill="rgb(212,180,24)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.11%)</title><rect x="3.6287%" y="1013" width="0.1100%" height="15" fill="rgb(254,24,2)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.11%)</title><rect x="3.6287%" y="997" width="0.1100%" height="15" fill="rgb(230,100,2)" fg:x="627" fg:w="19"/><text x="3.8787%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.11%)</title><rect x="3.6287%" y="981" width="0.1100%" height="15" fill="rgb(219,142,25)" fg:x="627" fg:w="19"/><text x="3.8787%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.11%)</title><rect x="3.6287%" y="965" width="0.1100%" height="15" fill="rgb(240,73,43)" fg:x="627" fg:w="19"/><text x="3.8787%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.06%)</title><rect x="3.6808%" y="949" width="0.0579%" height="15" fill="rgb(214,114,15)" fg:x="636" fg:w="10"/><text x="3.9308%" y="959.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.06%)</title><rect x="3.6808%" y="933" width="0.0579%" height="15" fill="rgb(207,130,4)" fg:x="636" fg:w="10"/><text x="3.9308%" y="943.50"></text></g><g><title>std::panicking::try (10 samples, 0.06%)</title><rect x="3.6808%" y="917" width="0.0579%" height="15" fill="rgb(221,25,40)" fg:x="636" fg:w="10"/><text x="3.9308%" y="927.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.06%)</title><rect x="3.6808%" y="901" width="0.0579%" height="15" fill="rgb(241,184,7)" fg:x="636" fg:w="10"/><text x="3.9308%" y="911.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.06%)</title><rect x="3.6808%" y="885" width="0.0579%" height="15" fill="rgb(235,159,4)" fg:x="636" fg:w="10"/><text x="3.9308%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.06%)</title><rect x="3.6808%" y="869" width="0.0579%" height="15" fill="rgb(214,87,48)" fg:x="636" fg:w="10"/><text x="3.9308%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.06%)</title><rect x="3.6808%" y="853" width="0.0579%" height="15" fill="rgb(246,198,24)" fg:x="636" fg:w="10"/><text x="3.9308%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.06%)</title><rect x="3.6808%" y="837" width="0.0579%" height="15" fill="rgb(209,66,40)" fg:x="636" fg:w="10"/><text x="3.9308%" y="847.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.06%)</title><rect x="3.6808%" y="821" width="0.0579%" height="15" fill="rgb(233,147,39)" fg:x="636" fg:w="10"/><text x="3.9308%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.06%)</title><rect x="3.6808%" y="805" width="0.0579%" height="15" fill="rgb(231,145,52)" fg:x="636" fg:w="10"/><text x="3.9308%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.06%)</title><rect x="3.6808%" y="789" width="0.0579%" height="15" fill="rgb(206,20,26)" fg:x="636" fg:w="10"/><text x="3.9308%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="3.7097%" y="773" width="0.0289%" height="15" fill="rgb(238,220,4)" fg:x="641" fg:w="5"/><text x="3.9597%" y="783.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="3.7097%" y="757" width="0.0289%" height="15" fill="rgb(252,195,42)" fg:x="641" fg:w="5"/><text x="3.9597%" y="767.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="3.7097%" y="741" width="0.0289%" height="15" fill="rgb(209,10,6)" fg:x="641" fg:w="5"/><text x="3.9597%" y="751.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="3.7097%" y="725" width="0.0289%" height="15" fill="rgb(229,3,52)" fg:x="641" fg:w="5"/><text x="3.9597%" y="735.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="3.7097%" y="709" width="0.0289%" height="15" fill="rgb(253,49,37)" fg:x="641" fg:w="5"/><text x="3.9597%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="3.7097%" y="693" width="0.0289%" height="15" fill="rgb(240,103,49)" fg:x="641" fg:w="5"/><text x="3.9597%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.03%)</title><rect x="3.7097%" y="677" width="0.0289%" height="15" fill="rgb(250,182,30)" fg:x="641" fg:w="5"/><text x="3.9597%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.03%)</title><rect x="3.7097%" y="661" width="0.0289%" height="15" fill="rgb(248,8,30)" fg:x="641" fg:w="5"/><text x="3.9597%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.03%)</title><rect x="3.7097%" y="645" width="0.0289%" height="15" fill="rgb(237,120,30)" fg:x="641" fg:w="5"/><text x="3.9597%" y="655.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.7097%" y="629" width="0.0289%" height="15" fill="rgb(221,146,34)" fg:x="641" fg:w="5"/><text x="3.9597%" y="639.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="3.7097%" y="613" width="0.0289%" height="15" fill="rgb(242,55,13)" fg:x="641" fg:w="5"/><text x="3.9597%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="3.7097%" y="597" width="0.0289%" height="15" fill="rgb(242,112,31)" fg:x="641" fg:w="5"/><text x="3.9597%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.7097%" y="581" width="0.0289%" height="15" fill="rgb(249,192,27)" fg:x="641" fg:w="5"/><text x="3.9597%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="3.7097%" y="565" width="0.0289%" height="15" fill="rgb(208,204,44)" fg:x="641" fg:w="5"/><text x="3.9597%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="3.7097%" y="549" width="0.0289%" height="15" fill="rgb(208,93,54)" fg:x="641" fg:w="5"/><text x="3.9597%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="3.7097%" y="533" width="0.0289%" height="15" fill="rgb(242,1,31)" fg:x="641" fg:w="5"/><text x="3.9597%" y="543.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="3.7097%" y="517" width="0.0289%" height="15" fill="rgb(241,83,25)" fg:x="641" fg:w="5"/><text x="3.9597%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="3.7097%" y="501" width="0.0289%" height="15" fill="rgb(205,169,50)" fg:x="641" fg:w="5"/><text x="3.9597%" y="511.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="3.7097%" y="485" width="0.0289%" height="15" fill="rgb(239,186,37)" fg:x="641" fg:w="5"/><text x="3.9597%" y="495.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="3.7097%" y="469" width="0.0289%" height="15" fill="rgb(205,221,10)" fg:x="641" fg:w="5"/><text x="3.9597%" y="479.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="3.7213%" y="453" width="0.0174%" height="15" fill="rgb(218,196,15)" fg:x="643" fg:w="3"/><text x="3.9713%" y="463.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="3.7271%" y="437" width="0.0116%" height="15" fill="rgb(218,196,35)" fg:x="644" fg:w="2"/><text x="3.9771%" y="447.50"></text></g><g><title>start_thread (2 samples, 0.01%)</title><rect x="3.7444%" y="1541" width="0.0116%" height="15" fill="rgb(233,63,24)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1551.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.01%)</title><rect x="3.7444%" y="1525" width="0.0116%" height="15" fill="rgb(225,8,4)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1535.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="3.7444%" y="1509" width="0.0116%" height="15" fill="rgb(234,105,35)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="3.7444%" y="1493" width="0.0116%" height="15" fill="rgb(236,21,32)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1503.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2 samples, 0.01%)</title><rect x="3.7444%" y="1477" width="0.0116%" height="15" fill="rgb(228,109,6)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1487.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (2 samples, 0.01%)</title><rect x="3.7444%" y="1461" width="0.0116%" height="15" fill="rgb(229,215,31)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="3.7444%" y="1445" width="0.0116%" height="15" fill="rgb(221,52,54)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1455.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="3.7444%" y="1429" width="0.0116%" height="15" fill="rgb(252,129,43)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="3.7444%" y="1413" width="0.0116%" height="15" fill="rgb(248,183,27)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1423.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="3.7444%" y="1397" width="0.0116%" height="15" fill="rgb(250,0,22)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1407.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="3.7444%" y="1381" width="0.0116%" height="15" fill="rgb(213,166,10)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1391.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.01%)</title><rect x="3.7444%" y="1365" width="0.0116%" height="15" fill="rgb(207,163,36)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1375.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (2 samples, 0.01%)</title><rect x="3.7444%" y="1349" width="0.0116%" height="15" fill="rgb(208,122,22)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1359.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (2 samples, 0.01%)</title><rect x="3.7444%" y="1333" width="0.0116%" height="15" fill="rgb(207,104,49)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1343.50"></text></g><g><title>rayon_core::registry::main_loop (2 samples, 0.01%)</title><rect x="3.7444%" y="1317" width="0.0116%" height="15" fill="rgb(248,211,50)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.01%)</title><rect x="3.7444%" y="1301" width="0.0116%" height="15" fill="rgb(217,13,45)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.01%)</title><rect x="3.7444%" y="1285" width="0.0116%" height="15" fill="rgb(211,216,49)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (2 samples, 0.01%)</title><rect x="3.7444%" y="1269" width="0.0116%" height="15" fill="rgb(221,58,53)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1279.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.01%)</title><rect x="3.7444%" y="1253" width="0.0116%" height="15" fill="rgb(220,112,41)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 0.01%)</title><rect x="3.7444%" y="1237" width="0.0116%" height="15" fill="rgb(236,38,28)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1247.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="3.7444%" y="1221" width="0.0116%" height="15" fill="rgb(227,195,22)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="3.7444%" y="1205" width="0.0116%" height="15" fill="rgb(214,55,33)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1215.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="3.7444%" y="1189" width="0.0116%" height="15" fill="rgb(248,80,13)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="3.7444%" y="1173" width="0.0116%" height="15" fill="rgb(238,52,6)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1183.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="3.7444%" y="1157" width="0.0116%" height="15" fill="rgb(224,198,47)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1167.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (2 samples, 0.01%)</title><rect x="3.7444%" y="1141" width="0.0116%" height="15" fill="rgb(233,171,20)" fg:x="647" fg:w="2"/><text x="3.9944%" y="1151.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="3.7618%" y="837" width="0.0231%" height="15" fill="rgb(241,30,25)" fg:x="650" fg:w="4"/><text x="4.0118%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="3.7618%" y="821" width="0.0231%" height="15" fill="rgb(207,171,38)" fg:x="650" fg:w="4"/><text x="4.0118%" y="831.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="3.7965%" y="805" width="0.0174%" height="15" fill="rgb(234,70,1)" fg:x="656" fg:w="3"/><text x="4.0465%" y="815.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (13 samples, 0.08%)</title><rect x="3.7618%" y="853" width="0.0752%" height="15" fill="rgb(232,178,18)" fg:x="650" fg:w="13"/><text x="4.0118%" y="863.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (9 samples, 0.05%)</title><rect x="3.7849%" y="837" width="0.0521%" height="15" fill="rgb(241,78,40)" fg:x="654" fg:w="9"/><text x="4.0349%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (7 samples, 0.04%)</title><rect x="3.7965%" y="821" width="0.0405%" height="15" fill="rgb(222,35,25)" fg:x="656" fg:w="7"/><text x="4.0465%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="3.8139%" y="805" width="0.0231%" height="15" fill="rgb(207,92,16)" fg:x="659" fg:w="4"/><text x="4.0639%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (4 samples, 0.02%)</title><rect x="3.8139%" y="789" width="0.0231%" height="15" fill="rgb(216,59,51)" fg:x="659" fg:w="4"/><text x="4.0639%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="3.8139%" y="773" width="0.0231%" height="15" fill="rgb(213,80,28)" fg:x="659" fg:w="4"/><text x="4.0639%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="3.8255%" y="757" width="0.0116%" height="15" fill="rgb(220,93,7)" fg:x="661" fg:w="2"/><text x="4.0755%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="3.8255%" y="741" width="0.0116%" height="15" fill="rgb(225,24,44)" fg:x="661" fg:w="2"/><text x="4.0755%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.10%)</title><rect x="3.7560%" y="949" width="0.1042%" height="15" fill="rgb(243,74,40)" fg:x="649" fg:w="18"/><text x="4.0060%" y="959.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.10%)</title><rect x="3.7560%" y="933" width="0.1042%" height="15" fill="rgb(228,39,7)" fg:x="649" fg:w="18"/><text x="4.0060%" y="943.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (18 samples, 0.10%)</title><rect x="3.7560%" y="917" width="0.1042%" height="15" fill="rgb(227,79,8)" fg:x="649" fg:w="18"/><text x="4.0060%" y="927.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (18 samples, 0.10%)</title><rect x="3.7560%" y="901" width="0.1042%" height="15" fill="rgb(236,58,11)" fg:x="649" fg:w="18"/><text x="4.0060%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="3.7560%" y="885" width="0.1042%" height="15" fill="rgb(249,63,35)" fg:x="649" fg:w="18"/><text x="4.0060%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="3.7560%" y="869" width="0.1042%" height="15" fill="rgb(252,114,16)" fg:x="649" fg:w="18"/><text x="4.0060%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition (4 samples, 0.02%)</title><rect x="3.8370%" y="853" width="0.0231%" height="15" fill="rgb(254,151,24)" fg:x="663" fg:w="4"/><text x="4.0870%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (4 samples, 0.02%)</title><rect x="3.8370%" y="837" width="0.0231%" height="15" fill="rgb(253,54,39)" fg:x="663" fg:w="4"/><text x="4.0870%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="3.8486%" y="821" width="0.0116%" height="15" fill="rgb(243,25,45)" fg:x="665" fg:w="2"/><text x="4.0986%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.01%)</title><rect x="3.8486%" y="805" width="0.0116%" height="15" fill="rgb(234,134,9)" fg:x="665" fg:w="2"/><text x="4.0986%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (2 samples, 0.01%)</title><rect x="3.8486%" y="789" width="0.0116%" height="15" fill="rgb(227,166,31)" fg:x="665" fg:w="2"/><text x="4.0986%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="3.8486%" y="773" width="0.0116%" height="15" fill="rgb(245,143,41)" fg:x="665" fg:w="2"/><text x="4.0986%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="3.8718%" y="837" width="0.0174%" height="15" fill="rgb(238,181,32)" fg:x="669" fg:w="3"/><text x="4.1218%" y="847.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="3.8891%" y="821" width="0.0116%" height="15" fill="rgb(224,113,18)" fg:x="672" fg:w="2"/><text x="4.1391%" y="831.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (13 samples, 0.08%)</title><rect x="3.8602%" y="869" width="0.0752%" height="15" fill="rgb(240,229,28)" fg:x="667" fg:w="13"/><text x="4.1102%" y="879.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (12 samples, 0.07%)</title><rect x="3.8660%" y="853" width="0.0694%" height="15" fill="rgb(250,185,3)" fg:x="668" fg:w="12"/><text x="4.1160%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (8 samples, 0.05%)</title><rect x="3.8891%" y="837" width="0.0463%" height="15" fill="rgb(212,59,25)" fg:x="672" fg:w="8"/><text x="4.1391%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.03%)</title><rect x="3.9007%" y="821" width="0.0347%" height="15" fill="rgb(221,87,20)" fg:x="674" fg:w="6"/><text x="4.1507%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (6 samples, 0.03%)</title><rect x="3.9007%" y="805" width="0.0347%" height="15" fill="rgb(213,74,28)" fg:x="674" fg:w="6"/><text x="4.1507%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (6 samples, 0.03%)</title><rect x="3.9007%" y="789" width="0.0347%" height="15" fill="rgb(224,132,34)" fg:x="674" fg:w="6"/><text x="4.1507%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (36 samples, 0.21%)</title><rect x="3.7560%" y="1397" width="0.2083%" height="15" fill="rgb(222,101,24)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="1381" width="0.2083%" height="15" fill="rgb(254,142,4)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="1365" width="0.2083%" height="15" fill="rgb(230,229,49)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.21%)</title><rect x="3.7560%" y="1349" width="0.2083%" height="15" fill="rgb(238,70,47)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1359.50"></text></g><g><title>rayon_core::join::join_context (36 samples, 0.21%)</title><rect x="3.7560%" y="1333" width="0.2083%" height="15" fill="rgb(231,160,17)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1343.50"></text></g><g><title>rayon_core::registry::in_worker (36 samples, 0.21%)</title><rect x="3.7560%" y="1317" width="0.2083%" height="15" fill="rgb(218,68,53)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="1301" width="0.2083%" height="15" fill="rgb(236,111,10)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1311.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (36 samples, 0.21%)</title><rect x="3.7560%" y="1285" width="0.2083%" height="15" fill="rgb(224,34,41)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.21%)</title><rect x="3.7560%" y="1269" width="0.2083%" height="15" fill="rgb(241,118,19)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1279.50"></text></g><g><title>std::panicking::try (36 samples, 0.21%)</title><rect x="3.7560%" y="1253" width="0.2083%" height="15" fill="rgb(238,129,25)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.21%)</title><rect x="3.7560%" y="1237" width="0.2083%" height="15" fill="rgb(238,22,31)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1247.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.21%)</title><rect x="3.7560%" y="1221" width="0.2083%" height="15" fill="rgb(222,174,48)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="1205" width="0.2083%" height="15" fill="rgb(206,152,40)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="1189" width="0.2083%" height="15" fill="rgb(218,99,54)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.21%)</title><rect x="3.7560%" y="1173" width="0.2083%" height="15" fill="rgb(220,174,26)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (36 samples, 0.21%)</title><rect x="3.7560%" y="1157" width="0.2083%" height="15" fill="rgb(245,116,9)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1167.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (36 samples, 0.21%)</title><rect x="3.7560%" y="1141" width="0.2083%" height="15" fill="rgb(209,72,35)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1151.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (36 samples, 0.21%)</title><rect x="3.7560%" y="1125" width="0.2083%" height="15" fill="rgb(226,126,21)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 0.21%)</title><rect x="3.7560%" y="1109" width="0.2083%" height="15" fill="rgb(227,192,1)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.21%)</title><rect x="3.7560%" y="1093" width="0.2083%" height="15" fill="rgb(237,180,29)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.21%)</title><rect x="3.7560%" y="1077" width="0.2083%" height="15" fill="rgb(230,197,35)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 0.21%)</title><rect x="3.7560%" y="1061" width="0.2083%" height="15" fill="rgb(246,193,31)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="1045" width="0.2083%" height="15" fill="rgb(241,36,4)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1055.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="1029" width="0.2083%" height="15" fill="rgb(241,130,17)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (36 samples, 0.21%)</title><rect x="3.7560%" y="1013" width="0.2083%" height="15" fill="rgb(206,137,32)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1023.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (36 samples, 0.21%)</title><rect x="3.7560%" y="997" width="0.2083%" height="15" fill="rgb(237,228,51)" fg:x="649" fg:w="36"/><text x="4.0060%" y="1007.50"></text></g><g><title>core::ops::function::Fn::call (36 samples, 0.21%)</title><rect x="3.7560%" y="981" width="0.2083%" height="15" fill="rgb(243,6,42)" fg:x="649" fg:w="36"/><text x="4.0060%" y="991.50"></text></g><g><title>criterion::analysis::estimates::stats (36 samples, 0.21%)</title><rect x="3.7560%" y="965" width="0.2083%" height="15" fill="rgb(251,74,28)" fg:x="649" fg:w="36"/><text x="4.0060%" y="975.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.10%)</title><rect x="3.8602%" y="949" width="0.1042%" height="15" fill="rgb(218,20,49)" fg:x="667" fg:w="18"/><text x="4.1102%" y="959.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (18 samples, 0.10%)</title><rect x="3.8602%" y="933" width="0.1042%" height="15" fill="rgb(238,28,14)" fg:x="667" fg:w="18"/><text x="4.1102%" y="943.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (18 samples, 0.10%)</title><rect x="3.8602%" y="917" width="0.1042%" height="15" fill="rgb(229,40,46)" fg:x="667" fg:w="18"/><text x="4.1102%" y="927.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="3.8602%" y="901" width="0.1042%" height="15" fill="rgb(244,195,20)" fg:x="667" fg:w="18"/><text x="4.1102%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="3.8602%" y="885" width="0.1042%" height="15" fill="rgb(253,56,35)" fg:x="667" fg:w="18"/><text x="4.1102%" y="895.50"></text></g><g><title>rayon::slice::quicksort::partition (5 samples, 0.03%)</title><rect x="3.9354%" y="869" width="0.0289%" height="15" fill="rgb(210,149,44)" fg:x="680" fg:w="5"/><text x="4.1854%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="3.9470%" y="853" width="0.0174%" height="15" fill="rgb(240,135,12)" fg:x="682" fg:w="3"/><text x="4.1970%" y="863.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (9 samples, 0.05%)</title><rect x="3.9701%" y="853" width="0.0521%" height="15" fill="rgb(251,24,50)" fg:x="686" fg:w="9"/><text x="4.2201%" y="863.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (8 samples, 0.05%)</title><rect x="3.9759%" y="837" width="0.0463%" height="15" fill="rgb(243,200,47)" fg:x="687" fg:w="8"/><text x="4.2259%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="3.9991%" y="821" width="0.0231%" height="15" fill="rgb(224,166,26)" fg:x="691" fg:w="4"/><text x="4.2491%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="4.0049%" y="805" width="0.0174%" height="15" fill="rgb(233,0,47)" fg:x="692" fg:w="3"/><text x="4.2549%" y="815.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="4.0049%" y="789" width="0.0174%" height="15" fill="rgb(253,80,5)" fg:x="692" fg:w="3"/><text x="4.2549%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="4.0049%" y="773" width="0.0174%" height="15" fill="rgb(214,133,25)" fg:x="692" fg:w="3"/><text x="4.2549%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (18 samples, 0.10%)</title><rect x="3.9643%" y="949" width="0.1042%" height="15" fill="rgb(209,27,14)" fg:x="685" fg:w="18"/><text x="4.2143%" y="959.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (18 samples, 0.10%)</title><rect x="3.9643%" y="933" width="0.1042%" height="15" fill="rgb(219,102,51)" fg:x="685" fg:w="18"/><text x="4.2143%" y="943.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (18 samples, 0.10%)</title><rect x="3.9643%" y="917" width="0.1042%" height="15" fill="rgb(237,18,16)" fg:x="685" fg:w="18"/><text x="4.2143%" y="927.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (18 samples, 0.10%)</title><rect x="3.9643%" y="901" width="0.1042%" height="15" fill="rgb(241,85,17)" fg:x="685" fg:w="18"/><text x="4.2143%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="3.9643%" y="885" width="0.1042%" height="15" fill="rgb(236,90,42)" fg:x="685" fg:w="18"/><text x="4.2143%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (18 samples, 0.10%)</title><rect x="3.9643%" y="869" width="0.1042%" height="15" fill="rgb(249,57,21)" fg:x="685" fg:w="18"/><text x="4.2143%" y="879.50"></text></g><g><title>rayon::slice::quicksort::partition (8 samples, 0.05%)</title><rect x="4.0222%" y="853" width="0.0463%" height="15" fill="rgb(243,12,36)" fg:x="695" fg:w="8"/><text x="4.2722%" y="863.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (6 samples, 0.03%)</title><rect x="4.0338%" y="837" width="0.0347%" height="15" fill="rgb(253,128,47)" fg:x="697" fg:w="6"/><text x="4.2838%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="4.0569%" y="821" width="0.0116%" height="15" fill="rgb(207,33,20)" fg:x="701" fg:w="2"/><text x="4.3069%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.03%)</title><rect x="4.0685%" y="853" width="0.0289%" height="15" fill="rgb(233,215,35)" fg:x="703" fg:w="5"/><text x="4.3185%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.03%)</title><rect x="4.0685%" y="837" width="0.0289%" height="15" fill="rgb(249,188,52)" fg:x="703" fg:w="5"/><text x="4.3185%" y="847.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.04%)</title><rect x="4.0685%" y="869" width="0.0405%" height="15" fill="rgb(225,12,32)" fg:x="703" fg:w="7"/><text x="4.3185%" y="879.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (2 samples, 0.01%)</title><rect x="4.0975%" y="853" width="0.0116%" height="15" fill="rgb(247,98,14)" fg:x="708" fg:w="2"/><text x="4.3475%" y="863.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="4.0975%" y="837" width="0.0116%" height="15" fill="rgb(247,219,48)" fg:x="708" fg:w="2"/><text x="4.3475%" y="847.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="4.0975%" y="821" width="0.0116%" height="15" fill="rgb(253,60,48)" fg:x="708" fg:w="2"/><text x="4.3475%" y="831.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (26 samples, 0.15%)</title><rect x="3.9643%" y="1221" width="0.1505%" height="15" fill="rgb(245,15,52)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.15%)</title><rect x="3.9643%" y="1205" width="0.1505%" height="15" fill="rgb(220,133,28)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.15%)</title><rect x="3.9643%" y="1189" width="0.1505%" height="15" fill="rgb(217,180,4)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.15%)</title><rect x="3.9643%" y="1173" width="0.1505%" height="15" fill="rgb(251,24,1)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (26 samples, 0.15%)</title><rect x="3.9643%" y="1157" width="0.1505%" height="15" fill="rgb(212,185,49)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1167.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.15%)</title><rect x="3.9643%" y="1141" width="0.1505%" height="15" fill="rgb(215,175,22)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1151.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.15%)</title><rect x="3.9643%" y="1125" width="0.1505%" height="15" fill="rgb(250,205,14)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.15%)</title><rect x="3.9643%" y="1109" width="0.1505%" height="15" fill="rgb(225,211,22)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.15%)</title><rect x="3.9643%" y="1093" width="0.1505%" height="15" fill="rgb(251,179,42)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.15%)</title><rect x="3.9643%" y="1077" width="0.1505%" height="15" fill="rgb(208,216,51)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.15%)</title><rect x="3.9643%" y="1061" width="0.1505%" height="15" fill="rgb(235,36,11)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (26 samples, 0.15%)</title><rect x="3.9643%" y="1045" width="0.1505%" height="15" fill="rgb(213,189,28)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1055.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (26 samples, 0.15%)</title><rect x="3.9643%" y="1029" width="0.1505%" height="15" fill="rgb(227,203,42)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (26 samples, 0.15%)</title><rect x="3.9643%" y="1013" width="0.1505%" height="15" fill="rgb(244,72,36)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1023.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (26 samples, 0.15%)</title><rect x="3.9643%" y="997" width="0.1505%" height="15" fill="rgb(213,53,17)" fg:x="685" fg:w="26"/><text x="4.2143%" y="1007.50"></text></g><g><title>core::ops::function::Fn::call (26 samples, 0.15%)</title><rect x="3.9643%" y="981" width="0.1505%" height="15" fill="rgb(207,167,3)" fg:x="685" fg:w="26"/><text x="4.2143%" y="991.50"></text></g><g><title>criterion::analysis::estimates::stats (26 samples, 0.15%)</title><rect x="3.9643%" y="965" width="0.1505%" height="15" fill="rgb(216,98,30)" fg:x="685" fg:w="26"/><text x="4.2143%" y="975.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (8 samples, 0.05%)</title><rect x="4.0685%" y="949" width="0.0463%" height="15" fill="rgb(236,123,15)" fg:x="703" fg:w="8"/><text x="4.3185%" y="959.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (8 samples, 0.05%)</title><rect x="4.0685%" y="933" width="0.0463%" height="15" fill="rgb(248,81,50)" fg:x="703" fg:w="8"/><text x="4.3185%" y="943.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (8 samples, 0.05%)</title><rect x="4.0685%" y="917" width="0.0463%" height="15" fill="rgb(214,120,4)" fg:x="703" fg:w="8"/><text x="4.3185%" y="927.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="4.0685%" y="901" width="0.0463%" height="15" fill="rgb(208,179,34)" fg:x="703" fg:w="8"/><text x="4.3185%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="4.0685%" y="885" width="0.0463%" height="15" fill="rgb(227,140,7)" fg:x="703" fg:w="8"/><text x="4.3185%" y="895.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (7 samples, 0.04%)</title><rect x="4.1206%" y="789" width="0.0405%" height="15" fill="rgb(214,22,6)" fg:x="712" fg:w="7"/><text x="4.3706%" y="799.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (6 samples, 0.03%)</title><rect x="4.1264%" y="773" width="0.0347%" height="15" fill="rgb(207,137,27)" fg:x="713" fg:w="6"/><text x="4.3764%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (4 samples, 0.02%)</title><rect x="4.1380%" y="757" width="0.0231%" height="15" fill="rgb(210,8,46)" fg:x="715" fg:w="4"/><text x="4.3880%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="4.1438%" y="741" width="0.0174%" height="15" fill="rgb(240,16,54)" fg:x="716" fg:w="3"/><text x="4.3938%" y="751.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (3 samples, 0.02%)</title><rect x="4.1438%" y="725" width="0.0174%" height="15" fill="rgb(211,209,29)" fg:x="716" fg:w="3"/><text x="4.3938%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="4.1438%" y="709" width="0.0174%" height="15" fill="rgb(226,228,24)" fg:x="716" fg:w="3"/><text x="4.3938%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (13 samples, 0.08%)</title><rect x="4.1148%" y="885" width="0.0752%" height="15" fill="rgb(222,84,9)" fg:x="711" fg:w="13"/><text x="4.3648%" y="895.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.08%)</title><rect x="4.1148%" y="869" width="0.0752%" height="15" fill="rgb(234,203,30)" fg:x="711" fg:w="13"/><text x="4.3648%" y="879.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (13 samples, 0.08%)</title><rect x="4.1148%" y="853" width="0.0752%" height="15" fill="rgb(238,109,14)" fg:x="711" fg:w="13"/><text x="4.3648%" y="863.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (13 samples, 0.08%)</title><rect x="4.1148%" y="837" width="0.0752%" height="15" fill="rgb(233,206,34)" fg:x="711" fg:w="13"/><text x="4.3648%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.08%)</title><rect x="4.1148%" y="821" width="0.0752%" height="15" fill="rgb(220,167,47)" fg:x="711" fg:w="13"/><text x="4.3648%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.08%)</title><rect x="4.1148%" y="805" width="0.0752%" height="15" fill="rgb(238,105,10)" fg:x="711" fg:w="13"/><text x="4.3648%" y="815.50"></text></g><g><title>rayon::slice::quicksort::partition (5 samples, 0.03%)</title><rect x="4.1611%" y="789" width="0.0289%" height="15" fill="rgb(213,227,17)" fg:x="719" fg:w="5"/><text x="4.4111%" y="799.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (3 samples, 0.02%)</title><rect x="4.1727%" y="773" width="0.0174%" height="15" fill="rgb(217,132,38)" fg:x="721" fg:w="3"/><text x="4.4227%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="4.1785%" y="757" width="0.0116%" height="15" fill="rgb(242,146,4)" fg:x="722" fg:w="2"/><text x="4.4285%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="4.2479%" y="709" width="0.0116%" height="15" fill="rgb(212,61,9)" fg:x="734" fg:w="2"/><text x="4.4979%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (2 samples, 0.01%)</title><rect x="4.2479%" y="693" width="0.0116%" height="15" fill="rgb(247,126,22)" fg:x="734" fg:w="2"/><text x="4.4979%" y="703.50"></text></g><g><title>std::panicking::try (88 samples, 0.51%)</title><rect x="3.7560%" y="1541" width="0.5093%" height="15" fill="rgb(220,196,2)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (88 samples, 0.51%)</title><rect x="3.7560%" y="1525" width="0.5093%" height="15" fill="rgb(208,46,4)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1535.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (88 samples, 0.51%)</title><rect x="3.7560%" y="1509" width="0.5093%" height="15" fill="rgb(252,104,46)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (88 samples, 0.51%)</title><rect x="3.7560%" y="1493" width="0.5093%" height="15" fill="rgb(237,152,48)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (88 samples, 0.51%)</title><rect x="3.7560%" y="1477" width="0.5093%" height="15" fill="rgb(221,59,37)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (88 samples, 0.51%)</title><rect x="3.7560%" y="1461" width="0.5093%" height="15" fill="rgb(209,202,51)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1471.50"></text></g><g><title>rayon_core::join::join_context (88 samples, 0.51%)</title><rect x="3.7560%" y="1445" width="0.5093%" height="15" fill="rgb(228,81,30)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1455.50"></text></g><g><title>rayon_core::registry::in_worker (88 samples, 0.51%)</title><rect x="3.7560%" y="1429" width="0.5093%" height="15" fill="rgb(227,42,39)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (88 samples, 0.51%)</title><rect x="3.7560%" y="1413" width="0.5093%" height="15" fill="rgb(221,26,2)" fg:x="649" fg:w="88"/><text x="4.0060%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (52 samples, 0.30%)</title><rect x="3.9643%" y="1397" width="0.3009%" height="15" fill="rgb(254,61,31)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (52 samples, 0.30%)</title><rect x="3.9643%" y="1381" width="0.3009%" height="15" fill="rgb(222,173,38)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1391.50"></text></g><g><title>std::panicking::try (52 samples, 0.30%)</title><rect x="3.9643%" y="1365" width="0.3009%" height="15" fill="rgb(218,50,12)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (52 samples, 0.30%)</title><rect x="3.9643%" y="1349" width="0.3009%" height="15" fill="rgb(223,88,40)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1359.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (52 samples, 0.30%)</title><rect x="3.9643%" y="1333" width="0.3009%" height="15" fill="rgb(237,54,19)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (52 samples, 0.30%)</title><rect x="3.9643%" y="1317" width="0.3009%" height="15" fill="rgb(251,129,25)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (52 samples, 0.30%)</title><rect x="3.9643%" y="1301" width="0.3009%" height="15" fill="rgb(238,97,19)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (52 samples, 0.30%)</title><rect x="3.9643%" y="1285" width="0.3009%" height="15" fill="rgb(240,169,18)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1295.50"></text></g><g><title>rayon_core::join::join_context (52 samples, 0.30%)</title><rect x="3.9643%" y="1269" width="0.3009%" height="15" fill="rgb(230,187,49)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1279.50"></text></g><g><title>rayon_core::registry::in_worker (52 samples, 0.30%)</title><rect x="3.9643%" y="1253" width="0.3009%" height="15" fill="rgb(209,44,26)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (52 samples, 0.30%)</title><rect x="3.9643%" y="1237" width="0.3009%" height="15" fill="rgb(244,0,6)" fg:x="685" fg:w="52"/><text x="4.2143%" y="1247.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.15%)</title><rect x="4.1148%" y="1221" width="0.1505%" height="15" fill="rgb(248,18,21)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.15%)</title><rect x="4.1148%" y="1205" width="0.1505%" height="15" fill="rgb(245,180,19)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1215.50"></text></g><g><title>std::panicking::try (26 samples, 0.15%)</title><rect x="4.1148%" y="1189" width="0.1505%" height="15" fill="rgb(252,118,36)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.15%)</title><rect x="4.1148%" y="1173" width="0.1505%" height="15" fill="rgb(210,224,19)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1183.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.15%)</title><rect x="4.1148%" y="1157" width="0.1505%" height="15" fill="rgb(218,30,24)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.15%)</title><rect x="4.1148%" y="1141" width="0.1505%" height="15" fill="rgb(219,75,50)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.15%)</title><rect x="4.1148%" y="1125" width="0.1505%" height="15" fill="rgb(234,72,50)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.15%)</title><rect x="4.1148%" y="1109" width="0.1505%" height="15" fill="rgb(219,100,48)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (26 samples, 0.15%)</title><rect x="4.1148%" y="1093" width="0.1505%" height="15" fill="rgb(253,5,41)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1103.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.15%)</title><rect x="4.1148%" y="1077" width="0.1505%" height="15" fill="rgb(247,181,11)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1087.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26 samples, 0.15%)</title><rect x="4.1148%" y="1061" width="0.1505%" height="15" fill="rgb(222,223,25)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.15%)</title><rect x="4.1148%" y="1045" width="0.1505%" height="15" fill="rgb(214,198,28)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.15%)</title><rect x="4.1148%" y="1029" width="0.1505%" height="15" fill="rgb(230,46,43)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.15%)</title><rect x="4.1148%" y="1013" width="0.1505%" height="15" fill="rgb(233,65,53)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.15%)</title><rect x="4.1148%" y="997" width="0.1505%" height="15" fill="rgb(221,121,27)" fg:x="711" fg:w="26"/><text x="4.3648%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (26 samples, 0.15%)</title><rect x="4.1148%" y="981" width="0.1505%" height="15" fill="rgb(247,70,47)" fg:x="711" fg:w="26"/><text x="4.3648%" y="991.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (26 samples, 0.15%)</title><rect x="4.1148%" y="965" width="0.1505%" height="15" fill="rgb(228,85,35)" fg:x="711" fg:w="26"/><text x="4.3648%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (26 samples, 0.15%)</title><rect x="4.1148%" y="949" width="0.1505%" height="15" fill="rgb(209,50,18)" fg:x="711" fg:w="26"/><text x="4.3648%" y="959.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (26 samples, 0.15%)</title><rect x="4.1148%" y="933" width="0.1505%" height="15" fill="rgb(250,19,35)" fg:x="711" fg:w="26"/><text x="4.3648%" y="943.50"></text></g><g><title>core::ops::function::Fn::call (26 samples, 0.15%)</title><rect x="4.1148%" y="917" width="0.1505%" height="15" fill="rgb(253,107,29)" fg:x="711" fg:w="26"/><text x="4.3648%" y="927.50"></text></g><g><title>criterion::analysis::estimates::stats (26 samples, 0.15%)</title><rect x="4.1148%" y="901" width="0.1505%" height="15" fill="rgb(252,179,29)" fg:x="711" fg:w="26"/><text x="4.3648%" y="911.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (13 samples, 0.08%)</title><rect x="4.1901%" y="885" width="0.0752%" height="15" fill="rgb(238,194,6)" fg:x="724" fg:w="13"/><text x="4.4401%" y="895.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (13 samples, 0.08%)</title><rect x="4.1901%" y="869" width="0.0752%" height="15" fill="rgb(238,164,29)" fg:x="724" fg:w="13"/><text x="4.4401%" y="879.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (13 samples, 0.08%)</title><rect x="4.1901%" y="853" width="0.0752%" height="15" fill="rgb(224,25,9)" fg:x="724" fg:w="13"/><text x="4.4401%" y="863.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.08%)</title><rect x="4.1901%" y="837" width="0.0752%" height="15" fill="rgb(244,153,23)" fg:x="724" fg:w="13"/><text x="4.4401%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (13 samples, 0.08%)</title><rect x="4.1901%" y="821" width="0.0752%" height="15" fill="rgb(212,203,14)" fg:x="724" fg:w="13"/><text x="4.4401%" y="831.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (13 samples, 0.08%)</title><rect x="4.1901%" y="805" width="0.0752%" height="15" fill="rgb(220,164,20)" fg:x="724" fg:w="13"/><text x="4.4401%" y="815.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (12 samples, 0.07%)</title><rect x="4.1958%" y="789" width="0.0694%" height="15" fill="rgb(222,203,48)" fg:x="725" fg:w="12"/><text x="4.4458%" y="799.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (10 samples, 0.06%)</title><rect x="4.2074%" y="773" width="0.0579%" height="15" fill="rgb(215,159,22)" fg:x="727" fg:w="10"/><text x="4.4574%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.05%)</title><rect x="4.2132%" y="757" width="0.0521%" height="15" fill="rgb(216,183,47)" fg:x="728" fg:w="9"/><text x="4.4632%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles::cmp (9 samples, 0.05%)</title><rect x="4.2132%" y="741" width="0.0521%" height="15" fill="rgb(229,195,25)" fg:x="728" fg:w="9"/><text x="4.4632%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (9 samples, 0.05%)</title><rect x="4.2132%" y="725" width="0.0521%" height="15" fill="rgb(224,132,51)" fg:x="728" fg:w="9"/><text x="4.4632%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="4.2653%" y="1301" width="0.0116%" height="15" fill="rgb(240,63,7)" fg:x="737" fg:w="2"/><text x="4.5153%" y="1311.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="4.2827%" y="805" width="0.0116%" height="15" fill="rgb(249,182,41)" fg:x="740" fg:w="2"/><text x="4.5327%" y="815.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="4.2827%" y="789" width="0.0116%" height="15" fill="rgb(243,47,26)" fg:x="740" fg:w="2"/><text x="4.5327%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="4.2827%" y="773" width="0.0116%" height="15" fill="rgb(233,48,2)" fg:x="740" fg:w="2"/><text x="4.5327%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="4.2827%" y="757" width="0.0116%" height="15" fill="rgb(244,165,34)" fg:x="740" fg:w="2"/><text x="4.5327%" y="767.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.01%)</title><rect x="4.2827%" y="741" width="0.0116%" height="15" fill="rgb(207,89,7)" fg:x="740" fg:w="2"/><text x="4.5327%" y="751.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.01%)</title><rect x="4.2827%" y="725" width="0.0116%" height="15" fill="rgb(244,117,36)" fg:x="740" fg:w="2"/><text x="4.5327%" y="735.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.01%)</title><rect x="4.2827%" y="709" width="0.0116%" height="15" fill="rgb(226,144,34)" fg:x="740" fg:w="2"/><text x="4.5327%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="4.2827%" y="693" width="0.0116%" height="15" fill="rgb(213,23,19)" fg:x="740" fg:w="2"/><text x="4.5327%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="4.2827%" y="677" width="0.0116%" height="15" fill="rgb(217,75,12)" fg:x="740" fg:w="2"/><text x="4.5327%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="4.2827%" y="661" width="0.0116%" height="15" fill="rgb(224,159,17)" fg:x="740" fg:w="2"/><text x="4.5327%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="4.2827%" y="645" width="0.0116%" height="15" fill="rgb(217,118,1)" fg:x="740" fg:w="2"/><text x="4.5327%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="4.2827%" y="629" width="0.0116%" height="15" fill="rgb(232,180,48)" fg:x="740" fg:w="2"/><text x="4.5327%" y="639.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (2 samples, 0.01%)</title><rect x="4.2827%" y="613" width="0.0116%" height="15" fill="rgb(230,27,33)" fg:x="740" fg:w="2"/><text x="4.5327%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (2 samples, 0.01%)</title><rect x="4.2827%" y="597" width="0.0116%" height="15" fill="rgb(205,31,21)" fg:x="740" fg:w="2"/><text x="4.5327%" y="607.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (2 samples, 0.01%)</title><rect x="4.2827%" y="581" width="0.0116%" height="15" fill="rgb(253,59,4)" fg:x="740" fg:w="2"/><text x="4.5327%" y="591.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (2 samples, 0.01%)</title><rect x="4.2827%" y="565" width="0.0116%" height="15" fill="rgb(224,201,9)" fg:x="740" fg:w="2"/><text x="4.5327%" y="575.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (2 samples, 0.01%)</title><rect x="4.2827%" y="549" width="0.0116%" height="15" fill="rgb(229,206,30)" fg:x="740" fg:w="2"/><text x="4.5327%" y="559.50"></text></g><g><title>criterion::stats::dot (2 samples, 0.01%)</title><rect x="4.2827%" y="533" width="0.0116%" height="15" fill="rgb(212,67,47)" fg:x="740" fg:w="2"/><text x="4.5327%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="4.2827%" y="517" width="0.0116%" height="15" fill="rgb(211,96,50)" fg:x="740" fg:w="2"/><text x="4.5327%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.02%)</title><rect x="4.2769%" y="1093" width="0.0231%" height="15" fill="rgb(252,114,18)" fg:x="739" fg:w="4"/><text x="4.5269%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.02%)</title><rect x="4.2769%" y="1077" width="0.0231%" height="15" fill="rgb(223,58,37)" fg:x="739" fg:w="4"/><text x="4.5269%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.02%)</title><rect x="4.2769%" y="1061" width="0.0231%" height="15" fill="rgb(237,70,4)" fg:x="739" fg:w="4"/><text x="4.5269%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.02%)</title><rect x="4.2769%" y="1045" width="0.0231%" height="15" fill="rgb(244,85,46)" fg:x="739" fg:w="4"/><text x="4.5269%" y="1055.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.02%)</title><rect x="4.2769%" y="1029" width="0.0231%" height="15" fill="rgb(223,39,52)" fg:x="739" fg:w="4"/><text x="4.5269%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.02%)</title><rect x="4.2769%" y="1013" width="0.0231%" height="15" fill="rgb(218,200,14)" fg:x="739" fg:w="4"/><text x="4.5269%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.02%)</title><rect x="4.2769%" y="997" width="0.0231%" height="15" fill="rgb(208,171,16)" fg:x="739" fg:w="4"/><text x="4.5269%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.02%)</title><rect x="4.2827%" y="981" width="0.0174%" height="15" fill="rgb(234,200,18)" fg:x="740" fg:w="3"/><text x="4.5327%" y="991.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="4.2827%" y="965" width="0.0174%" height="15" fill="rgb(228,45,11)" fg:x="740" fg:w="3"/><text x="4.5327%" y="975.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="4.2827%" y="949" width="0.0174%" height="15" fill="rgb(237,182,11)" fg:x="740" fg:w="3"/><text x="4.5327%" y="959.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="4.2827%" y="933" width="0.0174%" height="15" fill="rgb(241,175,49)" fg:x="740" fg:w="3"/><text x="4.5327%" y="943.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="4.2827%" y="917" width="0.0174%" height="15" fill="rgb(247,38,35)" fg:x="740" fg:w="3"/><text x="4.5327%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.02%)</title><rect x="4.2827%" y="901" width="0.0174%" height="15" fill="rgb(228,39,49)" fg:x="740" fg:w="3"/><text x="4.5327%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="4.2827%" y="885" width="0.0174%" height="15" fill="rgb(226,101,26)" fg:x="740" fg:w="3"/><text x="4.5327%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="4.2827%" y="869" width="0.0174%" height="15" fill="rgb(206,141,19)" fg:x="740" fg:w="3"/><text x="4.5327%" y="879.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="4.2827%" y="853" width="0.0174%" height="15" fill="rgb(211,200,13)" fg:x="740" fg:w="3"/><text x="4.5327%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="4.2827%" y="837" width="0.0174%" height="15" fill="rgb(241,121,6)" fg:x="740" fg:w="3"/><text x="4.5327%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="4.2827%" y="821" width="0.0174%" height="15" fill="rgb(234,221,29)" fg:x="740" fg:w="3"/><text x="4.5327%" y="831.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="4.3000%" y="917" width="0.0116%" height="15" fill="rgb(229,136,5)" fg:x="743" fg:w="2"/><text x="4.5500%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="4.3000%" y="901" width="0.0116%" height="15" fill="rgb(238,36,11)" fg:x="743" fg:w="2"/><text x="4.5500%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="4.3000%" y="885" width="0.0116%" height="15" fill="rgb(251,55,41)" fg:x="743" fg:w="2"/><text x="4.5500%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="4.3000%" y="869" width="0.0116%" height="15" fill="rgb(242,34,40)" fg:x="743" fg:w="2"/><text x="4.5500%" y="879.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="4.3000%" y="853" width="0.0116%" height="15" fill="rgb(215,42,17)" fg:x="743" fg:w="2"/><text x="4.5500%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="4.3000%" y="837" width="0.0116%" height="15" fill="rgb(207,44,46)" fg:x="743" fg:w="2"/><text x="4.5500%" y="847.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="4.3000%" y="821" width="0.0116%" height="15" fill="rgb(211,206,28)" fg:x="743" fg:w="2"/><text x="4.5500%" y="831.50"></text></g><g><title>[unknown] (746 samples, 4.32%)</title><rect x="0.0000%" y="1557" width="4.3174%" height="15" fill="rgb(237,167,16)" fg:x="0" fg:w="746"/><text x="0.2500%" y="1567.50">[unkn..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.05%)</title><rect x="4.2653%" y="1541" width="0.0521%" height="15" fill="rgb(233,66,6)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1551.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (9 samples, 0.05%)</title><rect x="4.2653%" y="1525" width="0.0521%" height="15" fill="rgb(246,123,29)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1535.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (9 samples, 0.05%)</title><rect x="4.2653%" y="1509" width="0.0521%" height="15" fill="rgb(209,62,40)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1519.50"></text></g><g><title>rayon_core::registry::main_loop (9 samples, 0.05%)</title><rect x="4.2653%" y="1493" width="0.0521%" height="15" fill="rgb(218,4,25)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.05%)</title><rect x="4.2653%" y="1477" width="0.0521%" height="15" fill="rgb(253,91,49)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.05%)</title><rect x="4.2653%" y="1461" width="0.0521%" height="15" fill="rgb(228,155,29)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (9 samples, 0.05%)</title><rect x="4.2653%" y="1445" width="0.0521%" height="15" fill="rgb(243,57,37)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1455.50"></text></g><g><title>rayon_core::job::JobRef::execute (9 samples, 0.05%)</title><rect x="4.2653%" y="1429" width="0.0521%" height="15" fill="rgb(244,167,17)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1439.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.05%)</title><rect x="4.2653%" y="1413" width="0.0521%" height="15" fill="rgb(207,181,38)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.05%)</title><rect x="4.2653%" y="1397" width="0.0521%" height="15" fill="rgb(211,8,23)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.05%)</title><rect x="4.2653%" y="1381" width="0.0521%" height="15" fill="rgb(235,11,44)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1391.50"></text></g><g><title>std::panicking::try (9 samples, 0.05%)</title><rect x="4.2653%" y="1365" width="0.0521%" height="15" fill="rgb(248,18,52)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.05%)</title><rect x="4.2653%" y="1349" width="0.0521%" height="15" fill="rgb(208,4,7)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1359.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.05%)</title><rect x="4.2653%" y="1333" width="0.0521%" height="15" fill="rgb(240,17,39)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1343.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (9 samples, 0.05%)</title><rect x="4.2653%" y="1317" width="0.0521%" height="15" fill="rgb(207,170,3)" fg:x="737" fg:w="9"/><text x="4.5153%" y="1327.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (7 samples, 0.04%)</title><rect x="4.2769%" y="1301" width="0.0405%" height="15" fill="rgb(236,100,52)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.04%)</title><rect x="4.2769%" y="1285" width="0.0405%" height="15" fill="rgb(246,78,51)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.04%)</title><rect x="4.2769%" y="1269" width="0.0405%" height="15" fill="rgb(211,17,15)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.04%)</title><rect x="4.2769%" y="1253" width="0.0405%" height="15" fill="rgb(209,59,46)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1263.50"></text></g><g><title>std::panicking::try (7 samples, 0.04%)</title><rect x="4.2769%" y="1237" width="0.0405%" height="15" fill="rgb(210,92,25)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.04%)</title><rect x="4.2769%" y="1221" width="0.0405%" height="15" fill="rgb(238,174,52)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.04%)</title><rect x="4.2769%" y="1205" width="0.0405%" height="15" fill="rgb(230,73,7)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.04%)</title><rect x="4.2769%" y="1189" width="0.0405%" height="15" fill="rgb(243,124,40)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.04%)</title><rect x="4.2769%" y="1173" width="0.0405%" height="15" fill="rgb(244,170,11)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.04%)</title><rect x="4.2769%" y="1157" width="0.0405%" height="15" fill="rgb(207,114,54)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.04%)</title><rect x="4.2769%" y="1141" width="0.0405%" height="15" fill="rgb(205,42,20)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.04%)</title><rect x="4.2769%" y="1125" width="0.0405%" height="15" fill="rgb(230,30,28)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.04%)</title><rect x="4.2769%" y="1109" width="0.0405%" height="15" fill="rgb(205,73,54)" fg:x="739" fg:w="7"/><text x="4.5269%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.02%)</title><rect x="4.3000%" y="1093" width="0.0174%" height="15" fill="rgb(254,227,23)" fg:x="743" fg:w="3"/><text x="4.5500%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="4.3000%" y="1077" width="0.0174%" height="15" fill="rgb(228,202,34)" fg:x="743" fg:w="3"/><text x="4.5500%" y="1087.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="4.3000%" y="1061" width="0.0174%" height="15" fill="rgb(222,225,37)" fg:x="743" fg:w="3"/><text x="4.5500%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="4.3000%" y="1045" width="0.0174%" height="15" fill="rgb(221,14,54)" fg:x="743" fg:w="3"/><text x="4.5500%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="4.3000%" y="1029" width="0.0174%" height="15" fill="rgb(254,102,2)" fg:x="743" fg:w="3"/><text x="4.5500%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.02%)</title><rect x="4.3000%" y="1013" width="0.0174%" height="15" fill="rgb(232,104,17)" fg:x="743" fg:w="3"/><text x="4.5500%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="4.3000%" y="997" width="0.0174%" height="15" fill="rgb(250,220,14)" fg:x="743" fg:w="3"/><text x="4.5500%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="4.3000%" y="981" width="0.0174%" height="15" fill="rgb(241,158,9)" fg:x="743" fg:w="3"/><text x="4.5500%" y="991.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="4.3000%" y="965" width="0.0174%" height="15" fill="rgb(246,9,43)" fg:x="743" fg:w="3"/><text x="4.5500%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="4.3000%" y="949" width="0.0174%" height="15" fill="rgb(206,73,33)" fg:x="743" fg:w="3"/><text x="4.5500%" y="959.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="4.3000%" y="933" width="0.0174%" height="15" fill="rgb(222,79,8)" fg:x="743" fg:w="3"/><text x="4.5500%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="4.3405%" y="1189" width="0.0116%" height="15" fill="rgb(234,8,54)" fg:x="750" fg:w="2"/><text x="4.5905%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="4.3405%" y="1173" width="0.0116%" height="15" fill="rgb(209,134,38)" fg:x="750" fg:w="2"/><text x="4.5905%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="4.3405%" y="1157" width="0.0116%" height="15" fill="rgb(230,127,29)" fg:x="750" fg:w="2"/><text x="4.5905%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="4.3405%" y="1141" width="0.0116%" height="15" fill="rgb(242,44,41)" fg:x="750" fg:w="2"/><text x="4.5905%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="4.3405%" y="1125" width="0.0116%" height="15" fill="rgb(222,56,43)" fg:x="750" fg:w="2"/><text x="4.5905%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="4.3405%" y="1109" width="0.0116%" height="15" fill="rgb(238,39,47)" fg:x="750" fg:w="2"/><text x="4.5905%" y="1119.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="4.3405%" y="1093" width="0.0116%" height="15" fill="rgb(226,79,43)" fg:x="750" fg:w="2"/><text x="4.5905%" y="1103.50"></text></g><g><title>criterion::estimate::build_estimates (4 samples, 0.02%)</title><rect x="4.3405%" y="1253" width="0.0231%" height="15" fill="rgb(242,105,53)" fg:x="750" fg:w="4"/><text x="4.5905%" y="1263.50"></text></g><g><title>criterion::estimate::build_estimates::{{closure}} (4 samples, 0.02%)</title><rect x="4.3405%" y="1237" width="0.0231%" height="15" fill="rgb(251,132,46)" fg:x="750" fg:w="4"/><text x="4.5905%" y="1247.50"></text></g><g><title>criterion::stats::Distribution&lt;A&gt;::confidence_interval (4 samples, 0.02%)</title><rect x="4.3405%" y="1221" width="0.0231%" height="15" fill="rgb(231,77,14)" fg:x="750" fg:w="4"/><text x="4.5905%" y="1231.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (4 samples, 0.02%)</title><rect x="4.3405%" y="1205" width="0.0231%" height="15" fill="rgb(240,135,9)" fg:x="750" fg:w="4"/><text x="4.5905%" y="1215.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (2 samples, 0.01%)</title><rect x="4.3521%" y="1189" width="0.0116%" height="15" fill="rgb(248,109,14)" fg:x="752" fg:w="2"/><text x="4.6021%" y="1199.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (2 samples, 0.01%)</title><rect x="4.3521%" y="1173" width="0.0116%" height="15" fill="rgb(227,146,52)" fg:x="752" fg:w="2"/><text x="4.6021%" y="1183.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="4.3521%" y="1157" width="0.0116%" height="15" fill="rgb(232,54,3)" fg:x="752" fg:w="2"/><text x="4.6021%" y="1167.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="4.3521%" y="1141" width="0.0116%" height="15" fill="rgb(229,201,43)" fg:x="752" fg:w="2"/><text x="4.6021%" y="1151.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (2 samples, 0.01%)</title><rect x="4.3521%" y="1125" width="0.0116%" height="15" fill="rgb(252,161,33)" fg:x="752" fg:w="2"/><text x="4.6021%" y="1135.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::{{closure}} (2 samples, 0.01%)</title><rect x="4.3521%" y="1109" width="0.0116%" height="15" fill="rgb(226,146,40)" fg:x="752" fg:w="2"/><text x="4.6021%" y="1119.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="4.3521%" y="1093" width="0.0116%" height="15" fill="rgb(219,47,25)" fg:x="752" fg:w="2"/><text x="4.6021%" y="1103.50"></text></g><g><title>criterion::analysis::estimates (5 samples, 0.03%)</title><rect x="4.3405%" y="1269" width="0.0289%" height="15" fill="rgb(250,135,13)" fg:x="750" fg:w="5"/><text x="4.5905%" y="1279.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.10%)</title><rect x="6.1520%" y="901" width="0.1042%" height="15" fill="rgb(219,229,18)" fg:x="1063" fg:w="18"/><text x="6.4020%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (18 samples, 0.10%)</title><rect x="6.1520%" y="885" width="0.1042%" height="15" fill="rgb(217,152,27)" fg:x="1063" fg:w="18"/><text x="6.4020%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18 samples, 0.10%)</title><rect x="6.1520%" y="869" width="0.1042%" height="15" fill="rgb(225,71,47)" fg:x="1063" fg:w="18"/><text x="6.4020%" y="879.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.10%)</title><rect x="6.1520%" y="853" width="0.1042%" height="15" fill="rgb(220,139,14)" fg:x="1063" fg:w="18"/><text x="6.4020%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (6 samples, 0.03%)</title><rect x="6.2561%" y="901" width="0.0347%" height="15" fill="rgb(247,54,32)" fg:x="1081" fg:w="6"/><text x="6.5061%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (6 samples, 0.03%)</title><rect x="6.2561%" y="885" width="0.0347%" height="15" fill="rgb(252,131,39)" fg:x="1081" fg:w="6"/><text x="6.5061%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.13%)</title><rect x="7.0490%" y="853" width="0.1273%" height="15" fill="rgb(210,108,39)" fg:x="1218" fg:w="22"/><text x="7.2990%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (78 samples, 0.45%)</title><rect x="6.7944%" y="869" width="0.4514%" height="15" fill="rgb(205,23,29)" fg:x="1174" fg:w="78"/><text x="7.0444%" y="879.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (12 samples, 0.07%)</title><rect x="7.1763%" y="853" width="0.0694%" height="15" fill="rgb(246,139,46)" fg:x="1240" fg:w="12"/><text x="7.4263%" y="863.50"></text></g><g><title>core::cmp::min (3 samples, 0.02%)</title><rect x="7.2458%" y="869" width="0.0174%" height="15" fill="rgb(250,81,26)" fg:x="1252" fg:w="3"/><text x="7.4958%" y="879.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.02%)</title><rect x="7.2458%" y="853" width="0.0174%" height="15" fill="rgb(214,104,7)" fg:x="1252" fg:w="3"/><text x="7.4958%" y="863.50"></text></g><g><title>core::cmp::min_by (3 samples, 0.02%)</title><rect x="7.2458%" y="837" width="0.0174%" height="15" fill="rgb(233,189,8)" fg:x="1252" fg:w="3"/><text x="7.4958%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.11%)</title><rect x="7.2632%" y="869" width="0.1100%" height="15" fill="rgb(228,141,17)" fg:x="1255" fg:w="19"/><text x="7.5132%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.02%)</title><rect x="7.3731%" y="869" width="0.0231%" height="15" fill="rgb(247,157,1)" fg:x="1274" fg:w="4"/><text x="7.6231%" y="879.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.02%)</title><rect x="7.3731%" y="853" width="0.0231%" height="15" fill="rgb(249,225,5)" fg:x="1274" fg:w="4"/><text x="7.6231%" y="863.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (31 samples, 0.18%)</title><rect x="7.3963%" y="869" width="0.1794%" height="15" fill="rgb(242,55,13)" fg:x="1278" fg:w="31"/><text x="7.6463%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (9 samples, 0.05%)</title><rect x="7.5236%" y="853" width="0.0521%" height="15" fill="rgb(230,49,50)" fg:x="1300" fg:w="9"/><text x="7.7736%" y="863.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 1.71%)</title><rect x="5.8800%" y="949" width="1.7131%" height="15" fill="rgb(241,111,38)" fg:x="1016" fg:w="296"/><text x="6.1300%" y="959.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (294 samples, 1.70%)</title><rect x="5.8915%" y="933" width="1.7015%" height="15" fill="rgb(252,155,4)" fg:x="1018" fg:w="294"/><text x="6.1415%" y="943.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (260 samples, 1.50%)</title><rect x="6.0883%" y="917" width="1.5047%" height="15" fill="rgb(212,69,32)" fg:x="1052" fg:w="260"/><text x="6.3383%" y="927.50"></text></g><g><title>core::slice::memchr::memchr (225 samples, 1.30%)</title><rect x="6.2909%" y="901" width="1.3022%" height="15" fill="rgb(243,107,47)" fg:x="1087" fg:w="225"/><text x="6.5409%" y="911.50"></text></g><g><title>core::slice::memchr::memchr_general_case (223 samples, 1.29%)</title><rect x="6.3024%" y="885" width="1.2906%" height="15" fill="rgb(247,130,12)" fg:x="1089" fg:w="223"/><text x="6.5524%" y="895.50"></text></g><g><title>core::slice::memchr::repeat_byte (3 samples, 0.02%)</title><rect x="7.5757%" y="869" width="0.0174%" height="15" fill="rgb(233,74,16)" fg:x="1309" fg:w="3"/><text x="7.8257%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (306 samples, 1.77%)</title><rect x="5.8626%" y="997" width="1.7709%" height="15" fill="rgb(208,58,18)" fg:x="1013" fg:w="306"/><text x="6.1126%" y="1007.50">&lt;..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (303 samples, 1.75%)</title><rect x="5.8800%" y="981" width="1.7536%" height="15" fill="rgb(242,225,1)" fg:x="1016" fg:w="303"/><text x="6.1300%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (303 samples, 1.75%)</title><rect x="5.8800%" y="965" width="1.7536%" height="15" fill="rgb(249,39,40)" fg:x="1016" fg:w="303"/><text x="6.1300%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.04%)</title><rect x="7.5930%" y="949" width="0.0405%" height="15" fill="rgb(207,72,44)" fg:x="1312" fg:w="7"/><text x="7.8430%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.02%)</title><rect x="7.6104%" y="933" width="0.0231%" height="15" fill="rgb(215,193,12)" fg:x="1315" fg:w="4"/><text x="7.8604%" y="943.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (4 samples, 0.02%)</title><rect x="7.6104%" y="917" width="0.0231%" height="15" fill="rgb(248,41,39)" fg:x="1315" fg:w="4"/><text x="7.8604%" y="927.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (4 samples, 0.02%)</title><rect x="7.6104%" y="901" width="0.0231%" height="15" fill="rgb(253,85,4)" fg:x="1315" fg:w="4"/><text x="7.8604%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (417 samples, 2.41%)</title><rect x="7.6335%" y="997" width="2.4133%" height="15" fill="rgb(243,70,31)" fg:x="1319" fg:w="417"/><text x="7.8835%" y="1007.50">&lt;c..</text></g><g><title>ex16::part1::{{closure}} (394 samples, 2.28%)</title><rect x="7.7667%" y="981" width="2.2802%" height="15" fill="rgb(253,195,26)" fg:x="1342" fg:w="394"/><text x="8.0167%" y="991.50">e..</text></g><g><title>ex16::Rule::contains (394 samples, 2.28%)</title><rect x="7.7667%" y="965" width="2.2802%" height="15" fill="rgb(243,42,11)" fg:x="1342" fg:w="394"/><text x="8.0167%" y="975.50">e..</text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (394 samples, 2.28%)</title><rect x="7.7667%" y="949" width="2.2802%" height="15" fill="rgb(239,66,17)" fg:x="1342" fg:w="394"/><text x="8.0167%" y="959.50">c..</text></g><g><title>core::ops::range::RangeBounds::contains (394 samples, 2.28%)</title><rect x="7.7667%" y="933" width="2.2802%" height="15" fill="rgb(217,132,21)" fg:x="1342" fg:w="394"/><text x="8.0167%" y="943.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (210 samples, 1.22%)</title><rect x="8.8315%" y="917" width="1.2153%" height="15" fill="rgb(252,202,21)" fg:x="1526" fg:w="210"/><text x="9.0815%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u16&gt;::le (210 samples, 1.22%)</title><rect x="8.8315%" y="901" width="1.2153%" height="15" fill="rgb(233,98,36)" fg:x="1526" fg:w="210"/><text x="9.0815%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (235 samples, 1.36%)</title><rect x="15.8169%" y="949" width="1.3600%" height="15" fill="rgb(216,153,54)" fg:x="2733" fg:w="235"/><text x="16.0669%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (235 samples, 1.36%)</title><rect x="15.8169%" y="933" width="1.3600%" height="15" fill="rgb(250,99,7)" fg:x="2733" fg:w="235"/><text x="16.0669%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (235 samples, 1.36%)</title><rect x="15.8169%" y="917" width="1.3600%" height="15" fill="rgb(207,56,50)" fg:x="2733" fg:w="235"/><text x="16.0669%" y="927.50"></text></g><g><title>[libc-2.31.so] (190 samples, 1.10%)</title><rect x="16.0773%" y="901" width="1.0996%" height="15" fill="rgb(244,61,34)" fg:x="2778" fg:w="190"/><text x="16.3273%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (72 samples, 0.42%)</title><rect x="17.1769%" y="949" width="0.4167%" height="15" fill="rgb(241,50,38)" fg:x="2968" fg:w="72"/><text x="17.4269%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (72 samples, 0.42%)</title><rect x="17.1769%" y="933" width="0.4167%" height="15" fill="rgb(212,166,30)" fg:x="2968" fg:w="72"/><text x="17.4269%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (78 samples, 0.45%)</title><rect x="17.8135%" y="933" width="0.4514%" height="15" fill="rgb(249,127,32)" fg:x="3078" fg:w="78"/><text x="18.0635%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.08%)</title><rect x="18.1897%" y="917" width="0.0752%" height="15" fill="rgb(209,103,0)" fg:x="3143" fg:w="13"/><text x="18.4397%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.21%)</title><rect x="20.8519%" y="901" width="0.2083%" height="15" fill="rgb(238,209,51)" fg:x="3603" fg:w="36"/><text x="21.1019%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (183 samples, 1.06%)</title><rect x="20.0243%" y="917" width="1.0591%" height="15" fill="rgb(237,56,23)" fg:x="3460" fg:w="183"/><text x="20.2743%" y="927.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (4 samples, 0.02%)</title><rect x="21.0602%" y="901" width="0.0231%" height="15" fill="rgb(215,153,46)" fg:x="3639" fg:w="4"/><text x="21.3102%" y="911.50"></text></g><g><title>core::cmp::min (39 samples, 0.23%)</title><rect x="21.0834%" y="917" width="0.2257%" height="15" fill="rgb(224,49,31)" fg:x="3643" fg:w="39"/><text x="21.3334%" y="927.50"></text></g><g><title>core::cmp::Ord::min (39 samples, 0.23%)</title><rect x="21.0834%" y="901" width="0.2257%" height="15" fill="rgb(250,18,42)" fg:x="3643" fg:w="39"/><text x="21.3334%" y="911.50"></text></g><g><title>core::cmp::min_by (39 samples, 0.23%)</title><rect x="21.0834%" y="885" width="0.2257%" height="15" fill="rgb(215,176,39)" fg:x="3643" fg:w="39"/><text x="21.3334%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.14%)</title><rect x="21.3091%" y="917" width="0.1389%" height="15" fill="rgb(223,77,29)" fg:x="3682" fg:w="24"/><text x="21.5591%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (3 samples, 0.02%)</title><rect x="21.4480%" y="917" width="0.0174%" height="15" fill="rgb(234,94,52)" fg:x="3706" fg:w="3"/><text x="21.6980%" y="927.50"></text></g><g><title>core::ptr::align_offset (3 samples, 0.02%)</title><rect x="21.4480%" y="901" width="0.0174%" height="15" fill="rgb(220,154,50)" fg:x="3706" fg:w="3"/><text x="21.6980%" y="911.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.06%)</title><rect x="21.4654%" y="917" width="0.0579%" height="15" fill="rgb(212,11,10)" fg:x="3709" fg:w="10"/><text x="21.7154%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.06%)</title><rect x="21.4654%" y="901" width="0.0579%" height="15" fill="rgb(205,166,19)" fg:x="3709" fg:w="10"/><text x="21.7154%" y="911.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (37 samples, 0.21%)</title><rect x="21.5232%" y="917" width="0.2141%" height="15" fill="rgb(244,198,16)" fg:x="3719" fg:w="37"/><text x="21.7732%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (19 samples, 0.11%)</title><rect x="21.6274%" y="901" width="0.1100%" height="15" fill="rgb(219,69,12)" fg:x="3737" fg:w="19"/><text x="21.8774%" y="911.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,352 samples, 7.82%)</title><rect x="14.0460%" y="965" width="7.8245%" height="15" fill="rgb(245,30,7)" fg:x="2427" fg:w="1352"/><text x="14.2960%" y="975.50">&lt;core::str:..</text></g><g><title>core::slice::memchr::memchr (739 samples, 4.28%)</title><rect x="17.5936%" y="949" width="4.2769%" height="15" fill="rgb(218,221,48)" fg:x="3040" fg:w="739"/><text x="17.8436%" y="959.50">core:..</text></g><g><title>core::slice::memchr::memchr_general_case (623 samples, 3.61%)</title><rect x="18.2649%" y="933" width="3.6055%" height="15" fill="rgb(216,66,15)" fg:x="3156" fg:w="623"/><text x="18.5149%" y="943.50">core..</text></g><g><title>core::slice::memchr::repeat_byte (23 samples, 0.13%)</title><rect x="21.7374%" y="917" width="0.1331%" height="15" fill="rgb(226,122,50)" fg:x="3756" fg:w="23"/><text x="21.9874%" y="927.50"></text></g><g><title>core::cmp::max (8 samples, 0.05%)</title><rect x="22.8775%" y="933" width="0.0463%" height="15" fill="rgb(239,156,16)" fg:x="3953" fg:w="8"/><text x="23.1275%" y="943.50"></text></g><g><title>core::cmp::Ord::max (8 samples, 0.05%)</title><rect x="22.8775%" y="917" width="0.0463%" height="15" fill="rgb(224,27,38)" fg:x="3953" fg:w="8"/><text x="23.1275%" y="927.50"></text></g><g><title>core::cmp::max_by (8 samples, 0.05%)</title><rect x="22.8775%" y="901" width="0.0463%" height="15" fill="rgb(224,39,27)" fg:x="3953" fg:w="8"/><text x="23.1275%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (42 samples, 0.24%)</title><rect x="22.9296%" y="933" width="0.2431%" height="15" fill="rgb(215,92,29)" fg:x="3962" fg:w="42"/><text x="23.1796%" y="943.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (42 samples, 0.24%)</title><rect x="22.9296%" y="917" width="0.2431%" height="15" fill="rgb(207,159,16)" fg:x="3962" fg:w="42"/><text x="23.1796%" y="927.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (294 samples, 1.70%)</title><rect x="21.8705%" y="965" width="1.7015%" height="15" fill="rgb(238,163,47)" fg:x="3779" fg:w="294"/><text x="22.1205%" y="975.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (294 samples, 1.70%)</title><rect x="21.8705%" y="949" width="1.7015%" height="15" fill="rgb(219,91,49)" fg:x="3779" fg:w="294"/><text x="22.1205%" y="959.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (69 samples, 0.40%)</title><rect x="23.1726%" y="933" width="0.3993%" height="15" fill="rgb(227,167,31)" fg:x="4004" fg:w="69"/><text x="23.4226%" y="943.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,358 samples, 13.65%)</title><rect x="10.0469%" y="997" width="13.6466%" height="15" fill="rgb(234,80,54)" fg:x="1736" fg:w="2358"/><text x="10.2969%" y="1007.50">&lt;core::str::iter::Spl..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2,310 samples, 13.37%)</title><rect x="10.3247%" y="981" width="13.3688%" height="15" fill="rgb(212,114,2)" fg:x="1784" fg:w="2310"/><text x="10.5747%" y="991.50">core::str::iter::Spl..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (20 samples, 0.12%)</title><rect x="23.5778%" y="965" width="0.1157%" height="15" fill="rgb(234,50,24)" fg:x="4074" fg:w="20"/><text x="23.8278%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="23.6819%" y="949" width="0.0116%" height="15" fill="rgb(221,68,8)" fg:x="4092" fg:w="2"/><text x="23.9319%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="23.6819%" y="933" width="0.0116%" height="15" fill="rgb(254,180,31)" fg:x="4092" fg:w="2"/><text x="23.9319%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.01%)</title><rect x="23.6819%" y="917" width="0.0116%" height="15" fill="rgb(247,130,50)" fg:x="4092" fg:w="2"/><text x="23.9319%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.01%)</title><rect x="23.6819%" y="901" width="0.0116%" height="15" fill="rgb(211,109,4)" fg:x="4092" fg:w="2"/><text x="23.9319%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (4 samples, 0.02%)</title><rect x="23.7803%" y="773" width="0.0231%" height="15" fill="rgb(238,50,21)" fg:x="4109" fg:w="4"/><text x="24.0303%" y="783.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (2 samples, 0.01%)</title><rect x="23.7919%" y="757" width="0.0116%" height="15" fill="rgb(225,57,45)" fg:x="4111" fg:w="2"/><text x="24.0419%" y="767.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.11%)</title><rect x="23.7051%" y="853" width="0.1100%" height="15" fill="rgb(209,196,50)" fg:x="4096" fg:w="19"/><text x="23.9551%" y="863.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (19 samples, 0.11%)</title><rect x="23.7051%" y="837" width="0.1100%" height="15" fill="rgb(242,140,13)" fg:x="4096" fg:w="19"/><text x="23.9551%" y="847.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (18 samples, 0.10%)</title><rect x="23.7109%" y="821" width="0.1042%" height="15" fill="rgb(217,111,7)" fg:x="4097" fg:w="18"/><text x="23.9609%" y="831.50"></text></g><g><title>core::slice::memchr::memchr (15 samples, 0.09%)</title><rect x="23.7282%" y="805" width="0.0868%" height="15" fill="rgb(253,193,51)" fg:x="4100" fg:w="15"/><text x="23.9782%" y="815.50"></text></g><g><title>core::slice::memchr::memchr_general_case (15 samples, 0.09%)</title><rect x="23.7282%" y="789" width="0.0868%" height="15" fill="rgb(252,70,29)" fg:x="4100" fg:w="15"/><text x="23.9782%" y="799.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.12%)</title><rect x="23.7051%" y="885" width="0.1157%" height="15" fill="rgb(232,127,12)" fg:x="4096" fg:w="20"/><text x="23.9551%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.12%)</title><rect x="23.7051%" y="869" width="0.1157%" height="15" fill="rgb(211,180,21)" fg:x="4096" fg:w="20"/><text x="23.9551%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="23.8613%" y="693" width="0.0174%" height="15" fill="rgb(229,72,13)" fg:x="4123" fg:w="3"/><text x="24.1113%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="23.8613%" y="677" width="0.0174%" height="15" fill="rgb(240,211,49)" fg:x="4123" fg:w="3"/><text x="24.1113%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="23.8613%" y="661" width="0.0174%" height="15" fill="rgb(219,149,40)" fg:x="4123" fg:w="3"/><text x="24.1113%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="23.8613%" y="645" width="0.0174%" height="15" fill="rgb(210,127,46)" fg:x="4123" fg:w="3"/><text x="24.1113%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="23.8613%" y="629" width="0.0174%" height="15" fill="rgb(220,106,7)" fg:x="4123" fg:w="3"/><text x="24.1113%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="23.8613%" y="613" width="0.0174%" height="15" fill="rgb(249,31,22)" fg:x="4123" fg:w="3"/><text x="24.1113%" y="623.50"></text></g><g><title>__libc_malloc (3 samples, 0.02%)</title><rect x="23.8613%" y="597" width="0.0174%" height="15" fill="rgb(253,1,49)" fg:x="4123" fg:w="3"/><text x="24.1113%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.02%)</title><rect x="23.8613%" y="773" width="0.0231%" height="15" fill="rgb(227,144,33)" fg:x="4123" fg:w="4"/><text x="24.1113%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.02%)</title><rect x="23.8613%" y="757" width="0.0231%" height="15" fill="rgb(249,163,44)" fg:x="4123" fg:w="4"/><text x="24.1113%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="23.8613%" y="741" width="0.0231%" height="15" fill="rgb(234,15,39)" fg:x="4123" fg:w="4"/><text x="24.1113%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="23.8613%" y="725" width="0.0231%" height="15" fill="rgb(207,66,16)" fg:x="4123" fg:w="4"/><text x="24.1113%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="23.8613%" y="709" width="0.0231%" height="15" fill="rgb(233,112,24)" fg:x="4123" fg:w="4"/><text x="24.1113%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (6 samples, 0.03%)</title><rect x="23.8613%" y="805" width="0.0347%" height="15" fill="rgb(230,90,22)" fg:x="4123" fg:w="6"/><text x="24.1113%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.03%)</title><rect x="23.8613%" y="789" width="0.0347%" height="15" fill="rgb(229,61,13)" fg:x="4123" fg:w="6"/><text x="24.1113%" y="799.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (2 samples, 0.01%)</title><rect x="23.8845%" y="773" width="0.0116%" height="15" fill="rgb(225,57,24)" fg:x="4127" fg:w="2"/><text x="24.1345%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="23.9134%" y="789" width="0.0231%" height="15" fill="rgb(208,169,48)" fg:x="4132" fg:w="4"/><text x="24.1634%" y="799.50"></text></g><g><title>&lt;regex::re_unicode::Captures as core::ops::index::Index&lt;usize&gt;&gt;::index::{{closure}} (4 samples, 0.02%)</title><rect x="23.9134%" y="773" width="0.0231%" height="15" fill="rgb(244,218,51)" fg:x="4132" fg:w="4"/><text x="24.1634%" y="783.50"></text></g><g><title>regex::re_unicode::Match::as_str (4 samples, 0.02%)</title><rect x="23.9134%" y="757" width="0.0231%" height="15" fill="rgb(214,148,10)" fg:x="4132" fg:w="4"/><text x="24.1634%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.02%)</title><rect x="23.9134%" y="741" width="0.0231%" height="15" fill="rgb(225,174,27)" fg:x="4132" fg:w="4"/><text x="24.1634%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (4 samples, 0.02%)</title><rect x="23.9134%" y="725" width="0.0231%" height="15" fill="rgb(230,96,26)" fg:x="4132" fg:w="4"/><text x="24.1634%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (4 samples, 0.02%)</title><rect x="23.9134%" y="709" width="0.0231%" height="15" fill="rgb(232,10,30)" fg:x="4132" fg:w="4"/><text x="24.1634%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.02%)</title><rect x="23.9192%" y="693" width="0.0174%" height="15" fill="rgb(222,8,50)" fg:x="4133" fg:w="3"/><text x="24.1692%" y="703.50"></text></g><g><title>&lt;regex::re_unicode::Captures as core::ops::index::Index&lt;usize&gt;&gt;::index (15 samples, 0.09%)</title><rect x="23.8961%" y="805" width="0.0868%" height="15" fill="rgb(213,81,27)" fg:x="4129" fg:w="15"/><text x="24.1461%" y="815.50"></text></g><g><title>regex::re_unicode::Captures::get (8 samples, 0.05%)</title><rect x="23.9366%" y="789" width="0.0463%" height="15" fill="rgb(245,50,10)" fg:x="4136" fg:w="8"/><text x="24.1866%" y="799.50"></text></g><g><title>regex::re_trait::Locations::pos (8 samples, 0.05%)</title><rect x="23.9366%" y="773" width="0.0463%" height="15" fill="rgb(216,100,18)" fg:x="4136" fg:w="8"/><text x="24.1866%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.01%)</title><rect x="23.9713%" y="757" width="0.0116%" height="15" fill="rgb(236,147,54)" fg:x="4142" fg:w="2"/><text x="24.2213%" y="767.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.01%)</title><rect x="23.9713%" y="741" width="0.0116%" height="15" fill="rgb(205,143,26)" fg:x="4142" fg:w="2"/><text x="24.2213%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.02%)</title><rect x="23.9829%" y="805" width="0.0231%" height="15" fill="rgb(236,26,9)" fg:x="4144" fg:w="4"/><text x="24.2329%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="24.0060%" y="789" width="0.0289%" height="15" fill="rgb(221,165,53)" fg:x="4148" fg:w="5"/><text x="24.2560%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="24.0060%" y="773" width="0.0289%" height="15" fill="rgb(214,110,17)" fg:x="4148" fg:w="5"/><text x="24.2560%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_unicode::Captures&gt; (11 samples, 0.06%)</title><rect x="24.0060%" y="805" width="0.0637%" height="15" fill="rgb(237,197,12)" fg:x="4148" fg:w="11"/><text x="24.2560%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_trait::Locations&gt; (6 samples, 0.03%)</title><rect x="24.0350%" y="789" width="0.0347%" height="15" fill="rgb(205,84,17)" fg:x="4153" fg:w="6"/><text x="24.2850%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="24.0350%" y="773" width="0.0347%" height="15" fill="rgb(237,18,45)" fg:x="4153" fg:w="6"/><text x="24.2850%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="24.0350%" y="757" width="0.0347%" height="15" fill="rgb(221,87,14)" fg:x="4153" fg:w="6"/><text x="24.2850%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="24.0350%" y="741" width="0.0347%" height="15" fill="rgb(238,186,15)" fg:x="4153" fg:w="6"/><text x="24.2850%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.03%)</title><rect x="24.0350%" y="725" width="0.0347%" height="15" fill="rgb(208,115,11)" fg:x="4153" fg:w="6"/><text x="24.2850%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.03%)</title><rect x="24.0350%" y="709" width="0.0347%" height="15" fill="rgb(254,175,0)" fg:x="4153" fg:w="6"/><text x="24.2850%" y="719.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.03%)</title><rect x="24.0350%" y="693" width="0.0347%" height="15" fill="rgb(227,24,42)" fg:x="4153" fg:w="6"/><text x="24.2850%" y="703.50"></text></g><g><title>&lt;u16 as core::num::FromStrRadixHelper&gt;::checked_mul (4 samples, 0.02%)</title><rect x="24.0870%" y="757" width="0.0231%" height="15" fill="rgb(223,211,37)" fg:x="4162" fg:w="4"/><text x="24.3370%" y="767.50"></text></g><g><title>core::num::&lt;impl u16&gt;::checked_mul (4 samples, 0.02%)</title><rect x="24.0870%" y="741" width="0.0231%" height="15" fill="rgb(235,49,27)" fg:x="4162" fg:w="4"/><text x="24.3370%" y="751.50"></text></g><g><title>core::num::&lt;impl u16&gt;::overflowing_mul (4 samples, 0.02%)</title><rect x="24.0870%" y="725" width="0.0231%" height="15" fill="rgb(254,97,51)" fg:x="4162" fg:w="4"/><text x="24.3370%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (9 samples, 0.05%)</title><rect x="24.0697%" y="805" width="0.0521%" height="15" fill="rgb(249,51,40)" fg:x="4159" fg:w="9"/><text x="24.3197%" y="815.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u16&gt;::from_str (9 samples, 0.05%)</title><rect x="24.0697%" y="789" width="0.0521%" height="15" fill="rgb(210,128,45)" fg:x="4159" fg:w="9"/><text x="24.3197%" y="799.50"></text></g><g><title>core::num::from_str_radix (9 samples, 0.05%)</title><rect x="24.0697%" y="773" width="0.0521%" height="15" fill="rgb(224,137,50)" fg:x="4159" fg:w="9"/><text x="24.3197%" y="783.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (2 samples, 0.01%)</title><rect x="24.1102%" y="757" width="0.0116%" height="15" fill="rgb(242,15,9)" fg:x="4166" fg:w="2"/><text x="24.3602%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.01%)</title><rect x="24.1102%" y="741" width="0.0116%" height="15" fill="rgb(233,187,41)" fg:x="4166" fg:w="2"/><text x="24.3602%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.04%)</title><rect x="24.1391%" y="789" width="0.0405%" height="15" fill="rgb(227,2,29)" fg:x="4171" fg:w="7"/><text x="24.3891%" y="799.50"></text></g><g><title>regex::re_unicode::Regex::captures::{{closure}} (6 samples, 0.03%)</title><rect x="24.1449%" y="773" width="0.0347%" height="15" fill="rgb(222,70,3)" fg:x="4172" fg:w="6"/><text x="24.3949%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="24.1449%" y="757" width="0.0347%" height="15" fill="rgb(213,11,42)" fg:x="4172" fg:w="6"/><text x="24.3949%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="24.1970%" y="709" width="0.0116%" height="15" fill="rgb(225,150,9)" fg:x="4181" fg:w="2"/><text x="24.4470%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (5 samples, 0.03%)</title><rect x="24.1854%" y="725" width="0.0289%" height="15" fill="rgb(230,162,45)" fg:x="4179" fg:w="5"/><text x="24.4354%" y="735.50"></text></g><g><title>__libc_malloc (8 samples, 0.05%)</title><rect x="24.2202%" y="629" width="0.0463%" height="15" fill="rgb(222,14,52)" fg:x="4185" fg:w="8"/><text x="24.4702%" y="639.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (16 samples, 0.09%)</title><rect x="24.1796%" y="789" width="0.0926%" height="15" fill="rgb(254,198,14)" fg:x="4178" fg:w="16"/><text x="24.4296%" y="799.50"></text></g><g><title>regex::re_trait::RegularExpression::locations (15 samples, 0.09%)</title><rect x="24.1854%" y="773" width="0.0868%" height="15" fill="rgb(220,217,30)" fg:x="4179" fg:w="15"/><text x="24.4354%" y="783.50"></text></g><g><title>alloc::vec::from_elem (15 samples, 0.09%)</title><rect x="24.1854%" y="757" width="0.0868%" height="15" fill="rgb(215,146,41)" fg:x="4179" fg:w="15"/><text x="24.4354%" y="767.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (15 samples, 0.09%)</title><rect x="24.1854%" y="741" width="0.0868%" height="15" fill="rgb(217,27,36)" fg:x="4179" fg:w="15"/><text x="24.4354%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.06%)</title><rect x="24.2144%" y="725" width="0.0579%" height="15" fill="rgb(219,218,39)" fg:x="4184" fg:w="10"/><text x="24.4644%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.06%)</title><rect x="24.2144%" y="709" width="0.0579%" height="15" fill="rgb(219,4,42)" fg:x="4184" fg:w="10"/><text x="24.4644%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.06%)</title><rect x="24.2144%" y="693" width="0.0579%" height="15" fill="rgb(249,119,36)" fg:x="4184" fg:w="10"/><text x="24.4644%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.05%)</title><rect x="24.2202%" y="677" width="0.0521%" height="15" fill="rgb(209,23,33)" fg:x="4185" fg:w="9"/><text x="24.4702%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.05%)</title><rect x="24.2202%" y="661" width="0.0521%" height="15" fill="rgb(211,10,0)" fg:x="4185" fg:w="9"/><text x="24.4702%" y="671.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.05%)</title><rect x="24.2202%" y="645" width="0.0521%" height="15" fill="rgb(208,99,37)" fg:x="4185" fg:w="9"/><text x="24.4702%" y="655.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (3 samples, 0.02%)</title><rect x="24.3359%" y="661" width="0.0174%" height="15" fill="rgb(213,132,31)" fg:x="4205" fg:w="3"/><text x="24.5859%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (22 samples, 0.13%)</title><rect x="24.6600%" y="629" width="0.1273%" height="15" fill="rgb(243,129,40)" fg:x="4261" fg:w="22"/><text x="24.9100%" y="639.50"></text></g><g><title>core::ptr::read (10 samples, 0.06%)</title><rect x="24.7294%" y="613" width="0.0579%" height="15" fill="rgb(210,66,33)" fg:x="4273" fg:w="10"/><text x="24.9794%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="25.9101%" y="597" width="0.0289%" height="15" fill="rgb(209,189,4)" fg:x="4477" fg:w="5"/><text x="26.1601%" y="607.50"></text></g><g><title>&lt;regex::input::Char as core::convert::From&lt;core::option::Option&lt;char&gt;&gt;&gt;::from (5 samples, 0.03%)</title><rect x="25.9101%" y="581" width="0.0289%" height="15" fill="rgb(214,107,37)" fg:x="4477" fg:w="5"/><text x="26.1601%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (5 samples, 0.03%)</title><rect x="25.9101%" y="565" width="0.0289%" height="15" fill="rgb(245,88,54)" fg:x="4477" fg:w="5"/><text x="26.1601%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.07%)</title><rect x="25.9448%" y="597" width="0.0694%" height="15" fill="rgb(205,146,20)" fg:x="4483" fg:w="12"/><text x="26.1948%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.07%)</title><rect x="25.9448%" y="581" width="0.0694%" height="15" fill="rgb(220,161,25)" fg:x="4483" fg:w="12"/><text x="26.1948%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.07%)</title><rect x="25.9448%" y="565" width="0.0694%" height="15" fill="rgb(215,152,15)" fg:x="4483" fg:w="12"/><text x="26.1948%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.07%)</title><rect x="25.9448%" y="549" width="0.0694%" height="15" fill="rgb(233,192,44)" fg:x="4483" fg:w="12"/><text x="26.1948%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.07%)</title><rect x="25.9448%" y="533" width="0.0694%" height="15" fill="rgb(240,170,46)" fg:x="4483" fg:w="12"/><text x="26.1948%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.07%)</title><rect x="25.9448%" y="517" width="0.0694%" height="15" fill="rgb(207,104,33)" fg:x="4483" fg:w="12"/><text x="26.1948%" y="527.50"></text></g><g><title>regex::input::Char::len_utf8 (6 samples, 0.03%)</title><rect x="26.0142%" y="597" width="0.0347%" height="15" fill="rgb(219,21,39)" fg:x="4495" fg:w="6"/><text x="26.2642%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (6 samples, 0.03%)</title><rect x="26.0142%" y="581" width="0.0347%" height="15" fill="rgb(214,133,29)" fg:x="4495" fg:w="6"/><text x="26.2642%" y="591.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (70 samples, 0.41%)</title><rect x="25.7191%" y="613" width="0.4051%" height="15" fill="rgb(226,93,6)" fg:x="4444" fg:w="70"/><text x="25.9691%" y="623.50"></text></g><g><title>regex::utf8::decode_utf8 (13 samples, 0.08%)</title><rect x="26.0490%" y="597" width="0.0752%" height="15" fill="rgb(252,222,34)" fg:x="4501" fg:w="13"/><text x="26.2990%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (5 samples, 0.03%)</title><rect x="26.0953%" y="581" width="0.0289%" height="15" fill="rgb(252,92,48)" fg:x="4509" fg:w="5"/><text x="26.3453%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.03%)</title><rect x="26.0953%" y="565" width="0.0289%" height="15" fill="rgb(245,223,24)" fg:x="4509" fg:w="5"/><text x="26.3453%" y="575.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::is_empty_match (3 samples, 0.02%)</title><rect x="26.1242%" y="613" width="0.0174%" height="15" fill="rgb(205,176,3)" fg:x="4514" fg:w="3"/><text x="26.3742%" y="623.50"></text></g><g><title>&lt;regex::prog::Program as core::ops::deref::Deref&gt;::deref (11 samples, 0.06%)</title><rect x="26.1416%" y="613" width="0.0637%" height="15" fill="rgb(235,151,15)" fg:x="4517" fg:w="11"/><text x="26.3916%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.06%)</title><rect x="26.1416%" y="597" width="0.0637%" height="15" fill="rgb(237,209,11)" fg:x="4517" fg:w="11"/><text x="26.3916%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.06%)</title><rect x="26.3036%" y="597" width="0.0579%" height="15" fill="rgb(243,227,24)" fg:x="4545" fg:w="10"/><text x="26.5536%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (57 samples, 0.33%)</title><rect x="26.2052%" y="613" width="0.3299%" height="15" fill="rgb(239,193,16)" fg:x="4528" fg:w="57"/><text x="26.4552%" y="623.50"></text></g><g><title>core::ptr::write (30 samples, 0.17%)</title><rect x="26.3615%" y="597" width="0.1736%" height="15" fill="rgb(231,27,9)" fg:x="4555" fg:w="30"/><text x="26.6115%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (5 samples, 0.03%)</title><rect x="26.5351%" y="613" width="0.0289%" height="15" fill="rgb(219,169,10)" fg:x="4585" fg:w="5"/><text x="26.7851%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.03%)</title><rect x="26.5351%" y="597" width="0.0289%" height="15" fill="rgb(244,229,43)" fg:x="4585" fg:w="5"/><text x="26.7851%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.20%)</title><rect x="27.1196%" y="581" width="0.1968%" height="15" fill="rgb(254,38,20)" fg:x="4686" fg:w="34"/><text x="27.3696%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (26 samples, 0.15%)</title><rect x="27.1659%" y="565" width="0.1505%" height="15" fill="rgb(250,47,30)" fg:x="4694" fg:w="26"/><text x="27.4159%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (45 samples, 0.26%)</title><rect x="27.1196%" y="597" width="0.2604%" height="15" fill="rgb(224,124,36)" fg:x="4686" fg:w="45"/><text x="27.3696%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.06%)</title><rect x="27.3164%" y="581" width="0.0637%" height="15" fill="rgb(246,68,51)" fg:x="4720" fg:w="11"/><text x="27.5664%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.06%)</title><rect x="27.3164%" y="565" width="0.0637%" height="15" fill="rgb(253,43,49)" fg:x="4720" fg:w="11"/><text x="27.5664%" y="575.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::len (6 samples, 0.03%)</title><rect x="27.3801%" y="597" width="0.0347%" height="15" fill="rgb(219,54,36)" fg:x="4731" fg:w="6"/><text x="27.6301%" y="607.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (167 samples, 0.97%)</title><rect x="26.5640%" y="613" width="0.9665%" height="15" fill="rgb(227,133,34)" fg:x="4590" fg:w="167"/><text x="26.8140%" y="623.50"></text></g><g><title>regex::backtrack::usize_to_u32 (20 samples, 0.12%)</title><rect x="27.4148%" y="597" width="0.1157%" height="15" fill="rgb(247,227,15)" fg:x="4737" fg:w="20"/><text x="27.6648%" y="607.50"></text></g><g><title>regex::input::&lt;impl core::cmp::PartialEq&lt;regex::input::Char&gt; for char&gt;::eq (5 samples, 0.03%)</title><rect x="27.5305%" y="613" width="0.0289%" height="15" fill="rgb(229,96,14)" fg:x="4757" fg:w="5"/><text x="27.7805%" y="623.50"></text></g><g><title>regex::input::InputAt::next_pos (2 samples, 0.01%)</title><rect x="27.5595%" y="613" width="0.0116%" height="15" fill="rgb(220,79,17)" fg:x="4762" fg:w="2"/><text x="27.8095%" y="623.50"></text></g><g><title>core::cmp::PartialOrd::le (13 samples, 0.08%)</title><rect x="27.6173%" y="597" width="0.0752%" height="15" fill="rgb(205,131,53)" fg:x="4772" fg:w="13"/><text x="27.8673%" y="607.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (577 samples, 3.34%)</title><rect x="24.3706%" y="645" width="3.3393%" height="15" fill="rgb(209,50,29)" fg:x="4211" fg:w="577"/><text x="24.6206%" y="655.50">reg..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (504 samples, 2.92%)</title><rect x="24.7931%" y="629" width="2.9168%" height="15" fill="rgb(245,86,46)" fg:x="4284" fg:w="504"/><text x="25.0431%" y="639.50">re..</text></g><g><title>regex::prog::InstRanges::matches (24 samples, 0.14%)</title><rect x="27.5710%" y="613" width="0.1389%" height="15" fill="rgb(235,66,46)" fg:x="4764" fg:w="24"/><text x="27.8210%" y="623.50"></text></g><g><title>core::cmp::PartialOrd::lt (3 samples, 0.02%)</title><rect x="27.6926%" y="597" width="0.0174%" height="15" fill="rgb(232,148,31)" fg:x="4785" fg:w="3"/><text x="27.9426%" y="607.50"></text></g><g><title>&lt;regex::input::Char as core::cmp::PartialOrd&lt;char&gt;&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="27.6926%" y="581" width="0.0174%" height="15" fill="rgb(217,149,8)" fg:x="4785" fg:w="3"/><text x="27.9426%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="27.6926%" y="565" width="0.0174%" height="15" fill="rgb(209,183,11)" fg:x="4785" fg:w="3"/><text x="27.9426%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (3 samples, 0.02%)</title><rect x="27.6926%" y="549" width="0.0174%" height="15" fill="rgb(208,55,20)" fg:x="4785" fg:w="3"/><text x="27.9426%" y="559.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="27.7273%" y="629" width="0.0231%" height="15" fill="rgb(218,39,14)" fg:x="4791" fg:w="4"/><text x="27.9773%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="27.7504%" y="629" width="0.0174%" height="15" fill="rgb(216,169,33)" fg:x="4795" fg:w="3"/><text x="28.0004%" y="639.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa (598 samples, 3.46%)</title><rect x="24.3127%" y="741" width="3.4608%" height="15" fill="rgb(233,80,24)" fg:x="4201" fg:w="598"/><text x="24.5627%" y="751.50">reg..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (598 samples, 3.46%)</title><rect x="24.3127%" y="725" width="3.4608%" height="15" fill="rgb(213,179,31)" fg:x="4201" fg:w="598"/><text x="24.5627%" y="735.50">reg..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (597 samples, 3.46%)</title><rect x="24.3185%" y="709" width="3.4551%" height="15" fill="rgb(209,19,5)" fg:x="4202" fg:w="597"/><text x="24.5685%" y="719.50">reg..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (595 samples, 3.44%)</title><rect x="24.3301%" y="693" width="3.4435%" height="15" fill="rgb(219,18,35)" fg:x="4204" fg:w="595"/><text x="24.5801%" y="703.50">reg..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (595 samples, 3.44%)</title><rect x="24.3301%" y="677" width="3.4435%" height="15" fill="rgb(209,169,16)" fg:x="4204" fg:w="595"/><text x="24.5801%" y="687.50">reg..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (590 samples, 3.41%)</title><rect x="24.3590%" y="661" width="3.4145%" height="15" fill="rgb(245,90,51)" fg:x="4209" fg:w="590"/><text x="24.6090%" y="671.50">reg..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::clear (11 samples, 0.06%)</title><rect x="27.7099%" y="645" width="0.0637%" height="15" fill="rgb(220,99,45)" fg:x="4788" fg:w="11"/><text x="27.9599%" y="655.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (608 samples, 3.52%)</title><rect x="24.2722%" y="773" width="3.5187%" height="15" fill="rgb(249,89,25)" fg:x="4194" fg:w="608"/><text x="24.5222%" y="783.50">&lt;re..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (608 samples, 3.52%)</title><rect x="24.2722%" y="757" width="3.5187%" height="15" fill="rgb(239,193,0)" fg:x="4194" fg:w="608"/><text x="24.5222%" y="767.50">&lt;re..</text></g><g><title>regex::exec::ExecNoSync::is_anchor_end_match (3 samples, 0.02%)</title><rect x="27.7736%" y="741" width="0.0174%" height="15" fill="rgb(231,126,1)" fg:x="4799" fg:w="3"/><text x="28.0236%" y="751.50"></text></g><g><title>regex::exec::ExecNoSync::is_anchor_end_match::imp (3 samples, 0.02%)</title><rect x="27.7736%" y="725" width="0.0174%" height="15" fill="rgb(243,166,3)" fg:x="4799" fg:w="3"/><text x="28.0236%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="27.7910%" y="773" width="0.0231%" height="15" fill="rgb(223,22,34)" fg:x="4802" fg:w="4"/><text x="28.0410%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (713 samples, 4.13%)</title><rect x="23.6935%" y="901" width="4.1264%" height="15" fill="rgb(251,52,51)" fg:x="4094" fg:w="713"/><text x="23.9435%" y="911.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (691 samples, 4.00%)</title><rect x="23.8208%" y="885" width="3.9991%" height="15" fill="rgb(221,165,28)" fg:x="4116" fg:w="691"/><text x="24.0708%" y="895.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (691 samples, 4.00%)</title><rect x="23.8208%" y="869" width="3.9991%" height="15" fill="rgb(218,121,47)" fg:x="4116" fg:w="691"/><text x="24.0708%" y="879.50">core..</text></g><g><title>ex16::part1::{{closure}} (691 samples, 4.00%)</title><rect x="23.8208%" y="853" width="3.9991%" height="15" fill="rgb(209,120,9)" fg:x="4116" fg:w="691"/><text x="24.0708%" y="863.50">ex16..</text></g><g><title>core::str::&lt;impl str&gt;::parse (691 samples, 4.00%)</title><rect x="23.8208%" y="837" width="3.9991%" height="15" fill="rgb(236,68,12)" fg:x="4116" fg:w="691"/><text x="24.0708%" y="847.50">core..</text></g><g><title>&lt;ex16::Rule as core::str::traits::FromStr&gt;::from_str (691 samples, 4.00%)</title><rect x="23.8208%" y="821" width="3.9991%" height="15" fill="rgb(225,194,26)" fg:x="4116" fg:w="691"/><text x="24.0708%" y="831.50">&lt;ex1..</text></g><g><title>regex::re_unicode::Regex::captures (639 samples, 3.70%)</title><rect x="24.1218%" y="805" width="3.6981%" height="15" fill="rgb(231,84,39)" fg:x="4168" fg:w="639"/><text x="24.3718%" y="815.50">rege..</text></g><g><title>regex::re_unicode::Regex::captures_read_at (613 samples, 3.55%)</title><rect x="24.2722%" y="789" width="3.5477%" height="15" fill="rgb(210,11,45)" fg:x="4194" fg:w="613"/><text x="24.5222%" y="799.50">rege..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="27.8257%" y="837" width="0.0116%" height="15" fill="rgb(224,54,52)" fg:x="4808" fg:w="2"/><text x="28.0757%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (724 samples, 4.19%)</title><rect x="23.6935%" y="933" width="4.1901%" height="15" fill="rgb(238,102,14)" fg:x="4094" fg:w="724"/><text x="23.9435%" y="943.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (724 samples, 4.19%)</title><rect x="23.6935%" y="917" width="4.1901%" height="15" fill="rgb(243,160,52)" fg:x="4094" fg:w="724"/><text x="23.9435%" y="927.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.06%)</title><rect x="27.8199%" y="901" width="0.0637%" height="15" fill="rgb(216,114,19)" fg:x="4807" fg:w="11"/><text x="28.0699%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.06%)</title><rect x="27.8199%" y="885" width="0.0637%" height="15" fill="rgb(244,166,37)" fg:x="4807" fg:w="11"/><text x="28.0699%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.06%)</title><rect x="27.8257%" y="869" width="0.0579%" height="15" fill="rgb(246,29,44)" fg:x="4808" fg:w="10"/><text x="28.0757%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.06%)</title><rect x="27.8257%" y="853" width="0.0579%" height="15" fill="rgb(215,56,53)" fg:x="4808" fg:w="10"/><text x="28.0757%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.05%)</title><rect x="27.8373%" y="837" width="0.0463%" height="15" fill="rgb(217,60,2)" fg:x="4810" fg:w="8"/><text x="28.0873%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.05%)</title><rect x="27.8373%" y="821" width="0.0463%" height="15" fill="rgb(207,26,24)" fg:x="4810" fg:w="8"/><text x="28.0873%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.05%)</title><rect x="27.8373%" y="805" width="0.0463%" height="15" fill="rgb(252,210,15)" fg:x="4810" fg:w="8"/><text x="28.0873%" y="815.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.05%)</title><rect x="27.8373%" y="789" width="0.0463%" height="15" fill="rgb(253,209,26)" fg:x="4810" fg:w="8"/><text x="28.0873%" y="799.50"></text></g><g><title>realloc (8 samples, 0.05%)</title><rect x="27.8373%" y="773" width="0.0463%" height="15" fill="rgb(238,170,14)" fg:x="4810" fg:w="8"/><text x="28.0873%" y="783.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.03%)</title><rect x="27.8488%" y="757" width="0.0347%" height="15" fill="rgb(216,178,15)" fg:x="4812" fg:w="6"/><text x="28.0988%" y="767.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="27.8546%" y="741" width="0.0289%" height="15" fill="rgb(250,197,2)" fg:x="4813" fg:w="5"/><text x="28.1046%" y="751.50"></text></g><g><title>&lt;u16 as core::num::FromStrRadixHelper&gt;::checked_mul (2 samples, 0.01%)</title><rect x="27.9009%" y="789" width="0.0116%" height="15" fill="rgb(212,70,42)" fg:x="4821" fg:w="2"/><text x="28.1509%" y="799.50"></text></g><g><title>core::num::&lt;impl u16&gt;::checked_mul (2 samples, 0.01%)</title><rect x="27.9009%" y="773" width="0.0116%" height="15" fill="rgb(227,213,9)" fg:x="4821" fg:w="2"/><text x="28.1509%" y="783.50"></text></g><g><title>core::num::&lt;impl u16&gt;::overflowing_mul (2 samples, 0.01%)</title><rect x="27.9009%" y="757" width="0.0116%" height="15" fill="rgb(245,99,25)" fg:x="4821" fg:w="2"/><text x="28.1509%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (4 samples, 0.02%)</title><rect x="27.8951%" y="837" width="0.0231%" height="15" fill="rgb(250,82,29)" fg:x="4820" fg:w="4"/><text x="28.1451%" y="847.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u16&gt;::from_str (4 samples, 0.02%)</title><rect x="27.8951%" y="821" width="0.0231%" height="15" fill="rgb(241,226,54)" fg:x="4820" fg:w="4"/><text x="28.1451%" y="831.50"></text></g><g><title>core::num::from_str_radix (4 samples, 0.02%)</title><rect x="27.8951%" y="805" width="0.0231%" height="15" fill="rgb(221,99,41)" fg:x="4820" fg:w="4"/><text x="28.1451%" y="815.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (6 samples, 0.03%)</title><rect x="27.9241%" y="821" width="0.0347%" height="15" fill="rgb(213,90,21)" fg:x="4825" fg:w="6"/><text x="28.1741%" y="831.50"></text></g><g><title>regex::re_trait::RegularExpression::locations (5 samples, 0.03%)</title><rect x="27.9299%" y="805" width="0.0289%" height="15" fill="rgb(205,208,24)" fg:x="4826" fg:w="5"/><text x="28.1799%" y="815.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 0.03%)</title><rect x="27.9299%" y="789" width="0.0289%" height="15" fill="rgb(246,31,12)" fg:x="4826" fg:w="5"/><text x="28.1799%" y="799.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (5 samples, 0.03%)</title><rect x="27.9299%" y="773" width="0.0289%" height="15" fill="rgb(213,154,6)" fg:x="4826" fg:w="5"/><text x="28.1799%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="27.9299%" y="757" width="0.0289%" height="15" fill="rgb(222,163,29)" fg:x="4826" fg:w="5"/><text x="28.1799%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="27.9356%" y="741" width="0.0231%" height="15" fill="rgb(227,201,8)" fg:x="4827" fg:w="4"/><text x="28.1856%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="27.9356%" y="725" width="0.0231%" height="15" fill="rgb(233,9,32)" fg:x="4827" fg:w="4"/><text x="28.1856%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="27.9356%" y="709" width="0.0231%" height="15" fill="rgb(217,54,24)" fg:x="4827" fg:w="4"/><text x="28.1856%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="27.9356%" y="693" width="0.0231%" height="15" fill="rgb(235,192,0)" fg:x="4827" fg:w="4"/><text x="28.1856%" y="703.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="27.9356%" y="677" width="0.0231%" height="15" fill="rgb(235,45,9)" fg:x="4827" fg:w="4"/><text x="28.1856%" y="687.50"></text></g><g><title>__libc_malloc (4 samples, 0.02%)</title><rect x="27.9356%" y="661" width="0.0231%" height="15" fill="rgb(246,42,40)" fg:x="4827" fg:w="4"/><text x="28.1856%" y="671.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (3 samples, 0.02%)</title><rect x="27.9993%" y="645" width="0.0174%" height="15" fill="rgb(248,111,24)" fg:x="4838" fg:w="3"/><text x="28.2493%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.01%)</title><rect x="28.0630%" y="629" width="0.0116%" height="15" fill="rgb(249,65,22)" fg:x="4849" fg:w="2"/><text x="28.3130%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="28.0630%" y="613" width="0.0116%" height="15" fill="rgb(238,111,51)" fg:x="4849" fg:w="2"/><text x="28.3130%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.01%)</title><rect x="28.0630%" y="597" width="0.0116%" height="15" fill="rgb(250,118,22)" fg:x="4849" fg:w="2"/><text x="28.3130%" y="607.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (12 samples, 0.07%)</title><rect x="28.0225%" y="645" width="0.0694%" height="15" fill="rgb(234,84,26)" fg:x="4842" fg:w="12"/><text x="28.2725%" y="655.50"></text></g><g><title>regex::backtrack::usize_to_u32 (3 samples, 0.02%)</title><rect x="28.0745%" y="629" width="0.0174%" height="15" fill="rgb(243,172,12)" fg:x="4851" fg:w="3"/><text x="28.3245%" y="639.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (24 samples, 0.14%)</title><rect x="27.9646%" y="677" width="0.1389%" height="15" fill="rgb(236,150,49)" fg:x="4832" fg:w="24"/><text x="28.2146%" y="687.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (23 samples, 0.13%)</title><rect x="27.9704%" y="661" width="0.1331%" height="15" fill="rgb(225,197,26)" fg:x="4833" fg:w="23"/><text x="28.2204%" y="671.50"></text></g><g><title>regex::prog::InstRanges::matches (2 samples, 0.01%)</title><rect x="28.0919%" y="645" width="0.0116%" height="15" fill="rgb(214,17,42)" fg:x="4854" fg:w="2"/><text x="28.3419%" y="655.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa (26 samples, 0.15%)</title><rect x="27.9646%" y="773" width="0.1505%" height="15" fill="rgb(224,165,40)" fg:x="4832" fg:w="26"/><text x="28.2146%" y="783.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (26 samples, 0.15%)</title><rect x="27.9646%" y="757" width="0.1505%" height="15" fill="rgb(246,100,4)" fg:x="4832" fg:w="26"/><text x="28.2146%" y="767.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (26 samples, 0.15%)</title><rect x="27.9646%" y="741" width="0.1505%" height="15" fill="rgb(222,103,0)" fg:x="4832" fg:w="26"/><text x="28.2146%" y="751.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (26 samples, 0.15%)</title><rect x="27.9646%" y="725" width="0.1505%" height="15" fill="rgb(227,189,26)" fg:x="4832" fg:w="26"/><text x="28.2146%" y="735.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (26 samples, 0.15%)</title><rect x="27.9646%" y="709" width="0.1505%" height="15" fill="rgb(214,202,17)" fg:x="4832" fg:w="26"/><text x="28.2146%" y="719.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (26 samples, 0.15%)</title><rect x="27.9646%" y="693" width="0.1505%" height="15" fill="rgb(229,111,3)" fg:x="4832" fg:w="26"/><text x="28.2146%" y="703.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::clear (2 samples, 0.01%)</title><rect x="28.1035%" y="677" width="0.0116%" height="15" fill="rgb(229,172,15)" fg:x="4856" fg:w="2"/><text x="28.3535%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (765 samples, 4.43%)</title><rect x="23.6935%" y="997" width="4.4273%" height="15" fill="rgb(230,224,35)" fg:x="4094" fg:w="765"/><text x="23.9435%" y="1007.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (765 samples, 4.43%)</title><rect x="23.6935%" y="981" width="4.4273%" height="15" fill="rgb(251,141,6)" fg:x="4094" fg:w="765"/><text x="23.9435%" y="991.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (765 samples, 4.43%)</title><rect x="23.6935%" y="965" width="4.4273%" height="15" fill="rgb(225,208,6)" fg:x="4094" fg:w="765"/><text x="23.9435%" y="975.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (765 samples, 4.43%)</title><rect x="23.6935%" y="949" width="4.4273%" height="15" fill="rgb(246,181,16)" fg:x="4094" fg:w="765"/><text x="23.9435%" y="959.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.24%)</title><rect x="27.8836%" y="933" width="0.2373%" height="15" fill="rgb(227,129,36)" fg:x="4818" fg:w="41"/><text x="28.1336%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.24%)</title><rect x="27.8836%" y="917" width="0.2373%" height="15" fill="rgb(248,117,24)" fg:x="4818" fg:w="41"/><text x="28.1336%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (41 samples, 0.24%)</title><rect x="27.8836%" y="901" width="0.2373%" height="15" fill="rgb(214,185,35)" fg:x="4818" fg:w="41"/><text x="28.1336%" y="911.50"></text></g><g><title>ex16::part1::{{closure}} (41 samples, 0.24%)</title><rect x="27.8836%" y="885" width="0.2373%" height="15" fill="rgb(236,150,34)" fg:x="4818" fg:w="41"/><text x="28.1336%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (41 samples, 0.24%)</title><rect x="27.8836%" y="869" width="0.2373%" height="15" fill="rgb(243,228,27)" fg:x="4818" fg:w="41"/><text x="28.1336%" y="879.50"></text></g><g><title>&lt;ex16::Rule as core::str::traits::FromStr&gt;::from_str (41 samples, 0.24%)</title><rect x="27.8836%" y="853" width="0.2373%" height="15" fill="rgb(245,77,44)" fg:x="4818" fg:w="41"/><text x="28.1336%" y="863.50"></text></g><g><title>regex::re_unicode::Regex::captures (35 samples, 0.20%)</title><rect x="27.9183%" y="837" width="0.2026%" height="15" fill="rgb(235,214,42)" fg:x="4824" fg:w="35"/><text x="28.1683%" y="847.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (28 samples, 0.16%)</title><rect x="27.9588%" y="821" width="0.1620%" height="15" fill="rgb(221,74,3)" fg:x="4831" fg:w="28"/><text x="28.2088%" y="831.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (28 samples, 0.16%)</title><rect x="27.9588%" y="805" width="0.1620%" height="15" fill="rgb(206,121,29)" fg:x="4831" fg:w="28"/><text x="28.2088%" y="815.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (27 samples, 0.16%)</title><rect x="27.9646%" y="789" width="0.1563%" height="15" fill="rgb(249,131,53)" fg:x="4832" fg:w="27"/><text x="28.2146%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (107 samples, 0.62%)</title><rect x="28.1208%" y="997" width="0.6192%" height="15" fill="rgb(236,170,29)" fg:x="4859" fg:w="107"/><text x="28.3708%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (107 samples, 0.62%)</title><rect x="28.1208%" y="981" width="0.6192%" height="15" fill="rgb(247,96,15)" fg:x="4859" fg:w="107"/><text x="28.3708%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="28.7401%" y="981" width="0.0347%" height="15" fill="rgb(211,210,7)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ex16::Rule]&gt; (6 samples, 0.03%)</title><rect x="28.7401%" y="965" width="0.0347%" height="15" fill="rgb(240,88,50)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;ex16::Rule&gt; (6 samples, 0.03%)</title><rect x="28.7401%" y="949" width="0.0347%" height="15" fill="rgb(209,229,26)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.03%)</title><rect x="28.7401%" y="933" width="0.0347%" height="15" fill="rgb(210,68,23)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.03%)</title><rect x="28.7401%" y="917" width="0.0347%" height="15" fill="rgb(229,180,13)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.03%)</title><rect x="28.7401%" y="901" width="0.0347%" height="15" fill="rgb(236,53,44)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="28.7401%" y="885" width="0.0347%" height="15" fill="rgb(244,214,29)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.03%)</title><rect x="28.7401%" y="869" width="0.0347%" height="15" fill="rgb(220,75,29)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.03%)</title><rect x="28.7401%" y="853" width="0.0347%" height="15" fill="rgb(214,183,37)" fg:x="4966" fg:w="6"/><text x="28.9901%" y="863.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="28.7459%" y="837" width="0.0289%" height="15" fill="rgb(239,117,29)" fg:x="4967" fg:w="5"/><text x="28.9959%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ex16::Rule&gt;&gt; (7 samples, 0.04%)</title><rect x="28.7401%" y="997" width="0.0405%" height="15" fill="rgb(237,171,35)" fg:x="4966" fg:w="7"/><text x="28.9901%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (34 samples, 0.20%)</title><rect x="28.7806%" y="997" width="0.1968%" height="15" fill="rgb(229,178,53)" fg:x="4973" fg:w="34"/><text x="29.0306%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.76%)</title><rect x="31.1997%" y="949" width="0.7639%" height="15" fill="rgb(210,102,19)" fg:x="5391" fg:w="132"/><text x="31.4497%" y="959.50"></text></g><g><title>&lt;u16 as core::num::FromStrRadixHelper&gt;::checked_add (3 samples, 0.02%)</title><rect x="31.9637%" y="949" width="0.0174%" height="15" fill="rgb(235,127,22)" fg:x="5523" fg:w="3"/><text x="32.2137%" y="959.50"></text></g><g><title>core::num::&lt;impl u16&gt;::checked_add (3 samples, 0.02%)</title><rect x="31.9637%" y="933" width="0.0174%" height="15" fill="rgb(244,31,31)" fg:x="5523" fg:w="3"/><text x="32.2137%" y="943.50"></text></g><g><title>core::num::&lt;impl u16&gt;::overflowing_add (3 samples, 0.02%)</title><rect x="31.9637%" y="917" width="0.0174%" height="15" fill="rgb(231,43,21)" fg:x="5523" fg:w="3"/><text x="32.2137%" y="927.50"></text></g><g><title>&lt;u16 as core::num::FromStrRadixHelper&gt;::checked_mul (381 samples, 2.20%)</title><rect x="31.9810%" y="949" width="2.2050%" height="15" fill="rgb(217,131,35)" fg:x="5526" fg:w="381"/><text x="32.2310%" y="959.50">&lt;..</text></g><g><title>core::num::&lt;impl u16&gt;::checked_mul (381 samples, 2.20%)</title><rect x="31.9810%" y="933" width="2.2050%" height="15" fill="rgb(221,149,4)" fg:x="5526" fg:w="381"/><text x="32.2310%" y="943.50">c..</text></g><g><title>core::num::&lt;impl u16&gt;::overflowing_mul (381 samples, 2.20%)</title><rect x="31.9810%" y="917" width="2.2050%" height="15" fill="rgb(232,170,28)" fg:x="5526" fg:w="381"/><text x="32.2310%" y="927.50">c..</text></g><g><title>core::str::&lt;impl str&gt;::parse (918 samples, 5.31%)</title><rect x="28.9774%" y="997" width="5.3128%" height="15" fill="rgb(238,56,10)" fg:x="5007" fg:w="918"/><text x="29.2274%" y="1007.50">core::s..</text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u16&gt;::from_str (916 samples, 5.30%)</title><rect x="28.9889%" y="981" width="5.3012%" height="15" fill="rgb(235,196,14)" fg:x="5009" fg:w="916"/><text x="29.2389%" y="991.50">core::..</text></g><g><title>core::num::from_str_radix (839 samples, 4.86%)</title><rect x="29.4346%" y="965" width="4.8556%" height="15" fill="rgb(216,45,48)" fg:x="5086" fg:w="839"/><text x="29.6846%" y="975.50">core::..</text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (18 samples, 0.10%)</title><rect x="34.1860%" y="949" width="0.1042%" height="15" fill="rgb(238,213,17)" fg:x="5907" fg:w="18"/><text x="34.4360%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (10 samples, 0.06%)</title><rect x="34.2323%" y="933" width="0.0579%" height="15" fill="rgb(212,13,2)" fg:x="5915" fg:w="10"/><text x="34.4823%" y="943.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1253" width="29.9381%" height="15" fill="rgb(240,114,20)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1263.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterio..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1237" width="29.9381%" height="15" fill="rgb(228,41,40)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1247.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1221" width="29.9381%" height="15" fill="rgb(244,132,35)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1231.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::colle..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1205" width="29.9381%" height="15" fill="rgb(253,189,4)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1215.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1189" width="29.9381%" height="15" fill="rgb(224,37,19)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1199.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1173" width="29.9381%" height="15" fill="rgb(235,223,18)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1183.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1157" width="29.9381%" height="15" fill="rgb(235,163,25)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1167.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1141" width="29.9381%" height="15" fill="rgb(217,145,28)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1151.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1125" width="29.9381%" height="15" fill="rgb(223,223,32)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1135.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1109" width="29.9381%" height="15" fill="rgb(227,189,39)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1119.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::{{closure}} (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1093" width="29.9381%" height="15" fill="rgb(248,10,22)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1103.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterio..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1077" width="29.9381%" height="15" fill="rgb(248,46,39)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1087.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::b..</text></g><g><title>bench_ex16::criterion_benchmark::{{closure}} (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1061" width="29.9381%" height="15" fill="rgb(248,113,48)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1071.50">bench_ex16::criterion_benchmark::{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1045" width="29.9381%" height="15" fill="rgb(245,16,25)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1055.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>bench_ex16::criterion_benchmark::{{closure}}::{{closure}} (5,173 samples, 29.94%)</title><rect x="4.3753%" y="1029" width="29.9381%" height="15" fill="rgb(249,152,16)" fg:x="756" fg:w="5173"/><text x="4.6253%" y="1039.50">bench_ex16::criterion_benchmark::{{closure}}::{{..</text></g><g><title>ex16::part1 (5,172 samples, 29.93%)</title><rect x="4.3810%" y="1013" width="29.9323%" height="15" fill="rgb(250,16,1)" fg:x="757" fg:w="5172"/><text x="4.6310%" y="1023.50">ex16::part1</text></g><g><title>core::str::&lt;impl str&gt;::split (4 samples, 0.02%)</title><rect x="34.2902%" y="997" width="0.0231%" height="15" fill="rgb(249,138,3)" fg:x="5925" fg:w="4"/><text x="34.5402%" y="1007.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (4 samples, 0.02%)</title><rect x="34.2902%" y="981" width="0.0231%" height="15" fill="rgb(227,71,41)" fg:x="5925" fg:w="4"/><text x="34.5402%" y="991.50"></text></g><g><title>core::str::pattern::StrSearcher::new (4 samples, 0.02%)</title><rect x="34.2902%" y="965" width="0.0231%" height="15" fill="rgb(209,184,23)" fg:x="5925" fg:w="4"/><text x="34.5402%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.08%)</title><rect x="36.1769%" y="1061" width="0.0810%" height="15" fill="rgb(223,215,31)" fg:x="6251" fg:w="14"/><text x="36.4269%" y="1071.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (14 samples, 0.08%)</title><rect x="36.1769%" y="1045" width="0.0810%" height="15" fill="rgb(210,146,28)" fg:x="6251" fg:w="14"/><text x="36.4269%" y="1055.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 0.08%)</title><rect x="36.1769%" y="1029" width="0.0810%" height="15" fill="rgb(209,183,41)" fg:x="6251" fg:w="14"/><text x="36.4269%" y="1039.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.07%)</title><rect x="36.1884%" y="1013" width="0.0694%" height="15" fill="rgb(209,224,45)" fg:x="6253" fg:w="12"/><text x="36.4384%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (6 samples, 0.03%)</title><rect x="36.2579%" y="1061" width="0.0347%" height="15" fill="rgb(224,209,51)" fg:x="6265" fg:w="6"/><text x="36.5079%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (6 samples, 0.03%)</title><rect x="36.2579%" y="1045" width="0.0347%" height="15" fill="rgb(223,17,39)" fg:x="6265" fg:w="6"/><text x="36.5079%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.17%)</title><rect x="37.1144%" y="1013" width="0.1678%" height="15" fill="rgb(234,204,37)" fg:x="6413" fg:w="29"/><text x="37.3644%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (65 samples, 0.38%)</title><rect x="36.9408%" y="1029" width="0.3762%" height="15" fill="rgb(236,120,5)" fg:x="6383" fg:w="65"/><text x="37.1908%" y="1039.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (6 samples, 0.03%)</title><rect x="37.2823%" y="1013" width="0.0347%" height="15" fill="rgb(248,97,27)" fg:x="6442" fg:w="6"/><text x="37.5323%" y="1023.50"></text></g><g><title>core::cmp::min (4 samples, 0.02%)</title><rect x="37.3170%" y="1029" width="0.0231%" height="15" fill="rgb(240,66,17)" fg:x="6448" fg:w="4"/><text x="37.5670%" y="1039.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.02%)</title><rect x="37.3170%" y="1013" width="0.0231%" height="15" fill="rgb(210,79,3)" fg:x="6448" fg:w="4"/><text x="37.5670%" y="1023.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.02%)</title><rect x="37.3170%" y="997" width="0.0231%" height="15" fill="rgb(214,176,27)" fg:x="6448" fg:w="4"/><text x="37.5670%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.12%)</title><rect x="37.3401%" y="1029" width="0.1157%" height="15" fill="rgb(235,185,3)" fg:x="6452" fg:w="20"/><text x="37.5901%" y="1039.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (27 samples, 0.16%)</title><rect x="37.4617%" y="1029" width="0.1563%" height="15" fill="rgb(227,24,12)" fg:x="6473" fg:w="27"/><text x="37.7117%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (8 samples, 0.05%)</title><rect x="37.5716%" y="1013" width="0.0463%" height="15" fill="rgb(252,169,48)" fg:x="6492" fg:w="8"/><text x="37.8216%" y="1023.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (291 samples, 1.68%)</title><rect x="35.9685%" y="1109" width="1.6841%" height="15" fill="rgb(212,65,1)" fg:x="6215" fg:w="291"/><text x="36.2185%" y="1119.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (287 samples, 1.66%)</title><rect x="35.9917%" y="1093" width="1.6610%" height="15" fill="rgb(242,39,24)" fg:x="6219" fg:w="287"/><text x="36.2417%" y="1103.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (265 samples, 1.53%)</title><rect x="36.1190%" y="1077" width="1.5337%" height="15" fill="rgb(249,32,23)" fg:x="6241" fg:w="265"/><text x="36.3690%" y="1087.50"></text></g><g><title>core::slice::memchr::memchr (235 samples, 1.36%)</title><rect x="36.2926%" y="1061" width="1.3600%" height="15" fill="rgb(251,195,23)" fg:x="6271" fg:w="235"/><text x="36.5426%" y="1071.50"></text></g><g><title>core::slice::memchr::memchr_general_case (233 samples, 1.35%)</title><rect x="36.3042%" y="1045" width="1.3485%" height="15" fill="rgb(236,174,8)" fg:x="6273" fg:w="233"/><text x="36.5542%" y="1055.50"></text></g><g><title>core::slice::memchr::repeat_byte (6 samples, 0.03%)</title><rect x="37.6179%" y="1029" width="0.0347%" height="15" fill="rgb(220,197,8)" fg:x="6500" fg:w="6"/><text x="37.8679%" y="1039.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (303 samples, 1.75%)</title><rect x="35.9685%" y="1141" width="1.7536%" height="15" fill="rgb(240,108,37)" fg:x="6215" fg:w="303"/><text x="36.2185%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (303 samples, 1.75%)</title><rect x="35.9685%" y="1125" width="1.7536%" height="15" fill="rgb(232,176,24)" fg:x="6215" fg:w="303"/><text x="36.2185%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.07%)</title><rect x="37.6526%" y="1109" width="0.0694%" height="15" fill="rgb(243,35,29)" fg:x="6506" fg:w="12"/><text x="37.9026%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.02%)</title><rect x="37.7047%" y="1093" width="0.0174%" height="15" fill="rgb(210,37,18)" fg:x="6515" fg:w="3"/><text x="37.9547%" y="1103.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (3 samples, 0.02%)</title><rect x="37.7047%" y="1077" width="0.0174%" height="15" fill="rgb(224,184,40)" fg:x="6515" fg:w="3"/><text x="37.9547%" y="1087.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (3 samples, 0.02%)</title><rect x="37.7047%" y="1061" width="0.0174%" height="15" fill="rgb(236,39,29)" fg:x="6515" fg:w="3"/><text x="37.9547%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (309 samples, 1.79%)</title><rect x="35.9396%" y="1157" width="1.7883%" height="15" fill="rgb(232,48,39)" fg:x="6210" fg:w="309"/><text x="36.1896%" y="1167.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="37.8089%" y="1141" width="0.0231%" height="15" fill="rgb(236,34,42)" fg:x="6533" fg:w="4"/><text x="38.0589%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (470 samples, 2.72%)</title><rect x="37.7279%" y="1157" width="2.7201%" height="15" fill="rgb(243,106,37)" fg:x="6519" fg:w="470"/><text x="37.9779%" y="1167.50">&lt;c..</text></g><g><title>ex16::part1::{{closure}} (452 samples, 2.62%)</title><rect x="37.8321%" y="1141" width="2.6159%" height="15" fill="rgb(218,96,6)" fg:x="6537" fg:w="452"/><text x="38.0821%" y="1151.50">ex..</text></g><g><title>ex16::Rule::contains (452 samples, 2.62%)</title><rect x="37.8321%" y="1125" width="2.6159%" height="15" fill="rgb(235,130,12)" fg:x="6537" fg:w="452"/><text x="38.0821%" y="1135.50">ex..</text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (452 samples, 2.62%)</title><rect x="37.8321%" y="1109" width="2.6159%" height="15" fill="rgb(231,95,0)" fg:x="6537" fg:w="452"/><text x="38.0821%" y="1119.50">co..</text></g><g><title>core::ops::range::RangeBounds::contains (452 samples, 2.62%)</title><rect x="37.8321%" y="1093" width="2.6159%" height="15" fill="rgb(228,12,23)" fg:x="6537" fg:w="452"/><text x="38.0821%" y="1103.50">co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (238 samples, 1.38%)</title><rect x="39.0705%" y="1077" width="1.3774%" height="15" fill="rgb(216,12,1)" fg:x="6751" fg:w="238"/><text x="39.3205%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u16&gt;::le (238 samples, 1.38%)</title><rect x="39.0705%" y="1061" width="1.3774%" height="15" fill="rgb(219,59,3)" fg:x="6751" fg:w="238"/><text x="39.3205%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (329 samples, 1.90%)</title><rect x="46.3974%" y="1109" width="1.9040%" height="15" fill="rgb(215,208,46)" fg:x="8017" fg:w="329"/><text x="46.6474%" y="1119.50">c..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (329 samples, 1.90%)</title><rect x="46.3974%" y="1093" width="1.9040%" height="15" fill="rgb(254,224,29)" fg:x="8017" fg:w="329"/><text x="46.6474%" y="1103.50">c..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (329 samples, 1.90%)</title><rect x="46.3974%" y="1077" width="1.9040%" height="15" fill="rgb(232,14,29)" fg:x="8017" fg:w="329"/><text x="46.6474%" y="1087.50">&lt;..</text></g><g><title>[libc-2.31.so] (266 samples, 1.54%)</title><rect x="46.7620%" y="1061" width="1.5394%" height="15" fill="rgb(208,45,52)" fg:x="8080" fg:w="266"/><text x="47.0120%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (92 samples, 0.53%)</title><rect x="48.3014%" y="1109" width="0.5324%" height="15" fill="rgb(234,191,28)" fg:x="8346" fg:w="92"/><text x="48.5514%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (92 samples, 0.53%)</title><rect x="48.3014%" y="1093" width="0.5324%" height="15" fill="rgb(244,67,43)" fg:x="8346" fg:w="92"/><text x="48.5514%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.06%)</title><rect x="49.5052%" y="1077" width="0.0579%" height="15" fill="rgb(236,189,24)" fg:x="8554" fg:w="10"/><text x="49.7552%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (81 samples, 0.47%)</title><rect x="49.1001%" y="1093" width="0.4688%" height="15" fill="rgb(239,214,33)" fg:x="8484" fg:w="81"/><text x="49.3501%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.26%)</title><rect x="52.5783%" y="1061" width="0.2604%" height="15" fill="rgb(226,176,41)" fg:x="9085" fg:w="45"/><text x="52.8283%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (225 samples, 1.30%)</title><rect x="51.5597%" y="1077" width="1.3022%" height="15" fill="rgb(248,47,8)" fg:x="8909" fg:w="225"/><text x="51.8097%" y="1087.50"></text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (4 samples, 0.02%)</title><rect x="52.8387%" y="1061" width="0.0231%" height="15" fill="rgb(218,81,44)" fg:x="9130" fg:w="4"/><text x="53.0887%" y="1071.50"></text></g><g><title>core::cmp::min (42 samples, 0.24%)</title><rect x="52.8619%" y="1077" width="0.2431%" height="15" fill="rgb(213,98,6)" fg:x="9134" fg:w="42"/><text x="53.1119%" y="1087.50"></text></g><g><title>core::cmp::Ord::min (42 samples, 0.24%)</title><rect x="52.8619%" y="1061" width="0.2431%" height="15" fill="rgb(222,85,22)" fg:x="9134" fg:w="42"/><text x="53.1119%" y="1071.50"></text></g><g><title>core::cmp::min_by (42 samples, 0.24%)</title><rect x="52.8619%" y="1045" width="0.2431%" height="15" fill="rgb(239,46,39)" fg:x="9134" fg:w="42"/><text x="53.1119%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.20%)</title><rect x="53.1049%" y="1077" width="0.1968%" height="15" fill="rgb(237,12,29)" fg:x="9176" fg:w="34"/><text x="53.3549%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (9 samples, 0.05%)</title><rect x="53.3017%" y="1077" width="0.0521%" height="15" fill="rgb(214,77,8)" fg:x="9210" fg:w="9"/><text x="53.5517%" y="1087.50"></text></g><g><title>core::ptr::align_offset (9 samples, 0.05%)</title><rect x="53.3017%" y="1061" width="0.0521%" height="15" fill="rgb(217,168,37)" fg:x="9210" fg:w="9"/><text x="53.5517%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.07%)</title><rect x="53.3538%" y="1077" width="0.0694%" height="15" fill="rgb(221,217,23)" fg:x="9219" fg:w="12"/><text x="53.6038%" y="1087.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.07%)</title><rect x="53.3538%" y="1061" width="0.0694%" height="15" fill="rgb(243,229,36)" fg:x="9219" fg:w="12"/><text x="53.6038%" y="1071.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (50 samples, 0.29%)</title><rect x="53.4232%" y="1077" width="0.2894%" height="15" fill="rgb(251,163,40)" fg:x="9231" fg:w="50"/><text x="53.6732%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (27 samples, 0.16%)</title><rect x="53.5563%" y="1061" width="0.1563%" height="15" fill="rgb(237,222,12)" fg:x="9254" fg:w="27"/><text x="53.8063%" y="1071.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,600 samples, 9.26%)</title><rect x="44.5801%" y="1125" width="9.2598%" height="15" fill="rgb(248,132,6)" fg:x="7703" fg:w="1600"/><text x="44.8301%" y="1135.50">&lt;core::str::p..</text></g><g><title>core::slice::memchr::memchr (865 samples, 5.01%)</title><rect x="48.8338%" y="1109" width="5.0061%" height="15" fill="rgb(227,167,50)" fg:x="8438" fg:w="865"/><text x="49.0838%" y="1119.50">core::..</text></g><g><title>core::slice::memchr::memchr_general_case (738 samples, 4.27%)</title><rect x="49.5688%" y="1093" width="4.2711%" height="15" fill="rgb(242,84,37)" fg:x="8565" fg:w="738"/><text x="49.8188%" y="1103.50">core:..</text></g><g><title>core::slice::memchr::repeat_byte (22 samples, 0.13%)</title><rect x="53.7126%" y="1077" width="0.1273%" height="15" fill="rgb(212,4,50)" fg:x="9281" fg:w="22"/><text x="53.9626%" y="1087.50"></text></g><g><title>core::cmp::max (10 samples, 0.06%)</title><rect x="55.0148%" y="1093" width="0.0579%" height="15" fill="rgb(230,228,32)" fg:x="9506" fg:w="10"/><text x="55.2648%" y="1103.50"></text></g><g><title>core::cmp::Ord::max (10 samples, 0.06%)</title><rect x="55.0148%" y="1077" width="0.0579%" height="15" fill="rgb(248,217,23)" fg:x="9506" fg:w="10"/><text x="55.2648%" y="1087.50"></text></g><g><title>core::cmp::max_by (10 samples, 0.06%)</title><rect x="55.0148%" y="1061" width="0.0579%" height="15" fill="rgb(238,197,32)" fg:x="9506" fg:w="10"/><text x="55.2648%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (42 samples, 0.24%)</title><rect x="55.0726%" y="1093" width="0.2431%" height="15" fill="rgb(236,106,1)" fg:x="9516" fg:w="42"/><text x="55.3226%" y="1103.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (42 samples, 0.24%)</title><rect x="55.0726%" y="1077" width="0.2431%" height="15" fill="rgb(219,228,13)" fg:x="9516" fg:w="42"/><text x="55.3226%" y="1087.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (320 samples, 1.85%)</title><rect x="53.8399%" y="1125" width="1.8520%" height="15" fill="rgb(238,30,35)" fg:x="9303" fg:w="320"/><text x="54.0899%" y="1135.50">&lt;..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (320 samples, 1.85%)</title><rect x="53.8399%" y="1109" width="1.8520%" height="15" fill="rgb(236,70,23)" fg:x="9303" fg:w="320"/><text x="54.0899%" y="1119.50">c..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (65 samples, 0.38%)</title><rect x="55.3157%" y="1093" width="0.3762%" height="15" fill="rgb(249,104,48)" fg:x="9558" fg:w="65"/><text x="55.5657%" y="1103.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,645 samples, 15.31%)</title><rect x="40.4479%" y="1157" width="15.3076%" height="15" fill="rgb(254,117,50)" fg:x="6989" fg:w="2645"/><text x="40.6979%" y="1167.50">&lt;core::str::iter::Split..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2,601 samples, 15.05%)</title><rect x="40.7026%" y="1141" width="15.0530%" height="15" fill="rgb(223,152,4)" fg:x="7033" fg:w="2601"/><text x="40.9526%" y="1151.50">core::str::iter::SplitI..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (10 samples, 0.06%)</title><rect x="55.6977%" y="1125" width="0.0579%" height="15" fill="rgb(245,6,2)" fg:x="9624" fg:w="10"/><text x="55.9477%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="55.7845%" y="965" width="0.0116%" height="15" fill="rgb(249,150,24)" fg:x="9639" fg:w="2"/><text x="56.0345%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="55.7845%" y="949" width="0.0116%" height="15" fill="rgb(228,185,42)" fg:x="9639" fg:w="2"/><text x="56.0345%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="55.7845%" y="933" width="0.0116%" height="15" fill="rgb(226,39,33)" fg:x="9639" fg:w="2"/><text x="56.0345%" y="943.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="55.7845%" y="917" width="0.0116%" height="15" fill="rgb(221,166,19)" fg:x="9639" fg:w="2"/><text x="56.0345%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.02%)</title><rect x="55.8192%" y="933" width="0.0174%" height="15" fill="rgb(209,109,2)" fg:x="9645" fg:w="3"/><text x="56.0692%" y="943.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.08%)</title><rect x="55.7671%" y="1013" width="0.0752%" height="15" fill="rgb(252,216,26)" fg:x="9636" fg:w="13"/><text x="56.0171%" y="1023.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (13 samples, 0.08%)</title><rect x="55.7671%" y="997" width="0.0752%" height="15" fill="rgb(227,173,36)" fg:x="9636" fg:w="13"/><text x="56.0171%" y="1007.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (13 samples, 0.08%)</title><rect x="55.7671%" y="981" width="0.0752%" height="15" fill="rgb(209,90,7)" fg:x="9636" fg:w="13"/><text x="56.0171%" y="991.50"></text></g><g><title>core::slice::memchr::memchr (7 samples, 0.04%)</title><rect x="55.8018%" y="965" width="0.0405%" height="15" fill="rgb(250,194,11)" fg:x="9642" fg:w="7"/><text x="56.0518%" y="975.50"></text></g><g><title>core::slice::memchr::memchr_general_case (7 samples, 0.04%)</title><rect x="55.8018%" y="949" width="0.0405%" height="15" fill="rgb(220,72,50)" fg:x="9642" fg:w="7"/><text x="56.0518%" y="959.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.08%)</title><rect x="55.7671%" y="1045" width="0.0810%" height="15" fill="rgb(222,106,48)" fg:x="9636" fg:w="14"/><text x="56.0171%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.08%)</title><rect x="55.7671%" y="1029" width="0.0810%" height="15" fill="rgb(216,220,45)" fg:x="9636" fg:w="14"/><text x="56.0171%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.06%)</title><rect x="55.8771%" y="853" width="0.0637%" height="15" fill="rgb(234,112,18)" fg:x="9655" fg:w="11"/><text x="56.1271%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.06%)</title><rect x="55.8771%" y="837" width="0.0637%" height="15" fill="rgb(206,179,9)" fg:x="9655" fg:w="11"/><text x="56.1271%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.06%)</title><rect x="55.8771%" y="821" width="0.0637%" height="15" fill="rgb(215,115,40)" fg:x="9655" fg:w="11"/><text x="56.1271%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.06%)</title><rect x="55.8771%" y="805" width="0.0637%" height="15" fill="rgb(222,69,34)" fg:x="9655" fg:w="11"/><text x="56.1271%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.06%)</title><rect x="55.8771%" y="789" width="0.0637%" height="15" fill="rgb(209,161,10)" fg:x="9655" fg:w="11"/><text x="56.1271%" y="799.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.06%)</title><rect x="55.8771%" y="773" width="0.0637%" height="15" fill="rgb(217,6,38)" fg:x="9655" fg:w="11"/><text x="56.1271%" y="783.50"></text></g><g><title>__libc_malloc (11 samples, 0.06%)</title><rect x="55.8771%" y="757" width="0.0637%" height="15" fill="rgb(229,229,48)" fg:x="9655" fg:w="11"/><text x="56.1271%" y="767.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="55.9176%" y="741" width="0.0231%" height="15" fill="rgb(225,21,28)" fg:x="9662" fg:w="4"/><text x="56.1676%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (15 samples, 0.09%)</title><rect x="55.8771%" y="965" width="0.0868%" height="15" fill="rgb(206,33,13)" fg:x="9655" fg:w="15"/><text x="56.1271%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (15 samples, 0.09%)</title><rect x="55.8771%" y="949" width="0.0868%" height="15" fill="rgb(242,178,17)" fg:x="9655" fg:w="15"/><text x="56.1271%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (15 samples, 0.09%)</title><rect x="55.8771%" y="933" width="0.0868%" height="15" fill="rgb(220,162,5)" fg:x="9655" fg:w="15"/><text x="56.1271%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.09%)</title><rect x="55.8771%" y="917" width="0.0868%" height="15" fill="rgb(210,33,43)" fg:x="9655" fg:w="15"/><text x="56.1271%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.09%)</title><rect x="55.8771%" y="901" width="0.0868%" height="15" fill="rgb(216,116,54)" fg:x="9655" fg:w="15"/><text x="56.1271%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.09%)</title><rect x="55.8771%" y="885" width="0.0868%" height="15" fill="rgb(249,92,24)" fg:x="9655" fg:w="15"/><text x="56.1271%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.09%)</title><rect x="55.8771%" y="869" width="0.0868%" height="15" fill="rgb(231,189,14)" fg:x="9655" fg:w="15"/><text x="56.1271%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="55.9407%" y="853" width="0.0231%" height="15" fill="rgb(230,8,41)" fg:x="9666" fg:w="4"/><text x="56.1907%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="55.9407%" y="837" width="0.0231%" height="15" fill="rgb(249,7,27)" fg:x="9666" fg:w="4"/><text x="56.1907%" y="847.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="55.9465%" y="821" width="0.0174%" height="15" fill="rgb(232,86,5)" fg:x="9667" fg:w="3"/><text x="56.1965%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.03%)</title><rect x="55.9928%" y="949" width="0.0289%" height="15" fill="rgb(224,175,18)" fg:x="9675" fg:w="5"/><text x="56.2428%" y="959.50"></text></g><g><title>&lt;regex::re_unicode::Captures as core::ops::index::Index&lt;usize&gt;&gt;::index::{{closure}} (5 samples, 0.03%)</title><rect x="55.9928%" y="933" width="0.0289%" height="15" fill="rgb(220,129,12)" fg:x="9675" fg:w="5"/><text x="56.2428%" y="943.50"></text></g><g><title>regex::re_unicode::Match::as_str (5 samples, 0.03%)</title><rect x="55.9928%" y="917" width="0.0289%" height="15" fill="rgb(210,19,36)" fg:x="9675" fg:w="5"/><text x="56.2428%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (5 samples, 0.03%)</title><rect x="55.9928%" y="901" width="0.0289%" height="15" fill="rgb(219,96,14)" fg:x="9675" fg:w="5"/><text x="56.2428%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (5 samples, 0.03%)</title><rect x="55.9928%" y="885" width="0.0289%" height="15" fill="rgb(249,106,1)" fg:x="9675" fg:w="5"/><text x="56.2428%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (5 samples, 0.03%)</title><rect x="55.9928%" y="869" width="0.0289%" height="15" fill="rgb(249,155,20)" fg:x="9675" fg:w="5"/><text x="56.2428%" y="879.50"></text></g><g><title>&lt;regex::re_unicode::Captures as core::ops::index::Index&lt;usize&gt;&gt;::index (20 samples, 0.12%)</title><rect x="55.9639%" y="965" width="0.1157%" height="15" fill="rgb(244,168,9)" fg:x="9670" fg:w="20"/><text x="56.2139%" y="975.50"></text></g><g><title>regex::re_unicode::Captures::get (10 samples, 0.06%)</title><rect x="56.0218%" y="949" width="0.0579%" height="15" fill="rgb(216,23,50)" fg:x="9680" fg:w="10"/><text x="56.2718%" y="959.50"></text></g><g><title>regex::re_trait::Locations::pos (10 samples, 0.06%)</title><rect x="56.0218%" y="933" width="0.0579%" height="15" fill="rgb(224,219,20)" fg:x="9680" fg:w="10"/><text x="56.2718%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.01%)</title><rect x="56.0681%" y="917" width="0.0116%" height="15" fill="rgb(222,156,15)" fg:x="9688" fg:w="2"/><text x="56.3181%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.01%)</title><rect x="56.0681%" y="901" width="0.0116%" height="15" fill="rgb(231,97,17)" fg:x="9688" fg:w="2"/><text x="56.3181%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (7 samples, 0.04%)</title><rect x="56.0854%" y="965" width="0.0405%" height="15" fill="rgb(218,70,48)" fg:x="9691" fg:w="7"/><text x="56.3354%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="56.1259%" y="949" width="0.0174%" height="15" fill="rgb(212,196,52)" fg:x="9698" fg:w="3"/><text x="56.3759%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="56.1259%" y="933" width="0.0174%" height="15" fill="rgb(243,203,18)" fg:x="9698" fg:w="3"/><text x="56.3759%" y="943.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.05%)</title><rect x="56.1433%" y="853" width="0.0521%" height="15" fill="rgb(252,125,41)" fg:x="9701" fg:w="9"/><text x="56.3933%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.06%)</title><rect x="56.1433%" y="885" width="0.0637%" height="15" fill="rgb(223,180,33)" fg:x="9701" fg:w="11"/><text x="56.3933%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.06%)</title><rect x="56.1433%" y="869" width="0.0637%" height="15" fill="rgb(254,159,46)" fg:x="9701" fg:w="11"/><text x="56.3933%" y="879.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="56.1954%" y="853" width="0.0116%" height="15" fill="rgb(254,38,10)" fg:x="9710" fg:w="2"/><text x="56.4454%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_unicode::Captures&gt; (15 samples, 0.09%)</title><rect x="56.1259%" y="965" width="0.0868%" height="15" fill="rgb(208,217,32)" fg:x="9698" fg:w="15"/><text x="56.3759%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_trait::Locations&gt; (12 samples, 0.07%)</title><rect x="56.1433%" y="949" width="0.0694%" height="15" fill="rgb(221,120,13)" fg:x="9701" fg:w="12"/><text x="56.3933%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (12 samples, 0.07%)</title><rect x="56.1433%" y="933" width="0.0694%" height="15" fill="rgb(246,54,52)" fg:x="9701" fg:w="12"/><text x="56.3933%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (12 samples, 0.07%)</title><rect x="56.1433%" y="917" width="0.0694%" height="15" fill="rgb(242,34,25)" fg:x="9701" fg:w="12"/><text x="56.3933%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.07%)</title><rect x="56.1433%" y="901" width="0.0694%" height="15" fill="rgb(247,209,9)" fg:x="9701" fg:w="12"/><text x="56.3933%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (6 samples, 0.03%)</title><rect x="56.2185%" y="965" width="0.0347%" height="15" fill="rgb(228,71,26)" fg:x="9714" fg:w="6"/><text x="56.4685%" y="975.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u16&gt;::from_str (6 samples, 0.03%)</title><rect x="56.2185%" y="949" width="0.0347%" height="15" fill="rgb(222,145,49)" fg:x="9714" fg:w="6"/><text x="56.4685%" y="959.50"></text></g><g><title>core::num::from_str_radix (4 samples, 0.02%)</title><rect x="56.2301%" y="933" width="0.0231%" height="15" fill="rgb(218,121,17)" fg:x="9716" fg:w="4"/><text x="56.4801%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="56.2764%" y="917" width="0.0289%" height="15" fill="rgb(244,50,7)" fg:x="9724" fg:w="5"/><text x="56.5264%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.03%)</title><rect x="56.2764%" y="949" width="0.0347%" height="15" fill="rgb(246,229,37)" fg:x="9724" fg:w="6"/><text x="56.5264%" y="959.50"></text></g><g><title>regex::re_unicode::Regex::captures::{{closure}} (6 samples, 0.03%)</title><rect x="56.2764%" y="933" width="0.0347%" height="15" fill="rgb(225,18,5)" fg:x="9724" fg:w="6"/><text x="56.5264%" y="943.50"></text></g><g><title>regex::exec::Exec::searcher_str (3 samples, 0.02%)</title><rect x="56.3285%" y="933" width="0.0174%" height="15" fill="rgb(213,204,8)" fg:x="9733" fg:w="3"/><text x="56.5785%" y="943.50"></text></g><g><title>regex::exec::Exec::searcher (2 samples, 0.01%)</title><rect x="56.3343%" y="917" width="0.0116%" height="15" fill="rgb(238,103,6)" fg:x="9734" fg:w="2"/><text x="56.5843%" y="927.50"></text></g><g><title>regex::pool::Pool&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="56.3343%" y="901" width="0.0116%" height="15" fill="rgb(222,25,35)" fg:x="9734" fg:w="2"/><text x="56.5843%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="56.3343%" y="885" width="0.0116%" height="15" fill="rgb(213,203,35)" fg:x="9734" fg:w="2"/><text x="56.5843%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="56.3343%" y="869" width="0.0116%" height="15" fill="rgb(221,79,53)" fg:x="9734" fg:w="2"/><text x="56.5843%" y="879.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="56.3516%" y="869" width="0.0116%" height="15" fill="rgb(243,200,35)" fg:x="9737" fg:w="2"/><text x="56.6016%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="56.3516%" y="853" width="0.0116%" height="15" fill="rgb(248,60,25)" fg:x="9737" fg:w="2"/><text x="56.6016%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (8 samples, 0.05%)</title><rect x="56.3459%" y="885" width="0.0463%" height="15" fill="rgb(227,53,46)" fg:x="9736" fg:w="8"/><text x="56.5959%" y="895.50"></text></g><g><title>core::ptr::write (5 samples, 0.03%)</title><rect x="56.3632%" y="869" width="0.0289%" height="15" fill="rgb(216,120,32)" fg:x="9739" fg:w="5"/><text x="56.6132%" y="879.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="56.3979%" y="789" width="0.0116%" height="15" fill="rgb(220,134,1)" fg:x="9745" fg:w="2"/><text x="56.6479%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="56.3979%" y="837" width="0.0174%" height="15" fill="rgb(237,168,5)" fg:x="9745" fg:w="3"/><text x="56.6479%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="56.3979%" y="821" width="0.0174%" height="15" fill="rgb(231,100,33)" fg:x="9745" fg:w="3"/><text x="56.6479%" y="831.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="56.3979%" y="805" width="0.0174%" height="15" fill="rgb(236,177,47)" fg:x="9745" fg:w="3"/><text x="56.6479%" y="815.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (19 samples, 0.11%)</title><rect x="56.3111%" y="949" width="0.1100%" height="15" fill="rgb(235,7,49)" fg:x="9730" fg:w="19"/><text x="56.5611%" y="959.50"></text></g><g><title>regex::re_trait::RegularExpression::locations (13 samples, 0.08%)</title><rect x="56.3459%" y="933" width="0.0752%" height="15" fill="rgb(232,119,22)" fg:x="9736" fg:w="13"/><text x="56.5959%" y="943.50"></text></g><g><title>alloc::vec::from_elem (13 samples, 0.08%)</title><rect x="56.3459%" y="917" width="0.0752%" height="15" fill="rgb(254,73,53)" fg:x="9736" fg:w="13"/><text x="56.5959%" y="927.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (13 samples, 0.08%)</title><rect x="56.3459%" y="901" width="0.0752%" height="15" fill="rgb(251,35,20)" fg:x="9736" fg:w="13"/><text x="56.5959%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="56.3922%" y="885" width="0.0289%" height="15" fill="rgb(241,119,20)" fg:x="9744" fg:w="5"/><text x="56.6422%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="56.3922%" y="869" width="0.0289%" height="15" fill="rgb(207,102,14)" fg:x="9744" fg:w="5"/><text x="56.6422%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.03%)</title><rect x="56.3922%" y="853" width="0.0289%" height="15" fill="rgb(248,201,50)" fg:x="9744" fg:w="5"/><text x="56.6422%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="56.4616%" y="901" width="0.0174%" height="15" fill="rgb(222,185,44)" fg:x="9756" fg:w="3"/><text x="56.7116%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (28 samples, 0.16%)</title><rect x="56.7336%" y="789" width="0.1620%" height="15" fill="rgb(218,107,18)" fg:x="9803" fg:w="28"/><text x="56.9836%" y="799.50"></text></g><g><title>core::ptr::read (14 samples, 0.08%)</title><rect x="56.8146%" y="773" width="0.0810%" height="15" fill="rgb(237,177,39)" fg:x="9817" fg:w="14"/><text x="57.0646%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="56.8957%" y="789" width="0.0174%" height="15" fill="rgb(246,69,6)" fg:x="9831" fg:w="3"/><text x="57.1457%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="58.0589%" y="757" width="0.0289%" height="15" fill="rgb(234,208,37)" fg:x="10032" fg:w="5"/><text x="58.3089%" y="767.50"></text></g><g><title>&lt;regex::input::Char as core::convert::From&lt;core::option::Option&lt;char&gt;&gt;&gt;::from (5 samples, 0.03%)</title><rect x="58.0589%" y="741" width="0.0289%" height="15" fill="rgb(225,4,6)" fg:x="10032" fg:w="5"/><text x="58.3089%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (5 samples, 0.03%)</title><rect x="58.0589%" y="725" width="0.0289%" height="15" fill="rgb(233,45,0)" fg:x="10032" fg:w="5"/><text x="58.3089%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.02%)</title><rect x="58.0936%" y="757" width="0.0231%" height="15" fill="rgb(226,136,5)" fg:x="10038" fg:w="4"/><text x="58.3436%" y="767.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.02%)</title><rect x="58.0936%" y="741" width="0.0231%" height="15" fill="rgb(211,91,47)" fg:x="10038" fg:w="4"/><text x="58.3436%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.02%)</title><rect x="58.0936%" y="725" width="0.0231%" height="15" fill="rgb(242,88,51)" fg:x="10038" fg:w="4"/><text x="58.3436%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.02%)</title><rect x="58.0936%" y="709" width="0.0231%" height="15" fill="rgb(230,91,28)" fg:x="10038" fg:w="4"/><text x="58.3436%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.02%)</title><rect x="58.0936%" y="693" width="0.0231%" height="15" fill="rgb(254,186,29)" fg:x="10038" fg:w="4"/><text x="58.3436%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.02%)</title><rect x="58.0936%" y="677" width="0.0231%" height="15" fill="rgb(238,6,4)" fg:x="10038" fg:w="4"/><text x="58.3436%" y="687.50"></text></g><g><title>regex::input::Char::len_utf8 (7 samples, 0.04%)</title><rect x="58.1168%" y="757" width="0.0405%" height="15" fill="rgb(221,151,16)" fg:x="10042" fg:w="7"/><text x="58.3668%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (7 samples, 0.04%)</title><rect x="58.1168%" y="741" width="0.0405%" height="15" fill="rgb(251,143,52)" fg:x="10042" fg:w="7"/><text x="58.3668%" y="751.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (71 samples, 0.41%)</title><rect x="57.8737%" y="773" width="0.4109%" height="15" fill="rgb(206,90,15)" fg:x="10000" fg:w="71"/><text x="58.1237%" y="783.50"></text></g><g><title>regex::utf8::decode_utf8 (22 samples, 0.13%)</title><rect x="58.1573%" y="757" width="0.1273%" height="15" fill="rgb(218,35,8)" fg:x="10049" fg:w="22"/><text x="58.4073%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.02%)</title><rect x="58.2615%" y="741" width="0.0231%" height="15" fill="rgb(239,215,6)" fg:x="10067" fg:w="4"/><text x="58.5115%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.02%)</title><rect x="58.2615%" y="725" width="0.0231%" height="15" fill="rgb(245,116,39)" fg:x="10067" fg:w="4"/><text x="58.5115%" y="735.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::is_empty_match (3 samples, 0.02%)</title><rect x="58.2846%" y="773" width="0.0174%" height="15" fill="rgb(242,65,28)" fg:x="10071" fg:w="3"/><text x="58.5346%" y="783.50"></text></g><g><title>&lt;regex::prog::Program as core::ops::deref::Deref&gt;::deref (5 samples, 0.03%)</title><rect x="58.3020%" y="773" width="0.0289%" height="15" fill="rgb(252,132,53)" fg:x="10074" fg:w="5"/><text x="58.5520%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.03%)</title><rect x="58.3020%" y="757" width="0.0289%" height="15" fill="rgb(224,159,50)" fg:x="10074" fg:w="5"/><text x="58.5520%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (7 samples, 0.04%)</title><rect x="58.4119%" y="757" width="0.0405%" height="15" fill="rgb(224,93,4)" fg:x="10093" fg:w="7"/><text x="58.6619%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.28%)</title><rect x="58.3309%" y="773" width="0.2836%" height="15" fill="rgb(208,81,34)" fg:x="10079" fg:w="49"/><text x="58.5809%" y="783.50"></text></g><g><title>core::ptr::write (28 samples, 0.16%)</title><rect x="58.4525%" y="757" width="0.1620%" height="15" fill="rgb(233,92,54)" fg:x="10100" fg:w="28"/><text x="58.7025%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (7 samples, 0.04%)</title><rect x="58.6145%" y="773" width="0.0405%" height="15" fill="rgb(237,21,14)" fg:x="10128" fg:w="7"/><text x="58.8645%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (7 samples, 0.04%)</title><rect x="58.6145%" y="757" width="0.0405%" height="15" fill="rgb(249,128,51)" fg:x="10128" fg:w="7"/><text x="58.8645%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.22%)</title><rect x="59.4016%" y="741" width="0.2199%" height="15" fill="rgb(223,129,24)" fg:x="10264" fg:w="38"/><text x="59.6516%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (35 samples, 0.20%)</title><rect x="59.4189%" y="725" width="0.2026%" height="15" fill="rgb(231,168,25)" fg:x="10267" fg:w="35"/><text x="59.6689%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (48 samples, 0.28%)</title><rect x="59.4016%" y="757" width="0.2778%" height="15" fill="rgb(224,39,20)" fg:x="10264" fg:w="48"/><text x="59.6516%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.06%)</title><rect x="59.6215%" y="741" width="0.0579%" height="15" fill="rgb(225,152,53)" fg:x="10302" fg:w="10"/><text x="59.8715%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.06%)</title><rect x="59.6215%" y="725" width="0.0579%" height="15" fill="rgb(252,17,24)" fg:x="10302" fg:w="10"/><text x="59.8715%" y="735.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::len (12 samples, 0.07%)</title><rect x="59.6794%" y="757" width="0.0694%" height="15" fill="rgb(250,114,30)" fg:x="10312" fg:w="12"/><text x="59.9294%" y="767.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (207 samples, 1.20%)</title><rect x="58.6550%" y="773" width="1.1980%" height="15" fill="rgb(229,5,4)" fg:x="10135" fg:w="207"/><text x="58.9050%" y="783.50"></text></g><g><title>regex::backtrack::usize_to_u32 (18 samples, 0.10%)</title><rect x="59.7488%" y="757" width="0.1042%" height="15" fill="rgb(225,176,49)" fg:x="10324" fg:w="18"/><text x="59.9988%" y="767.50"></text></g><g><title>regex::input::&lt;impl core::cmp::PartialEq&lt;regex::input::Char&gt; for char&gt;::eq (3 samples, 0.02%)</title><rect x="59.8530%" y="773" width="0.0174%" height="15" fill="rgb(224,221,49)" fg:x="10342" fg:w="3"/><text x="60.1030%" y="783.50"></text></g><g><title>regex::input::InputAt::next_pos (2 samples, 0.01%)</title><rect x="59.8704%" y="773" width="0.0116%" height="15" fill="rgb(253,169,27)" fg:x="10345" fg:w="2"/><text x="60.1204%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::le (14 samples, 0.08%)</title><rect x="59.9456%" y="757" width="0.0810%" height="15" fill="rgb(211,206,16)" fg:x="10358" fg:w="14"/><text x="60.1956%" y="767.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (608 samples, 3.52%)</title><rect x="56.5195%" y="805" width="3.5187%" height="15" fill="rgb(244,87,35)" fg:x="9766" fg:w="608"/><text x="56.7695%" y="815.50">reg..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (540 samples, 3.13%)</title><rect x="56.9130%" y="789" width="3.1252%" height="15" fill="rgb(246,28,10)" fg:x="9834" fg:w="540"/><text x="57.1630%" y="799.50">reg..</text></g><g><title>regex::prog::InstRanges::matches (27 samples, 0.16%)</title><rect x="59.8819%" y="773" width="0.1563%" height="15" fill="rgb(229,12,44)" fg:x="10347" fg:w="27"/><text x="60.1319%" y="783.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa (618 samples, 3.58%)</title><rect x="56.4848%" y="901" width="3.5766%" height="15" fill="rgb(210,145,37)" fg:x="9760" fg:w="618"/><text x="56.7348%" y="911.50">rege..</text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (618 samples, 3.58%)</title><rect x="56.4848%" y="885" width="3.5766%" height="15" fill="rgb(227,112,52)" fg:x="9760" fg:w="618"/><text x="56.7348%" y="895.50">rege..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (617 samples, 3.57%)</title><rect x="56.4905%" y="869" width="3.5708%" height="15" fill="rgb(238,155,34)" fg:x="9761" fg:w="617"/><text x="56.7405%" y="879.50">rege..</text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (617 samples, 3.57%)</title><rect x="56.4905%" y="853" width="3.5708%" height="15" fill="rgb(239,226,36)" fg:x="9761" fg:w="617"/><text x="56.7405%" y="863.50">rege..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (617 samples, 3.57%)</title><rect x="56.4905%" y="837" width="3.5708%" height="15" fill="rgb(230,16,23)" fg:x="9761" fg:w="617"/><text x="56.7405%" y="847.50">rege..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (614 samples, 3.55%)</title><rect x="56.5079%" y="821" width="3.5534%" height="15" fill="rgb(236,171,36)" fg:x="9764" fg:w="614"/><text x="56.7579%" y="831.50">rege..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::clear (4 samples, 0.02%)</title><rect x="60.0382%" y="805" width="0.0231%" height="15" fill="rgb(221,22,14)" fg:x="10374" fg:w="4"/><text x="60.2882%" y="815.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="60.0498%" y="789" width="0.0116%" height="15" fill="rgb(242,43,11)" fg:x="10376" fg:w="2"/><text x="60.2998%" y="799.50"></text></g><g><title>regex::exec::ExecNoSync::is_anchor_end_match (2 samples, 0.01%)</title><rect x="60.0613%" y="901" width="0.0116%" height="15" fill="rgb(232,69,23)" fg:x="10378" fg:w="2"/><text x="60.3113%" y="911.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (632 samples, 3.66%)</title><rect x="56.4211%" y="933" width="3.6576%" height="15" fill="rgb(216,180,54)" fg:x="9749" fg:w="632"/><text x="56.6711%" y="943.50">&lt;reg..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (632 samples, 3.66%)</title><rect x="56.4211%" y="917" width="3.6576%" height="15" fill="rgb(216,5,24)" fg:x="9749" fg:w="632"/><text x="56.6711%" y="927.50">&lt;reg..</text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.03%)</title><rect x="60.0787%" y="933" width="0.0289%" height="15" fill="rgb(225,89,9)" fg:x="10381" fg:w="5"/><text x="60.3287%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (754 samples, 4.36%)</title><rect x="55.7613%" y="1061" width="4.3637%" height="15" fill="rgb(243,75,33)" fg:x="9635" fg:w="754"/><text x="56.0113%" y="1071.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::map (739 samples, 4.28%)</title><rect x="55.8481%" y="1045" width="4.2769%" height="15" fill="rgb(247,141,45)" fg:x="9650" fg:w="739"/><text x="56.0981%" y="1055.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (739 samples, 4.28%)</title><rect x="55.8481%" y="1029" width="4.2769%" height="15" fill="rgb(232,177,36)" fg:x="9650" fg:w="739"/><text x="56.0981%" y="1039.50">core:..</text></g><g><title>ex16::part1::{{closure}} (739 samples, 4.28%)</title><rect x="55.8481%" y="1013" width="4.2769%" height="15" fill="rgb(219,125,36)" fg:x="9650" fg:w="739"/><text x="56.0981%" y="1023.50">ex16:..</text></g><g><title>core::str::&lt;impl str&gt;::parse (739 samples, 4.28%)</title><rect x="55.8481%" y="997" width="4.2769%" height="15" fill="rgb(227,94,9)" fg:x="9650" fg:w="739"/><text x="56.0981%" y="1007.50">core:..</text></g><g><title>&lt;ex16::Rule as core::str::traits::FromStr&gt;::from_str (739 samples, 4.28%)</title><rect x="55.8481%" y="981" width="4.2769%" height="15" fill="rgb(240,34,52)" fg:x="9650" fg:w="739"/><text x="56.0981%" y="991.50">&lt;ex16..</text></g><g><title>regex::re_unicode::Regex::captures (669 samples, 3.87%)</title><rect x="56.2533%" y="965" width="3.8718%" height="15" fill="rgb(216,45,12)" fg:x="9720" fg:w="669"/><text x="56.5033%" y="975.50">rege..</text></g><g><title>regex::re_unicode::Regex::captures_read_at (640 samples, 3.70%)</title><rect x="56.4211%" y="949" width="3.7039%" height="15" fill="rgb(246,21,19)" fg:x="9749" fg:w="640"/><text x="56.6711%" y="959.50">rege..</text></g><g><title>regex::exec::Exec::searcher_str (2 samples, 0.01%)</title><rect x="60.1134%" y="933" width="0.0116%" height="15" fill="rgb(213,98,42)" fg:x="10387" fg:w="2"/><text x="60.3634%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="60.1250%" y="997" width="0.0116%" height="15" fill="rgb(250,136,47)" fg:x="10389" fg:w="2"/><text x="60.3750%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.05%)</title><rect x="60.1366%" y="997" width="0.0463%" height="15" fill="rgb(251,124,27)" fg:x="10391" fg:w="8"/><text x="60.3866%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.05%)</title><rect x="60.1366%" y="981" width="0.0463%" height="15" fill="rgb(229,180,14)" fg:x="10391" fg:w="8"/><text x="60.3866%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.05%)</title><rect x="60.1366%" y="965" width="0.0463%" height="15" fill="rgb(245,216,25)" fg:x="10391" fg:w="8"/><text x="60.3866%" y="975.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.05%)</title><rect x="60.1366%" y="949" width="0.0463%" height="15" fill="rgb(251,43,5)" fg:x="10391" fg:w="8"/><text x="60.3866%" y="959.50"></text></g><g><title>realloc (7 samples, 0.04%)</title><rect x="60.1424%" y="933" width="0.0405%" height="15" fill="rgb(250,128,24)" fg:x="10392" fg:w="7"/><text x="60.3924%" y="943.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.03%)</title><rect x="60.1482%" y="917" width="0.0347%" height="15" fill="rgb(217,117,27)" fg:x="10393" fg:w="6"/><text x="60.3982%" y="927.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.03%)</title><rect x="60.1482%" y="901" width="0.0347%" height="15" fill="rgb(245,147,4)" fg:x="10393" fg:w="6"/><text x="60.3982%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.06%)</title><rect x="60.1250%" y="1061" width="0.0637%" height="15" fill="rgb(242,201,35)" fg:x="10389" fg:w="11"/><text x="60.3750%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.06%)</title><rect x="60.1250%" y="1045" width="0.0637%" height="15" fill="rgb(218,181,1)" fg:x="10389" fg:w="11"/><text x="60.3750%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.06%)</title><rect x="60.1250%" y="1029" width="0.0637%" height="15" fill="rgb(222,6,29)" fg:x="10389" fg:w="11"/><text x="60.3750%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.06%)</title><rect x="60.1250%" y="1013" width="0.0637%" height="15" fill="rgb(208,186,3)" fg:x="10389" fg:w="11"/><text x="60.3750%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (768 samples, 4.44%)</title><rect x="55.7613%" y="1093" width="4.4447%" height="15" fill="rgb(216,36,26)" fg:x="9635" fg:w="768"/><text x="56.0113%" y="1103.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (768 samples, 4.44%)</title><rect x="55.7613%" y="1077" width="4.4447%" height="15" fill="rgb(248,201,23)" fg:x="9635" fg:w="768"/><text x="56.0113%" y="1087.50">alloc..</text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="60.1945%" y="1061" width="0.0116%" height="15" fill="rgb(251,170,31)" fg:x="10401" fg:w="2"/><text x="60.4445%" y="1071.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="60.2118%" y="1045" width="0.0116%" height="15" fill="rgb(207,110,25)" fg:x="10404" fg:w="2"/><text x="60.4618%" y="1055.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2 samples, 0.01%)</title><rect x="60.2118%" y="1029" width="0.0116%" height="15" fill="rgb(250,54,15)" fg:x="10404" fg:w="2"/><text x="60.4618%" y="1039.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="60.2118%" y="1013" width="0.0116%" height="15" fill="rgb(227,68,33)" fg:x="10404" fg:w="2"/><text x="60.4618%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="60.2118%" y="997" width="0.0116%" height="15" fill="rgb(238,34,41)" fg:x="10404" fg:w="2"/><text x="60.4618%" y="1007.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="60.2118%" y="1077" width="0.0174%" height="15" fill="rgb(220,11,15)" fg:x="10404" fg:w="3"/><text x="60.4618%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="60.2118%" y="1061" width="0.0174%" height="15" fill="rgb(246,111,35)" fg:x="10404" fg:w="3"/><text x="60.4618%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.01%)</title><rect x="60.2408%" y="997" width="0.0116%" height="15" fill="rgb(209,88,53)" fg:x="10409" fg:w="2"/><text x="60.4908%" y="1007.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u16&gt;::from_str (2 samples, 0.01%)</title><rect x="60.2408%" y="981" width="0.0116%" height="15" fill="rgb(231,185,47)" fg:x="10409" fg:w="2"/><text x="60.4908%" y="991.50"></text></g><g><title>core::num::from_str_radix (2 samples, 0.01%)</title><rect x="60.2408%" y="965" width="0.0116%" height="15" fill="rgb(233,154,1)" fg:x="10409" fg:w="2"/><text x="60.4908%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.02%)</title><rect x="60.2755%" y="821" width="0.0174%" height="15" fill="rgb(225,15,46)" fg:x="10415" fg:w="3"/><text x="60.5255%" y="831.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="60.2813%" y="805" width="0.0116%" height="15" fill="rgb(211,135,41)" fg:x="10416" fg:w="2"/><text x="60.5313%" y="815.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (6 samples, 0.03%)</title><rect x="60.3623%" y="805" width="0.0347%" height="15" fill="rgb(208,54,0)" fg:x="10430" fg:w="6"/><text x="60.6123%" y="815.50"></text></g><g><title>regex::utf8::decode_utf8 (2 samples, 0.01%)</title><rect x="60.3854%" y="789" width="0.0116%" height="15" fill="rgb(244,136,14)" fg:x="10434" fg:w="2"/><text x="60.6354%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="60.3970%" y="805" width="0.0116%" height="15" fill="rgb(241,56,14)" fg:x="10436" fg:w="2"/><text x="60.6470%" y="815.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="60.3970%" y="789" width="0.0116%" height="15" fill="rgb(205,80,24)" fg:x="10436" fg:w="2"/><text x="60.6470%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.01%)</title><rect x="60.4317%" y="789" width="0.0116%" height="15" fill="rgb(220,57,4)" fg:x="10442" fg:w="2"/><text x="60.6817%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="60.4317%" y="773" width="0.0116%" height="15" fill="rgb(226,193,50)" fg:x="10442" fg:w="2"/><text x="60.6817%" y="783.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (7 samples, 0.04%)</title><rect x="60.4086%" y="805" width="0.0405%" height="15" fill="rgb(231,168,22)" fg:x="10438" fg:w="7"/><text x="60.6586%" y="815.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (34 samples, 0.20%)</title><rect x="60.2639%" y="837" width="0.1968%" height="15" fill="rgb(254,215,14)" fg:x="10413" fg:w="34"/><text x="60.5139%" y="847.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (29 samples, 0.17%)</title><rect x="60.2928%" y="821" width="0.1678%" height="15" fill="rgb(211,115,16)" fg:x="10418" fg:w="29"/><text x="60.5428%" y="831.50"></text></g><g><title>regex::prog::InstRanges::matches (2 samples, 0.01%)</title><rect x="60.4491%" y="805" width="0.0116%" height="15" fill="rgb(236,210,16)" fg:x="10445" fg:w="2"/><text x="60.6991%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (814 samples, 4.71%)</title><rect x="55.7555%" y="1157" width="4.7109%" height="15" fill="rgb(221,94,12)" fg:x="9634" fg:w="814"/><text x="56.0055%" y="1167.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (814 samples, 4.71%)</title><rect x="55.7555%" y="1141" width="4.7109%" height="15" fill="rgb(235,218,49)" fg:x="9634" fg:w="814"/><text x="56.0055%" y="1151.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (814 samples, 4.71%)</title><rect x="55.7555%" y="1125" width="4.7109%" height="15" fill="rgb(217,114,14)" fg:x="9634" fg:w="814"/><text x="56.0055%" y="1135.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (813 samples, 4.71%)</title><rect x="55.7613%" y="1109" width="4.7051%" height="15" fill="rgb(216,145,22)" fg:x="9635" fg:w="813"/><text x="56.0113%" y="1119.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.26%)</title><rect x="60.2060%" y="1093" width="0.2604%" height="15" fill="rgb(217,112,39)" fg:x="10403" fg:w="45"/><text x="60.4560%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.24%)</title><rect x="60.2292%" y="1077" width="0.2373%" height="15" fill="rgb(225,85,32)" fg:x="10407" fg:w="41"/><text x="60.4792%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (41 samples, 0.24%)</title><rect x="60.2292%" y="1061" width="0.2373%" height="15" fill="rgb(245,209,47)" fg:x="10407" fg:w="41"/><text x="60.4792%" y="1071.50"></text></g><g><title>ex16::part1::{{closure}} (41 samples, 0.24%)</title><rect x="60.2292%" y="1045" width="0.2373%" height="15" fill="rgb(218,220,15)" fg:x="10407" fg:w="41"/><text x="60.4792%" y="1055.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (41 samples, 0.24%)</title><rect x="60.2292%" y="1029" width="0.2373%" height="15" fill="rgb(222,202,31)" fg:x="10407" fg:w="41"/><text x="60.4792%" y="1039.50"></text></g><g><title>&lt;ex16::Rule as core::str::traits::FromStr&gt;::from_str (41 samples, 0.24%)</title><rect x="60.2292%" y="1013" width="0.2373%" height="15" fill="rgb(243,203,4)" fg:x="10407" fg:w="41"/><text x="60.4792%" y="1023.50"></text></g><g><title>regex::re_unicode::Regex::captures (37 samples, 0.21%)</title><rect x="60.2523%" y="997" width="0.2141%" height="15" fill="rgb(237,92,17)" fg:x="10411" fg:w="37"/><text x="60.5023%" y="1007.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (36 samples, 0.21%)</title><rect x="60.2581%" y="981" width="0.2083%" height="15" fill="rgb(231,119,7)" fg:x="10412" fg:w="36"/><text x="60.5081%" y="991.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (36 samples, 0.21%)</title><rect x="60.2581%" y="965" width="0.2083%" height="15" fill="rgb(237,82,41)" fg:x="10412" fg:w="36"/><text x="60.5081%" y="975.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (36 samples, 0.21%)</title><rect x="60.2581%" y="949" width="0.2083%" height="15" fill="rgb(226,81,48)" fg:x="10412" fg:w="36"/><text x="60.5081%" y="959.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa (35 samples, 0.20%)</title><rect x="60.2639%" y="933" width="0.2026%" height="15" fill="rgb(234,70,51)" fg:x="10413" fg:w="35"/><text x="60.5139%" y="943.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (35 samples, 0.20%)</title><rect x="60.2639%" y="917" width="0.2026%" height="15" fill="rgb(251,86,4)" fg:x="10413" fg:w="35"/><text x="60.5139%" y="927.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (35 samples, 0.20%)</title><rect x="60.2639%" y="901" width="0.2026%" height="15" fill="rgb(244,144,28)" fg:x="10413" fg:w="35"/><text x="60.5139%" y="911.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (35 samples, 0.20%)</title><rect x="60.2639%" y="885" width="0.2026%" height="15" fill="rgb(232,161,39)" fg:x="10413" fg:w="35"/><text x="60.5139%" y="895.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (35 samples, 0.20%)</title><rect x="60.2639%" y="869" width="0.2026%" height="15" fill="rgb(247,34,51)" fg:x="10413" fg:w="35"/><text x="60.5139%" y="879.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (35 samples, 0.20%)</title><rect x="60.2639%" y="853" width="0.2026%" height="15" fill="rgb(225,132,2)" fg:x="10413" fg:w="35"/><text x="60.5139%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (144 samples, 0.83%)</title><rect x="60.4665%" y="1157" width="0.8334%" height="15" fill="rgb(209,159,44)" fg:x="10448" fg:w="144"/><text x="60.7165%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (144 samples, 0.83%)</title><rect x="60.4665%" y="1141" width="0.8334%" height="15" fill="rgb(251,214,1)" fg:x="10448" fg:w="144"/><text x="60.7165%" y="1151.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="61.3056%" y="997" width="0.0752%" height="15" fill="rgb(247,84,47)" fg:x="10593" fg:w="13"/><text x="61.5556%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.09%)</title><rect x="61.2998%" y="1141" width="0.0926%" height="15" fill="rgb(240,111,43)" fg:x="10592" fg:w="16"/><text x="61.5498%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ex16::Rule]&gt; (16 samples, 0.09%)</title><rect x="61.2998%" y="1125" width="0.0926%" height="15" fill="rgb(215,214,35)" fg:x="10592" fg:w="16"/><text x="61.5498%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;ex16::Rule&gt; (16 samples, 0.09%)</title><rect x="61.2998%" y="1109" width="0.0926%" height="15" fill="rgb(248,207,23)" fg:x="10592" fg:w="16"/><text x="61.5498%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (16 samples, 0.09%)</title><rect x="61.2998%" y="1093" width="0.0926%" height="15" fill="rgb(214,186,4)" fg:x="10592" fg:w="16"/><text x="61.5498%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.09%)</title><rect x="61.2998%" y="1077" width="0.0926%" height="15" fill="rgb(220,133,22)" fg:x="10592" fg:w="16"/><text x="61.5498%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.09%)</title><rect x="61.2998%" y="1061" width="0.0926%" height="15" fill="rgb(239,134,19)" fg:x="10592" fg:w="16"/><text x="61.5498%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.09%)</title><rect x="61.2998%" y="1045" width="0.0926%" height="15" fill="rgb(250,140,9)" fg:x="10592" fg:w="16"/><text x="61.5498%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.09%)</title><rect x="61.3056%" y="1029" width="0.0868%" height="15" fill="rgb(225,59,14)" fg:x="10593" fg:w="15"/><text x="61.5556%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.09%)</title><rect x="61.3056%" y="1013" width="0.0868%" height="15" fill="rgb(214,152,51)" fg:x="10593" fg:w="15"/><text x="61.5556%" y="1023.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="61.3809%" y="997" width="0.0116%" height="15" fill="rgb(251,227,43)" fg:x="10606" fg:w="2"/><text x="61.6309%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ex16::Rule&gt;&gt; (21 samples, 0.12%)</title><rect x="61.2998%" y="1157" width="0.1215%" height="15" fill="rgb(241,96,17)" fg:x="10592" fg:w="21"/><text x="61.5498%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ex16::Rule&gt;&gt; (5 samples, 0.03%)</title><rect x="61.3924%" y="1141" width="0.0289%" height="15" fill="rgb(234,198,43)" fg:x="10608" fg:w="5"/><text x="61.6424%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="61.3924%" y="1125" width="0.0289%" height="15" fill="rgb(220,108,29)" fg:x="10608" fg:w="5"/><text x="61.6424%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="61.3924%" y="1109" width="0.0289%" height="15" fill="rgb(226,163,33)" fg:x="10608" fg:w="5"/><text x="61.6424%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="61.3924%" y="1093" width="0.0289%" height="15" fill="rgb(205,194,45)" fg:x="10608" fg:w="5"/><text x="61.6424%" y="1103.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="61.3924%" y="1077" width="0.0289%" height="15" fill="rgb(206,143,44)" fg:x="10608" fg:w="5"/><text x="61.6424%" y="1087.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="61.4098%" y="1061" width="0.0116%" height="15" fill="rgb(236,136,36)" fg:x="10611" fg:w="2"/><text x="61.6598%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (31 samples, 0.18%)</title><rect x="61.4214%" y="1157" width="0.1794%" height="15" fill="rgb(249,172,42)" fg:x="10613" fg:w="31"/><text x="61.6714%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (127 samples, 0.73%)</title><rect x="63.9736%" y="1109" width="0.7350%" height="15" fill="rgb(216,139,23)" fg:x="11054" fg:w="127"/><text x="64.2236%" y="1119.50"></text></g><g><title>&lt;u16 as core::num::FromStrRadixHelper&gt;::checked_mul (421 samples, 2.44%)</title><rect x="64.7144%" y="1109" width="2.4365%" height="15" fill="rgb(207,166,20)" fg:x="11182" fg:w="421"/><text x="64.9644%" y="1119.50">&lt;u..</text></g><g><title>core::num::&lt;impl u16&gt;::checked_mul (421 samples, 2.44%)</title><rect x="64.7144%" y="1093" width="2.4365%" height="15" fill="rgb(210,209,22)" fg:x="11182" fg:w="421"/><text x="64.9644%" y="1103.50">co..</text></g><g><title>core::num::&lt;impl u16&gt;::overflowing_mul (421 samples, 2.44%)</title><rect x="64.7144%" y="1077" width="2.4365%" height="15" fill="rgb(232,118,20)" fg:x="11182" fg:w="421"/><text x="64.9644%" y="1087.50">co..</text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (14 samples, 0.08%)</title><rect x="67.1509%" y="1109" width="0.0810%" height="15" fill="rgb(238,113,42)" fg:x="11603" fg:w="14"/><text x="67.4009%" y="1119.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (7 samples, 0.04%)</title><rect x="67.1914%" y="1093" width="0.0405%" height="15" fill="rgb(231,42,5)" fg:x="11610" fg:w="7"/><text x="67.4414%" y="1103.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (974 samples, 5.64%)</title><rect x="61.6008%" y="1157" width="5.6369%" height="15" fill="rgb(243,166,24)" fg:x="10644" fg:w="974"/><text x="61.8508%" y="1167.50">core::s..</text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u16&gt;::from_str (971 samples, 5.62%)</title><rect x="61.6181%" y="1141" width="5.6195%" height="15" fill="rgb(237,226,12)" fg:x="10647" fg:w="971"/><text x="61.8681%" y="1151.50">core::n..</text></g><g><title>core::num::from_str_radix (895 samples, 5.18%)</title><rect x="62.0580%" y="1125" width="5.1797%" height="15" fill="rgb(229,133,24)" fg:x="10723" fg:w="895"/><text x="62.3080%" y="1135.50">core::..</text></g><g><title>_start (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1557" width="62.9203%" height="15" fill="rgb(238,33,43)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1567.50">_start</text></g><g><title>__libc_start_main (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1541" width="62.9203%" height="15" fill="rgb(227,59,38)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1551.50">__libc_start_main</text></g><g><title>main (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1525" width="62.9203%" height="15" fill="rgb(230,97,0)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1535.50">main</text></g><g><title>std::rt::lang_start_internal (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1509" width="62.9203%" height="15" fill="rgb(250,173,50)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1519.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1493" width="62.9203%" height="15" fill="rgb(240,15,50)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1503.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1477" width="62.9203%" height="15" fill="rgb(221,93,22)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1487.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1461" width="62.9203%" height="15" fill="rgb(245,180,53)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1471.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1445" width="62.9203%" height="15" fill="rgb(231,88,51)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1455.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1429" width="62.9203%" height="15" fill="rgb(240,58,21)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1439.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1413" width="62.9203%" height="15" fill="rgb(237,21,10)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1423.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1397" width="62.9203%" height="15" fill="rgb(218,43,11)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1407.50">core::ops::function::FnOnce::call_once</text></g><g><title>bench_ex16::main (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1381" width="62.9203%" height="15" fill="rgb(218,221,29)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1391.50">bench_ex16::main</text></g><g><title>bench_ex16::benches (10,872 samples, 62.92%)</title><rect x="4.3232%" y="1365" width="62.9203%" height="15" fill="rgb(214,118,42)" fg:x="747" fg:w="10872"/><text x="4.5732%" y="1375.50">bench_ex16::benches</text></g><g><title>bench_ex16::criterion_benchmark (10,871 samples, 62.91%)</title><rect x="4.3290%" y="1349" width="62.9145%" height="15" fill="rgb(251,200,26)" fg:x="748" fg:w="10871"/><text x="4.5790%" y="1359.50">bench_ex16::criterion_benchmark</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (10,871 samples, 62.91%)</title><rect x="4.3290%" y="1333" width="62.9145%" height="15" fill="rgb(237,101,39)" fg:x="748" fg:w="10871"/><text x="4.5790%" y="1343.50">criterion::Criterion&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (10,871 samples, 62.91%)</title><rect x="4.3290%" y="1317" width="62.9145%" height="15" fill="rgb(251,117,11)" fg:x="748" fg:w="10871"/><text x="4.5790%" y="1327.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (10,871 samples, 62.91%)</title><rect x="4.3290%" y="1301" width="62.9145%" height="15" fill="rgb(216,223,23)" fg:x="748" fg:w="10871"/><text x="4.5790%" y="1311.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench</text></g><g><title>criterion::analysis::common (10,871 samples, 62.91%)</title><rect x="4.3290%" y="1285" width="62.9145%" height="15" fill="rgb(251,54,12)" fg:x="748" fg:w="10871"/><text x="4.5790%" y="1295.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (10,863 samples, 62.87%)</title><rect x="4.3753%" y="1269" width="62.8682%" height="15" fill="rgb(254,176,54)" fg:x="756" fg:w="10863"/><text x="4.6253%" y="1279.50">criterion::routine::Routine::sample</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (5,690 samples, 32.93%)</title><rect x="34.3133%" y="1253" width="32.9301%" height="15" fill="rgb(210,32,8)" fg:x="5929" fg:w="5690"/><text x="34.5633%" y="1263.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::ro..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (5,690 samples, 32.93%)</title><rect x="34.3133%" y="1237" width="32.9301%" height="15" fill="rgb(235,52,38)" fg:x="5929" fg:w="5690"/><text x="34.5633%" y="1247.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_..</text></g><g><title>bench_ex16::criterion_benchmark::{{closure}} (5,690 samples, 32.93%)</title><rect x="34.3133%" y="1221" width="32.9301%" height="15" fill="rgb(231,4,44)" fg:x="5929" fg:w="5690"/><text x="34.5633%" y="1231.50">bench_ex16::criterion_benchmark::{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (5,690 samples, 32.93%)</title><rect x="34.3133%" y="1205" width="32.9301%" height="15" fill="rgb(249,2,32)" fg:x="5929" fg:w="5690"/><text x="34.5633%" y="1215.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>bench_ex16::criterion_benchmark::{{closure}}::{{closure}} (5,690 samples, 32.93%)</title><rect x="34.3133%" y="1189" width="32.9301%" height="15" fill="rgb(224,65,26)" fg:x="5929" fg:w="5690"/><text x="34.5633%" y="1199.50">bench_ex16::criterion_benchmark::{{closure}}::{{closu..</text></g><g><title>ex16::part1 (5,690 samples, 32.93%)</title><rect x="34.3133%" y="1173" width="32.9301%" height="15" fill="rgb(250,73,40)" fg:x="5929" fg:w="5690"/><text x="34.5633%" y="1183.50">ex16::part1</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.16%)</title><rect x="67.3013%" y="581" width="0.1563%" height="15" fill="rgb(253,177,16)" fg:x="11629" fg:w="27"/><text x="67.5513%" y="591.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (12 samples, 0.07%)</title><rect x="67.4576%" y="549" width="0.0694%" height="15" fill="rgb(217,32,34)" fg:x="11656" fg:w="12"/><text x="67.7076%" y="559.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (275 samples, 1.59%)</title><rect x="67.5271%" y="549" width="1.5915%" height="15" fill="rgb(212,7,10)" fg:x="11668" fg:w="275"/><text x="67.7771%" y="559.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (275 samples, 1.59%)</title><rect x="67.5271%" y="533" width="1.5915%" height="15" fill="rgb(245,89,8)" fg:x="11668" fg:w="275"/><text x="67.7771%" y="543.50"></text></g><g><title>exp (261 samples, 1.51%)</title><rect x="67.6081%" y="517" width="1.5105%" height="15" fill="rgb(237,16,53)" fg:x="11682" fg:w="261"/><text x="67.8581%" y="527.50"></text></g><g><title>[libm-2.31.so] (206 samples, 1.19%)</title><rect x="67.9264%" y="501" width="1.1922%" height="15" fill="rgb(250,204,30)" fg:x="11737" fg:w="206"/><text x="68.1764%" y="511.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (59 samples, 0.34%)</title><rect x="69.1244%" y="549" width="0.3415%" height="15" fill="rgb(208,77,27)" fg:x="11944" fg:w="59"/><text x="69.3744%" y="559.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (59 samples, 0.34%)</title><rect x="69.1244%" y="533" width="0.3415%" height="15" fill="rgb(250,204,28)" fg:x="11944" fg:w="59"/><text x="69.3744%" y="543.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (348 samples, 2.01%)</title><rect x="67.4576%" y="565" width="2.0140%" height="15" fill="rgb(244,63,21)" fg:x="11656" fg:w="348"/><text x="67.7076%" y="575.50">&lt;..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (473 samples, 2.74%)</title><rect x="67.2608%" y="725" width="2.7374%" height="15" fill="rgb(236,85,44)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="735.50">&lt;r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (473 samples, 2.74%)</title><rect x="67.2608%" y="709" width="2.7374%" height="15" fill="rgb(215,98,4)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="719.50">ra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (473 samples, 2.74%)</title><rect x="67.2608%" y="693" width="2.7374%" height="15" fill="rgb(235,38,11)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="703.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (473 samples, 2.74%)</title><rect x="67.2608%" y="677" width="2.7374%" height="15" fill="rgb(254,186,25)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="687.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (473 samples, 2.74%)</title><rect x="67.2608%" y="661" width="2.7374%" height="15" fill="rgb(225,55,31)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="671.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (473 samples, 2.74%)</title><rect x="67.2608%" y="645" width="2.7374%" height="15" fill="rgb(211,15,21)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="655.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (473 samples, 2.74%)</title><rect x="67.2608%" y="629" width="2.7374%" height="15" fill="rgb(215,187,41)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="639.50">cr..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (473 samples, 2.74%)</title><rect x="67.2608%" y="613" width="2.7374%" height="15" fill="rgb(248,69,32)" fg:x="11622" fg:w="473"/><text x="67.5108%" y="623.50">cr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (466 samples, 2.70%)</title><rect x="67.3013%" y="597" width="2.6969%" height="15" fill="rgb(252,102,52)" fg:x="11629" fg:w="466"/><text x="67.5513%" y="607.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (439 samples, 2.54%)</title><rect x="67.4576%" y="581" width="2.5407%" height="15" fill="rgb(253,140,32)" fg:x="11656" fg:w="439"/><text x="67.7076%" y="591.50">cr..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (91 samples, 0.53%)</title><rect x="69.4716%" y="565" width="0.5267%" height="15" fill="rgb(216,56,42)" fg:x="12004" fg:w="91"/><text x="69.7216%" y="575.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (479 samples, 2.77%)</title><rect x="67.2608%" y="805" width="2.7722%" height="15" fill="rgb(216,184,14)" fg:x="11622" fg:w="479"/><text x="67.5108%" y="815.50">ra..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (479 samples, 2.77%)</title><rect x="67.2608%" y="789" width="2.7722%" height="15" fill="rgb(237,187,27)" fg:x="11622" fg:w="479"/><text x="67.5108%" y="799.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (479 samples, 2.77%)</title><rect x="67.2608%" y="773" width="2.7722%" height="15" fill="rgb(219,65,3)" fg:x="11622" fg:w="479"/><text x="67.5108%" y="783.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (479 samples, 2.77%)</title><rect x="67.2608%" y="757" width="2.7722%" height="15" fill="rgb(245,83,25)" fg:x="11622" fg:w="479"/><text x="67.5108%" y="767.50">ra..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (479 samples, 2.77%)</title><rect x="67.2608%" y="741" width="2.7722%" height="15" fill="rgb(214,205,45)" fg:x="11622" fg:w="479"/><text x="67.5108%" y="751.50">ra..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="69.9983%" y="725" width="0.0347%" height="15" fill="rgb(241,20,18)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="735.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="69.9983%" y="709" width="0.0347%" height="15" fill="rgb(232,163,23)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="69.9983%" y="693" width="0.0347%" height="15" fill="rgb(214,5,46)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="69.9983%" y="677" width="0.0347%" height="15" fill="rgb(229,78,17)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="69.9983%" y="661" width="0.0347%" height="15" fill="rgb(248,89,10)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.03%)</title><rect x="69.9983%" y="645" width="0.0347%" height="15" fill="rgb(248,54,15)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.03%)</title><rect x="69.9983%" y="629" width="0.0347%" height="15" fill="rgb(223,116,6)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="639.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (6 samples, 0.03%)</title><rect x="69.9983%" y="613" width="0.0347%" height="15" fill="rgb(205,125,38)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (6 samples, 0.03%)</title><rect x="69.9983%" y="597" width="0.0347%" height="15" fill="rgb(251,78,38)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="607.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (6 samples, 0.03%)</title><rect x="69.9983%" y="581" width="0.0347%" height="15" fill="rgb(253,78,28)" fg:x="12095" fg:w="6"/><text x="70.2483%" y="591.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (5 samples, 0.03%)</title><rect x="70.0041%" y="565" width="0.0289%" height="15" fill="rgb(209,120,3)" fg:x="12096" fg:w="5"/><text x="70.2541%" y="575.50"></text></g><g><title>oorandom::Rand64::rand_range (4 samples, 0.02%)</title><rect x="70.0098%" y="549" width="0.0231%" height="15" fill="rgb(238,229,9)" fg:x="12097" fg:w="4"/><text x="70.2598%" y="559.50"></text></g><g><title>oorandom::Rand64::rand_u64 (3 samples, 0.02%)</title><rect x="70.0156%" y="533" width="0.0174%" height="15" fill="rgb(253,159,18)" fg:x="12098" fg:w="3"/><text x="70.2656%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.14%)</title><rect x="70.0909%" y="517" width="0.1389%" height="15" fill="rgb(244,42,34)" fg:x="12111" fg:w="24"/><text x="70.3409%" y="527.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (8 samples, 0.05%)</title><rect x="70.2298%" y="485" width="0.0463%" height="15" fill="rgb(224,8,7)" fg:x="12135" fg:w="8"/><text x="70.4798%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (239 samples, 1.38%)</title><rect x="70.2761%" y="485" width="1.3832%" height="15" fill="rgb(210,201,45)" fg:x="12143" fg:w="239"/><text x="70.5261%" y="495.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (239 samples, 1.38%)</title><rect x="70.2761%" y="469" width="1.3832%" height="15" fill="rgb(252,185,21)" fg:x="12143" fg:w="239"/><text x="70.5261%" y="479.50"></text></g><g><title>exp (227 samples, 1.31%)</title><rect x="70.3455%" y="453" width="1.3137%" height="15" fill="rgb(223,131,1)" fg:x="12155" fg:w="227"/><text x="70.5955%" y="463.50"></text></g><g><title>[libm-2.31.so] (172 samples, 1.00%)</title><rect x="70.6638%" y="437" width="0.9954%" height="15" fill="rgb(245,141,16)" fg:x="12210" fg:w="172"/><text x="70.9138%" y="447.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (307 samples, 1.78%)</title><rect x="70.2298%" y="501" width="1.7767%" height="15" fill="rgb(229,55,45)" fg:x="12135" fg:w="307"/><text x="70.4798%" y="511.50">&lt;..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (60 samples, 0.35%)</title><rect x="71.6592%" y="485" width="0.3472%" height="15" fill="rgb(208,92,15)" fg:x="12382" fg:w="60"/><text x="71.9092%" y="495.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (60 samples, 0.35%)</title><rect x="71.6592%" y="469" width="0.3472%" height="15" fill="rgb(234,185,47)" fg:x="12382" fg:w="60"/><text x="71.9092%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (409 samples, 2.37%)</title><rect x="70.0330%" y="661" width="2.3670%" height="15" fill="rgb(253,104,50)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="671.50">&lt;r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (409 samples, 2.37%)</title><rect x="70.0330%" y="645" width="2.3670%" height="15" fill="rgb(205,70,7)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="655.50">ra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (409 samples, 2.37%)</title><rect x="70.0330%" y="629" width="2.3670%" height="15" fill="rgb(240,178,43)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="639.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (409 samples, 2.37%)</title><rect x="70.0330%" y="613" width="2.3670%" height="15" fill="rgb(214,112,2)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="623.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (409 samples, 2.37%)</title><rect x="70.0330%" y="597" width="2.3670%" height="15" fill="rgb(206,46,17)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="607.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (409 samples, 2.37%)</title><rect x="70.0330%" y="581" width="2.3670%" height="15" fill="rgb(225,220,16)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="591.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (409 samples, 2.37%)</title><rect x="70.0330%" y="565" width="2.3670%" height="15" fill="rgb(238,65,40)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="575.50">cr..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (409 samples, 2.37%)</title><rect x="70.0330%" y="549" width="2.3670%" height="15" fill="rgb(230,151,21)" fg:x="12101" fg:w="409"/><text x="70.2830%" y="559.50">cr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (399 samples, 2.31%)</title><rect x="70.0909%" y="533" width="2.3092%" height="15" fill="rgb(218,58,49)" fg:x="12111" fg:w="399"/><text x="70.3409%" y="543.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (375 samples, 2.17%)</title><rect x="70.2298%" y="517" width="2.1703%" height="15" fill="rgb(219,179,14)" fg:x="12135" fg:w="375"/><text x="70.4798%" y="527.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (68 samples, 0.39%)</title><rect x="72.0065%" y="501" width="0.3935%" height="15" fill="rgb(223,72,1)" fg:x="12442" fg:w="68"/><text x="72.2565%" y="511.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (2 samples, 0.01%)</title><rect x="72.4000%" y="501" width="0.0116%" height="15" fill="rgb(238,126,10)" fg:x="12510" fg:w="2"/><text x="72.6500%" y="511.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (2 samples, 0.01%)</title><rect x="72.4000%" y="485" width="0.0116%" height="15" fill="rgb(224,206,38)" fg:x="12510" fg:w="2"/><text x="72.6500%" y="495.50"></text></g><g><title>criterion::stats::dot (2 samples, 0.01%)</title><rect x="72.4000%" y="469" width="0.0116%" height="15" fill="rgb(212,201,54)" fg:x="12510" fg:w="2"/><text x="72.6500%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="72.4000%" y="453" width="0.0116%" height="15" fill="rgb(218,154,48)" fg:x="12510" fg:w="2"/><text x="72.6500%" y="463.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (893 samples, 5.17%)</title><rect x="67.2608%" y="917" width="5.1681%" height="15" fill="rgb(232,93,24)" fg:x="11622" fg:w="893"/><text x="67.5108%" y="927.50">rayon_..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (893 samples, 5.17%)</title><rect x="67.2608%" y="901" width="5.1681%" height="15" fill="rgb(245,30,21)" fg:x="11622" fg:w="893"/><text x="67.5108%" y="911.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (893 samples, 5.17%)</title><rect x="67.2608%" y="885" width="5.1681%" height="15" fill="rgb(242,148,29)" fg:x="11622" fg:w="893"/><text x="67.5108%" y="895.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (893 samples, 5.17%)</title><rect x="67.2608%" y="869" width="5.1681%" height="15" fill="rgb(244,153,54)" fg:x="11622" fg:w="893"/><text x="67.5108%" y="879.50">rayon:..</text></g><g><title>rayon_core::join::join_context (893 samples, 5.17%)</title><rect x="67.2608%" y="853" width="5.1681%" height="15" fill="rgb(252,87,22)" fg:x="11622" fg:w="893"/><text x="67.5108%" y="863.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (893 samples, 5.17%)</title><rect x="67.2608%" y="837" width="5.1681%" height="15" fill="rgb(210,51,29)" fg:x="11622" fg:w="893"/><text x="67.5108%" y="847.50">rayon_..</text></g><g><title>rayon_core::join::join_context::{{closure}} (893 samples, 5.17%)</title><rect x="67.2608%" y="821" width="5.1681%" height="15" fill="rgb(242,136,47)" fg:x="11622" fg:w="893"/><text x="67.5108%" y="831.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (414 samples, 2.40%)</title><rect x="70.0330%" y="805" width="2.3960%" height="15" fill="rgb(238,68,4)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="815.50">ra..</text></g><g><title>std::panic::catch_unwind (414 samples, 2.40%)</title><rect x="70.0330%" y="789" width="2.3960%" height="15" fill="rgb(242,161,30)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="799.50">st..</text></g><g><title>std::panicking::try (414 samples, 2.40%)</title><rect x="70.0330%" y="773" width="2.3960%" height="15" fill="rgb(218,58,44)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="783.50">st..</text></g><g><title>std::panicking::try::do_call (414 samples, 2.40%)</title><rect x="70.0330%" y="757" width="2.3960%" height="15" fill="rgb(252,125,32)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="767.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (414 samples, 2.40%)</title><rect x="70.0330%" y="741" width="2.3960%" height="15" fill="rgb(219,178,0)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="751.50">&lt;s..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (414 samples, 2.40%)</title><rect x="70.0330%" y="725" width="2.3960%" height="15" fill="rgb(213,152,7)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="735.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (414 samples, 2.40%)</title><rect x="70.0330%" y="709" width="2.3960%" height="15" fill="rgb(249,109,34)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="719.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (414 samples, 2.40%)</title><rect x="70.0330%" y="693" width="2.3960%" height="15" fill="rgb(232,96,21)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="703.50">ra..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (414 samples, 2.40%)</title><rect x="70.0330%" y="677" width="2.3960%" height="15" fill="rgb(228,27,39)" fg:x="12101" fg:w="414"/><text x="70.2830%" y="687.50">ra..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="72.4000%" y="661" width="0.0289%" height="15" fill="rgb(211,182,52)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="671.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="72.4000%" y="645" width="0.0289%" height="15" fill="rgb(234,178,38)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="72.4000%" y="629" width="0.0289%" height="15" fill="rgb(221,111,3)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="72.4000%" y="613" width="0.0289%" height="15" fill="rgb(228,175,21)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="72.4000%" y="597" width="0.0289%" height="15" fill="rgb(228,174,43)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="72.4000%" y="581" width="0.0289%" height="15" fill="rgb(211,191,0)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="72.4000%" y="565" width="0.0289%" height="15" fill="rgb(253,117,3)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="575.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="72.4000%" y="549" width="0.0289%" height="15" fill="rgb(241,127,19)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="72.4000%" y="533" width="0.0289%" height="15" fill="rgb(218,103,12)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="543.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="72.4000%" y="517" width="0.0289%" height="15" fill="rgb(236,214,43)" fg:x="12510" fg:w="5"/><text x="72.6500%" y="527.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="72.4116%" y="501" width="0.0174%" height="15" fill="rgb(244,144,19)" fg:x="12512" fg:w="3"/><text x="72.6616%" y="511.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="72.4116%" y="485" width="0.0174%" height="15" fill="rgb(246,188,10)" fg:x="12512" fg:w="3"/><text x="72.6616%" y="495.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="72.4347%" y="469" width="0.0116%" height="15" fill="rgb(212,193,33)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="72.4347%" y="453" width="0.0116%" height="15" fill="rgb(241,51,29)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2 samples, 0.01%)</title><rect x="72.4347%" y="437" width="0.0116%" height="15" fill="rgb(211,58,19)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="72.4347%" y="421" width="0.0116%" height="15" fill="rgb(229,111,26)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.01%)</title><rect x="72.4347%" y="405" width="0.0116%" height="15" fill="rgb(213,115,40)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.01%)</title><rect x="72.4347%" y="389" width="0.0116%" height="15" fill="rgb(209,56,44)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (2 samples, 0.01%)</title><rect x="72.4347%" y="373" width="0.0116%" height="15" fill="rgb(230,108,32)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="72.4347%" y="357" width="0.0116%" height="15" fill="rgb(216,165,31)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="72.4347%" y="341" width="0.0116%" height="15" fill="rgb(218,122,21)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.01%)</title><rect x="72.4347%" y="325" width="0.0116%" height="15" fill="rgb(223,224,47)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.01%)</title><rect x="72.4347%" y="309" width="0.0116%" height="15" fill="rgb(238,102,44)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (2 samples, 0.01%)</title><rect x="72.4347%" y="293" width="0.0116%" height="15" fill="rgb(236,46,40)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (2 samples, 0.01%)</title><rect x="72.4347%" y="277" width="0.0116%" height="15" fill="rgb(247,202,50)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="72.4347%" y="261" width="0.0116%" height="15" fill="rgb(209,99,20)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="271.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (2 samples, 0.01%)</title><rect x="72.4347%" y="245" width="0.0116%" height="15" fill="rgb(252,27,34)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.01%)</title><rect x="72.4347%" y="229" width="0.0116%" height="15" fill="rgb(215,206,23)" fg:x="12516" fg:w="2"/><text x="72.6847%" y="239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.02%)</title><rect x="72.4290%" y="917" width="0.0231%" height="15" fill="rgb(212,135,36)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.02%)</title><rect x="72.4290%" y="901" width="0.0231%" height="15" fill="rgb(240,189,1)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.02%)</title><rect x="72.4290%" y="885" width="0.0231%" height="15" fill="rgb(242,56,20)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="895.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.02%)</title><rect x="72.4290%" y="869" width="0.0231%" height="15" fill="rgb(247,132,33)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="879.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.02%)</title><rect x="72.4290%" y="853" width="0.0231%" height="15" fill="rgb(208,149,11)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="863.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.02%)</title><rect x="72.4290%" y="837" width="0.0231%" height="15" fill="rgb(211,33,11)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="847.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.02%)</title><rect x="72.4290%" y="821" width="0.0231%" height="15" fill="rgb(221,29,38)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="831.50"></text></g><g><title>std::panicking::try (4 samples, 0.02%)</title><rect x="72.4290%" y="805" width="0.0231%" height="15" fill="rgb(206,182,49)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="815.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.02%)</title><rect x="72.4290%" y="789" width="0.0231%" height="15" fill="rgb(216,140,1)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="799.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.02%)</title><rect x="72.4290%" y="773" width="0.0231%" height="15" fill="rgb(232,57,40)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (4 samples, 0.02%)</title><rect x="72.4290%" y="757" width="0.0231%" height="15" fill="rgb(224,186,18)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.02%)</title><rect x="72.4290%" y="741" width="0.0231%" height="15" fill="rgb(215,121,11)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.02%)</title><rect x="72.4290%" y="725" width="0.0231%" height="15" fill="rgb(245,147,10)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.02%)</title><rect x="72.4290%" y="709" width="0.0231%" height="15" fill="rgb(238,153,13)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="719.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.02%)</title><rect x="72.4290%" y="693" width="0.0231%" height="15" fill="rgb(233,108,0)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.02%)</title><rect x="72.4290%" y="677" width="0.0231%" height="15" fill="rgb(212,157,17)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.02%)</title><rect x="72.4290%" y="661" width="0.0231%" height="15" fill="rgb(225,213,38)" fg:x="12515" fg:w="4"/><text x="72.6790%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.02%)</title><rect x="72.4347%" y="645" width="0.0174%" height="15" fill="rgb(248,16,11)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="655.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="72.4347%" y="629" width="0.0174%" height="15" fill="rgb(241,33,4)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="639.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="72.4347%" y="613" width="0.0174%" height="15" fill="rgb(222,26,43)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="623.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="72.4347%" y="597" width="0.0174%" height="15" fill="rgb(243,29,36)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="607.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="72.4347%" y="581" width="0.0174%" height="15" fill="rgb(241,9,27)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.02%)</title><rect x="72.4347%" y="565" width="0.0174%" height="15" fill="rgb(205,117,26)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.02%)</title><rect x="72.4347%" y="549" width="0.0174%" height="15" fill="rgb(209,80,39)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="72.4347%" y="533" width="0.0174%" height="15" fill="rgb(239,155,6)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="543.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="72.4347%" y="517" width="0.0174%" height="15" fill="rgb(212,104,12)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="72.4347%" y="501" width="0.0174%" height="15" fill="rgb(234,204,3)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="72.4347%" y="485" width="0.0174%" height="15" fill="rgb(251,218,7)" fg:x="12516" fg:w="3"/><text x="72.6847%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.16%)</title><rect x="72.5100%" y="517" width="0.1620%" height="15" fill="rgb(221,81,32)" fg:x="12529" fg:w="28"/><text x="72.7600%" y="527.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (4 samples, 0.02%)</title><rect x="72.6720%" y="485" width="0.0231%" height="15" fill="rgb(214,152,26)" fg:x="12557" fg:w="4"/><text x="72.9220%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (203 samples, 1.17%)</title><rect x="72.6952%" y="485" width="1.1748%" height="15" fill="rgb(223,22,3)" fg:x="12561" fg:w="203"/><text x="72.9452%" y="495.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (203 samples, 1.17%)</title><rect x="72.6952%" y="469" width="1.1748%" height="15" fill="rgb(207,174,7)" fg:x="12561" fg:w="203"/><text x="72.9452%" y="479.50"></text></g><g><title>exp (189 samples, 1.09%)</title><rect x="72.7762%" y="453" width="1.0938%" height="15" fill="rgb(224,19,52)" fg:x="12575" fg:w="189"/><text x="73.0262%" y="463.50"></text></g><g><title>[libm-2.31.so] (143 samples, 0.83%)</title><rect x="73.0424%" y="437" width="0.8276%" height="15" fill="rgb(228,24,14)" fg:x="12621" fg:w="143"/><text x="73.2924%" y="447.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (244 samples, 1.41%)</title><rect x="72.6720%" y="501" width="1.4121%" height="15" fill="rgb(230,153,43)" fg:x="12557" fg:w="244"/><text x="72.9220%" y="511.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (37 samples, 0.21%)</title><rect x="73.8700%" y="485" width="0.2141%" height="15" fill="rgb(231,106,12)" fg:x="12764" fg:w="37"/><text x="74.1200%" y="495.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (37 samples, 0.21%)</title><rect x="73.8700%" y="469" width="0.2141%" height="15" fill="rgb(215,92,2)" fg:x="12764" fg:w="37"/><text x="74.1200%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (374 samples, 2.16%)</title><rect x="72.4521%" y="661" width="2.1645%" height="15" fill="rgb(249,143,25)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="671.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (374 samples, 2.16%)</title><rect x="72.4521%" y="645" width="2.1645%" height="15" fill="rgb(252,7,35)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="655.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (374 samples, 2.16%)</title><rect x="72.4521%" y="629" width="2.1645%" height="15" fill="rgb(216,69,40)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="639.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (374 samples, 2.16%)</title><rect x="72.4521%" y="613" width="2.1645%" height="15" fill="rgb(240,36,33)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="623.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (374 samples, 2.16%)</title><rect x="72.4521%" y="597" width="2.1645%" height="15" fill="rgb(231,128,14)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="607.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (374 samples, 2.16%)</title><rect x="72.4521%" y="581" width="2.1645%" height="15" fill="rgb(245,143,14)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="591.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (374 samples, 2.16%)</title><rect x="72.4521%" y="565" width="2.1645%" height="15" fill="rgb(222,130,28)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="575.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (374 samples, 2.16%)</title><rect x="72.4521%" y="549" width="2.1645%" height="15" fill="rgb(212,10,48)" fg:x="12519" fg:w="374"/><text x="72.7021%" y="559.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (364 samples, 2.11%)</title><rect x="72.5100%" y="533" width="2.1066%" height="15" fill="rgb(254,118,45)" fg:x="12529" fg:w="364"/><text x="72.7600%" y="543.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (336 samples, 1.94%)</title><rect x="72.6720%" y="517" width="1.9446%" height="15" fill="rgb(228,6,45)" fg:x="12557" fg:w="336"/><text x="72.9220%" y="527.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (92 samples, 0.53%)</title><rect x="74.0841%" y="501" width="0.5324%" height="15" fill="rgb(241,18,35)" fg:x="12801" fg:w="92"/><text x="74.3341%" y="511.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (2 samples, 0.01%)</title><rect x="74.6166%" y="501" width="0.0116%" height="15" fill="rgb(227,214,53)" fg:x="12893" fg:w="2"/><text x="74.8666%" y="511.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (2 samples, 0.01%)</title><rect x="74.6166%" y="485" width="0.0116%" height="15" fill="rgb(224,107,51)" fg:x="12893" fg:w="2"/><text x="74.8666%" y="495.50"></text></g><g><title>criterion::stats::dot (2 samples, 0.01%)</title><rect x="74.6166%" y="469" width="0.0116%" height="15" fill="rgb(248,60,28)" fg:x="12893" fg:w="2"/><text x="74.8666%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="74.6166%" y="453" width="0.0116%" height="15" fill="rgb(249,101,23)" fg:x="12893" fg:w="2"/><text x="74.8666%" y="463.50"></text></g><g><title>criterion::stats::dot::{{closure}} (2 samples, 0.01%)</title><rect x="74.6166%" y="437" width="0.0116%" height="15" fill="rgb(228,51,19)" fg:x="12893" fg:w="2"/><text x="74.8666%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (379 samples, 2.19%)</title><rect x="72.4521%" y="741" width="2.1934%" height="15" fill="rgb(213,20,6)" fg:x="12519" fg:w="379"/><text x="72.7021%" y="751.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (379 samples, 2.19%)</title><rect x="72.4521%" y="725" width="2.1934%" height="15" fill="rgb(212,124,10)" fg:x="12519" fg:w="379"/><text x="72.7021%" y="735.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (379 samples, 2.19%)</title><rect x="72.4521%" y="709" width="2.1934%" height="15" fill="rgb(248,3,40)" fg:x="12519" fg:w="379"/><text x="72.7021%" y="719.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (379 samples, 2.19%)</title><rect x="72.4521%" y="693" width="2.1934%" height="15" fill="rgb(223,178,23)" fg:x="12519" fg:w="379"/><text x="72.7021%" y="703.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (379 samples, 2.19%)</title><rect x="72.4521%" y="677" width="2.1934%" height="15" fill="rgb(240,132,45)" fg:x="12519" fg:w="379"/><text x="72.7021%" y="687.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="74.6166%" y="661" width="0.0289%" height="15" fill="rgb(245,164,36)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="671.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="74.6166%" y="645" width="0.0289%" height="15" fill="rgb(231,188,53)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="74.6166%" y="629" width="0.0289%" height="15" fill="rgb(237,198,39)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="74.6166%" y="613" width="0.0289%" height="15" fill="rgb(223,120,35)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="74.6166%" y="597" width="0.0289%" height="15" fill="rgb(253,107,49)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="74.6166%" y="581" width="0.0289%" height="15" fill="rgb(216,44,31)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="74.6166%" y="565" width="0.0289%" height="15" fill="rgb(253,87,21)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="575.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="74.6166%" y="549" width="0.0289%" height="15" fill="rgb(226,18,2)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="74.6166%" y="533" width="0.0289%" height="15" fill="rgb(216,8,46)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="543.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="74.6166%" y="517" width="0.0289%" height="15" fill="rgb(226,140,39)" fg:x="12893" fg:w="5"/><text x="74.8666%" y="527.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="74.6282%" y="501" width="0.0174%" height="15" fill="rgb(221,194,54)" fg:x="12895" fg:w="3"/><text x="74.8782%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.12%)</title><rect x="74.6802%" y="453" width="0.1215%" height="15" fill="rgb(213,92,11)" fg:x="12904" fg:w="21"/><text x="74.9302%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (12 samples, 0.07%)</title><rect x="74.8018%" y="421" width="0.0694%" height="15" fill="rgb(229,162,46)" fg:x="12925" fg:w="12"/><text x="75.0518%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (187 samples, 1.08%)</title><rect x="74.8712%" y="421" width="1.0822%" height="15" fill="rgb(214,111,36)" fg:x="12937" fg:w="187"/><text x="75.1212%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (187 samples, 1.08%)</title><rect x="74.8712%" y="405" width="1.0822%" height="15" fill="rgb(207,6,21)" fg:x="12937" fg:w="187"/><text x="75.1212%" y="415.50"></text></g><g><title>exp (173 samples, 1.00%)</title><rect x="74.9523%" y="389" width="1.0012%" height="15" fill="rgb(213,127,38)" fg:x="12951" fg:w="173"/><text x="75.2023%" y="399.50"></text></g><g><title>[libm-2.31.so] (117 samples, 0.68%)</title><rect x="75.2763%" y="373" width="0.6771%" height="15" fill="rgb(238,118,32)" fg:x="13007" fg:w="117"/><text x="75.5263%" y="383.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (225 samples, 1.30%)</title><rect x="74.8018%" y="437" width="1.3022%" height="15" fill="rgb(240,139,39)" fg:x="12925" fg:w="225"/><text x="75.0518%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (26 samples, 0.15%)</title><rect x="75.9535%" y="421" width="0.1505%" height="15" fill="rgb(235,10,37)" fg:x="13124" fg:w="26"/><text x="76.2035%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (26 samples, 0.15%)</title><rect x="75.9535%" y="405" width="0.1505%" height="15" fill="rgb(249,171,38)" fg:x="13124" fg:w="26"/><text x="76.2035%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (343 samples, 1.99%)</title><rect x="74.6455%" y="597" width="1.9851%" height="15" fill="rgb(242,144,32)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="607.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (343 samples, 1.99%)</title><rect x="74.6455%" y="581" width="1.9851%" height="15" fill="rgb(217,117,21)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="591.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (343 samples, 1.99%)</title><rect x="74.6455%" y="565" width="1.9851%" height="15" fill="rgb(249,87,1)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="575.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (343 samples, 1.99%)</title><rect x="74.6455%" y="549" width="1.9851%" height="15" fill="rgb(248,196,48)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="559.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (343 samples, 1.99%)</title><rect x="74.6455%" y="533" width="1.9851%" height="15" fill="rgb(251,206,33)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="543.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (343 samples, 1.99%)</title><rect x="74.6455%" y="517" width="1.9851%" height="15" fill="rgb(232,141,28)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="527.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (343 samples, 1.99%)</title><rect x="74.6455%" y="501" width="1.9851%" height="15" fill="rgb(209,167,14)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="511.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (343 samples, 1.99%)</title><rect x="74.6455%" y="485" width="1.9851%" height="15" fill="rgb(225,11,50)" fg:x="12898" fg:w="343"/><text x="74.8955%" y="495.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (337 samples, 1.95%)</title><rect x="74.6802%" y="469" width="1.9503%" height="15" fill="rgb(209,50,20)" fg:x="12904" fg:w="337"/><text x="74.9302%" y="479.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (316 samples, 1.83%)</title><rect x="74.8018%" y="453" width="1.8288%" height="15" fill="rgb(212,17,46)" fg:x="12925" fg:w="316"/><text x="75.0518%" y="463.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (91 samples, 0.53%)</title><rect x="76.1039%" y="437" width="0.5267%" height="15" fill="rgb(216,101,39)" fg:x="13150" fg:w="91"/><text x="76.3539%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,626 samples, 9.41%)</title><rect x="67.2550%" y="1029" width="9.4103%" height="15" fill="rgb(212,228,48)" fg:x="11621" fg:w="1626"/><text x="67.5050%" y="1039.50">rayon_core::j..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,626 samples, 9.41%)</title><rect x="67.2550%" y="1013" width="9.4103%" height="15" fill="rgb(250,6,50)" fg:x="11621" fg:w="1626"/><text x="67.5050%" y="1023.50">rayon_core::j..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,626 samples, 9.41%)</title><rect x="67.2550%" y="997" width="9.4103%" height="15" fill="rgb(250,160,48)" fg:x="11621" fg:w="1626"/><text x="67.5050%" y="1007.50">rayon::iter::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,626 samples, 9.41%)</title><rect x="67.2550%" y="981" width="9.4103%" height="15" fill="rgb(244,216,33)" fg:x="11621" fg:w="1626"/><text x="67.5050%" y="991.50">rayon::iter::..</text></g><g><title>rayon_core::join::join_context (1,625 samples, 9.40%)</title><rect x="67.2608%" y="965" width="9.4045%" height="15" fill="rgb(207,157,5)" fg:x="11622" fg:w="1625"/><text x="67.5108%" y="975.50">rayon_core::j..</text></g><g><title>rayon_core::registry::in_worker (1,625 samples, 9.40%)</title><rect x="67.2608%" y="949" width="9.4045%" height="15" fill="rgb(228,199,8)" fg:x="11622" fg:w="1625"/><text x="67.5108%" y="959.50">rayon_core::r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,625 samples, 9.40%)</title><rect x="67.2608%" y="933" width="9.4045%" height="15" fill="rgb(227,80,20)" fg:x="11622" fg:w="1625"/><text x="67.5108%" y="943.50">rayon_core::j..</text></g><g><title>rayon_core::unwind::halt_unwinding (728 samples, 4.21%)</title><rect x="72.4521%" y="917" width="4.2132%" height="15" fill="rgb(222,9,33)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="927.50">rayon..</text></g><g><title>std::panic::catch_unwind (728 samples, 4.21%)</title><rect x="72.4521%" y="901" width="4.2132%" height="15" fill="rgb(239,44,28)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="911.50">std::..</text></g><g><title>std::panicking::try (728 samples, 4.21%)</title><rect x="72.4521%" y="885" width="4.2132%" height="15" fill="rgb(249,187,43)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="895.50">std::..</text></g><g><title>std::panicking::try::do_call (728 samples, 4.21%)</title><rect x="72.4521%" y="869" width="4.2132%" height="15" fill="rgb(216,141,28)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="879.50">std::..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (728 samples, 4.21%)</title><rect x="72.4521%" y="853" width="4.2132%" height="15" fill="rgb(230,154,53)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="863.50">&lt;std:..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (728 samples, 4.21%)</title><rect x="72.4521%" y="837" width="4.2132%" height="15" fill="rgb(227,82,4)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="847.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (728 samples, 4.21%)</title><rect x="72.4521%" y="821" width="4.2132%" height="15" fill="rgb(220,107,16)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="831.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (728 samples, 4.21%)</title><rect x="72.4521%" y="805" width="4.2132%" height="15" fill="rgb(207,187,2)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="815.50">rayon..</text></g><g><title>rayon_core::join::join_context (728 samples, 4.21%)</title><rect x="72.4521%" y="789" width="4.2132%" height="15" fill="rgb(210,162,52)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="799.50">rayon..</text></g><g><title>rayon_core::registry::in_worker (728 samples, 4.21%)</title><rect x="72.4521%" y="773" width="4.2132%" height="15" fill="rgb(217,216,49)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="783.50">rayon..</text></g><g><title>rayon_core::join::join_context::{{closure}} (728 samples, 4.21%)</title><rect x="72.4521%" y="757" width="4.2132%" height="15" fill="rgb(218,146,49)" fg:x="12519" fg:w="728"/><text x="72.7021%" y="767.50">rayon..</text></g><g><title>rayon_core::unwind::halt_unwinding (349 samples, 2.02%)</title><rect x="74.6455%" y="741" width="2.0198%" height="15" fill="rgb(216,55,40)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="751.50">r..</text></g><g><title>std::panic::catch_unwind (349 samples, 2.02%)</title><rect x="74.6455%" y="725" width="2.0198%" height="15" fill="rgb(208,196,21)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="735.50">s..</text></g><g><title>std::panicking::try (349 samples, 2.02%)</title><rect x="74.6455%" y="709" width="2.0198%" height="15" fill="rgb(242,117,42)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="719.50">s..</text></g><g><title>std::panicking::try::do_call (349 samples, 2.02%)</title><rect x="74.6455%" y="693" width="2.0198%" height="15" fill="rgb(210,11,23)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="703.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (349 samples, 2.02%)</title><rect x="74.6455%" y="677" width="2.0198%" height="15" fill="rgb(217,110,2)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="687.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (349 samples, 2.02%)</title><rect x="74.6455%" y="661" width="2.0198%" height="15" fill="rgb(229,77,54)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="671.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (349 samples, 2.02%)</title><rect x="74.6455%" y="645" width="2.0198%" height="15" fill="rgb(218,53,16)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="655.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (349 samples, 2.02%)</title><rect x="74.6455%" y="629" width="2.0198%" height="15" fill="rgb(215,38,13)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="639.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (349 samples, 2.02%)</title><rect x="74.6455%" y="613" width="2.0198%" height="15" fill="rgb(235,42,18)" fg:x="12898" fg:w="349"/><text x="74.8955%" y="623.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="76.6306%" y="597" width="0.0347%" height="15" fill="rgb(219,66,54)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="607.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="76.6306%" y="581" width="0.0347%" height="15" fill="rgb(222,205,4)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="76.6306%" y="565" width="0.0347%" height="15" fill="rgb(227,213,46)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="76.6306%" y="549" width="0.0347%" height="15" fill="rgb(250,145,42)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="76.6306%" y="533" width="0.0347%" height="15" fill="rgb(219,15,2)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.03%)</title><rect x="76.6306%" y="517" width="0.0347%" height="15" fill="rgb(231,181,52)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.03%)</title><rect x="76.6306%" y="501" width="0.0347%" height="15" fill="rgb(235,1,42)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="511.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (6 samples, 0.03%)</title><rect x="76.6306%" y="485" width="0.0347%" height="15" fill="rgb(249,88,27)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (6 samples, 0.03%)</title><rect x="76.6306%" y="469" width="0.0347%" height="15" fill="rgb(235,145,16)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="479.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (6 samples, 0.03%)</title><rect x="76.6306%" y="453" width="0.0347%" height="15" fill="rgb(237,114,19)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.03%)</title><rect x="76.6306%" y="437" width="0.0347%" height="15" fill="rgb(238,51,50)" fg:x="13241" fg:w="6"/><text x="76.8806%" y="447.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="76.6480%" y="421" width="0.0174%" height="15" fill="rgb(205,194,25)" fg:x="13244" fg:w="3"/><text x="76.8980%" y="431.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="76.6537%" y="405" width="0.0116%" height="15" fill="rgb(215,203,17)" fg:x="13245" fg:w="2"/><text x="76.9037%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.10%)</title><rect x="76.7232%" y="517" width="0.1042%" height="15" fill="rgb(233,112,49)" fg:x="13257" fg:w="18"/><text x="76.9732%" y="527.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (13 samples, 0.08%)</title><rect x="76.8274%" y="485" width="0.0752%" height="15" fill="rgb(241,130,26)" fg:x="13275" fg:w="13"/><text x="77.0774%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (174 samples, 1.01%)</title><rect x="76.9026%" y="485" width="1.0070%" height="15" fill="rgb(252,223,19)" fg:x="13288" fg:w="174"/><text x="77.1526%" y="495.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (174 samples, 1.01%)</title><rect x="76.9026%" y="469" width="1.0070%" height="15" fill="rgb(211,95,25)" fg:x="13288" fg:w="174"/><text x="77.1526%" y="479.50"></text></g><g><title>exp (158 samples, 0.91%)</title><rect x="76.9952%" y="453" width="0.9144%" height="15" fill="rgb(251,182,27)" fg:x="13304" fg:w="158"/><text x="77.2452%" y="463.50"></text></g><g><title>[libm-2.31.so] (110 samples, 0.64%)</title><rect x="77.2730%" y="437" width="0.6366%" height="15" fill="rgb(238,24,4)" fg:x="13352" fg:w="110"/><text x="77.5230%" y="447.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (210 samples, 1.22%)</title><rect x="76.8274%" y="501" width="1.2153%" height="15" fill="rgb(224,220,25)" fg:x="13275" fg:w="210"/><text x="77.0774%" y="511.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (23 samples, 0.13%)</title><rect x="77.9096%" y="485" width="0.1331%" height="15" fill="rgb(239,133,26)" fg:x="13462" fg:w="23"/><text x="78.1596%" y="495.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (23 samples, 0.13%)</title><rect x="77.9096%" y="469" width="0.1331%" height="15" fill="rgb(211,94,48)" fg:x="13462" fg:w="23"/><text x="78.1596%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (331 samples, 1.92%)</title><rect x="76.6653%" y="661" width="1.9156%" height="15" fill="rgb(239,87,6)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="671.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (331 samples, 1.92%)</title><rect x="76.6653%" y="645" width="1.9156%" height="15" fill="rgb(227,62,0)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="655.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (331 samples, 1.92%)</title><rect x="76.6653%" y="629" width="1.9156%" height="15" fill="rgb(211,226,4)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="639.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (331 samples, 1.92%)</title><rect x="76.6653%" y="613" width="1.9156%" height="15" fill="rgb(253,38,52)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="623.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (331 samples, 1.92%)</title><rect x="76.6653%" y="597" width="1.9156%" height="15" fill="rgb(229,126,40)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="607.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (331 samples, 1.92%)</title><rect x="76.6653%" y="581" width="1.9156%" height="15" fill="rgb(229,165,44)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="591.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (331 samples, 1.92%)</title><rect x="76.6653%" y="565" width="1.9156%" height="15" fill="rgb(247,95,47)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="575.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (331 samples, 1.92%)</title><rect x="76.6653%" y="549" width="1.9156%" height="15" fill="rgb(216,140,30)" fg:x="13247" fg:w="331"/><text x="76.9153%" y="559.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (321 samples, 1.86%)</title><rect x="76.7232%" y="533" width="1.8577%" height="15" fill="rgb(246,214,8)" fg:x="13257" fg:w="321"/><text x="76.9732%" y="543.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (303 samples, 1.75%)</title><rect x="76.8274%" y="517" width="1.7536%" height="15" fill="rgb(227,224,15)" fg:x="13275" fg:w="303"/><text x="77.0774%" y="527.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (93 samples, 0.54%)</title><rect x="78.0427%" y="501" width="0.5382%" height="15" fill="rgb(233,175,4)" fg:x="13485" fg:w="93"/><text x="78.2927%" y="511.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (3 samples, 0.02%)</title><rect x="78.5809%" y="501" width="0.0174%" height="15" fill="rgb(221,66,45)" fg:x="13578" fg:w="3"/><text x="78.8309%" y="511.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (3 samples, 0.02%)</title><rect x="78.5809%" y="485" width="0.0174%" height="15" fill="rgb(221,178,18)" fg:x="13578" fg:w="3"/><text x="78.8309%" y="495.50"></text></g><g><title>criterion::stats::dot (2 samples, 0.01%)</title><rect x="78.5867%" y="469" width="0.0116%" height="15" fill="rgb(213,81,29)" fg:x="13579" fg:w="2"/><text x="78.8367%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="78.5867%" y="453" width="0.0116%" height="15" fill="rgb(220,89,49)" fg:x="13579" fg:w="2"/><text x="78.8367%" y="463.50"></text></g><g><title>criterion::stats::dot::{{closure}} (2 samples, 0.01%)</title><rect x="78.5867%" y="437" width="0.0116%" height="15" fill="rgb(227,60,33)" fg:x="13579" fg:w="2"/><text x="78.8367%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (337 samples, 1.95%)</title><rect x="76.6653%" y="741" width="1.9503%" height="15" fill="rgb(205,113,12)" fg:x="13247" fg:w="337"/><text x="76.9153%" y="751.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (337 samples, 1.95%)</title><rect x="76.6653%" y="725" width="1.9503%" height="15" fill="rgb(211,32,1)" fg:x="13247" fg:w="337"/><text x="76.9153%" y="735.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (337 samples, 1.95%)</title><rect x="76.6653%" y="709" width="1.9503%" height="15" fill="rgb(246,2,12)" fg:x="13247" fg:w="337"/><text x="76.9153%" y="719.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (337 samples, 1.95%)</title><rect x="76.6653%" y="693" width="1.9503%" height="15" fill="rgb(243,37,27)" fg:x="13247" fg:w="337"/><text x="76.9153%" y="703.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (337 samples, 1.95%)</title><rect x="76.6653%" y="677" width="1.9503%" height="15" fill="rgb(248,211,31)" fg:x="13247" fg:w="337"/><text x="76.9153%" y="687.50">r..</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="78.5809%" y="661" width="0.0347%" height="15" fill="rgb(242,146,47)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="671.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="78.5809%" y="645" width="0.0347%" height="15" fill="rgb(206,70,20)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="78.5809%" y="629" width="0.0347%" height="15" fill="rgb(215,10,51)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="78.5809%" y="613" width="0.0347%" height="15" fill="rgb(243,178,53)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="78.5809%" y="597" width="0.0347%" height="15" fill="rgb(233,221,20)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.03%)</title><rect x="78.5809%" y="581" width="0.0347%" height="15" fill="rgb(218,95,35)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.03%)</title><rect x="78.5809%" y="565" width="0.0347%" height="15" fill="rgb(229,13,5)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="575.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (6 samples, 0.03%)</title><rect x="78.5809%" y="549" width="0.0347%" height="15" fill="rgb(252,164,30)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (6 samples, 0.03%)</title><rect x="78.5809%" y="533" width="0.0347%" height="15" fill="rgb(232,68,36)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="543.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (6 samples, 0.03%)</title><rect x="78.5809%" y="517" width="0.0347%" height="15" fill="rgb(219,59,54)" fg:x="13578" fg:w="6"/><text x="78.8309%" y="527.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="78.5983%" y="501" width="0.0174%" height="15" fill="rgb(250,92,33)" fg:x="13581" fg:w="3"/><text x="78.8483%" y="511.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="78.6041%" y="485" width="0.0116%" height="15" fill="rgb(229,162,54)" fg:x="13582" fg:w="2"/><text x="78.8541%" y="495.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="78.6041%" y="469" width="0.0116%" height="15" fill="rgb(244,114,52)" fg:x="13582" fg:w="2"/><text x="78.8541%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.15%)</title><rect x="78.6446%" y="453" width="0.1505%" height="15" fill="rgb(212,211,43)" fg:x="13589" fg:w="26"/><text x="78.8946%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (10 samples, 0.06%)</title><rect x="78.7951%" y="421" width="0.0579%" height="15" fill="rgb(226,147,8)" fg:x="13615" fg:w="10"/><text x="79.0451%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (147 samples, 0.85%)</title><rect x="78.8529%" y="421" width="0.8507%" height="15" fill="rgb(226,23,13)" fg:x="13625" fg:w="147"/><text x="79.1029%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (147 samples, 0.85%)</title><rect x="78.8529%" y="405" width="0.8507%" height="15" fill="rgb(240,63,4)" fg:x="13625" fg:w="147"/><text x="79.1029%" y="415.50"></text></g><g><title>exp (140 samples, 0.81%)</title><rect x="78.8935%" y="389" width="0.8102%" height="15" fill="rgb(221,1,32)" fg:x="13632" fg:w="140"/><text x="79.1435%" y="399.50"></text></g><g><title>[libm-2.31.so] (97 samples, 0.56%)</title><rect x="79.1423%" y="373" width="0.5614%" height="15" fill="rgb(242,117,10)" fg:x="13675" fg:w="97"/><text x="79.3923%" y="383.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (176 samples, 1.02%)</title><rect x="78.7951%" y="437" width="1.0186%" height="15" fill="rgb(249,172,44)" fg:x="13615" fg:w="176"/><text x="79.0451%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (19 samples, 0.11%)</title><rect x="79.7037%" y="421" width="0.1100%" height="15" fill="rgb(244,46,45)" fg:x="13772" fg:w="19"/><text x="79.9537%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (19 samples, 0.11%)</title><rect x="79.7037%" y="405" width="0.1100%" height="15" fill="rgb(206,43,17)" fg:x="13772" fg:w="19"/><text x="79.9537%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (296 samples, 1.71%)</title><rect x="78.6157%" y="597" width="1.7131%" height="15" fill="rgb(239,218,39)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (296 samples, 1.71%)</title><rect x="78.6157%" y="581" width="1.7131%" height="15" fill="rgb(208,169,54)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 1.71%)</title><rect x="78.6157%" y="565" width="1.7131%" height="15" fill="rgb(247,25,42)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (296 samples, 1.71%)</title><rect x="78.6157%" y="549" width="1.7131%" height="15" fill="rgb(226,23,31)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (296 samples, 1.71%)</title><rect x="78.6157%" y="533" width="1.7131%" height="15" fill="rgb(247,16,28)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (296 samples, 1.71%)</title><rect x="78.6157%" y="517" width="1.7131%" height="15" fill="rgb(231,147,38)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (296 samples, 1.71%)</title><rect x="78.6157%" y="501" width="1.7131%" height="15" fill="rgb(253,81,48)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="511.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (296 samples, 1.71%)</title><rect x="78.6157%" y="485" width="1.7131%" height="15" fill="rgb(249,222,43)" fg:x="13584" fg:w="296"/><text x="78.8657%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (291 samples, 1.68%)</title><rect x="78.6446%" y="469" width="1.6841%" height="15" fill="rgb(221,3,27)" fg:x="13589" fg:w="291"/><text x="78.8946%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (265 samples, 1.53%)</title><rect x="78.7951%" y="453" width="1.5337%" height="15" fill="rgb(228,180,5)" fg:x="13615" fg:w="265"/><text x="79.0451%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (89 samples, 0.52%)</title><rect x="79.8136%" y="437" width="0.5151%" height="15" fill="rgb(227,131,42)" fg:x="13791" fg:w="89"/><text x="80.0636%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (638 samples, 3.69%)</title><rect x="76.6653%" y="853" width="3.6923%" height="15" fill="rgb(212,3,39)" fg:x="13247" fg:w="638"/><text x="76.9153%" y="863.50">rayo..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (638 samples, 3.69%)</title><rect x="76.6653%" y="837" width="3.6923%" height="15" fill="rgb(226,45,5)" fg:x="13247" fg:w="638"/><text x="76.9153%" y="847.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (638 samples, 3.69%)</title><rect x="76.6653%" y="821" width="3.6923%" height="15" fill="rgb(215,167,45)" fg:x="13247" fg:w="638"/><text x="76.9153%" y="831.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (638 samples, 3.69%)</title><rect x="76.6653%" y="805" width="3.6923%" height="15" fill="rgb(250,218,53)" fg:x="13247" fg:w="638"/><text x="76.9153%" y="815.50">rayo..</text></g><g><title>rayon_core::join::join_context (638 samples, 3.69%)</title><rect x="76.6653%" y="789" width="3.6923%" height="15" fill="rgb(207,140,0)" fg:x="13247" fg:w="638"/><text x="76.9153%" y="799.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (638 samples, 3.69%)</title><rect x="76.6653%" y="773" width="3.6923%" height="15" fill="rgb(238,133,51)" fg:x="13247" fg:w="638"/><text x="76.9153%" y="783.50">rayo..</text></g><g><title>rayon_core::join::join_context::{{closure}} (638 samples, 3.69%)</title><rect x="76.6653%" y="757" width="3.6923%" height="15" fill="rgb(218,203,53)" fg:x="13247" fg:w="638"/><text x="76.9153%" y="767.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (301 samples, 1.74%)</title><rect x="78.6157%" y="741" width="1.7420%" height="15" fill="rgb(226,184,25)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="751.50"></text></g><g><title>std::panic::catch_unwind (301 samples, 1.74%)</title><rect x="78.6157%" y="725" width="1.7420%" height="15" fill="rgb(231,121,21)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="735.50"></text></g><g><title>std::panicking::try (301 samples, 1.74%)</title><rect x="78.6157%" y="709" width="1.7420%" height="15" fill="rgb(251,14,34)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="719.50"></text></g><g><title>std::panicking::try::do_call (301 samples, 1.74%)</title><rect x="78.6157%" y="693" width="1.7420%" height="15" fill="rgb(249,193,11)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="703.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (301 samples, 1.74%)</title><rect x="78.6157%" y="677" width="1.7420%" height="15" fill="rgb(220,172,37)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (301 samples, 1.74%)</title><rect x="78.6157%" y="661" width="1.7420%" height="15" fill="rgb(231,229,43)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (301 samples, 1.74%)</title><rect x="78.6157%" y="645" width="1.7420%" height="15" fill="rgb(250,161,5)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (301 samples, 1.74%)</title><rect x="78.6157%" y="629" width="1.7420%" height="15" fill="rgb(218,225,18)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (301 samples, 1.74%)</title><rect x="78.6157%" y="613" width="1.7420%" height="15" fill="rgb(245,45,42)" fg:x="13584" fg:w="301"/><text x="78.8657%" y="623.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="80.3287%" y="597" width="0.0289%" height="15" fill="rgb(211,115,1)" fg:x="13880" fg:w="5"/><text x="80.5787%" y="607.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="80.3287%" y="581" width="0.0289%" height="15" fill="rgb(248,133,52)" fg:x="13880" fg:w="5"/><text x="80.5787%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="80.3287%" y="565" width="0.0289%" height="15" fill="rgb(238,100,21)" fg:x="13880" fg:w="5"/><text x="80.5787%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="80.3287%" y="549" width="0.0289%" height="15" fill="rgb(247,144,11)" fg:x="13880" fg:w="5"/><text x="80.5787%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="80.3287%" y="533" width="0.0289%" height="15" fill="rgb(206,164,16)" fg:x="13880" fg:w="5"/><text x="80.5787%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="80.3287%" y="517" width="0.0289%" height="15" fill="rgb(222,34,3)" fg:x="13880" fg:w="5"/><text x="80.5787%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="80.3287%" y="501" width="0.0289%" height="15" fill="rgb(248,82,4)" fg:x="13880" fg:w="5"/><text x="80.5787%" y="511.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (4 samples, 0.02%)</title><rect x="80.3345%" y="485" width="0.0231%" height="15" fill="rgb(228,81,46)" fg:x="13881" fg:w="4"/><text x="80.5845%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.02%)</title><rect x="80.3345%" y="469" width="0.0231%" height="15" fill="rgb(227,67,47)" fg:x="13881" fg:w="4"/><text x="80.5845%" y="479.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (4 samples, 0.02%)</title><rect x="80.3345%" y="453" width="0.0231%" height="15" fill="rgb(215,93,53)" fg:x="13881" fg:w="4"/><text x="80.5845%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (3 samples, 0.02%)</title><rect x="80.3403%" y="437" width="0.0174%" height="15" fill="rgb(248,194,39)" fg:x="13882" fg:w="3"/><text x="80.5903%" y="447.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="80.3403%" y="421" width="0.0174%" height="15" fill="rgb(215,5,19)" fg:x="13882" fg:w="3"/><text x="80.5903%" y="431.50"></text></g><g><title>oorandom::Rand64::rand_u64 (2 samples, 0.01%)</title><rect x="80.3461%" y="405" width="0.0116%" height="15" fill="rgb(226,215,51)" fg:x="13883" fg:w="2"/><text x="80.5961%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.12%)</title><rect x="80.4213%" y="453" width="0.1215%" height="15" fill="rgb(225,56,26)" fg:x="13896" fg:w="21"/><text x="80.6713%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (10 samples, 0.06%)</title><rect x="80.5429%" y="421" width="0.0579%" height="15" fill="rgb(222,75,29)" fg:x="13917" fg:w="10"/><text x="80.7929%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (150 samples, 0.87%)</title><rect x="80.6007%" y="421" width="0.8681%" height="15" fill="rgb(236,139,6)" fg:x="13927" fg:w="150"/><text x="80.8507%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (150 samples, 0.87%)</title><rect x="80.6007%" y="405" width="0.8681%" height="15" fill="rgb(223,137,36)" fg:x="13927" fg:w="150"/><text x="80.8507%" y="415.50"></text></g><g><title>exp (131 samples, 0.76%)</title><rect x="80.7107%" y="389" width="0.7581%" height="15" fill="rgb(226,99,2)" fg:x="13946" fg:w="131"/><text x="80.9607%" y="399.50"></text></g><g><title>[libm-2.31.so] (82 samples, 0.47%)</title><rect x="80.9943%" y="373" width="0.4746%" height="15" fill="rgb(206,133,23)" fg:x="13995" fg:w="82"/><text x="81.2443%" y="383.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (181 samples, 1.05%)</title><rect x="80.5429%" y="437" width="1.0475%" height="15" fill="rgb(243,173,15)" fg:x="13917" fg:w="181"/><text x="80.7929%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (21 samples, 0.12%)</title><rect x="81.4688%" y="421" width="0.1215%" height="15" fill="rgb(228,69,28)" fg:x="14077" fg:w="21"/><text x="81.7188%" y="431.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (21 samples, 0.12%)</title><rect x="81.4688%" y="405" width="0.1215%" height="15" fill="rgb(212,51,22)" fg:x="14077" fg:w="21"/><text x="81.7188%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (295 samples, 1.71%)</title><rect x="80.3577%" y="597" width="1.7073%" height="15" fill="rgb(227,113,0)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (295 samples, 1.71%)</title><rect x="80.3577%" y="581" width="1.7073%" height="15" fill="rgb(252,84,27)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (295 samples, 1.71%)</title><rect x="80.3577%" y="565" width="1.7073%" height="15" fill="rgb(223,145,39)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (295 samples, 1.71%)</title><rect x="80.3577%" y="549" width="1.7073%" height="15" fill="rgb(239,219,30)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (295 samples, 1.71%)</title><rect x="80.3577%" y="533" width="1.7073%" height="15" fill="rgb(224,196,39)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (295 samples, 1.71%)</title><rect x="80.3577%" y="517" width="1.7073%" height="15" fill="rgb(205,35,43)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (295 samples, 1.71%)</title><rect x="80.3577%" y="501" width="1.7073%" height="15" fill="rgb(228,201,21)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="511.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (295 samples, 1.71%)</title><rect x="80.3577%" y="485" width="1.7073%" height="15" fill="rgb(237,118,16)" fg:x="13885" fg:w="295"/><text x="80.6077%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (284 samples, 1.64%)</title><rect x="80.4213%" y="469" width="1.6436%" height="15" fill="rgb(241,17,19)" fg:x="13896" fg:w="284"/><text x="80.6713%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (263 samples, 1.52%)</title><rect x="80.5429%" y="453" width="1.5221%" height="15" fill="rgb(214,10,25)" fg:x="13917" fg:w="263"/><text x="80.7929%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (82 samples, 0.47%)</title><rect x="81.5904%" y="437" width="0.4746%" height="15" fill="rgb(238,37,29)" fg:x="14098" fg:w="82"/><text x="81.8404%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (300 samples, 1.74%)</title><rect x="80.3577%" y="677" width="1.7362%" height="15" fill="rgb(253,83,25)" fg:x="13885" fg:w="300"/><text x="80.6077%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (300 samples, 1.74%)</title><rect x="80.3577%" y="661" width="1.7362%" height="15" fill="rgb(234,192,12)" fg:x="13885" fg:w="300"/><text x="80.6077%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (300 samples, 1.74%)</title><rect x="80.3577%" y="645" width="1.7362%" height="15" fill="rgb(241,216,45)" fg:x="13885" fg:w="300"/><text x="80.6077%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (300 samples, 1.74%)</title><rect x="80.3577%" y="629" width="1.7362%" height="15" fill="rgb(242,22,33)" fg:x="13885" fg:w="300"/><text x="80.6077%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (300 samples, 1.74%)</title><rect x="80.3577%" y="613" width="1.7362%" height="15" fill="rgb(231,105,49)" fg:x="13885" fg:w="300"/><text x="80.6077%" y="623.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="82.0649%" y="597" width="0.0289%" height="15" fill="rgb(218,204,15)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="607.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.03%)</title><rect x="82.0649%" y="581" width="0.0289%" height="15" fill="rgb(235,138,41)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.03%)</title><rect x="82.0649%" y="565" width="0.0289%" height="15" fill="rgb(246,0,9)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="82.0649%" y="549" width="0.0289%" height="15" fill="rgb(210,74,4)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="82.0649%" y="533" width="0.0289%" height="15" fill="rgb(250,60,41)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="82.0649%" y="517" width="0.0289%" height="15" fill="rgb(220,115,12)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="82.0649%" y="501" width="0.0289%" height="15" fill="rgb(237,100,13)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="511.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (5 samples, 0.03%)</title><rect x="82.0649%" y="485" width="0.0289%" height="15" fill="rgb(213,55,26)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (5 samples, 0.03%)</title><rect x="82.0649%" y="469" width="0.0289%" height="15" fill="rgb(216,17,4)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="479.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (5 samples, 0.03%)</title><rect x="82.0649%" y="453" width="0.0289%" height="15" fill="rgb(220,153,47)" fg:x="14180" fg:w="5"/><text x="82.3149%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.02%)</title><rect x="82.0707%" y="437" width="0.0231%" height="15" fill="rgb(215,131,9)" fg:x="14181" fg:w="4"/><text x="82.3207%" y="447.50"></text></g><g><title>oorandom::Rand64::rand_range (2 samples, 0.01%)</title><rect x="82.0823%" y="421" width="0.0116%" height="15" fill="rgb(233,46,42)" fg:x="14183" fg:w="2"/><text x="82.3323%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.13%)</title><rect x="82.1633%" y="389" width="0.1331%" height="15" fill="rgb(226,86,7)" fg:x="14197" fg:w="23"/><text x="82.4133%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (7 samples, 0.04%)</title><rect x="82.2964%" y="357" width="0.0405%" height="15" fill="rgb(239,226,21)" fg:x="14220" fg:w="7"/><text x="82.5464%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (134 samples, 0.78%)</title><rect x="82.3369%" y="357" width="0.7755%" height="15" fill="rgb(244,137,22)" fg:x="14227" fg:w="134"/><text x="82.5869%" y="367.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (134 samples, 0.78%)</title><rect x="82.3369%" y="341" width="0.7755%" height="15" fill="rgb(211,139,35)" fg:x="14227" fg:w="134"/><text x="82.5869%" y="351.50"></text></g><g><title>exp (122 samples, 0.71%)</title><rect x="82.4064%" y="325" width="0.7061%" height="15" fill="rgb(214,62,50)" fg:x="14239" fg:w="122"/><text x="82.6564%" y="335.50"></text></g><g><title>[libm-2.31.so] (85 samples, 0.49%)</title><rect x="82.6205%" y="309" width="0.4919%" height="15" fill="rgb(212,113,44)" fg:x="14276" fg:w="85"/><text x="82.8705%" y="319.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (158 samples, 0.91%)</title><rect x="82.2964%" y="373" width="0.9144%" height="15" fill="rgb(226,150,43)" fg:x="14220" fg:w="158"/><text x="82.5464%" y="383.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (17 samples, 0.10%)</title><rect x="83.1124%" y="357" width="0.0984%" height="15" fill="rgb(250,71,37)" fg:x="14361" fg:w="17"/><text x="83.3624%" y="367.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (17 samples, 0.10%)</title><rect x="83.1124%" y="341" width="0.0984%" height="15" fill="rgb(219,76,19)" fg:x="14361" fg:w="17"/><text x="83.3624%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (280 samples, 1.62%)</title><rect x="82.0939%" y="533" width="1.6205%" height="15" fill="rgb(250,39,11)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (280 samples, 1.62%)</title><rect x="82.0939%" y="517" width="1.6205%" height="15" fill="rgb(230,64,31)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (280 samples, 1.62%)</title><rect x="82.0939%" y="501" width="1.6205%" height="15" fill="rgb(208,222,23)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (280 samples, 1.62%)</title><rect x="82.0939%" y="485" width="1.6205%" height="15" fill="rgb(227,125,18)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (280 samples, 1.62%)</title><rect x="82.0939%" y="469" width="1.6205%" height="15" fill="rgb(234,210,9)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (280 samples, 1.62%)</title><rect x="82.0939%" y="453" width="1.6205%" height="15" fill="rgb(217,127,24)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="463.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (280 samples, 1.62%)</title><rect x="82.0939%" y="437" width="1.6205%" height="15" fill="rgb(239,141,48)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="447.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (280 samples, 1.62%)</title><rect x="82.0939%" y="421" width="1.6205%" height="15" fill="rgb(227,109,8)" fg:x="14185" fg:w="280"/><text x="82.3439%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (268 samples, 1.55%)</title><rect x="82.1633%" y="405" width="1.5510%" height="15" fill="rgb(235,184,23)" fg:x="14197" fg:w="268"/><text x="82.4133%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (245 samples, 1.42%)</title><rect x="82.2964%" y="389" width="1.4179%" height="15" fill="rgb(227,226,48)" fg:x="14220" fg:w="245"/><text x="82.5464%" y="399.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (87 samples, 0.50%)</title><rect x="83.2108%" y="373" width="0.5035%" height="15" fill="rgb(206,150,11)" fg:x="14378" fg:w="87"/><text x="83.4608%" y="383.50"></text></g><g><title>criterion::analysis::regression::{{closure}} (2 samples, 0.01%)</title><rect x="83.7143%" y="373" width="0.0116%" height="15" fill="rgb(254,2,33)" fg:x="14465" fg:w="2"/><text x="83.9643%" y="383.50"></text></g><g><title>criterion::stats::bivariate::regression::Slope&lt;A&gt;::fit (2 samples, 0.01%)</title><rect x="83.7143%" y="357" width="0.0116%" height="15" fill="rgb(243,160,20)" fg:x="14465" fg:w="2"/><text x="83.9643%" y="367.50"></text></g><g><title>criterion::stats::dot (2 samples, 0.01%)</title><rect x="83.7143%" y="341" width="0.0116%" height="15" fill="rgb(218,208,30)" fg:x="14465" fg:w="2"/><text x="83.9643%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="83.7143%" y="325" width="0.0116%" height="15" fill="rgb(224,120,49)" fg:x="14465" fg:w="2"/><text x="83.9643%" y="335.50"></text></g><g><title>criterion::stats::dot::{{closure}} (2 samples, 0.01%)</title><rect x="83.7143%" y="309" width="0.0116%" height="15" fill="rgb(246,12,2)" fg:x="14465" fg:w="2"/><text x="83.9643%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,851 samples, 16.50%)</title><rect x="67.2493%" y="1109" width="16.4998%" height="15" fill="rgb(236,117,3)" fg:x="11620" fg:w="2851"/><text x="67.4993%" y="1119.50">rayon::iter::plumbing::br..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,851 samples, 16.50%)</title><rect x="67.2493%" y="1093" width="16.4998%" height="15" fill="rgb(216,128,52)" fg:x="11620" fg:w="2851"/><text x="67.4993%" y="1103.50">rayon::iter::plumbing::br..</text></g><g><title>rayon_core::join::join_context (2,850 samples, 16.49%)</title><rect x="67.2550%" y="1077" width="16.4940%" height="15" fill="rgb(246,145,19)" fg:x="11621" fg:w="2850"/><text x="67.5050%" y="1087.50">rayon_core::join::join_co..</text></g><g><title>rayon_core::registry::in_worker (2,850 samples, 16.49%)</title><rect x="67.2550%" y="1061" width="16.4940%" height="15" fill="rgb(222,11,46)" fg:x="11621" fg:w="2850"/><text x="67.5050%" y="1071.50">rayon_core::registry::in_..</text></g><g><title>rayon_core::join::join_context::{{closure}} (2,850 samples, 16.49%)</title><rect x="67.2550%" y="1045" width="16.4940%" height="15" fill="rgb(245,82,36)" fg:x="11621" fg:w="2850"/><text x="67.5050%" y="1055.50">rayon_core::join::join_co..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,224 samples, 7.08%)</title><rect x="76.6653%" y="1029" width="7.0837%" height="15" fill="rgb(250,73,51)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="1039.50">rayon_core..</text></g><g><title>std::panic::catch_unwind (1,224 samples, 7.08%)</title><rect x="76.6653%" y="1013" width="7.0837%" height="15" fill="rgb(221,189,23)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="1023.50">std::panic..</text></g><g><title>std::panicking::try (1,224 samples, 7.08%)</title><rect x="76.6653%" y="997" width="7.0837%" height="15" fill="rgb(210,33,7)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="1007.50">std::panic..</text></g><g><title>std::panicking::try::do_call (1,224 samples, 7.08%)</title><rect x="76.6653%" y="981" width="7.0837%" height="15" fill="rgb(210,107,22)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="991.50">std::panic..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,224 samples, 7.08%)</title><rect x="76.6653%" y="965" width="7.0837%" height="15" fill="rgb(222,116,37)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="975.50">&lt;std::pani..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,224 samples, 7.08%)</title><rect x="76.6653%" y="949" width="7.0837%" height="15" fill="rgb(254,17,48)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="959.50">rayon_core..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,224 samples, 7.08%)</title><rect x="76.6653%" y="933" width="7.0837%" height="15" fill="rgb(224,36,32)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="943.50">rayon::ite..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,224 samples, 7.08%)</title><rect x="76.6653%" y="917" width="7.0837%" height="15" fill="rgb(232,90,46)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="927.50">rayon::ite..</text></g><g><title>rayon_core::join::join_context (1,224 samples, 7.08%)</title><rect x="76.6653%" y="901" width="7.0837%" height="15" fill="rgb(241,66,40)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="911.50">rayon_core..</text></g><g><title>rayon_core::registry::in_worker (1,224 samples, 7.08%)</title><rect x="76.6653%" y="885" width="7.0837%" height="15" fill="rgb(249,184,29)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="895.50">rayon_core..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,224 samples, 7.08%)</title><rect x="76.6653%" y="869" width="7.0837%" height="15" fill="rgb(231,181,1)" fg:x="13247" fg:w="1224"/><text x="76.9153%" y="879.50">rayon_core..</text></g><g><title>rayon_core::unwind::halt_unwinding (586 samples, 3.39%)</title><rect x="80.3577%" y="853" width="3.3914%" height="15" fill="rgb(224,94,2)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="863.50">ray..</text></g><g><title>std::panic::catch_unwind (586 samples, 3.39%)</title><rect x="80.3577%" y="837" width="3.3914%" height="15" fill="rgb(229,170,15)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="847.50">std..</text></g><g><title>std::panicking::try (586 samples, 3.39%)</title><rect x="80.3577%" y="821" width="3.3914%" height="15" fill="rgb(240,127,35)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="831.50">std..</text></g><g><title>std::panicking::try::do_call (586 samples, 3.39%)</title><rect x="80.3577%" y="805" width="3.3914%" height="15" fill="rgb(248,196,34)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="815.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (586 samples, 3.39%)</title><rect x="80.3577%" y="789" width="3.3914%" height="15" fill="rgb(236,137,7)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="799.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (586 samples, 3.39%)</title><rect x="80.3577%" y="773" width="3.3914%" height="15" fill="rgb(235,127,16)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="783.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (586 samples, 3.39%)</title><rect x="80.3577%" y="757" width="3.3914%" height="15" fill="rgb(250,192,54)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="767.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (586 samples, 3.39%)</title><rect x="80.3577%" y="741" width="3.3914%" height="15" fill="rgb(218,98,20)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="751.50">ray..</text></g><g><title>rayon_core::join::join_context (586 samples, 3.39%)</title><rect x="80.3577%" y="725" width="3.3914%" height="15" fill="rgb(230,176,47)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="735.50">ray..</text></g><g><title>rayon_core::registry::in_worker (586 samples, 3.39%)</title><rect x="80.3577%" y="709" width="3.3914%" height="15" fill="rgb(244,2,33)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="719.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (586 samples, 3.39%)</title><rect x="80.3577%" y="693" width="3.3914%" height="15" fill="rgb(231,100,17)" fg:x="13885" fg:w="586"/><text x="80.6077%" y="703.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (286 samples, 1.66%)</title><rect x="82.0939%" y="677" width="1.6552%" height="15" fill="rgb(245,23,12)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="687.50"></text></g><g><title>std::panic::catch_unwind (286 samples, 1.66%)</title><rect x="82.0939%" y="661" width="1.6552%" height="15" fill="rgb(249,55,22)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="671.50"></text></g><g><title>std::panicking::try (286 samples, 1.66%)</title><rect x="82.0939%" y="645" width="1.6552%" height="15" fill="rgb(207,134,9)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="655.50"></text></g><g><title>std::panicking::try::do_call (286 samples, 1.66%)</title><rect x="82.0939%" y="629" width="1.6552%" height="15" fill="rgb(218,134,0)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="639.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (286 samples, 1.66%)</title><rect x="82.0939%" y="613" width="1.6552%" height="15" fill="rgb(213,212,33)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (286 samples, 1.66%)</title><rect x="82.0939%" y="597" width="1.6552%" height="15" fill="rgb(252,106,18)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (286 samples, 1.66%)</title><rect x="82.0939%" y="581" width="1.6552%" height="15" fill="rgb(208,126,42)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (286 samples, 1.66%)</title><rect x="82.0939%" y="565" width="1.6552%" height="15" fill="rgb(246,175,29)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="575.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (286 samples, 1.66%)</title><rect x="82.0939%" y="549" width="1.6552%" height="15" fill="rgb(215,13,50)" fg:x="14185" fg:w="286"/><text x="82.3439%" y="559.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="83.7143%" y="533" width="0.0347%" height="15" fill="rgb(216,172,15)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="543.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="83.7143%" y="517" width="0.0347%" height="15" fill="rgb(212,103,13)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="83.7143%" y="501" width="0.0347%" height="15" fill="rgb(231,171,36)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="83.7143%" y="485" width="0.0347%" height="15" fill="rgb(250,123,20)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="83.7143%" y="469" width="0.0347%" height="15" fill="rgb(212,53,50)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.03%)</title><rect x="83.7143%" y="453" width="0.0347%" height="15" fill="rgb(243,54,12)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.03%)</title><rect x="83.7143%" y="437" width="0.0347%" height="15" fill="rgb(234,101,34)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="447.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (6 samples, 0.03%)</title><rect x="83.7143%" y="421" width="0.0347%" height="15" fill="rgb(254,67,22)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (6 samples, 0.03%)</title><rect x="83.7143%" y="405" width="0.0347%" height="15" fill="rgb(250,35,47)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="415.50"></text></g><g><title>criterion::stats::bivariate::Data&lt;X,Y&gt;::bootstrap::{{closure}} (6 samples, 0.03%)</title><rect x="83.7143%" y="389" width="0.0347%" height="15" fill="rgb(226,126,38)" fg:x="14465" fg:w="6"/><text x="83.9643%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (4 samples, 0.02%)</title><rect x="83.7259%" y="373" width="0.0231%" height="15" fill="rgb(216,138,53)" fg:x="14467" fg:w="4"/><text x="83.9759%" y="383.50"></text></g><g><title>oorandom::Rand64::rand_range (3 samples, 0.02%)</title><rect x="83.7317%" y="357" width="0.0174%" height="15" fill="rgb(246,199,43)" fg:x="14468" fg:w="3"/><text x="83.9817%" y="367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="83.7491%" y="853" width="0.0116%" height="15" fill="rgb(232,125,11)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="83.7491%" y="837" width="0.0116%" height="15" fill="rgb(218,219,45)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="847.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.7491%" y="821" width="0.0116%" height="15" fill="rgb(216,102,54)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="831.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.7491%" y="805" width="0.0116%" height="15" fill="rgb(250,228,7)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="815.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7491%" y="789" width="0.0116%" height="15" fill="rgb(226,125,25)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="799.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="83.7491%" y="773" width="0.0116%" height="15" fill="rgb(224,165,27)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="783.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="83.7491%" y="757" width="0.0116%" height="15" fill="rgb(233,86,3)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="83.7491%" y="741" width="0.0116%" height="15" fill="rgb(228,116,20)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="751.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="83.7491%" y="725" width="0.0116%" height="15" fill="rgb(209,192,17)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="735.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="83.7491%" y="709" width="0.0116%" height="15" fill="rgb(224,88,34)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="719.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="83.7491%" y="693" width="0.0116%" height="15" fill="rgb(233,38,6)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="703.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="83.7491%" y="677" width="0.0116%" height="15" fill="rgb(212,59,30)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="687.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="83.7491%" y="661" width="0.0116%" height="15" fill="rgb(213,80,3)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="671.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="83.7491%" y="645" width="0.0116%" height="15" fill="rgb(251,178,7)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="655.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="83.7491%" y="629" width="0.0116%" height="15" fill="rgb(213,154,26)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="639.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.7491%" y="613" width="0.0116%" height="15" fill="rgb(238,165,49)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="623.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.7491%" y="597" width="0.0116%" height="15" fill="rgb(248,91,46)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="607.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7491%" y="581" width="0.0116%" height="15" fill="rgb(244,21,52)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="591.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7491%" y="565" width="0.0116%" height="15" fill="rgb(247,122,20)" fg:x="14471" fg:w="2"/><text x="83.9991%" y="575.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="83.7606%" y="645" width="0.0116%" height="15" fill="rgb(218,27,9)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="83.7606%" y="629" width="0.0116%" height="15" fill="rgb(246,7,6)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="639.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.7606%" y="613" width="0.0116%" height="15" fill="rgb(227,135,54)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="623.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.7606%" y="597" width="0.0116%" height="15" fill="rgb(247,14,11)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="607.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7606%" y="581" width="0.0116%" height="15" fill="rgb(206,149,34)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="591.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="83.7606%" y="565" width="0.0116%" height="15" fill="rgb(227,228,4)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="575.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="83.7606%" y="549" width="0.0116%" height="15" fill="rgb(238,218,28)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="559.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="83.7606%" y="533" width="0.0116%" height="15" fill="rgb(252,86,40)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="543.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="83.7606%" y="517" width="0.0116%" height="15" fill="rgb(251,225,11)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="83.7606%" y="501" width="0.0116%" height="15" fill="rgb(206,46,49)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="511.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="83.7606%" y="485" width="0.0116%" height="15" fill="rgb(245,128,24)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="495.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.7606%" y="469" width="0.0116%" height="15" fill="rgb(219,177,34)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="479.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.7606%" y="453" width="0.0116%" height="15" fill="rgb(218,60,48)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="463.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7606%" y="437" width="0.0116%" height="15" fill="rgb(221,11,5)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="447.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7606%" y="421" width="0.0116%" height="15" fill="rgb(220,148,13)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="431.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7606%" y="405" width="0.0116%" height="15" fill="rgb(210,16,3)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="415.50"></text></g><g><title>rayon::slice::quicksort::partition (2 samples, 0.01%)</title><rect x="83.7606%" y="389" width="0.0116%" height="15" fill="rgb(236,80,2)" fg:x="14473" fg:w="2"/><text x="84.0106%" y="399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.03%)</title><rect x="83.7491%" y="997" width="0.0347%" height="15" fill="rgb(239,129,19)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.03%)</title><rect x="83.7491%" y="981" width="0.0347%" height="15" fill="rgb(220,106,35)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="991.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (6 samples, 0.03%)</title><rect x="83.7491%" y="965" width="0.0347%" height="15" fill="rgb(252,139,45)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="975.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (6 samples, 0.03%)</title><rect x="83.7491%" y="949" width="0.0347%" height="15" fill="rgb(229,8,36)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="959.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="83.7491%" y="933" width="0.0347%" height="15" fill="rgb(230,126,33)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="943.50"></text></g><g><title>rayon_core::join::join (6 samples, 0.03%)</title><rect x="83.7491%" y="917" width="0.0347%" height="15" fill="rgb(239,140,21)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="927.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.03%)</title><rect x="83.7491%" y="901" width="0.0347%" height="15" fill="rgb(254,104,9)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.03%)</title><rect x="83.7491%" y="885" width="0.0347%" height="15" fill="rgb(239,52,14)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.03%)</title><rect x="83.7491%" y="869" width="0.0347%" height="15" fill="rgb(208,227,44)" fg:x="14471" fg:w="6"/><text x="83.9991%" y="879.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.02%)</title><rect x="83.7606%" y="853" width="0.0231%" height="15" fill="rgb(246,18,19)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="863.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.02%)</title><rect x="83.7606%" y="837" width="0.0231%" height="15" fill="rgb(235,228,25)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="847.50"></text></g><g><title>std::panicking::try (4 samples, 0.02%)</title><rect x="83.7606%" y="821" width="0.0231%" height="15" fill="rgb(240,156,20)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="831.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.02%)</title><rect x="83.7606%" y="805" width="0.0231%" height="15" fill="rgb(224,8,20)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="815.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.02%)</title><rect x="83.7606%" y="789" width="0.0231%" height="15" fill="rgb(214,12,52)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="799.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.02%)</title><rect x="83.7606%" y="773" width="0.0231%" height="15" fill="rgb(211,220,47)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="783.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (4 samples, 0.02%)</title><rect x="83.7606%" y="757" width="0.0231%" height="15" fill="rgb(250,173,5)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="767.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (4 samples, 0.02%)</title><rect x="83.7606%" y="741" width="0.0231%" height="15" fill="rgb(250,125,52)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.02%)</title><rect x="83.7606%" y="725" width="0.0231%" height="15" fill="rgb(209,133,18)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="735.50"></text></g><g><title>rayon_core::join::join (4 samples, 0.02%)</title><rect x="83.7606%" y="709" width="0.0231%" height="15" fill="rgb(216,173,22)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="719.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.02%)</title><rect x="83.7606%" y="693" width="0.0231%" height="15" fill="rgb(205,3,22)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.02%)</title><rect x="83.7606%" y="677" width="0.0231%" height="15" fill="rgb(248,22,20)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.02%)</title><rect x="83.7606%" y="661" width="0.0231%" height="15" fill="rgb(233,6,29)" fg:x="14473" fg:w="4"/><text x="84.0106%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="83.7722%" y="645" width="0.0116%" height="15" fill="rgb(240,22,54)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="655.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="83.7722%" y="629" width="0.0116%" height="15" fill="rgb(231,133,32)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="639.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="83.7722%" y="613" width="0.0116%" height="15" fill="rgb(248,193,4)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="623.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="83.7722%" y="597" width="0.0116%" height="15" fill="rgb(211,178,46)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="607.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="83.7722%" y="581" width="0.0116%" height="15" fill="rgb(224,5,42)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="83.7722%" y="565" width="0.0116%" height="15" fill="rgb(239,176,25)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="575.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.7722%" y="549" width="0.0116%" height="15" fill="rgb(245,187,50)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.7722%" y="533" width="0.0116%" height="15" fill="rgb(248,24,15)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7722%" y="517" width="0.0116%" height="15" fill="rgb(205,166,13)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="527.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="83.7722%" y="501" width="0.0116%" height="15" fill="rgb(208,114,23)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="511.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="83.7722%" y="485" width="0.0116%" height="15" fill="rgb(239,127,18)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="495.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="83.7722%" y="469" width="0.0116%" height="15" fill="rgb(219,154,28)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="479.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="83.7722%" y="453" width="0.0116%" height="15" fill="rgb(225,157,23)" fg:x="14475" fg:w="2"/><text x="84.0222%" y="463.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.02%)</title><rect x="83.7838%" y="789" width="0.0231%" height="15" fill="rgb(219,8,6)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="799.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.02%)</title><rect x="83.7838%" y="773" width="0.0231%" height="15" fill="rgb(212,47,6)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="783.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (4 samples, 0.02%)</title><rect x="83.7838%" y="757" width="0.0231%" height="15" fill="rgb(224,190,4)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="767.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (4 samples, 0.02%)</title><rect x="83.7838%" y="741" width="0.0231%" height="15" fill="rgb(239,183,29)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.02%)</title><rect x="83.7838%" y="725" width="0.0231%" height="15" fill="rgb(213,57,7)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="735.50"></text></g><g><title>rayon_core::join::join (4 samples, 0.02%)</title><rect x="83.7838%" y="709" width="0.0231%" height="15" fill="rgb(216,148,1)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="719.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.02%)</title><rect x="83.7838%" y="693" width="0.0231%" height="15" fill="rgb(236,182,29)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.02%)</title><rect x="83.7838%" y="677" width="0.0231%" height="15" fill="rgb(244,120,48)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.02%)</title><rect x="83.7838%" y="661" width="0.0231%" height="15" fill="rgb(206,71,34)" fg:x="14477" fg:w="4"/><text x="84.0338%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.02%)</title><rect x="83.7896%" y="645" width="0.0174%" height="15" fill="rgb(242,32,6)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="655.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="83.7896%" y="629" width="0.0174%" height="15" fill="rgb(241,35,3)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="639.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="83.7896%" y="613" width="0.0174%" height="15" fill="rgb(222,62,19)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="623.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="83.7896%" y="597" width="0.0174%" height="15" fill="rgb(223,110,41)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="607.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="83.7896%" y="581" width="0.0174%" height="15" fill="rgb(208,224,4)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.02%)</title><rect x="83.7896%" y="565" width="0.0174%" height="15" fill="rgb(241,137,19)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="575.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (3 samples, 0.02%)</title><rect x="83.7896%" y="549" width="0.0174%" height="15" fill="rgb(244,24,17)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (3 samples, 0.02%)</title><rect x="83.7896%" y="533" width="0.0174%" height="15" fill="rgb(245,178,49)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="83.7896%" y="517" width="0.0174%" height="15" fill="rgb(219,160,38)" fg:x="14478" fg:w="3"/><text x="84.0396%" y="527.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="83.7954%" y="501" width="0.0116%" height="15" fill="rgb(228,137,14)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="511.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="83.7954%" y="485" width="0.0116%" height="15" fill="rgb(237,134,11)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="495.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="83.7954%" y="469" width="0.0116%" height="15" fill="rgb(211,126,44)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="479.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="83.7954%" y="453" width="0.0116%" height="15" fill="rgb(226,171,33)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="463.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="83.7954%" y="437" width="0.0116%" height="15" fill="rgb(253,99,13)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="447.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="83.7954%" y="421" width="0.0116%" height="15" fill="rgb(244,48,7)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="431.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.7954%" y="405" width="0.0116%" height="15" fill="rgb(244,217,54)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="415.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.7954%" y="389" width="0.0116%" height="15" fill="rgb(224,15,18)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="399.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.7954%" y="373" width="0.0116%" height="15" fill="rgb(244,99,12)" fg:x="14479" fg:w="2"/><text x="84.0454%" y="383.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2,863 samples, 16.57%)</title><rect x="67.2493%" y="1125" width="16.5692%" height="15" fill="rgb(233,226,8)" fg:x="11620" fg:w="2863"/><text x="67.4993%" y="1135.50">rayon_core::join::join_con..</text></g><g><title>rayon_core::join::join::call::{{closure}} (12 samples, 0.07%)</title><rect x="83.7491%" y="1109" width="0.0694%" height="15" fill="rgb(229,211,3)" fg:x="14471" fg:w="12"/><text x="83.9991%" y="1119.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (12 samples, 0.07%)</title><rect x="83.7491%" y="1093" width="0.0694%" height="15" fill="rgb(216,140,21)" fg:x="14471" fg:w="12"/><text x="83.9991%" y="1103.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.07%)</title><rect x="83.7491%" y="1077" width="0.0694%" height="15" fill="rgb(234,122,30)" fg:x="14471" fg:w="12"/><text x="83.9991%" y="1087.50"></text></g><g><title>rayon_core::join::join (12 samples, 0.07%)</title><rect x="83.7491%" y="1061" width="0.0694%" height="15" fill="rgb(236,25,46)" fg:x="14471" fg:w="12"/><text x="83.9991%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.07%)</title><rect x="83.7491%" y="1045" width="0.0694%" height="15" fill="rgb(217,52,54)" fg:x="14471" fg:w="12"/><text x="83.9991%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.07%)</title><rect x="83.7491%" y="1029" width="0.0694%" height="15" fill="rgb(222,29,26)" fg:x="14471" fg:w="12"/><text x="83.9991%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.07%)</title><rect x="83.7491%" y="1013" width="0.0694%" height="15" fill="rgb(216,177,29)" fg:x="14471" fg:w="12"/><text x="83.9991%" y="1023.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.03%)</title><rect x="83.7838%" y="997" width="0.0347%" height="15" fill="rgb(247,136,51)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.03%)</title><rect x="83.7838%" y="981" width="0.0347%" height="15" fill="rgb(231,47,47)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="991.50"></text></g><g><title>std::panicking::try (6 samples, 0.03%)</title><rect x="83.7838%" y="965" width="0.0347%" height="15" fill="rgb(211,192,36)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="975.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.03%)</title><rect x="83.7838%" y="949" width="0.0347%" height="15" fill="rgb(229,156,32)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.03%)</title><rect x="83.7838%" y="933" width="0.0347%" height="15" fill="rgb(248,213,20)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.03%)</title><rect x="83.7838%" y="917" width="0.0347%" height="15" fill="rgb(217,64,7)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="927.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (6 samples, 0.03%)</title><rect x="83.7838%" y="901" width="0.0347%" height="15" fill="rgb(232,142,8)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (6 samples, 0.03%)</title><rect x="83.7838%" y="885" width="0.0347%" height="15" fill="rgb(224,92,44)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="83.7838%" y="869" width="0.0347%" height="15" fill="rgb(214,169,17)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="879.50"></text></g><g><title>rayon_core::join::join (6 samples, 0.03%)</title><rect x="83.7838%" y="853" width="0.0347%" height="15" fill="rgb(210,59,37)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="863.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.03%)</title><rect x="83.7838%" y="837" width="0.0347%" height="15" fill="rgb(214,116,48)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="847.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.03%)</title><rect x="83.7838%" y="821" width="0.0347%" height="15" fill="rgb(244,191,6)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="831.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.03%)</title><rect x="83.7838%" y="805" width="0.0347%" height="15" fill="rgb(241,50,52)" fg:x="14477" fg:w="6"/><text x="84.0338%" y="815.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="83.8069%" y="789" width="0.0116%" height="15" fill="rgb(236,75,39)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="799.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="83.8069%" y="773" width="0.0116%" height="15" fill="rgb(236,99,0)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="783.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="83.8069%" y="757" width="0.0116%" height="15" fill="rgb(207,202,15)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="767.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="83.8069%" y="741" width="0.0116%" height="15" fill="rgb(233,207,14)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="751.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="83.8069%" y="725" width="0.0116%" height="15" fill="rgb(226,27,51)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="83.8069%" y="709" width="0.0116%" height="15" fill="rgb(206,104,42)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="719.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.8069%" y="693" width="0.0116%" height="15" fill="rgb(212,225,4)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="703.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.8069%" y="677" width="0.0116%" height="15" fill="rgb(233,96,42)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.8069%" y="661" width="0.0116%" height="15" fill="rgb(229,21,32)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="671.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="83.8069%" y="645" width="0.0116%" height="15" fill="rgb(226,216,24)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="655.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="83.8069%" y="629" width="0.0116%" height="15" fill="rgb(221,163,17)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="83.8069%" y="613" width="0.0116%" height="15" fill="rgb(216,216,42)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="83.8069%" y="597" width="0.0116%" height="15" fill="rgb(240,118,7)" fg:x="14481" fg:w="2"/><text x="84.0569%" y="607.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.02%)</title><rect x="83.8185%" y="1093" width="0.0174%" height="15" fill="rgb(221,67,37)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3 samples, 0.02%)</title><rect x="83.8185%" y="1077" width="0.0174%" height="15" fill="rgb(241,32,44)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (3 samples, 0.02%)</title><rect x="83.8185%" y="1061" width="0.0174%" height="15" fill="rgb(235,204,43)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="1071.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.02%)</title><rect x="83.8185%" y="1045" width="0.0174%" height="15" fill="rgb(213,116,10)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="1055.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3 samples, 0.02%)</title><rect x="83.8185%" y="1029" width="0.0174%" height="15" fill="rgb(239,15,48)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="1039.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.02%)</title><rect x="83.8185%" y="1013" width="0.0174%" height="15" fill="rgb(207,123,36)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="83.8185%" y="997" width="0.0174%" height="15" fill="rgb(209,103,30)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="1007.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="83.8185%" y="981" width="0.0174%" height="15" fill="rgb(238,100,19)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="991.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="83.8185%" y="965" width="0.0174%" height="15" fill="rgb(244,30,14)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="975.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="83.8185%" y="949" width="0.0174%" height="15" fill="rgb(249,174,6)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="959.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.02%)</title><rect x="83.8185%" y="933" width="0.0174%" height="15" fill="rgb(235,213,41)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="83.8185%" y="917" width="0.0174%" height="15" fill="rgb(213,118,6)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="927.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (3 samples, 0.02%)</title><rect x="83.8185%" y="901" width="0.0174%" height="15" fill="rgb(235,44,51)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="911.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (3 samples, 0.02%)</title><rect x="83.8185%" y="885" width="0.0174%" height="15" fill="rgb(217,9,53)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="895.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="83.8185%" y="869" width="0.0174%" height="15" fill="rgb(237,172,34)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="879.50"></text></g><g><title>rayon_core::join::join (3 samples, 0.02%)</title><rect x="83.8185%" y="853" width="0.0174%" height="15" fill="rgb(206,206,11)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="863.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="83.8185%" y="837" width="0.0174%" height="15" fill="rgb(214,149,29)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="847.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="83.8185%" y="821" width="0.0174%" height="15" fill="rgb(208,123,3)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="831.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="83.8185%" y="805" width="0.0174%" height="15" fill="rgb(229,126,4)" fg:x="14483" fg:w="3"/><text x="84.0685%" y="815.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="83.8243%" y="789" width="0.0116%" height="15" fill="rgb(222,92,36)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="799.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="83.8243%" y="773" width="0.0116%" height="15" fill="rgb(216,39,41)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="783.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="83.8243%" y="757" width="0.0116%" height="15" fill="rgb(253,127,28)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="767.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="83.8243%" y="741" width="0.0116%" height="15" fill="rgb(249,152,51)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="751.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="83.8243%" y="725" width="0.0116%" height="15" fill="rgb(209,123,42)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="83.8243%" y="709" width="0.0116%" height="15" fill="rgb(241,118,22)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="719.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.8243%" y="693" width="0.0116%" height="15" fill="rgb(208,25,7)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="703.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="83.8243%" y="677" width="0.0116%" height="15" fill="rgb(243,144,39)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="83.8243%" y="661" width="0.0116%" height="15" fill="rgb(250,50,5)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="671.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="83.8243%" y="645" width="0.0116%" height="15" fill="rgb(207,67,11)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="655.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="83.8243%" y="629" width="0.0116%" height="15" fill="rgb(245,204,40)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="83.8243%" y="613" width="0.0116%" height="15" fill="rgb(238,228,24)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="83.8243%" y="597" width="0.0116%" height="15" fill="rgb(217,116,22)" fg:x="14484" fg:w="2"/><text x="84.0743%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.09%)</title><rect x="83.8764%" y="469" width="0.0868%" height="15" fill="rgb(234,98,12)" fg:x="14493" fg:w="15"/><text x="84.1264%" y="479.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (7 samples, 0.04%)</title><rect x="83.9632%" y="437" width="0.0405%" height="15" fill="rgb(242,170,50)" fg:x="14508" fg:w="7"/><text x="84.2132%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (127 samples, 0.73%)</title><rect x="84.0037%" y="437" width="0.7350%" height="15" fill="rgb(235,7,5)" fg:x="14515" fg:w="127"/><text x="84.2537%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (127 samples, 0.73%)</title><rect x="84.0037%" y="421" width="0.7350%" height="15" fill="rgb(241,114,28)" fg:x="14515" fg:w="127"/><text x="84.2537%" y="431.50"></text></g><g><title>exp (114 samples, 0.66%)</title><rect x="84.0789%" y="405" width="0.6598%" height="15" fill="rgb(246,112,42)" fg:x="14528" fg:w="114"/><text x="84.3289%" y="415.50"></text></g><g><title>[libm-2.31.so] (77 samples, 0.45%)</title><rect x="84.2931%" y="389" width="0.4456%" height="15" fill="rgb(248,228,14)" fg:x="14565" fg:w="77"/><text x="84.5431%" y="399.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (150 samples, 0.87%)</title><rect x="83.9632%" y="453" width="0.8681%" height="15" fill="rgb(208,133,18)" fg:x="14508" fg:w="150"/><text x="84.2132%" y="463.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (16 samples, 0.09%)</title><rect x="84.7387%" y="437" width="0.0926%" height="15" fill="rgb(207,35,49)" fg:x="14642" fg:w="16"/><text x="84.9887%" y="447.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (16 samples, 0.09%)</title><rect x="84.7387%" y="421" width="0.0926%" height="15" fill="rgb(205,68,36)" fg:x="14642" fg:w="16"/><text x="84.9887%" y="431.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (252 samples, 1.46%)</title><rect x="83.8417%" y="693" width="1.4584%" height="15" fill="rgb(245,62,40)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (252 samples, 1.46%)</title><rect x="83.8417%" y="677" width="1.4584%" height="15" fill="rgb(228,27,24)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (252 samples, 1.46%)</title><rect x="83.8417%" y="661" width="1.4584%" height="15" fill="rgb(253,19,12)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (252 samples, 1.46%)</title><rect x="83.8417%" y="645" width="1.4584%" height="15" fill="rgb(232,28,20)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (252 samples, 1.46%)</title><rect x="83.8417%" y="629" width="1.4584%" height="15" fill="rgb(218,35,51)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (252 samples, 1.46%)</title><rect x="83.8417%" y="613" width="1.4584%" height="15" fill="rgb(212,90,40)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (252 samples, 1.46%)</title><rect x="83.8417%" y="597" width="1.4584%" height="15" fill="rgb(220,172,12)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (252 samples, 1.46%)</title><rect x="83.8417%" y="581" width="1.4584%" height="15" fill="rgb(226,159,20)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (252 samples, 1.46%)</title><rect x="83.8417%" y="565" width="1.4584%" height="15" fill="rgb(234,205,16)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (252 samples, 1.46%)</title><rect x="83.8417%" y="549" width="1.4584%" height="15" fill="rgb(207,9,39)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (252 samples, 1.46%)</title><rect x="83.8417%" y="533" width="1.4584%" height="15" fill="rgb(249,143,15)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (252 samples, 1.46%)</title><rect x="83.8417%" y="517" width="1.4584%" height="15" fill="rgb(253,133,29)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (252 samples, 1.46%)</title><rect x="83.8417%" y="501" width="1.4584%" height="15" fill="rgb(221,187,0)" fg:x="14487" fg:w="252"/><text x="84.0917%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (246 samples, 1.42%)</title><rect x="83.8764%" y="485" width="1.4237%" height="15" fill="rgb(205,204,26)" fg:x="14493" fg:w="246"/><text x="84.1264%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (231 samples, 1.34%)</title><rect x="83.9632%" y="469" width="1.3369%" height="15" fill="rgb(224,68,54)" fg:x="14508" fg:w="231"/><text x="84.2132%" y="479.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (81 samples, 0.47%)</title><rect x="84.8313%" y="453" width="0.4688%" height="15" fill="rgb(209,67,4)" fg:x="14658" fg:w="81"/><text x="85.0813%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.14%)</title><rect x="85.3174%" y="405" width="0.1389%" height="15" fill="rgb(228,229,18)" fg:x="14742" fg:w="24"/><text x="85.5674%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (15 samples, 0.09%)</title><rect x="85.4563%" y="373" width="0.0868%" height="15" fill="rgb(231,89,13)" fg:x="14766" fg:w="15"/><text x="85.7063%" y="383.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (131 samples, 0.76%)</title><rect x="85.5431%" y="373" width="0.7581%" height="15" fill="rgb(210,182,18)" fg:x="14781" fg:w="131"/><text x="85.7931%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (131 samples, 0.76%)</title><rect x="85.5431%" y="357" width="0.7581%" height="15" fill="rgb(240,105,2)" fg:x="14781" fg:w="131"/><text x="85.7931%" y="367.50"></text></g><g><title>exp (120 samples, 0.69%)</title><rect x="85.6068%" y="341" width="0.6945%" height="15" fill="rgb(207,170,50)" fg:x="14792" fg:w="120"/><text x="85.8568%" y="351.50"></text></g><g><title>[libm-2.31.so] (84 samples, 0.49%)</title><rect x="85.8152%" y="325" width="0.4861%" height="15" fill="rgb(232,133,24)" fg:x="14828" fg:w="84"/><text x="86.0652%" y="335.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (163 samples, 0.94%)</title><rect x="85.4563%" y="389" width="0.9433%" height="15" fill="rgb(235,166,27)" fg:x="14766" fg:w="163"/><text x="85.7063%" y="399.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (17 samples, 0.10%)</title><rect x="86.3013%" y="373" width="0.0984%" height="15" fill="rgb(209,19,13)" fg:x="14912" fg:w="17"/><text x="86.5513%" y="383.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (17 samples, 0.10%)</title><rect x="86.3013%" y="357" width="0.0984%" height="15" fill="rgb(226,79,39)" fg:x="14912" fg:w="17"/><text x="86.5513%" y="367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (526 samples, 3.04%)</title><rect x="83.8417%" y="805" width="3.0442%" height="15" fill="rgb(222,163,10)" fg:x="14487" fg:w="526"/><text x="84.0917%" y="815.50">ray..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (526 samples, 3.04%)</title><rect x="83.8417%" y="789" width="3.0442%" height="15" fill="rgb(214,44,19)" fg:x="14487" fg:w="526"/><text x="84.0917%" y="799.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (526 samples, 3.04%)</title><rect x="83.8417%" y="773" width="3.0442%" height="15" fill="rgb(210,217,13)" fg:x="14487" fg:w="526"/><text x="84.0917%" y="783.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (526 samples, 3.04%)</title><rect x="83.8417%" y="757" width="3.0442%" height="15" fill="rgb(237,61,54)" fg:x="14487" fg:w="526"/><text x="84.0917%" y="767.50">ray..</text></g><g><title>rayon_core::join::join_context (526 samples, 3.04%)</title><rect x="83.8417%" y="741" width="3.0442%" height="15" fill="rgb(226,184,24)" fg:x="14487" fg:w="526"/><text x="84.0917%" y="751.50">ray..</text></g><g><title>rayon_core::registry::in_worker (526 samples, 3.04%)</title><rect x="83.8417%" y="725" width="3.0442%" height="15" fill="rgb(223,226,4)" fg:x="14487" fg:w="526"/><text x="84.0917%" y="735.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (526 samples, 3.04%)</title><rect x="83.8417%" y="709" width="3.0442%" height="15" fill="rgb(210,26,41)" fg:x="14487" fg:w="526"/><text x="84.0917%" y="719.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (274 samples, 1.59%)</title><rect x="85.3001%" y="693" width="1.5857%" height="15" fill="rgb(220,221,6)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="703.50"></text></g><g><title>std::panic::catch_unwind (274 samples, 1.59%)</title><rect x="85.3001%" y="677" width="1.5857%" height="15" fill="rgb(225,89,49)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="687.50"></text></g><g><title>std::panicking::try (274 samples, 1.59%)</title><rect x="85.3001%" y="661" width="1.5857%" height="15" fill="rgb(218,70,45)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="671.50"></text></g><g><title>std::panicking::try::do_call (274 samples, 1.59%)</title><rect x="85.3001%" y="645" width="1.5857%" height="15" fill="rgb(238,166,21)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="655.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (274 samples, 1.59%)</title><rect x="85.3001%" y="629" width="1.5857%" height="15" fill="rgb(224,141,44)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (274 samples, 1.59%)</title><rect x="85.3001%" y="613" width="1.5857%" height="15" fill="rgb(230,12,49)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (274 samples, 1.59%)</title><rect x="85.3001%" y="597" width="1.5857%" height="15" fill="rgb(212,174,12)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (274 samples, 1.59%)</title><rect x="85.3001%" y="581" width="1.5857%" height="15" fill="rgb(246,67,9)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (274 samples, 1.59%)</title><rect x="85.3001%" y="565" width="1.5857%" height="15" fill="rgb(239,35,23)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (274 samples, 1.59%)</title><rect x="85.3001%" y="549" width="1.5857%" height="15" fill="rgb(211,167,0)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="559.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (274 samples, 1.59%)</title><rect x="85.3001%" y="533" width="1.5857%" height="15" fill="rgb(225,119,45)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (274 samples, 1.59%)</title><rect x="85.3001%" y="517" width="1.5857%" height="15" fill="rgb(210,162,6)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (274 samples, 1.59%)</title><rect x="85.3001%" y="501" width="1.5857%" height="15" fill="rgb(208,118,35)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (274 samples, 1.59%)</title><rect x="85.3001%" y="485" width="1.5857%" height="15" fill="rgb(239,4,53)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (274 samples, 1.59%)</title><rect x="85.3001%" y="469" width="1.5857%" height="15" fill="rgb(213,130,21)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (274 samples, 1.59%)</title><rect x="85.3001%" y="453" width="1.5857%" height="15" fill="rgb(235,148,0)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="463.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (274 samples, 1.59%)</title><rect x="85.3001%" y="437" width="1.5857%" height="15" fill="rgb(244,224,18)" fg:x="14739" fg:w="274"/><text x="85.5501%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (271 samples, 1.57%)</title><rect x="85.3174%" y="421" width="1.5684%" height="15" fill="rgb(211,214,4)" fg:x="14742" fg:w="271"/><text x="85.5674%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (247 samples, 1.43%)</title><rect x="85.4563%" y="405" width="1.4295%" height="15" fill="rgb(206,119,25)" fg:x="14766" fg:w="247"/><text x="85.7063%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (84 samples, 0.49%)</title><rect x="86.3997%" y="389" width="0.4861%" height="15" fill="rgb(243,93,47)" fg:x="14929" fg:w="84"/><text x="86.6497%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.19%)</title><rect x="86.9205%" y="405" width="0.1852%" height="15" fill="rgb(224,194,6)" fg:x="15019" fg:w="32"/><text x="87.1705%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (4 samples, 0.02%)</title><rect x="87.1057%" y="373" width="0.0231%" height="15" fill="rgb(243,229,6)" fg:x="15051" fg:w="4"/><text x="87.3557%" y="383.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (144 samples, 0.83%)</title><rect x="87.1289%" y="373" width="0.8334%" height="15" fill="rgb(207,23,50)" fg:x="15055" fg:w="144"/><text x="87.3789%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (144 samples, 0.83%)</title><rect x="87.1289%" y="357" width="0.8334%" height="15" fill="rgb(253,192,32)" fg:x="15055" fg:w="144"/><text x="87.3789%" y="367.50"></text></g><g><title>exp (133 samples, 0.77%)</title><rect x="87.1925%" y="341" width="0.7697%" height="15" fill="rgb(213,21,6)" fg:x="15066" fg:w="133"/><text x="87.4425%" y="351.50"></text></g><g><title>[libm-2.31.so] (97 samples, 0.56%)</title><rect x="87.4009%" y="325" width="0.5614%" height="15" fill="rgb(243,151,13)" fg:x="15102" fg:w="97"/><text x="87.6509%" y="335.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (168 samples, 0.97%)</title><rect x="87.1057%" y="389" width="0.9723%" height="15" fill="rgb(233,165,41)" fg:x="15051" fg:w="168"/><text x="87.3557%" y="399.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (20 samples, 0.12%)</title><rect x="87.9623%" y="373" width="0.1157%" height="15" fill="rgb(246,176,45)" fg:x="15199" fg:w="20"/><text x="88.2123%" y="383.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (20 samples, 0.12%)</title><rect x="87.9623%" y="357" width="0.1157%" height="15" fill="rgb(217,170,52)" fg:x="15199" fg:w="20"/><text x="88.2123%" y="367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (288 samples, 1.67%)</title><rect x="86.8858%" y="629" width="1.6668%" height="15" fill="rgb(214,203,54)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (288 samples, 1.67%)</title><rect x="86.8858%" y="613" width="1.6668%" height="15" fill="rgb(248,215,49)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (288 samples, 1.67%)</title><rect x="86.8858%" y="597" width="1.6668%" height="15" fill="rgb(208,46,10)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (288 samples, 1.67%)</title><rect x="86.8858%" y="581" width="1.6668%" height="15" fill="rgb(254,5,31)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (288 samples, 1.67%)</title><rect x="86.8858%" y="565" width="1.6668%" height="15" fill="rgb(222,104,33)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (288 samples, 1.67%)</title><rect x="86.8858%" y="549" width="1.6668%" height="15" fill="rgb(248,49,16)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="559.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (288 samples, 1.67%)</title><rect x="86.8858%" y="533" width="1.6668%" height="15" fill="rgb(232,198,41)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (288 samples, 1.67%)</title><rect x="86.8858%" y="517" width="1.6668%" height="15" fill="rgb(214,125,3)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (288 samples, 1.67%)</title><rect x="86.8858%" y="501" width="1.6668%" height="15" fill="rgb(229,220,28)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (288 samples, 1.67%)</title><rect x="86.8858%" y="485" width="1.6668%" height="15" fill="rgb(222,64,37)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (288 samples, 1.67%)</title><rect x="86.8858%" y="469" width="1.6668%" height="15" fill="rgb(249,184,13)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (288 samples, 1.67%)</title><rect x="86.8858%" y="453" width="1.6668%" height="15" fill="rgb(252,176,6)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="463.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (288 samples, 1.67%)</title><rect x="86.8858%" y="437" width="1.6668%" height="15" fill="rgb(228,153,7)" fg:x="15013" fg:w="288"/><text x="87.1358%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (282 samples, 1.63%)</title><rect x="86.9205%" y="421" width="1.6320%" height="15" fill="rgb(242,193,5)" fg:x="15019" fg:w="282"/><text x="87.1705%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (250 samples, 1.45%)</title><rect x="87.1057%" y="405" width="1.4468%" height="15" fill="rgb(232,140,9)" fg:x="15051" fg:w="250"/><text x="87.3557%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (82 samples, 0.47%)</title><rect x="88.0780%" y="389" width="0.4746%" height="15" fill="rgb(213,222,16)" fg:x="15219" fg:w="82"/><text x="88.3280%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.13%)</title><rect x="88.5931%" y="341" width="0.1331%" height="15" fill="rgb(222,75,50)" fg:x="15308" fg:w="23"/><text x="88.8431%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (13 samples, 0.08%)</title><rect x="88.7262%" y="309" width="0.0752%" height="15" fill="rgb(205,180,2)" fg:x="15331" fg:w="13"/><text x="88.9762%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (154 samples, 0.89%)</title><rect x="88.8014%" y="309" width="0.8913%" height="15" fill="rgb(216,34,7)" fg:x="15344" fg:w="154"/><text x="89.0514%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (154 samples, 0.89%)</title><rect x="88.8014%" y="293" width="0.8913%" height="15" fill="rgb(253,16,32)" fg:x="15344" fg:w="154"/><text x="89.0514%" y="303.50"></text></g><g><title>exp (139 samples, 0.80%)</title><rect x="88.8882%" y="277" width="0.8044%" height="15" fill="rgb(208,97,28)" fg:x="15359" fg:w="139"/><text x="89.1382%" y="287.50"></text></g><g><title>[libm-2.31.so] (95 samples, 0.55%)</title><rect x="89.1429%" y="261" width="0.5498%" height="15" fill="rgb(225,92,11)" fg:x="15403" fg:w="95"/><text x="89.3929%" y="271.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (201 samples, 1.16%)</title><rect x="88.7262%" y="325" width="1.1633%" height="15" fill="rgb(243,38,12)" fg:x="15331" fg:w="201"/><text x="88.9762%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (34 samples, 0.20%)</title><rect x="89.6927%" y="309" width="0.1968%" height="15" fill="rgb(208,139,16)" fg:x="15498" fg:w="34"/><text x="89.9427%" y="319.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (34 samples, 0.20%)</title><rect x="89.6927%" y="293" width="0.1968%" height="15" fill="rgb(227,24,9)" fg:x="15498" fg:w="34"/><text x="89.9427%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,123 samples, 6.50%)</title><rect x="83.8417%" y="917" width="6.4992%" height="15" fill="rgb(206,62,11)" fg:x="14487" fg:w="1123"/><text x="84.0917%" y="927.50">rayon_cor..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,123 samples, 6.50%)</title><rect x="83.8417%" y="901" width="6.4992%" height="15" fill="rgb(228,134,27)" fg:x="14487" fg:w="1123"/><text x="84.0917%" y="911.50">rayon_cor..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,123 samples, 6.50%)</title><rect x="83.8417%" y="885" width="6.4992%" height="15" fill="rgb(205,55,33)" fg:x="14487" fg:w="1123"/><text x="84.0917%" y="895.50">rayon::it..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,123 samples, 6.50%)</title><rect x="83.8417%" y="869" width="6.4992%" height="15" fill="rgb(243,75,43)" fg:x="14487" fg:w="1123"/><text x="84.0917%" y="879.50">rayon::it..</text></g><g><title>rayon_core::join::join_context (1,123 samples, 6.50%)</title><rect x="83.8417%" y="853" width="6.4992%" height="15" fill="rgb(223,27,42)" fg:x="14487" fg:w="1123"/><text x="84.0917%" y="863.50">rayon_cor..</text></g><g><title>rayon_core::registry::in_worker (1,123 samples, 6.50%)</title><rect x="83.8417%" y="837" width="6.4992%" height="15" fill="rgb(232,189,33)" fg:x="14487" fg:w="1123"/><text x="84.0917%" y="847.50">rayon_cor..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,123 samples, 6.50%)</title><rect x="83.8417%" y="821" width="6.4992%" height="15" fill="rgb(210,9,39)" fg:x="14487" fg:w="1123"/><text x="84.0917%" y="831.50">rayon_cor..</text></g><g><title>rayon_core::unwind::halt_unwinding (597 samples, 3.46%)</title><rect x="86.8858%" y="805" width="3.4551%" height="15" fill="rgb(242,85,26)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="815.50">ray..</text></g><g><title>std::panic::catch_unwind (597 samples, 3.46%)</title><rect x="86.8858%" y="789" width="3.4551%" height="15" fill="rgb(248,44,4)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="799.50">std..</text></g><g><title>std::panicking::try (597 samples, 3.46%)</title><rect x="86.8858%" y="773" width="3.4551%" height="15" fill="rgb(250,96,46)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="783.50">std..</text></g><g><title>std::panicking::try::do_call (597 samples, 3.46%)</title><rect x="86.8858%" y="757" width="3.4551%" height="15" fill="rgb(229,116,26)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="767.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (597 samples, 3.46%)</title><rect x="86.8858%" y="741" width="3.4551%" height="15" fill="rgb(246,94,34)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="751.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (597 samples, 3.46%)</title><rect x="86.8858%" y="725" width="3.4551%" height="15" fill="rgb(251,73,21)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="735.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (597 samples, 3.46%)</title><rect x="86.8858%" y="709" width="3.4551%" height="15" fill="rgb(254,121,25)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="719.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (597 samples, 3.46%)</title><rect x="86.8858%" y="693" width="3.4551%" height="15" fill="rgb(215,161,49)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="703.50">ray..</text></g><g><title>rayon_core::join::join_context (597 samples, 3.46%)</title><rect x="86.8858%" y="677" width="3.4551%" height="15" fill="rgb(221,43,13)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="687.50">ray..</text></g><g><title>rayon_core::registry::in_worker (597 samples, 3.46%)</title><rect x="86.8858%" y="661" width="3.4551%" height="15" fill="rgb(249,5,37)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="671.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (597 samples, 3.46%)</title><rect x="86.8858%" y="645" width="3.4551%" height="15" fill="rgb(226,25,44)" fg:x="15013" fg:w="597"/><text x="87.1358%" y="655.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (309 samples, 1.79%)</title><rect x="88.5526%" y="629" width="1.7883%" height="15" fill="rgb(238,189,16)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="639.50">r..</text></g><g><title>std::panic::catch_unwind (309 samples, 1.79%)</title><rect x="88.5526%" y="613" width="1.7883%" height="15" fill="rgb(251,186,8)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="623.50">s..</text></g><g><title>std::panicking::try (309 samples, 1.79%)</title><rect x="88.5526%" y="597" width="1.7883%" height="15" fill="rgb(254,34,31)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="607.50">s..</text></g><g><title>std::panicking::try::do_call (309 samples, 1.79%)</title><rect x="88.5526%" y="581" width="1.7883%" height="15" fill="rgb(225,215,27)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="591.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (309 samples, 1.79%)</title><rect x="88.5526%" y="565" width="1.7883%" height="15" fill="rgb(221,192,48)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="575.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (309 samples, 1.79%)</title><rect x="88.5526%" y="549" width="1.7883%" height="15" fill="rgb(219,137,20)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="559.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (309 samples, 1.79%)</title><rect x="88.5526%" y="533" width="1.7883%" height="15" fill="rgb(219,84,11)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="543.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (309 samples, 1.79%)</title><rect x="88.5526%" y="517" width="1.7883%" height="15" fill="rgb(224,10,23)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="527.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (309 samples, 1.79%)</title><rect x="88.5526%" y="501" width="1.7883%" height="15" fill="rgb(248,22,39)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="511.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (309 samples, 1.79%)</title><rect x="88.5526%" y="485" width="1.7883%" height="15" fill="rgb(212,154,20)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="495.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (309 samples, 1.79%)</title><rect x="88.5526%" y="469" width="1.7883%" height="15" fill="rgb(236,199,50)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="479.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (309 samples, 1.79%)</title><rect x="88.5526%" y="453" width="1.7883%" height="15" fill="rgb(211,9,17)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="463.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (309 samples, 1.79%)</title><rect x="88.5526%" y="437" width="1.7883%" height="15" fill="rgb(243,216,36)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="447.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (309 samples, 1.79%)</title><rect x="88.5526%" y="421" width="1.7883%" height="15" fill="rgb(250,2,10)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="431.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (309 samples, 1.79%)</title><rect x="88.5526%" y="405" width="1.7883%" height="15" fill="rgb(226,50,48)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="415.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (309 samples, 1.79%)</title><rect x="88.5526%" y="389" width="1.7883%" height="15" fill="rgb(243,81,16)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="399.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (309 samples, 1.79%)</title><rect x="88.5526%" y="373" width="1.7883%" height="15" fill="rgb(250,14,2)" fg:x="15301" fg:w="309"/><text x="88.8026%" y="383.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (302 samples, 1.75%)</title><rect x="88.5931%" y="357" width="1.7478%" height="15" fill="rgb(233,135,29)" fg:x="15308" fg:w="302"/><text x="88.8431%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (279 samples, 1.61%)</title><rect x="88.7262%" y="341" width="1.6147%" height="15" fill="rgb(224,64,43)" fg:x="15331" fg:w="279"/><text x="88.9762%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (78 samples, 0.45%)</title><rect x="89.8895%" y="325" width="0.4514%" height="15" fill="rgb(238,84,13)" fg:x="15532" fg:w="78"/><text x="90.1395%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.16%)</title><rect x="90.3872%" y="405" width="0.1563%" height="15" fill="rgb(253,48,26)" fg:x="15618" fg:w="27"/><text x="90.6372%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (5 samples, 0.03%)</title><rect x="90.5434%" y="373" width="0.0289%" height="15" fill="rgb(205,223,31)" fg:x="15645" fg:w="5"/><text x="90.7934%" y="383.50"></text></g><g><title>[libm-2.31.so] (119 samples, 0.69%)</title><rect x="90.9486%" y="325" width="0.6887%" height="15" fill="rgb(221,41,32)" fg:x="15715" fg:w="119"/><text x="91.1986%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (185 samples, 1.07%)</title><rect x="90.5724%" y="373" width="1.0707%" height="15" fill="rgb(213,158,31)" fg:x="15650" fg:w="185"/><text x="90.8224%" y="383.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (185 samples, 1.07%)</title><rect x="90.5724%" y="357" width="1.0707%" height="15" fill="rgb(245,126,43)" fg:x="15650" fg:w="185"/><text x="90.8224%" y="367.50"></text></g><g><title>exp (168 samples, 0.97%)</title><rect x="90.6708%" y="341" width="0.9723%" height="15" fill="rgb(227,7,22)" fg:x="15667" fg:w="168"/><text x="90.9208%" y="351.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (228 samples, 1.32%)</title><rect x="90.5434%" y="389" width="1.3195%" height="15" fill="rgb(252,90,44)" fg:x="15645" fg:w="228"/><text x="90.7934%" y="399.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (38 samples, 0.22%)</title><rect x="91.6430%" y="373" width="0.2199%" height="15" fill="rgb(253,91,0)" fg:x="15835" fg:w="38"/><text x="91.8930%" y="383.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (38 samples, 0.22%)</title><rect x="91.6430%" y="357" width="0.2199%" height="15" fill="rgb(252,175,49)" fg:x="15835" fg:w="38"/><text x="91.8930%" y="367.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (349 samples, 2.02%)</title><rect x="90.3467%" y="629" width="2.0198%" height="15" fill="rgb(246,150,1)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="639.50">r..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (349 samples, 2.02%)</title><rect x="90.3467%" y="613" width="2.0198%" height="15" fill="rgb(241,192,25)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="623.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (349 samples, 2.02%)</title><rect x="90.3467%" y="597" width="2.0198%" height="15" fill="rgb(239,187,11)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="607.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (349 samples, 2.02%)</title><rect x="90.3467%" y="581" width="2.0198%" height="15" fill="rgb(218,202,51)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="591.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (349 samples, 2.02%)</title><rect x="90.3467%" y="565" width="2.0198%" height="15" fill="rgb(225,176,8)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="575.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (349 samples, 2.02%)</title><rect x="90.3467%" y="549" width="2.0198%" height="15" fill="rgb(219,122,41)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="559.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (349 samples, 2.02%)</title><rect x="90.3467%" y="533" width="2.0198%" height="15" fill="rgb(248,140,20)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="543.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (349 samples, 2.02%)</title><rect x="90.3467%" y="517" width="2.0198%" height="15" fill="rgb(245,41,37)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="527.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (349 samples, 2.02%)</title><rect x="90.3467%" y="501" width="2.0198%" height="15" fill="rgb(235,82,39)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="511.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (349 samples, 2.02%)</title><rect x="90.3467%" y="485" width="2.0198%" height="15" fill="rgb(230,108,42)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="495.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (349 samples, 2.02%)</title><rect x="90.3467%" y="469" width="2.0198%" height="15" fill="rgb(215,150,50)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="479.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (349 samples, 2.02%)</title><rect x="90.3467%" y="453" width="2.0198%" height="15" fill="rgb(233,212,5)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="463.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (349 samples, 2.02%)</title><rect x="90.3467%" y="437" width="2.0198%" height="15" fill="rgb(245,80,22)" fg:x="15611" fg:w="349"/><text x="90.5967%" y="447.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (342 samples, 1.98%)</title><rect x="90.3872%" y="421" width="1.9793%" height="15" fill="rgb(238,129,16)" fg:x="15618" fg:w="342"/><text x="90.6372%" y="431.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (315 samples, 1.82%)</title><rect x="90.5434%" y="405" width="1.8230%" height="15" fill="rgb(240,19,0)" fg:x="15645" fg:w="315"/><text x="90.7934%" y="415.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (87 samples, 0.50%)</title><rect x="91.8630%" y="389" width="0.5035%" height="15" fill="rgb(232,42,35)" fg:x="15873" fg:w="87"/><text x="92.1130%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.16%)</title><rect x="92.4070%" y="341" width="0.1563%" height="15" fill="rgb(223,130,24)" fg:x="15967" fg:w="27"/><text x="92.6570%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (7 samples, 0.04%)</title><rect x="92.5632%" y="309" width="0.0405%" height="15" fill="rgb(237,16,22)" fg:x="15994" fg:w="7"/><text x="92.8132%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (202 samples, 1.17%)</title><rect x="92.6037%" y="309" width="1.1690%" height="15" fill="rgb(248,192,20)" fg:x="16001" fg:w="202"/><text x="92.8537%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (202 samples, 1.17%)</title><rect x="92.6037%" y="293" width="1.1690%" height="15" fill="rgb(233,167,2)" fg:x="16001" fg:w="202"/><text x="92.8537%" y="303.50"></text></g><g><title>exp (188 samples, 1.09%)</title><rect x="92.6848%" y="277" width="1.0880%" height="15" fill="rgb(252,71,44)" fg:x="16015" fg:w="188"/><text x="92.9348%" y="287.50"></text></g><g><title>[libm-2.31.so] (131 samples, 0.76%)</title><rect x="93.0146%" y="261" width="0.7581%" height="15" fill="rgb(238,37,47)" fg:x="16072" fg:w="131"/><text x="93.2646%" y="271.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (247 samples, 1.43%)</title><rect x="92.5632%" y="325" width="1.4295%" height="15" fill="rgb(214,202,54)" fg:x="15994" fg:w="247"/><text x="92.8132%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (38 samples, 0.22%)</title><rect x="93.7728%" y="309" width="0.2199%" height="15" fill="rgb(254,165,40)" fg:x="16203" fg:w="38"/><text x="94.0228%" y="319.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (38 samples, 0.22%)</title><rect x="93.7728%" y="293" width="0.2199%" height="15" fill="rgb(246,173,38)" fg:x="16203" fg:w="38"/><text x="94.0228%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (720 samples, 4.17%)</title><rect x="90.3467%" y="741" width="4.1669%" height="15" fill="rgb(215,3,27)" fg:x="15611" fg:w="720"/><text x="90.5967%" y="751.50">rayon..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (720 samples, 4.17%)</title><rect x="90.3467%" y="725" width="4.1669%" height="15" fill="rgb(239,169,51)" fg:x="15611" fg:w="720"/><text x="90.5967%" y="735.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (720 samples, 4.17%)</title><rect x="90.3467%" y="709" width="4.1669%" height="15" fill="rgb(212,5,25)" fg:x="15611" fg:w="720"/><text x="90.5967%" y="719.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (720 samples, 4.17%)</title><rect x="90.3467%" y="693" width="4.1669%" height="15" fill="rgb(243,45,17)" fg:x="15611" fg:w="720"/><text x="90.5967%" y="703.50">rayon..</text></g><g><title>rayon_core::join::join_context (720 samples, 4.17%)</title><rect x="90.3467%" y="677" width="4.1669%" height="15" fill="rgb(242,97,9)" fg:x="15611" fg:w="720"/><text x="90.5967%" y="687.50">rayon..</text></g><g><title>rayon_core::registry::in_worker (720 samples, 4.17%)</title><rect x="90.3467%" y="661" width="4.1669%" height="15" fill="rgb(228,71,31)" fg:x="15611" fg:w="720"/><text x="90.5967%" y="671.50">rayon..</text></g><g><title>rayon_core::join::join_context::{{closure}} (720 samples, 4.17%)</title><rect x="90.3467%" y="645" width="4.1669%" height="15" fill="rgb(252,184,16)" fg:x="15611" fg:w="720"/><text x="90.5967%" y="655.50">rayon..</text></g><g><title>rayon_core::unwind::halt_unwinding (371 samples, 2.15%)</title><rect x="92.3665%" y="629" width="2.1471%" height="15" fill="rgb(236,169,46)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="639.50">r..</text></g><g><title>std::panic::catch_unwind (371 samples, 2.15%)</title><rect x="92.3665%" y="613" width="2.1471%" height="15" fill="rgb(207,17,47)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="623.50">s..</text></g><g><title>std::panicking::try (371 samples, 2.15%)</title><rect x="92.3665%" y="597" width="2.1471%" height="15" fill="rgb(206,201,28)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="607.50">s..</text></g><g><title>std::panicking::try::do_call (371 samples, 2.15%)</title><rect x="92.3665%" y="581" width="2.1471%" height="15" fill="rgb(224,184,23)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="591.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (371 samples, 2.15%)</title><rect x="92.3665%" y="565" width="2.1471%" height="15" fill="rgb(208,139,48)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="575.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (371 samples, 2.15%)</title><rect x="92.3665%" y="549" width="2.1471%" height="15" fill="rgb(208,130,10)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="559.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (371 samples, 2.15%)</title><rect x="92.3665%" y="533" width="2.1471%" height="15" fill="rgb(211,213,45)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="543.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (371 samples, 2.15%)</title><rect x="92.3665%" y="517" width="2.1471%" height="15" fill="rgb(235,100,30)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="527.50">r..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (371 samples, 2.15%)</title><rect x="92.3665%" y="501" width="2.1471%" height="15" fill="rgb(206,144,31)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="511.50">r..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (371 samples, 2.15%)</title><rect x="92.3665%" y="485" width="2.1471%" height="15" fill="rgb(224,200,26)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="495.50">&lt;..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (371 samples, 2.15%)</title><rect x="92.3665%" y="469" width="2.1471%" height="15" fill="rgb(247,104,53)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="479.50">r..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (371 samples, 2.15%)</title><rect x="92.3665%" y="453" width="2.1471%" height="15" fill="rgb(220,14,17)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="463.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (371 samples, 2.15%)</title><rect x="92.3665%" y="437" width="2.1471%" height="15" fill="rgb(230,140,40)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="447.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (371 samples, 2.15%)</title><rect x="92.3665%" y="421" width="2.1471%" height="15" fill="rgb(229,2,41)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="431.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (371 samples, 2.15%)</title><rect x="92.3665%" y="405" width="2.1471%" height="15" fill="rgb(232,89,16)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="415.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (371 samples, 2.15%)</title><rect x="92.3665%" y="389" width="2.1471%" height="15" fill="rgb(247,59,52)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="399.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (371 samples, 2.15%)</title><rect x="92.3665%" y="373" width="2.1471%" height="15" fill="rgb(226,110,21)" fg:x="15960" fg:w="371"/><text x="92.6165%" y="383.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (364 samples, 2.11%)</title><rect x="92.4070%" y="357" width="2.1066%" height="15" fill="rgb(224,176,43)" fg:x="15967" fg:w="364"/><text x="92.6570%" y="367.50">c..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (337 samples, 1.95%)</title><rect x="92.5632%" y="341" width="1.9503%" height="15" fill="rgb(221,73,6)" fg:x="15994" fg:w="337"/><text x="92.8132%" y="351.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (90 samples, 0.52%)</title><rect x="93.9927%" y="325" width="0.5209%" height="15" fill="rgb(232,78,19)" fg:x="16241" fg:w="90"/><text x="94.2427%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.06%)</title><rect x="94.5425%" y="341" width="0.0579%" height="15" fill="rgb(233,112,48)" fg:x="16336" fg:w="10"/><text x="94.7925%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (8 samples, 0.05%)</title><rect x="94.6004%" y="309" width="0.0463%" height="15" fill="rgb(243,131,47)" fg:x="16346" fg:w="8"/><text x="94.8504%" y="319.50"></text></g><g><title>[libm-2.31.so] (176 samples, 1.02%)</title><rect x="94.9823%" y="261" width="1.0186%" height="15" fill="rgb(226,51,1)" fg:x="16412" fg:w="176"/><text x="95.2323%" y="271.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (235 samples, 1.36%)</title><rect x="94.6467%" y="309" width="1.3600%" height="15" fill="rgb(247,58,7)" fg:x="16354" fg:w="235"/><text x="94.8967%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (235 samples, 1.36%)</title><rect x="94.6467%" y="293" width="1.3600%" height="15" fill="rgb(209,7,32)" fg:x="16354" fg:w="235"/><text x="94.8967%" y="303.50"></text></g><g><title>exp (221 samples, 1.28%)</title><rect x="94.7277%" y="277" width="1.2790%" height="15" fill="rgb(209,39,41)" fg:x="16368" fg:w="221"/><text x="94.9777%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (55 samples, 0.32%)</title><rect x="96.0067%" y="309" width="0.3183%" height="15" fill="rgb(226,182,46)" fg:x="16589" fg:w="55"/><text x="96.2567%" y="319.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (55 samples, 0.32%)</title><rect x="96.0067%" y="293" width="0.3183%" height="15" fill="rgb(230,219,10)" fg:x="16589" fg:w="55"/><text x="96.2567%" y="303.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (300 samples, 1.74%)</title><rect x="94.6004%" y="325" width="1.7362%" height="15" fill="rgb(227,175,30)" fg:x="16346" fg:w="300"/><text x="94.8504%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (2 samples, 0.01%)</title><rect x="96.3250%" y="309" width="0.0116%" height="15" fill="rgb(217,2,50)" fg:x="16644" fg:w="2"/><text x="96.5750%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (2 samples, 0.01%)</title><rect x="96.3250%" y="293" width="0.0116%" height="15" fill="rgb(229,160,0)" fg:x="16644" fg:w="2"/><text x="96.5750%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (418 samples, 2.42%)</title><rect x="94.5136%" y="565" width="2.4191%" height="15" fill="rgb(207,78,37)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="575.50">ra..</text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (418 samples, 2.42%)</title><rect x="94.5136%" y="549" width="2.4191%" height="15" fill="rgb(225,57,0)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="559.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (418 samples, 2.42%)</title><rect x="94.5136%" y="533" width="2.4191%" height="15" fill="rgb(232,154,2)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="543.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (418 samples, 2.42%)</title><rect x="94.5136%" y="517" width="2.4191%" height="15" fill="rgb(241,212,25)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="527.50">ra..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (418 samples, 2.42%)</title><rect x="94.5136%" y="501" width="2.4191%" height="15" fill="rgb(226,69,20)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="511.50">ra..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (418 samples, 2.42%)</title><rect x="94.5136%" y="485" width="2.4191%" height="15" fill="rgb(247,184,54)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="495.50">&lt;r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (418 samples, 2.42%)</title><rect x="94.5136%" y="469" width="2.4191%" height="15" fill="rgb(210,145,0)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="479.50">ra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (418 samples, 2.42%)</title><rect x="94.5136%" y="453" width="2.4191%" height="15" fill="rgb(253,82,12)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="463.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (418 samples, 2.42%)</title><rect x="94.5136%" y="437" width="2.4191%" height="15" fill="rgb(245,42,11)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="447.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (418 samples, 2.42%)</title><rect x="94.5136%" y="421" width="2.4191%" height="15" fill="rgb(219,147,32)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="431.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (418 samples, 2.42%)</title><rect x="94.5136%" y="405" width="2.4191%" height="15" fill="rgb(246,12,7)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="415.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (418 samples, 2.42%)</title><rect x="94.5136%" y="389" width="2.4191%" height="15" fill="rgb(243,50,9)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="399.50">cr..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (418 samples, 2.42%)</title><rect x="94.5136%" y="373" width="2.4191%" height="15" fill="rgb(219,149,6)" fg:x="16331" fg:w="418"/><text x="94.7636%" y="383.50">cr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (413 samples, 2.39%)</title><rect x="94.5425%" y="357" width="2.3902%" height="15" fill="rgb(241,51,42)" fg:x="16336" fg:w="413"/><text x="94.7925%" y="367.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (403 samples, 2.33%)</title><rect x="94.6004%" y="341" width="2.3323%" height="15" fill="rgb(226,128,27)" fg:x="16346" fg:w="403"/><text x="94.8504%" y="351.50">c..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (103 samples, 0.60%)</title><rect x="96.3366%" y="325" width="0.5961%" height="15" fill="rgb(244,144,4)" fg:x="16646" fg:w="103"/><text x="96.5866%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.12%)</title><rect x="96.9848%" y="277" width="0.1157%" height="15" fill="rgb(221,4,13)" fg:x="16758" fg:w="20"/><text x="97.2348%" y="287.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (9 samples, 0.05%)</title><rect x="97.1005%" y="245" width="0.0521%" height="15" fill="rgb(208,170,28)" fg:x="16778" fg:w="9"/><text x="97.3505%" y="255.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (274 samples, 1.59%)</title><rect x="97.1526%" y="245" width="1.5857%" height="15" fill="rgb(226,131,13)" fg:x="16787" fg:w="274"/><text x="97.4026%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (274 samples, 1.59%)</title><rect x="97.1526%" y="229" width="1.5857%" height="15" fill="rgb(215,72,41)" fg:x="16787" fg:w="274"/><text x="97.4026%" y="239.50"></text></g><g><title>exp (261 samples, 1.51%)</title><rect x="97.2278%" y="213" width="1.5105%" height="15" fill="rgb(243,108,20)" fg:x="16800" fg:w="261"/><text x="97.4778%" y="223.50"></text></g><g><title>[libm-2.31.so] (203 samples, 1.17%)</title><rect x="97.5635%" y="197" width="1.1748%" height="15" fill="rgb(230,189,17)" fg:x="16858" fg:w="203"/><text x="97.8135%" y="207.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (81 samples, 0.47%)</title><rect x="98.7384%" y="245" width="0.4688%" height="15" fill="rgb(220,50,17)" fg:x="17061" fg:w="81"/><text x="98.9884%" y="255.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (81 samples, 0.47%)</title><rect x="98.7384%" y="229" width="0.4688%" height="15" fill="rgb(248,152,48)" fg:x="17061" fg:w="81"/><text x="98.9884%" y="239.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (367 samples, 2.12%)</title><rect x="97.1005%" y="261" width="2.1240%" height="15" fill="rgb(244,91,11)" fg:x="16778" fg:w="367"/><text x="97.3505%" y="271.50">&lt;..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (3 samples, 0.02%)</title><rect x="99.2071%" y="245" width="0.0174%" height="15" fill="rgb(220,157,5)" fg:x="17142" fg:w="3"/><text x="99.4571%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (3 samples, 0.02%)</title><rect x="99.2071%" y="229" width="0.0174%" height="15" fill="rgb(253,137,8)" fg:x="17142" fg:w="3"/><text x="99.4571%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,734 samples, 15.82%)</title><rect x="83.8359%" y="997" width="15.8227%" height="15" fill="rgb(217,137,51)" fg:x="14486" fg:w="2734"/><text x="84.0859%" y="1007.50">rayon::iter::plumbing::b..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,734 samples, 15.82%)</title><rect x="83.8359%" y="981" width="15.8227%" height="15" fill="rgb(218,209,53)" fg:x="14486" fg:w="2734"/><text x="84.0859%" y="991.50">rayon::iter::plumbing::b..</text></g><g><title>rayon_core::join::join_context (2,733 samples, 15.82%)</title><rect x="83.8417%" y="965" width="15.8169%" height="15" fill="rgb(249,137,25)" fg:x="14487" fg:w="2733"/><text x="84.0917%" y="975.50">rayon_core::join::join_c..</text></g><g><title>rayon_core::registry::in_worker (2,733 samples, 15.82%)</title><rect x="83.8417%" y="949" width="15.8169%" height="15" fill="rgb(239,155,26)" fg:x="14487" fg:w="2733"/><text x="84.0917%" y="959.50">rayon_core::registry::in..</text></g><g><title>rayon_core::join::join_context::{{closure}} (2,733 samples, 15.82%)</title><rect x="83.8417%" y="933" width="15.8169%" height="15" fill="rgb(227,85,46)" fg:x="14487" fg:w="2733"/><text x="84.0917%" y="943.50">rayon_core::join::join_c..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,610 samples, 9.32%)</title><rect x="90.3409%" y="917" width="9.3177%" height="15" fill="rgb(251,107,43)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="927.50">rayon_core::u..</text></g><g><title>std::panic::catch_unwind (1,610 samples, 9.32%)</title><rect x="90.3409%" y="901" width="9.3177%" height="15" fill="rgb(234,170,33)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="911.50">std::panic::c..</text></g><g><title>std::panicking::try (1,610 samples, 9.32%)</title><rect x="90.3409%" y="885" width="9.3177%" height="15" fill="rgb(206,29,35)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="895.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (1,610 samples, 9.32%)</title><rect x="90.3409%" y="869" width="9.3177%" height="15" fill="rgb(227,138,25)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="879.50">std::panickin..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,610 samples, 9.32%)</title><rect x="90.3409%" y="853" width="9.3177%" height="15" fill="rgb(249,131,35)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="863.50">&lt;std::panic::..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,610 samples, 9.32%)</title><rect x="90.3409%" y="837" width="9.3177%" height="15" fill="rgb(239,6,40)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="847.50">rayon_core::j..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,610 samples, 9.32%)</title><rect x="90.3409%" y="821" width="9.3177%" height="15" fill="rgb(246,136,47)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="831.50">rayon::iter::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,610 samples, 9.32%)</title><rect x="90.3409%" y="805" width="9.3177%" height="15" fill="rgb(253,58,26)" fg:x="15610" fg:w="1610"/><text x="90.5909%" y="815.50">rayon::iter::..</text></g><g><title>rayon_core::join::join_context (1,609 samples, 9.31%)</title><rect x="90.3467%" y="789" width="9.3119%" height="15" fill="rgb(237,141,10)" fg:x="15611" fg:w="1609"/><text x="90.5967%" y="799.50">rayon_core::j..</text></g><g><title>rayon_core::registry::in_worker (1,609 samples, 9.31%)</title><rect x="90.3467%" y="773" width="9.3119%" height="15" fill="rgb(234,156,12)" fg:x="15611" fg:w="1609"/><text x="90.5967%" y="783.50">rayon_core::r..</text></g><g><title>rayon_core::join::join_context::{{closure}} (1,609 samples, 9.31%)</title><rect x="90.3467%" y="757" width="9.3119%" height="15" fill="rgb(243,224,36)" fg:x="15611" fg:w="1609"/><text x="90.5967%" y="767.50">rayon_core::j..</text></g><g><title>rayon_core::unwind::halt_unwinding (889 samples, 5.14%)</title><rect x="94.5136%" y="741" width="5.1450%" height="15" fill="rgb(205,229,51)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="751.50">rayon_..</text></g><g><title>std::panic::catch_unwind (889 samples, 5.14%)</title><rect x="94.5136%" y="725" width="5.1450%" height="15" fill="rgb(223,189,4)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="735.50">std::p..</text></g><g><title>std::panicking::try (889 samples, 5.14%)</title><rect x="94.5136%" y="709" width="5.1450%" height="15" fill="rgb(249,167,54)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="719.50">std::p..</text></g><g><title>std::panicking::try::do_call (889 samples, 5.14%)</title><rect x="94.5136%" y="693" width="5.1450%" height="15" fill="rgb(218,34,28)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="703.50">std::p..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (889 samples, 5.14%)</title><rect x="94.5136%" y="677" width="5.1450%" height="15" fill="rgb(232,109,42)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="687.50">&lt;std::..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (889 samples, 5.14%)</title><rect x="94.5136%" y="661" width="5.1450%" height="15" fill="rgb(248,214,46)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="671.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (889 samples, 5.14%)</title><rect x="94.5136%" y="645" width="5.1450%" height="15" fill="rgb(244,216,40)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="655.50">rayon:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (889 samples, 5.14%)</title><rect x="94.5136%" y="629" width="5.1450%" height="15" fill="rgb(231,226,31)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="639.50">rayon:..</text></g><g><title>rayon_core::join::join_context (889 samples, 5.14%)</title><rect x="94.5136%" y="613" width="5.1450%" height="15" fill="rgb(238,38,43)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="623.50">rayon_..</text></g><g><title>rayon_core::registry::in_worker (889 samples, 5.14%)</title><rect x="94.5136%" y="597" width="5.1450%" height="15" fill="rgb(208,88,43)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="607.50">rayon_..</text></g><g><title>rayon_core::join::join_context::{{closure}} (889 samples, 5.14%)</title><rect x="94.5136%" y="581" width="5.1450%" height="15" fill="rgb(205,136,37)" fg:x="16331" fg:w="889"/><text x="94.7636%" y="591.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (471 samples, 2.73%)</title><rect x="96.9327%" y="565" width="2.7259%" height="15" fill="rgb(237,34,14)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="575.50">ra..</text></g><g><title>std::panic::catch_unwind (471 samples, 2.73%)</title><rect x="96.9327%" y="549" width="2.7259%" height="15" fill="rgb(236,193,44)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="559.50">st..</text></g><g><title>std::panicking::try (471 samples, 2.73%)</title><rect x="96.9327%" y="533" width="2.7259%" height="15" fill="rgb(231,48,10)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="543.50">st..</text></g><g><title>std::panicking::try::do_call (471 samples, 2.73%)</title><rect x="96.9327%" y="517" width="2.7259%" height="15" fill="rgb(213,141,34)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="527.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (471 samples, 2.73%)</title><rect x="96.9327%" y="501" width="2.7259%" height="15" fill="rgb(249,130,34)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="511.50">&lt;s..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (471 samples, 2.73%)</title><rect x="96.9327%" y="485" width="2.7259%" height="15" fill="rgb(219,42,41)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="495.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (471 samples, 2.73%)</title><rect x="96.9327%" y="469" width="2.7259%" height="15" fill="rgb(224,100,54)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="479.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (471 samples, 2.73%)</title><rect x="96.9327%" y="453" width="2.7259%" height="15" fill="rgb(229,200,27)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="463.50">ra..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (471 samples, 2.73%)</title><rect x="96.9327%" y="437" width="2.7259%" height="15" fill="rgb(217,118,10)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="447.50">ra..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (471 samples, 2.73%)</title><rect x="96.9327%" y="421" width="2.7259%" height="15" fill="rgb(206,22,3)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="431.50">&lt;r..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (471 samples, 2.73%)</title><rect x="96.9327%" y="405" width="2.7259%" height="15" fill="rgb(232,163,46)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="415.50">ra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (471 samples, 2.73%)</title><rect x="96.9327%" y="389" width="2.7259%" height="15" fill="rgb(206,95,13)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="399.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (471 samples, 2.73%)</title><rect x="96.9327%" y="373" width="2.7259%" height="15" fill="rgb(253,154,18)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="383.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (471 samples, 2.73%)</title><rect x="96.9327%" y="357" width="2.7259%" height="15" fill="rgb(219,32,23)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="367.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (471 samples, 2.73%)</title><rect x="96.9327%" y="341" width="2.7259%" height="15" fill="rgb(230,191,45)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="351.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (471 samples, 2.73%)</title><rect x="96.9327%" y="325" width="2.7259%" height="15" fill="rgb(229,64,36)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="335.50">cr..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (471 samples, 2.73%)</title><rect x="96.9327%" y="309" width="2.7259%" height="15" fill="rgb(205,129,25)" fg:x="16749" fg:w="471"/><text x="97.1827%" y="319.50">cr..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (462 samples, 2.67%)</title><rect x="96.9848%" y="293" width="2.6738%" height="15" fill="rgb(254,112,7)" fg:x="16758" fg:w="462"/><text x="97.2348%" y="303.50">co..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (442 samples, 2.56%)</title><rect x="97.1005%" y="277" width="2.5580%" height="15" fill="rgb(226,53,48)" fg:x="16778" fg:w="442"/><text x="97.3505%" y="287.50">cr..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (75 samples, 0.43%)</title><rect x="99.2245%" y="261" width="0.4341%" height="15" fill="rgb(214,153,38)" fg:x="17145" fg:w="75"/><text x="99.4745%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="99.6585%" y="885" width="0.0174%" height="15" fill="rgb(243,101,7)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="99.6585%" y="869" width="0.0174%" height="15" fill="rgb(240,140,22)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="879.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (3 samples, 0.02%)</title><rect x="99.6585%" y="853" width="0.0174%" height="15" fill="rgb(235,114,2)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="863.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (3 samples, 0.02%)</title><rect x="99.6585%" y="837" width="0.0174%" height="15" fill="rgb(242,59,12)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="847.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="99.6585%" y="821" width="0.0174%" height="15" fill="rgb(252,134,9)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="831.50"></text></g><g><title>rayon_core::join::join (3 samples, 0.02%)</title><rect x="99.6585%" y="805" width="0.0174%" height="15" fill="rgb(236,4,44)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="815.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="99.6585%" y="789" width="0.0174%" height="15" fill="rgb(254,172,41)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="99.6585%" y="773" width="0.0174%" height="15" fill="rgb(244,63,20)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="783.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="99.6585%" y="757" width="0.0174%" height="15" fill="rgb(250,73,31)" fg:x="17220" fg:w="3"/><text x="99.9085%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="99.6643%" y="741" width="0.0116%" height="15" fill="rgb(241,38,36)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="751.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="99.6643%" y="725" width="0.0116%" height="15" fill="rgb(245,211,2)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="735.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="99.6643%" y="709" width="0.0116%" height="15" fill="rgb(206,120,28)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="719.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="99.6643%" y="693" width="0.0116%" height="15" fill="rgb(211,59,34)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="703.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="99.6643%" y="677" width="0.0116%" height="15" fill="rgb(233,168,5)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="661" width="0.0116%" height="15" fill="rgb(234,33,13)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="671.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="645" width="0.0116%" height="15" fill="rgb(231,150,26)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="655.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="629" width="0.0116%" height="15" fill="rgb(217,191,4)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="639.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6643%" y="613" width="0.0116%" height="15" fill="rgb(246,198,38)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="623.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6643%" y="597" width="0.0116%" height="15" fill="rgb(245,64,37)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="607.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6643%" y="581" width="0.0116%" height="15" fill="rgb(250,30,36)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="591.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6643%" y="565" width="0.0116%" height="15" fill="rgb(217,86,53)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="549" width="0.0116%" height="15" fill="rgb(228,157,16)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="559.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="99.6643%" y="533" width="0.0116%" height="15" fill="rgb(217,59,31)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="543.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="99.6643%" y="517" width="0.0116%" height="15" fill="rgb(237,138,41)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="527.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="99.6643%" y="501" width="0.0116%" height="15" fill="rgb(227,91,49)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="511.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="99.6643%" y="485" width="0.0116%" height="15" fill="rgb(247,21,44)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="495.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="99.6643%" y="469" width="0.0116%" height="15" fill="rgb(219,210,51)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="453" width="0.0116%" height="15" fill="rgb(209,140,6)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="463.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="437" width="0.0116%" height="15" fill="rgb(221,188,24)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="447.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="421" width="0.0116%" height="15" fill="rgb(232,154,20)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="431.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6643%" y="405" width="0.0116%" height="15" fill="rgb(244,137,50)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="415.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6643%" y="389" width="0.0116%" height="15" fill="rgb(225,185,43)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="399.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6643%" y="373" width="0.0116%" height="15" fill="rgb(213,205,38)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6643%" y="357" width="0.0116%" height="15" fill="rgb(236,73,12)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="367.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6643%" y="341" width="0.0116%" height="15" fill="rgb(235,219,13)" fg:x="17221" fg:w="2"/><text x="99.9143%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="99.6759%" y="677" width="0.0174%" height="15" fill="rgb(218,59,36)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.02%)</title><rect x="99.6759%" y="661" width="0.0174%" height="15" fill="rgb(205,110,39)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="671.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (3 samples, 0.02%)</title><rect x="99.6759%" y="645" width="0.0174%" height="15" fill="rgb(218,206,42)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="655.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (3 samples, 0.02%)</title><rect x="99.6759%" y="629" width="0.0174%" height="15" fill="rgb(248,125,24)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="639.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="99.6759%" y="613" width="0.0174%" height="15" fill="rgb(242,28,27)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="623.50"></text></g><g><title>rayon_core::join::join (3 samples, 0.02%)</title><rect x="99.6759%" y="597" width="0.0174%" height="15" fill="rgb(216,228,15)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="607.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.02%)</title><rect x="99.6759%" y="581" width="0.0174%" height="15" fill="rgb(235,116,46)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="591.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.02%)</title><rect x="99.6759%" y="565" width="0.0174%" height="15" fill="rgb(224,18,32)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.02%)</title><rect x="99.6759%" y="549" width="0.0174%" height="15" fill="rgb(252,5,12)" fg:x="17223" fg:w="3"/><text x="99.9259%" y="559.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="99.6817%" y="533" width="0.0116%" height="15" fill="rgb(251,36,5)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="543.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="99.6817%" y="517" width="0.0116%" height="15" fill="rgb(217,53,14)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="527.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="99.6817%" y="501" width="0.0116%" height="15" fill="rgb(215,86,45)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="511.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="99.6817%" y="485" width="0.0116%" height="15" fill="rgb(242,169,11)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="495.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="99.6817%" y="469" width="0.0116%" height="15" fill="rgb(211,213,45)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="453" width="0.0116%" height="15" fill="rgb(205,88,11)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="463.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="437" width="0.0116%" height="15" fill="rgb(252,69,26)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="447.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="421" width="0.0116%" height="15" fill="rgb(246,123,37)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="431.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6817%" y="405" width="0.0116%" height="15" fill="rgb(212,205,5)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="415.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6817%" y="389" width="0.0116%" height="15" fill="rgb(253,148,0)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="399.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6817%" y="373" width="0.0116%" height="15" fill="rgb(239,22,4)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6817%" y="357" width="0.0116%" height="15" fill="rgb(226,26,53)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="367.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="341" width="0.0116%" height="15" fill="rgb(225,229,45)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.6817%" y="325" width="0.0116%" height="15" fill="rgb(220,60,37)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="335.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="309" width="0.0116%" height="15" fill="rgb(217,180,35)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="319.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="293" width="0.0116%" height="15" fill="rgb(229,7,53)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="303.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="277" width="0.0116%" height="15" fill="rgb(254,137,3)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="287.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6817%" y="261" width="0.0116%" height="15" fill="rgb(215,140,41)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="271.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6817%" y="245" width="0.0116%" height="15" fill="rgb(250,80,15)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="255.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6817%" y="229" width="0.0116%" height="15" fill="rgb(252,191,6)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="239.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6817%" y="213" width="0.0116%" height="15" fill="rgb(246,217,18)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="223.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="197" width="0.0116%" height="15" fill="rgb(223,93,7)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="207.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="99.6817%" y="181" width="0.0116%" height="15" fill="rgb(225,55,52)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="191.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="99.6817%" y="165" width="0.0116%" height="15" fill="rgb(240,31,24)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="175.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="99.6817%" y="149" width="0.0116%" height="15" fill="rgb(205,56,52)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="159.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="99.6817%" y="133" width="0.0116%" height="15" fill="rgb(246,146,12)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="143.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="99.6817%" y="117" width="0.0116%" height="15" fill="rgb(239,84,36)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="127.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="101" width="0.0116%" height="15" fill="rgb(207,41,40)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="111.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="85" width="0.0116%" height="15" fill="rgb(241,179,25)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="95.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6817%" y="69" width="0.0116%" height="15" fill="rgb(210,0,34)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="79.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6817%" y="53" width="0.0116%" height="15" fill="rgb(225,217,29)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="63.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6817%" y="37" width="0.0116%" height="15" fill="rgb(216,191,38)" fg:x="17224" fg:w="2"/><text x="99.9317%" y="47.50"></text></g><g><title>bench_ex16-3996 (17,228 samples, 99.70%)</title><rect x="0.0000%" y="1573" width="99.7048%" height="15" fill="rgb(232,140,52)" fg:x="0" fg:w="17228"/><text x="0.2500%" y="1583.50">bench_ex16-3996</text></g><g><title>clone (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1557" width="32.4614%" height="15" fill="rgb(223,158,51)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1567.50">clone</text></g><g><title>start_thread (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1541" width="32.4614%" height="15" fill="rgb(235,29,51)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1551.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1525" width="32.4614%" height="15" fill="rgb(215,181,18)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1535.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1509" width="32.4614%" height="15" fill="rgb(227,125,34)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1519.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnc..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1493" width="32.4614%" height="15" fill="rgb(230,197,49)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1503.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnc..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1477" width="32.4614%" height="15" fill="rgb(239,141,16)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1487.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1461" width="32.4614%" height="15" fill="rgb(225,105,43)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1471.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::panic::catch_unwind (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1445" width="32.4614%" height="15" fill="rgb(214,131,14)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1455.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1429" width="32.4614%" height="15" fill="rgb(229,177,11)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1439.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1413" width="32.4614%" height="15" fill="rgb(231,180,14)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1423.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1397" width="32.4614%" height="15" fill="rgb(232,88,2)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1407.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::functi..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1381" width="32.4614%" height="15" fill="rgb(205,220,8)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1391.50">std::thread::Builder::spawn_unchecked::{{closure}}::{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1365" width="32.4614%" height="15" fill="rgb(225,23,53)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1375.50">std::sys_common::backtrace::__rust_begin_short_backtr..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1349" width="32.4614%" height="15" fill="rgb(213,62,29)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1359.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::re..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1333" width="32.4614%" height="15" fill="rgb(227,75,7)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1343.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1317" width="32.4614%" height="15" fill="rgb(207,105,14)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1327.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1301" width="32.4614%" height="15" fill="rgb(245,62,29)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1311.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1285" width="32.4614%" height="15" fill="rgb(236,202,4)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1295.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::registry::WorkerThread::execute (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1269" width="32.4614%" height="15" fill="rgb(250,67,1)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1279.50">rayon_core::registry::WorkerThread::execute</text></g><g><title>rayon_core::job::JobRef::execute (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1253" width="32.4614%" height="15" fill="rgb(253,115,44)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1263.50">rayon_core::job::JobRef::execute</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5,609 samples, 32.46%)</title><rect x="67.2435%" y="1237" width="32.4614%" height="15" fill="rgb(251,139,18)" fg:x="11619" fg:w="5609"/><text x="67.4935%" y="1247.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job:..</text></g><g><title>rayon_core::unwind::halt_unwinding (5,608 samples, 32.46%)</title><rect x="67.2493%" y="1221" width="32.4556%" height="15" fill="rgb(218,22,32)" fg:x="11620" fg:w="5608"/><text x="67.4993%" y="1231.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (5,608 samples, 32.46%)</title><rect x="67.2493%" y="1205" width="32.4556%" height="15" fill="rgb(243,53,5)" fg:x="11620" fg:w="5608"/><text x="67.4993%" y="1215.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,608 samples, 32.46%)</title><rect x="67.2493%" y="1189" width="32.4556%" height="15" fill="rgb(227,56,16)" fg:x="11620" fg:w="5608"/><text x="67.4993%" y="1199.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,608 samples, 32.46%)</title><rect x="67.2493%" y="1173" width="32.4556%" height="15" fill="rgb(245,53,0)" fg:x="11620" fg:w="5608"/><text x="67.4993%" y="1183.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,608 samples, 32.46%)</title><rect x="67.2493%" y="1157" width="32.4556%" height="15" fill="rgb(216,170,35)" fg:x="11620" fg:w="5608"/><text x="67.4993%" y="1167.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::functi..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5,608 samples, 32.46%)</title><rect x="67.2493%" y="1141" width="32.4556%" height="15" fill="rgb(211,200,8)" fg:x="11620" fg:w="5608"/><text x="67.4993%" y="1151.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job:..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (2,745 samples, 15.89%)</title><rect x="83.8185%" y="1125" width="15.8863%" height="15" fill="rgb(228,204,44)" fg:x="14483" fg:w="2745"/><text x="84.0685%" y="1135.50">rayon_core::registry::Re..</text></g><g><title>rayon_core::join::join_context::{{closure}} (2,745 samples, 15.89%)</title><rect x="83.8185%" y="1109" width="15.8863%" height="15" fill="rgb(214,121,17)" fg:x="14483" fg:w="2745"/><text x="84.0685%" y="1119.50">rayon_core::join::join_c..</text></g><g><title>rayon_core::unwind::halt_unwinding (2,742 samples, 15.87%)</title><rect x="83.8359%" y="1093" width="15.8690%" height="15" fill="rgb(233,64,38)" fg:x="14486" fg:w="2742"/><text x="84.0859%" y="1103.50">rayon_core::unwind::halt..</text></g><g><title>std::panic::catch_unwind (2,742 samples, 15.87%)</title><rect x="83.8359%" y="1077" width="15.8690%" height="15" fill="rgb(253,54,19)" fg:x="14486" fg:w="2742"/><text x="84.0859%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,742 samples, 15.87%)</title><rect x="83.8359%" y="1061" width="15.8690%" height="15" fill="rgb(253,94,18)" fg:x="14486" fg:w="2742"/><text x="84.0859%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,742 samples, 15.87%)</title><rect x="83.8359%" y="1045" width="15.8690%" height="15" fill="rgb(227,57,52)" fg:x="14486" fg:w="2742"/><text x="84.0859%" y="1055.50">std::panicking::try::do_..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,742 samples, 15.87%)</title><rect x="83.8359%" y="1029" width="15.8690%" height="15" fill="rgb(230,228,50)" fg:x="14486" fg:w="2742"/><text x="84.0859%" y="1039.50">&lt;std::panic::AssertUnwin..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2,742 samples, 15.87%)</title><rect x="83.8359%" y="1013" width="15.8690%" height="15" fill="rgb(217,205,27)" fg:x="14486" fg:w="2742"/><text x="84.0859%" y="1023.50">rayon_core::join::join_c..</text></g><g><title>rayon_core::join::join::call::{{closure}} (8 samples, 0.05%)</title><rect x="99.6585%" y="997" width="0.0463%" height="15" fill="rgb(252,71,50)" fg:x="17220" fg:w="8"/><text x="99.9085%" y="1007.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (8 samples, 0.05%)</title><rect x="99.6585%" y="981" width="0.0463%" height="15" fill="rgb(209,86,4)" fg:x="17220" fg:w="8"/><text x="99.9085%" y="991.50"></text></g><g><title>rayon::slice::quicksort::recurse (8 samples, 0.05%)</title><rect x="99.6585%" y="965" width="0.0463%" height="15" fill="rgb(229,94,0)" fg:x="17220" fg:w="8"/><text x="99.9085%" y="975.50"></text></g><g><title>rayon_core::join::join (8 samples, 0.05%)</title><rect x="99.6585%" y="949" width="0.0463%" height="15" fill="rgb(252,223,21)" fg:x="17220" fg:w="8"/><text x="99.9085%" y="959.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.05%)</title><rect x="99.6585%" y="933" width="0.0463%" height="15" fill="rgb(230,210,4)" fg:x="17220" fg:w="8"/><text x="99.9085%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.05%)</title><rect x="99.6585%" y="917" width="0.0463%" height="15" fill="rgb(240,149,38)" fg:x="17220" fg:w="8"/><text x="99.9085%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.05%)</title><rect x="99.6585%" y="901" width="0.0463%" height="15" fill="rgb(254,105,20)" fg:x="17220" fg:w="8"/><text x="99.9085%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.03%)</title><rect x="99.6759%" y="885" width="0.0289%" height="15" fill="rgb(253,87,46)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="895.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="99.6759%" y="869" width="0.0289%" height="15" fill="rgb(253,116,33)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="879.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="99.6759%" y="853" width="0.0289%" height="15" fill="rgb(229,198,5)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="863.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="99.6759%" y="837" width="0.0289%" height="15" fill="rgb(242,38,37)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="847.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="99.6759%" y="821" width="0.0289%" height="15" fill="rgb(242,69,53)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.03%)</title><rect x="99.6759%" y="805" width="0.0289%" height="15" fill="rgb(249,80,16)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="815.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (5 samples, 0.03%)</title><rect x="99.6759%" y="789" width="0.0289%" height="15" fill="rgb(206,128,11)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="799.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (5 samples, 0.03%)</title><rect x="99.6759%" y="773" width="0.0289%" height="15" fill="rgb(212,35,20)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="783.50"></text></g><g><title>rayon::slice::quicksort::recurse (5 samples, 0.03%)</title><rect x="99.6759%" y="757" width="0.0289%" height="15" fill="rgb(236,79,13)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="767.50"></text></g><g><title>rayon_core::join::join (5 samples, 0.03%)</title><rect x="99.6759%" y="741" width="0.0289%" height="15" fill="rgb(233,123,3)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="751.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.03%)</title><rect x="99.6759%" y="725" width="0.0289%" height="15" fill="rgb(214,93,52)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.03%)</title><rect x="99.6759%" y="709" width="0.0289%" height="15" fill="rgb(251,37,40)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="719.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.03%)</title><rect x="99.6759%" y="693" width="0.0289%" height="15" fill="rgb(227,80,54)" fg:x="17223" fg:w="5"/><text x="99.9259%" y="703.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 0.01%)</title><rect x="99.6933%" y="677" width="0.0116%" height="15" fill="rgb(254,48,11)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="687.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="99.6933%" y="661" width="0.0116%" height="15" fill="rgb(235,193,26)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="671.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="99.6933%" y="645" width="0.0116%" height="15" fill="rgb(229,99,21)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="655.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="99.6933%" y="629" width="0.0116%" height="15" fill="rgb(211,140,41)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="639.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="99.6933%" y="613" width="0.0116%" height="15" fill="rgb(240,227,30)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2 samples, 0.01%)</title><rect x="99.6933%" y="597" width="0.0116%" height="15" fill="rgb(215,224,45)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="607.50"></text></g><g><title>rayon_core::join::join::call::{{closure}} (2 samples, 0.01%)</title><rect x="99.6933%" y="581" width="0.0116%" height="15" fill="rgb(206,123,31)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="591.50"></text></g><g><title>rayon::slice::quicksort::recurse::{{closure}} (2 samples, 0.01%)</title><rect x="99.6933%" y="565" width="0.0116%" height="15" fill="rgb(210,138,16)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="575.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.6933%" y="549" width="0.0116%" height="15" fill="rgb(228,57,28)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="559.50"></text></g><g><title>rayon_core::join::join (2 samples, 0.01%)</title><rect x="99.6933%" y="533" width="0.0116%" height="15" fill="rgb(242,170,10)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="543.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.01%)</title><rect x="99.6933%" y="517" width="0.0116%" height="15" fill="rgb(228,214,39)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.6933%" y="501" width="0.0116%" height="15" fill="rgb(218,179,33)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2 samples, 0.01%)</title><rect x="99.6933%" y="485" width="0.0116%" height="15" fill="rgb(235,193,39)" fg:x="17226" fg:w="2"/><text x="99.9433%" y="495.50"></text></g><g><title>cargo::core::resolver::resolve (5 samples, 0.03%)</title><rect x="99.7280%" y="1541" width="0.0289%" height="15" fill="rgb(219,221,36)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1551.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (5 samples, 0.03%)</title><rect x="99.7280%" y="1525" width="0.0289%" height="15" fill="rgb(248,218,19)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1535.50"></text></g><g><title>cargo::core::resolver::activate (5 samples, 0.03%)</title><rect x="99.7280%" y="1509" width="0.0289%" height="15" fill="rgb(205,50,9)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1519.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps (5 samples, 0.03%)</title><rect x="99.7280%" y="1493" width="0.0289%" height="15" fill="rgb(238,81,28)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1503.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="99.7280%" y="1477" width="0.0289%" height="15" fill="rgb(235,110,19)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="99.7280%" y="1461" width="0.0289%" height="15" fill="rgb(214,7,14)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1471.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::build_deps::_{{closure}} (5 samples, 0.03%)</title><rect x="99.7280%" y="1445" width="0.0289%" height="15" fill="rgb(211,77,3)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1455.50"></text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (5 samples, 0.03%)</title><rect x="99.7280%" y="1429" width="0.0289%" height="15" fill="rgb(229,5,9)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1439.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (5 samples, 0.03%)</title><rect x="99.7280%" y="1413" width="0.0289%" height="15" fill="rgb(225,90,11)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1423.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (5 samples, 0.03%)</title><rect x="99.7280%" y="1397" width="0.0289%" height="15" fill="rgb(242,56,8)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1407.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner_with_online (5 samples, 0.03%)</title><rect x="99.7280%" y="1381" width="0.0289%" height="15" fill="rgb(249,212,39)" fg:x="17232" fg:w="5"/><text x="99.9780%" y="1391.50"></text></g><g><title>cargo::sources::registry::index::RegistryIndex::summaries (4 samples, 0.02%)</title><rect x="99.7338%" y="1365" width="0.0231%" height="15" fill="rgb(236,90,9)" fg:x="17233" fg:w="4"/><text x="99.9838%" y="1375.50"></text></g><g><title>std::fs::read::inner (2 samples, 0.01%)</title><rect x="99.7454%" y="1349" width="0.0116%" height="15" fill="rgb(206,88,35)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1359.50"></text></g><g><title>std::io::Read::read_to_end (2 samples, 0.01%)</title><rect x="99.7454%" y="1333" width="0.0116%" height="15" fill="rgb(205,126,30)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1343.50"></text></g><g><title>std::io::read_to_end (2 samples, 0.01%)</title><rect x="99.7454%" y="1317" width="0.0116%" height="15" fill="rgb(230,176,12)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1327.50"></text></g><g><title>std::io::read_to_end_with_reservation (2 samples, 0.01%)</title><rect x="99.7454%" y="1301" width="0.0116%" height="15" fill="rgb(243,19,9)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1311.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.01%)</title><rect x="99.7454%" y="1285" width="0.0116%" height="15" fill="rgb(245,171,17)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1295.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.01%)</title><rect x="99.7454%" y="1269" width="0.0116%" height="15" fill="rgb(227,52,21)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1279.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.01%)</title><rect x="99.7454%" y="1253" width="0.0116%" height="15" fill="rgb(238,69,14)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1263.50"></text></g><g><title>__libc_read (2 samples, 0.01%)</title><rect x="99.7454%" y="1237" width="0.0116%" height="15" fill="rgb(241,156,39)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1221" width="0.0116%" height="15" fill="rgb(212,227,28)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1205" width="0.0116%" height="15" fill="rgb(209,118,27)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1189" width="0.0116%" height="15" fill="rgb(226,102,5)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1173" width="0.0116%" height="15" fill="rgb(223,34,3)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1183.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1157" width="0.0116%" height="15" fill="rgb(221,81,38)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1141" width="0.0116%" height="15" fill="rgb(236,219,28)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1125" width="0.0116%" height="15" fill="rgb(213,200,14)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1109" width="0.0116%" height="15" fill="rgb(240,33,19)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1093" width="0.0116%" height="15" fill="rgb(233,113,27)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1077" width="0.0116%" height="15" fill="rgb(220,221,18)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1061" width="0.0116%" height="15" fill="rgb(238,92,8)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1045" width="0.0116%" height="15" fill="rgb(222,164,16)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1029" width="0.0116%" height="15" fill="rgb(241,119,3)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="1013" width="0.0116%" height="15" fill="rgb(241,44,8)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="997" width="0.0116%" height="15" fill="rgb(230,36,40)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="981" width="0.0116%" height="15" fill="rgb(243,16,36)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="965" width="0.0116%" height="15" fill="rgb(231,4,26)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="949" width="0.0116%" height="15" fill="rgb(240,9,31)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="933" width="0.0116%" height="15" fill="rgb(207,173,15)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="917" width="0.0116%" height="15" fill="rgb(224,192,53)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.7454%" y="901" width="0.0116%" height="15" fill="rgb(223,67,28)" fg:x="17235" fg:w="2"/><text x="99.9954%" y="911.50"></text></g><g><title>cargo::main (4 samples, 0.02%)</title><rect x="99.7569%" y="1541" width="0.0231%" height="15" fill="rgb(211,20,47)" fg:x="17237" fg:w="4"/><text x="100.0069%" y="1551.50"></text></g><g><title>cargo::cli::main (4 samples, 0.02%)</title><rect x="99.7569%" y="1525" width="0.0231%" height="15" fill="rgb(240,228,2)" fg:x="17237" fg:w="4"/><text x="100.0069%" y="1535.50"></text></g><g><title>cargo::core::package::PackageSet::download_accessible (3 samples, 0.02%)</title><rect x="99.7801%" y="1509" width="0.0174%" height="15" fill="rgb(248,151,12)" fg:x="17241" fg:w="3"/><text x="100.0301%" y="1519.50"></text></g><g><title>cargo::core::package::Downloads::start (3 samples, 0.02%)</title><rect x="99.7801%" y="1493" width="0.0174%" height="15" fill="rgb(244,8,39)" fg:x="17241" fg:w="3"/><text x="100.0301%" y="1503.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::download (3 samples, 0.02%)</title><rect x="99.7801%" y="1477" width="0.0174%" height="15" fill="rgb(222,26,8)" fg:x="17241" fg:w="3"/><text x="100.0301%" y="1487.50"></text></g><g><title>cargo::sources::registry::RegistrySource::get_pkg (2 samples, 0.01%)</title><rect x="99.7859%" y="1461" width="0.0116%" height="15" fill="rgb(213,106,44)" fg:x="17242" fg:w="2"/><text x="100.0359%" y="1471.50"></text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (5 samples, 0.03%)</title><rect x="99.7801%" y="1541" width="0.0289%" height="15" fill="rgb(214,129,20)" fg:x="17241" fg:w="5"/><text x="100.0301%" y="1551.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (5 samples, 0.03%)</title><rect x="99.7801%" y="1525" width="0.0289%" height="15" fill="rgb(212,32,13)" fg:x="17241" fg:w="5"/><text x="100.0301%" y="1535.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.02%)</title><rect x="99.8090%" y="1461" width="0.0174%" height="15" fill="rgb(208,168,33)" fg:x="17246" fg:w="3"/><text x="100.0590%" y="1471.50"></text></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.01%)</title><rect x="99.8148%" y="1445" width="0.0116%" height="15" fill="rgb(231,207,8)" fg:x="17247" fg:w="2"/><text x="100.0648%" y="1455.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.01%)</title><rect x="99.8148%" y="1429" width="0.0116%" height="15" fill="rgb(235,219,23)" fg:x="17247" fg:w="2"/><text x="100.0648%" y="1439.50"></text></g><g><title>toml::de::Deserializer::value (2 samples, 0.01%)</title><rect x="99.8264%" y="1445" width="0.0116%" height="15" fill="rgb(226,216,26)" fg:x="17249" fg:w="2"/><text x="100.0764%" y="1455.50"></text></g><g><title>toml::de::Deserializer::tables (4 samples, 0.02%)</title><rect x="99.8264%" y="1461" width="0.0231%" height="15" fill="rgb(239,137,16)" fg:x="17249" fg:w="4"/><text x="100.0764%" y="1471.50"></text></g><g><title>toml::tokens::Tokenizer::next (2 samples, 0.01%)</title><rect x="99.8380%" y="1445" width="0.0116%" height="15" fill="rgb(207,12,36)" fg:x="17251" fg:w="2"/><text x="100.0880%" y="1455.50"></text></g><g><title>cargo::ops::cargo_read_manifest::read_package (9 samples, 0.05%)</title><rect x="99.8090%" y="1541" width="0.0521%" height="15" fill="rgb(210,214,24)" fg:x="17246" fg:w="9"/><text x="100.0590%" y="1551.50"></text></g><g><title>cargo::util::toml::read_manifest (9 samples, 0.05%)</title><rect x="99.8090%" y="1525" width="0.0521%" height="15" fill="rgb(206,56,30)" fg:x="17246" fg:w="9"/><text x="100.0590%" y="1535.50"></text></g><g><title>cargo::util::toml::parse (9 samples, 0.05%)</title><rect x="99.8090%" y="1509" width="0.0521%" height="15" fill="rgb(228,143,26)" fg:x="17246" fg:w="9"/><text x="100.0590%" y="1519.50"></text></g><g><title>&lt;toml::value::Value as core::str::traits::FromStr&gt;::from_str (9 samples, 0.05%)</title><rect x="99.8090%" y="1493" width="0.0521%" height="15" fill="rgb(216,218,46)" fg:x="17246" fg:w="9"/><text x="100.0590%" y="1503.50"></text></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.05%)</title><rect x="99.8090%" y="1477" width="0.0521%" height="15" fill="rgb(206,6,19)" fg:x="17246" fg:w="9"/><text x="100.0590%" y="1487.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (2 samples, 0.01%)</title><rect x="99.8611%" y="1541" width="0.0116%" height="15" fill="rgb(239,177,51)" fg:x="17255" fg:w="2"/><text x="100.1111%" y="1551.50"></text></g><g><title>cargo::core::resolver::resolve (2 samples, 0.01%)</title><rect x="99.8611%" y="1525" width="0.0116%" height="15" fill="rgb(216,55,25)" fg:x="17255" fg:w="2"/><text x="100.1111%" y="1535.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (2 samples, 0.01%)</title><rect x="99.8727%" y="1541" width="0.0116%" height="15" fill="rgb(231,163,29)" fg:x="17257" fg:w="2"/><text x="100.1227%" y="1551.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (3 samples, 0.02%)</title><rect x="99.8843%" y="1541" width="0.0174%" height="15" fill="rgb(232,149,50)" fg:x="17259" fg:w="3"/><text x="100.1343%" y="1551.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (2 samples, 0.01%)</title><rect x="99.8900%" y="1525" width="0.0116%" height="15" fill="rgb(223,142,48)" fg:x="17260" fg:w="2"/><text x="100.1400%" y="1535.50"></text></g><g><title>cargo::util::toml::targets::infer_from_directory (5 samples, 0.03%)</title><rect x="99.9190%" y="1493" width="0.0289%" height="15" fill="rgb(245,83,23)" fg:x="17265" fg:w="5"/><text x="100.1690%" y="1503.50"></text></g><g><title>std::sys::unix::fs::readdir (4 samples, 0.02%)</title><rect x="99.9248%" y="1477" width="0.0231%" height="15" fill="rgb(224,63,2)" fg:x="17266" fg:w="4"/><text x="100.1748%" y="1487.50"></text></g><g><title>opendir (4 samples, 0.02%)</title><rect x="99.9248%" y="1461" width="0.0231%" height="15" fill="rgb(218,65,53)" fg:x="17266" fg:w="4"/><text x="100.1748%" y="1471.50"></text></g><g><title>__open64_nocancel (3 samples, 0.02%)</title><rect x="99.9306%" y="1445" width="0.0174%" height="15" fill="rgb(221,84,29)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1455.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1429" width="0.0174%" height="15" fill="rgb(234,0,32)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1439.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1413" width="0.0174%" height="15" fill="rgb(206,20,16)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1423.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1397" width="0.0174%" height="15" fill="rgb(244,172,18)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1407.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1381" width="0.0174%" height="15" fill="rgb(254,133,1)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1391.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1365" width="0.0174%" height="15" fill="rgb(222,206,41)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1375.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1349" width="0.0174%" height="15" fill="rgb(212,3,42)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1359.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1333" width="0.0174%" height="15" fill="rgb(241,11,4)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1343.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1317" width="0.0174%" height="15" fill="rgb(205,19,26)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.9306%" y="1301" width="0.0174%" height="15" fill="rgb(210,179,32)" fg:x="17267" fg:w="3"/><text x="100.1806%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9363%" y="1285" width="0.0116%" height="15" fill="rgb(227,116,49)" fg:x="17268" fg:w="2"/><text x="100.1863%" y="1295.50"></text></g><g><title>cargo::util::toml::TomlManifest::to_real_manifest (8 samples, 0.05%)</title><rect x="99.9074%" y="1525" width="0.0463%" height="15" fill="rgb(211,146,6)" fg:x="17263" fg:w="8"/><text x="100.1574%" y="1535.50"></text></g><g><title>cargo::util::toml::targets::targets (7 samples, 0.04%)</title><rect x="99.9132%" y="1509" width="0.0405%" height="15" fill="rgb(219,44,39)" fg:x="17264" fg:w="7"/><text x="100.1632%" y="1519.50"></text></g><g><title>[unknown] (43 samples, 0.25%)</title><rect x="99.7106%" y="1557" width="0.2489%" height="15" fill="rgb(234,128,11)" fg:x="17229" fg:w="43"/><text x="99.9606%" y="1567.50"></text></g><g><title>cargo::util::toml::read_manifest (10 samples, 0.06%)</title><rect x="99.9016%" y="1541" width="0.0579%" height="15" fill="rgb(220,183,53)" fg:x="17262" fg:w="10"/><text x="100.1516%" y="1551.50"></text></g><g><title>cargo::commands::metadata::exec (2 samples, 0.01%)</title><rect x="99.9653%" y="1365" width="0.0116%" height="15" fill="rgb(213,219,32)" fg:x="17273" fg:w="2"/><text x="100.2153%" y="1375.50"></text></g><g><title>ASN1_item_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1173" width="0.0116%" height="15" fill="rgb(232,156,16)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1183.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1157" width="0.0116%" height="15" fill="rgb(246,135,34)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1167.50"></text></g><g><title>asn1_template_ex_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1141" width="0.0116%" height="15" fill="rgb(241,99,0)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1151.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1125" width="0.0116%" height="15" fill="rgb(222,103,45)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1135.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1109" width="0.0116%" height="15" fill="rgb(212,57,4)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1119.50"></text></g><g><title>asn1_template_ex_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1093" width="0.0116%" height="15" fill="rgb(215,68,47)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1103.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1077" width="0.0116%" height="15" fill="rgb(230,84,2)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1087.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1061" width="0.0116%" height="15" fill="rgb(220,102,14)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1071.50"></text></g><g><title>x509_name_ex_d2i (2 samples, 0.01%)</title><rect x="99.9826%" y="1045" width="0.0116%" height="15" fill="rgb(240,10,32)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1055.50"></text></g><g><title>x509_name_canon (2 samples, 0.01%)</title><rect x="99.9826%" y="1029" width="0.0116%" height="15" fill="rgb(215,47,27)" fg:x="17276" fg:w="2"/><text x="100.2326%" y="1039.50"></text></g><g><title>all (17,279 samples, 100%)</title><rect x="0.0000%" y="1589" width="100.0000%" height="15" fill="rgb(233,188,43)" fg:x="0" fg:w="17279"/><text x="0.2500%" y="1599.50"></text></g><g><title>cargo (51 samples, 0.30%)</title><rect x="99.7048%" y="1573" width="0.2952%" height="15" fill="rgb(253,190,1)" fg:x="17228" fg:w="51"/><text x="99.9548%" y="1583.50"></text></g><g><title>_start (7 samples, 0.04%)</title><rect x="99.9595%" y="1557" width="0.0405%" height="15" fill="rgb(206,114,52)" fg:x="17272" fg:w="7"/><text x="100.2095%" y="1567.50"></text></g><g><title>__libc_start_main (7 samples, 0.04%)</title><rect x="99.9595%" y="1541" width="0.0405%" height="15" fill="rgb(233,120,37)" fg:x="17272" fg:w="7"/><text x="100.2095%" y="1551.50"></text></g><g><title>main (6 samples, 0.03%)</title><rect x="99.9653%" y="1525" width="0.0347%" height="15" fill="rgb(214,52,39)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1535.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.03%)</title><rect x="99.9653%" y="1509" width="0.0347%" height="15" fill="rgb(223,80,29)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1519.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.03%)</title><rect x="99.9653%" y="1493" width="0.0347%" height="15" fill="rgb(230,101,40)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1503.50"></text></g><g><title>std::panicking::try (6 samples, 0.03%)</title><rect x="99.9653%" y="1477" width="0.0347%" height="15" fill="rgb(219,211,8)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1487.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.03%)</title><rect x="99.9653%" y="1461" width="0.0347%" height="15" fill="rgb(252,126,28)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.03%)</title><rect x="99.9653%" y="1445" width="0.0347%" height="15" fill="rgb(215,56,38)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1455.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.03%)</title><rect x="99.9653%" y="1429" width="0.0347%" height="15" fill="rgb(249,55,44)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1439.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.03%)</title><rect x="99.9653%" y="1413" width="0.0347%" height="15" fill="rgb(220,221,32)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1423.50"></text></g><g><title>cargo::main (6 samples, 0.03%)</title><rect x="99.9653%" y="1397" width="0.0347%" height="15" fill="rgb(212,216,41)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1407.50"></text></g><g><title>cargo::cli::main (6 samples, 0.03%)</title><rect x="99.9653%" y="1381" width="0.0347%" height="15" fill="rgb(228,213,43)" fg:x="17273" fg:w="6"/><text x="100.2153%" y="1391.50"></text></g><g><title>cargo::ops::registry::needs_custom_http_transport (4 samples, 0.02%)</title><rect x="99.9769%" y="1365" width="0.0231%" height="15" fill="rgb(211,31,26)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1375.50"></text></g><g><title>cargo::ops::registry::http_proxy (4 samples, 0.02%)</title><rect x="99.9769%" y="1349" width="0.0231%" height="15" fill="rgb(229,202,19)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1359.50"></text></g><g><title>git2::config::Config::open_default (4 samples, 0.02%)</title><rect x="99.9769%" y="1333" width="0.0231%" height="15" fill="rgb(229,105,46)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1343.50"></text></g><g><title>libgit2_sys::init (4 samples, 0.02%)</title><rect x="99.9769%" y="1317" width="0.0231%" height="15" fill="rgb(235,108,1)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1327.50"></text></g><g><title>std::sync::once::Once::call_inner (4 samples, 0.02%)</title><rect x="99.9769%" y="1301" width="0.0231%" height="15" fill="rgb(245,111,35)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1311.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (4 samples, 0.02%)</title><rect x="99.9769%" y="1285" width="0.0231%" height="15" fill="rgb(219,185,31)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1295.50"></text></g><g><title>git_runtime_init (4 samples, 0.02%)</title><rect x="99.9769%" y="1269" width="0.0231%" height="15" fill="rgb(214,4,43)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1279.50"></text></g><g><title>git_openssl_stream_global_init (4 samples, 0.02%)</title><rect x="99.9769%" y="1253" width="0.0231%" height="15" fill="rgb(235,227,40)" fg:x="17275" fg:w="4"/><text x="100.2269%" y="1263.50"></text></g><g><title>X509_STORE_set_default_paths (3 samples, 0.02%)</title><rect x="99.9826%" y="1237" width="0.0174%" height="15" fill="rgb(230,88,30)" fg:x="17276" fg:w="3"/><text x="100.2326%" y="1247.50"></text></g><g><title>by_file_ctrl (3 samples, 0.02%)</title><rect x="99.9826%" y="1221" width="0.0174%" height="15" fill="rgb(216,217,1)" fg:x="17276" fg:w="3"/><text x="100.2326%" y="1231.50"></text></g><g><title>X509_load_cert_crl_file (3 samples, 0.02%)</title><rect x="99.9826%" y="1205" width="0.0174%" height="15" fill="rgb(248,139,50)" fg:x="17276" fg:w="3"/><text x="100.2326%" y="1215.50"></text></g><g><title>PEM_X509_INFO_read_bio (3 samples, 0.02%)</title><rect x="99.9826%" y="1189" width="0.0174%" height="15" fill="rgb(233,1,21)" fg:x="17276" fg:w="3"/><text x="100.2326%" y="1199.50"></text></g></svg></svg>