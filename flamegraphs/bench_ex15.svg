<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1478" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1461.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1461.00"> </text><svg id="frames" x="10" width="1180" total_samples="379394"><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (61 samples, 0.02%)</title><rect x="0.0024%" y="1205" width="0.0161%" height="15" fill="rgb(227,0,7)" fg:x="9" fg:w="61"/><text x="0.2524%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (61 samples, 0.02%)</title><rect x="0.0024%" y="1189" width="0.0161%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="61"/><text x="0.2524%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (61 samples, 0.02%)</title><rect x="0.0024%" y="1173" width="0.0161%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="61"/><text x="0.2524%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (61 samples, 0.02%)</title><rect x="0.0024%" y="1157" width="0.0161%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="61"/><text x="0.2524%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (41 samples, 0.01%)</title><rect x="0.0185%" y="1077" width="0.0108%" height="15" fill="rgb(208,68,35)" fg:x="70" fg:w="41"/><text x="0.2685%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (41 samples, 0.01%)</title><rect x="0.0185%" y="1061" width="0.0108%" height="15" fill="rgb(232,128,0)" fg:x="70" fg:w="41"/><text x="0.2685%" y="1071.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (41 samples, 0.01%)</title><rect x="0.0185%" y="1045" width="0.0108%" height="15" fill="rgb(207,160,47)" fg:x="70" fg:w="41"/><text x="0.2685%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.01%)</title><rect x="0.0185%" y="1029" width="0.0108%" height="15" fill="rgb(228,23,34)" fg:x="70" fg:w="41"/><text x="0.2685%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.01%)</title><rect x="0.0185%" y="1013" width="0.0108%" height="15" fill="rgb(218,30,26)" fg:x="70" fg:w="41"/><text x="0.2685%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.01%)</title><rect x="0.0185%" y="997" width="0.0108%" height="15" fill="rgb(220,122,19)" fg:x="70" fg:w="41"/><text x="0.2685%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.01%)</title><rect x="0.0185%" y="981" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="70" fg:w="41"/><text x="0.2685%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (41 samples, 0.01%)</title><rect x="0.0185%" y="965" width="0.0108%" height="15" fill="rgb(240,193,28)" fg:x="70" fg:w="41"/><text x="0.2685%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (41 samples, 0.01%)</title><rect x="0.0185%" y="949" width="0.0108%" height="15" fill="rgb(216,20,37)" fg:x="70" fg:w="41"/><text x="0.2685%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (41 samples, 0.01%)</title><rect x="0.0185%" y="933" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="70" fg:w="41"/><text x="0.2685%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (41 samples, 0.01%)</title><rect x="0.0185%" y="917" width="0.0108%" height="15" fill="rgb(217,207,13)" fg:x="70" fg:w="41"/><text x="0.2685%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (41 samples, 0.01%)</title><rect x="0.0185%" y="901" width="0.0108%" height="15" fill="rgb(231,73,38)" fg:x="70" fg:w="41"/><text x="0.2685%" y="911.50"></text></g><g><title>criterion::analysis::estimates::stats (41 samples, 0.01%)</title><rect x="0.0185%" y="885" width="0.0108%" height="15" fill="rgb(225,20,46)" fg:x="70" fg:w="41"/><text x="0.2685%" y="895.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (107 samples, 0.03%)</title><rect x="0.0024%" y="1317" width="0.0282%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="107"/><text x="0.2524%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (107 samples, 0.03%)</title><rect x="0.0024%" y="1301" width="0.0282%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="107"/><text x="0.2524%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (107 samples, 0.03%)</title><rect x="0.0024%" y="1285" width="0.0282%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="107"/><text x="0.2524%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (107 samples, 0.03%)</title><rect x="0.0024%" y="1269" width="0.0282%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="107"/><text x="0.2524%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (107 samples, 0.03%)</title><rect x="0.0024%" y="1253" width="0.0282%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="107"/><text x="0.2524%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (107 samples, 0.03%)</title><rect x="0.0024%" y="1237" width="0.0282%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="107"/><text x="0.2524%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (107 samples, 0.03%)</title><rect x="0.0024%" y="1221" width="0.0282%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="107"/><text x="0.2524%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (46 samples, 0.01%)</title><rect x="0.0185%" y="1205" width="0.0121%" height="15" fill="rgb(241,131,45)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 0.01%)</title><rect x="0.0185%" y="1189" width="0.0121%" height="15" fill="rgb(249,31,29)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1199.50"></text></g><g><title>std::panicking::try (46 samples, 0.01%)</title><rect x="0.0185%" y="1173" width="0.0121%" height="15" fill="rgb(225,111,53)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 0.01%)</title><rect x="0.0185%" y="1157" width="0.0121%" height="15" fill="rgb(238,160,17)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1167.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (46 samples, 0.01%)</title><rect x="0.0185%" y="1141" width="0.0121%" height="15" fill="rgb(214,148,48)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (46 samples, 0.01%)</title><rect x="0.0185%" y="1125" width="0.0121%" height="15" fill="rgb(232,36,49)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (46 samples, 0.01%)</title><rect x="0.0185%" y="1109" width="0.0121%" height="15" fill="rgb(209,103,24)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.01%)</title><rect x="0.0185%" y="1093" width="0.0121%" height="15" fill="rgb(229,88,8)" fg:x="70" fg:w="46"/><text x="0.2685%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (45 samples, 0.01%)</title><rect x="0.0306%" y="1077" width="0.0119%" height="15" fill="rgb(213,181,19)" fg:x="116" fg:w="45"/><text x="0.2806%" y="1087.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (45 samples, 0.01%)</title><rect x="0.0306%" y="1061" width="0.0119%" height="15" fill="rgb(254,191,54)" fg:x="116" fg:w="45"/><text x="0.2806%" y="1071.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (45 samples, 0.01%)</title><rect x="0.0306%" y="1045" width="0.0119%" height="15" fill="rgb(241,83,37)" fg:x="116" fg:w="45"/><text x="0.2806%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.01%)</title><rect x="0.0306%" y="1029" width="0.0119%" height="15" fill="rgb(233,36,39)" fg:x="116" fg:w="45"/><text x="0.2806%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 0.01%)</title><rect x="0.0306%" y="1013" width="0.0119%" height="15" fill="rgb(226,3,54)" fg:x="116" fg:w="45"/><text x="0.2806%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 0.01%)</title><rect x="0.0306%" y="997" width="0.0119%" height="15" fill="rgb(245,192,40)" fg:x="116" fg:w="45"/><text x="0.2806%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.01%)</title><rect x="0.0306%" y="981" width="0.0119%" height="15" fill="rgb(238,167,29)" fg:x="116" fg:w="45"/><text x="0.2806%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (45 samples, 0.01%)</title><rect x="0.0306%" y="965" width="0.0119%" height="15" fill="rgb(232,182,51)" fg:x="116" fg:w="45"/><text x="0.2806%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (45 samples, 0.01%)</title><rect x="0.0306%" y="949" width="0.0119%" height="15" fill="rgb(231,60,39)" fg:x="116" fg:w="45"/><text x="0.2806%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (45 samples, 0.01%)</title><rect x="0.0306%" y="933" width="0.0119%" height="15" fill="rgb(208,69,12)" fg:x="116" fg:w="45"/><text x="0.2806%" y="943.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (45 samples, 0.01%)</title><rect x="0.0306%" y="917" width="0.0119%" height="15" fill="rgb(235,93,37)" fg:x="116" fg:w="45"/><text x="0.2806%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (45 samples, 0.01%)</title><rect x="0.0306%" y="901" width="0.0119%" height="15" fill="rgb(213,116,39)" fg:x="116" fg:w="45"/><text x="0.2806%" y="911.50"></text></g><g><title>criterion::analysis::estimates::stats (45 samples, 0.01%)</title><rect x="0.0306%" y="885" width="0.0119%" height="15" fill="rgb(222,207,29)" fg:x="116" fg:w="45"/><text x="0.2806%" y="895.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (46 samples, 0.01%)</title><rect x="0.0306%" y="1141" width="0.0121%" height="15" fill="rgb(206,96,30)" fg:x="116" fg:w="46"/><text x="0.2806%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (46 samples, 0.01%)</title><rect x="0.0306%" y="1125" width="0.0121%" height="15" fill="rgb(218,138,4)" fg:x="116" fg:w="46"/><text x="0.2806%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (46 samples, 0.01%)</title><rect x="0.0306%" y="1109" width="0.0121%" height="15" fill="rgb(250,191,14)" fg:x="116" fg:w="46"/><text x="0.2806%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.01%)</title><rect x="0.0306%" y="1093" width="0.0121%" height="15" fill="rgb(239,60,40)" fg:x="116" fg:w="46"/><text x="0.2806%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (189 samples, 0.05%)</title><rect x="0.0024%" y="1381" width="0.0498%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="189"/><text x="0.2524%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (189 samples, 0.05%)</title><rect x="0.0024%" y="1365" width="0.0498%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="189"/><text x="0.2524%" y="1375.50"></text></g><g><title>rayon_core::registry::in_worker (189 samples, 0.05%)</title><rect x="0.0024%" y="1349" width="0.0498%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="189"/><text x="0.2524%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (189 samples, 0.05%)</title><rect x="0.0024%" y="1333" width="0.0498%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="189"/><text x="0.2524%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (82 samples, 0.02%)</title><rect x="0.0306%" y="1317" width="0.0216%" height="15" fill="rgb(231,138,38)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (82 samples, 0.02%)</title><rect x="0.0306%" y="1301" width="0.0216%" height="15" fill="rgb(231,145,46)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1311.50"></text></g><g><title>std::panicking::try (82 samples, 0.02%)</title><rect x="0.0306%" y="1285" width="0.0216%" height="15" fill="rgb(251,118,11)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (82 samples, 0.02%)</title><rect x="0.0306%" y="1269" width="0.0216%" height="15" fill="rgb(217,147,25)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1279.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (82 samples, 0.02%)</title><rect x="0.0306%" y="1253" width="0.0216%" height="15" fill="rgb(247,81,37)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (82 samples, 0.02%)</title><rect x="0.0306%" y="1237" width="0.0216%" height="15" fill="rgb(209,12,38)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (82 samples, 0.02%)</title><rect x="0.0306%" y="1221" width="0.0216%" height="15" fill="rgb(227,1,9)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (82 samples, 0.02%)</title><rect x="0.0306%" y="1205" width="0.0216%" height="15" fill="rgb(248,47,43)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1215.50"></text></g><g><title>rayon_core::join::join_context (82 samples, 0.02%)</title><rect x="0.0306%" y="1189" width="0.0216%" height="15" fill="rgb(221,10,30)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (82 samples, 0.02%)</title><rect x="0.0306%" y="1173" width="0.0216%" height="15" fill="rgb(210,229,1)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (82 samples, 0.02%)</title><rect x="0.0306%" y="1157" width="0.0216%" height="15" fill="rgb(222,148,37)" fg:x="116" fg:w="82"/><text x="0.2806%" y="1167.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (38 samples, 0.01%)</title><rect x="0.0525%" y="757" width="0.0100%" height="15" fill="rgb(234,67,33)" fg:x="199" fg:w="38"/><text x="0.3025%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (38 samples, 0.01%)</title><rect x="0.0525%" y="741" width="0.0100%" height="15" fill="rgb(247,98,35)" fg:x="199" fg:w="38"/><text x="0.3025%" y="751.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (38 samples, 0.01%)</title><rect x="0.0525%" y="725" width="0.0100%" height="15" fill="rgb(247,138,52)" fg:x="199" fg:w="38"/><text x="0.3025%" y="735.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (38 samples, 0.01%)</title><rect x="0.0525%" y="709" width="0.0100%" height="15" fill="rgb(213,79,30)" fg:x="199" fg:w="38"/><text x="0.3025%" y="719.50"></text></g><g><title>rayon::slice::quicksort::recurse (38 samples, 0.01%)</title><rect x="0.0525%" y="693" width="0.0100%" height="15" fill="rgb(246,177,23)" fg:x="199" fg:w="38"/><text x="0.3025%" y="703.50"></text></g><g><title>rayon::slice::quicksort::recurse (38 samples, 0.01%)</title><rect x="0.0525%" y="677" width="0.0100%" height="15" fill="rgb(230,62,27)" fg:x="199" fg:w="38"/><text x="0.3025%" y="687.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (67 samples, 0.02%)</title><rect x="0.0522%" y="1381" width="0.0177%" height="15" fill="rgb(216,154,8)" fg:x="198" fg:w="67"/><text x="0.3022%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (67 samples, 0.02%)</title><rect x="0.0522%" y="1365" width="0.0177%" height="15" fill="rgb(244,35,45)" fg:x="198" fg:w="67"/><text x="0.3022%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (67 samples, 0.02%)</title><rect x="0.0522%" y="1349" width="0.0177%" height="15" fill="rgb(251,115,12)" fg:x="198" fg:w="67"/><text x="0.3022%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (67 samples, 0.02%)</title><rect x="0.0522%" y="1333" width="0.0177%" height="15" fill="rgb(240,54,50)" fg:x="198" fg:w="67"/><text x="0.3022%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (67 samples, 0.02%)</title><rect x="0.0522%" y="1317" width="0.0177%" height="15" fill="rgb(233,84,52)" fg:x="198" fg:w="67"/><text x="0.3022%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (67 samples, 0.02%)</title><rect x="0.0522%" y="1301" width="0.0177%" height="15" fill="rgb(207,117,47)" fg:x="198" fg:w="67"/><text x="0.3022%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (67 samples, 0.02%)</title><rect x="0.0522%" y="1285" width="0.0177%" height="15" fill="rgb(249,43,39)" fg:x="198" fg:w="67"/><text x="0.3022%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (66 samples, 0.02%)</title><rect x="0.0525%" y="1269" width="0.0174%" height="15" fill="rgb(209,38,44)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.02%)</title><rect x="0.0525%" y="1253" width="0.0174%" height="15" fill="rgb(236,212,23)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1263.50"></text></g><g><title>std::panicking::try (66 samples, 0.02%)</title><rect x="0.0525%" y="1237" width="0.0174%" height="15" fill="rgb(242,79,21)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.02%)</title><rect x="0.0525%" y="1221" width="0.0174%" height="15" fill="rgb(211,96,35)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 0.02%)</title><rect x="0.0525%" y="1205" width="0.0174%" height="15" fill="rgb(253,215,40)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="1189" width="0.0174%" height="15" fill="rgb(211,81,21)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="1173" width="0.0174%" height="15" fill="rgb(208,190,38)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (66 samples, 0.02%)</title><rect x="0.0525%" y="1157" width="0.0174%" height="15" fill="rgb(235,213,38)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (66 samples, 0.02%)</title><rect x="0.0525%" y="1141" width="0.0174%" height="15" fill="rgb(237,122,38)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (66 samples, 0.02%)</title><rect x="0.0525%" y="1125" width="0.0174%" height="15" fill="rgb(244,218,35)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="1109" width="0.0174%" height="15" fill="rgb(240,68,47)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (66 samples, 0.02%)</title><rect x="0.0525%" y="1093" width="0.0174%" height="15" fill="rgb(210,16,53)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (66 samples, 0.02%)</title><rect x="0.0525%" y="1077" width="0.0174%" height="15" fill="rgb(235,124,12)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1087.50"></text></g><g><title>std::panicking::try (66 samples, 0.02%)</title><rect x="0.0525%" y="1061" width="0.0174%" height="15" fill="rgb(224,169,11)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (66 samples, 0.02%)</title><rect x="0.0525%" y="1045" width="0.0174%" height="15" fill="rgb(250,166,2)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (66 samples, 0.02%)</title><rect x="0.0525%" y="1029" width="0.0174%" height="15" fill="rgb(242,216,29)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="1013" width="0.0174%" height="15" fill="rgb(230,116,27)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="997" width="0.0174%" height="15" fill="rgb(228,99,48)" fg:x="199" fg:w="66"/><text x="0.3025%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (66 samples, 0.02%)</title><rect x="0.0525%" y="981" width="0.0174%" height="15" fill="rgb(253,11,6)" fg:x="199" fg:w="66"/><text x="0.3025%" y="991.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (66 samples, 0.02%)</title><rect x="0.0525%" y="965" width="0.0174%" height="15" fill="rgb(247,143,39)" fg:x="199" fg:w="66"/><text x="0.3025%" y="975.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (66 samples, 0.02%)</title><rect x="0.0525%" y="949" width="0.0174%" height="15" fill="rgb(236,97,10)" fg:x="199" fg:w="66"/><text x="0.3025%" y="959.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (66 samples, 0.02%)</title><rect x="0.0525%" y="933" width="0.0174%" height="15" fill="rgb(233,208,19)" fg:x="199" fg:w="66"/><text x="0.3025%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.02%)</title><rect x="0.0525%" y="917" width="0.0174%" height="15" fill="rgb(216,164,2)" fg:x="199" fg:w="66"/><text x="0.3025%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (66 samples, 0.02%)</title><rect x="0.0525%" y="901" width="0.0174%" height="15" fill="rgb(220,129,5)" fg:x="199" fg:w="66"/><text x="0.3025%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (66 samples, 0.02%)</title><rect x="0.0525%" y="885" width="0.0174%" height="15" fill="rgb(242,17,10)" fg:x="199" fg:w="66"/><text x="0.3025%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (66 samples, 0.02%)</title><rect x="0.0525%" y="869" width="0.0174%" height="15" fill="rgb(242,107,0)" fg:x="199" fg:w="66"/><text x="0.3025%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="853" width="0.0174%" height="15" fill="rgb(251,28,31)" fg:x="199" fg:w="66"/><text x="0.3025%" y="863.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="837" width="0.0174%" height="15" fill="rgb(233,223,10)" fg:x="199" fg:w="66"/><text x="0.3025%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (66 samples, 0.02%)</title><rect x="0.0525%" y="821" width="0.0174%" height="15" fill="rgb(215,21,27)" fg:x="199" fg:w="66"/><text x="0.3025%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (66 samples, 0.02%)</title><rect x="0.0525%" y="805" width="0.0174%" height="15" fill="rgb(232,23,21)" fg:x="199" fg:w="66"/><text x="0.3025%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (66 samples, 0.02%)</title><rect x="0.0525%" y="789" width="0.0174%" height="15" fill="rgb(244,5,23)" fg:x="199" fg:w="66"/><text x="0.3025%" y="799.50"></text></g><g><title>criterion::analysis::estimates::stats (66 samples, 0.02%)</title><rect x="0.0525%" y="773" width="0.0174%" height="15" fill="rgb(226,81,46)" fg:x="199" fg:w="66"/><text x="0.3025%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (69 samples, 0.02%)</title><rect x="0.0698%" y="837" width="0.0182%" height="15" fill="rgb(247,70,30)" fg:x="265" fg:w="69"/><text x="0.3198%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (67 samples, 0.02%)</title><rect x="0.0704%" y="821" width="0.0177%" height="15" fill="rgb(212,68,19)" fg:x="267" fg:w="67"/><text x="0.3204%" y="831.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (67 samples, 0.02%)</title><rect x="0.0704%" y="805" width="0.0177%" height="15" fill="rgb(240,187,13)" fg:x="267" fg:w="67"/><text x="0.3204%" y="815.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (67 samples, 0.02%)</title><rect x="0.0704%" y="789" width="0.0177%" height="15" fill="rgb(223,113,26)" fg:x="267" fg:w="67"/><text x="0.3204%" y="799.50"></text></g><g><title>rayon::slice::quicksort::recurse (67 samples, 0.02%)</title><rect x="0.0704%" y="773" width="0.0177%" height="15" fill="rgb(206,192,2)" fg:x="267" fg:w="67"/><text x="0.3204%" y="783.50"></text></g><g><title>rayon::slice::quicksort::recurse (38 samples, 0.01%)</title><rect x="0.0780%" y="757" width="0.0100%" height="15" fill="rgb(241,108,4)" fg:x="296" fg:w="38"/><text x="0.3280%" y="767.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (132 samples, 0.03%)</title><rect x="0.0698%" y="1109" width="0.0348%" height="15" fill="rgb(247,173,49)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (132 samples, 0.03%)</title><rect x="0.0698%" y="1093" width="0.0348%" height="15" fill="rgb(224,114,35)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (132 samples, 0.03%)</title><rect x="0.0698%" y="1077" width="0.0348%" height="15" fill="rgb(245,159,27)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (132 samples, 0.03%)</title><rect x="0.0698%" y="1061" width="0.0348%" height="15" fill="rgb(245,172,44)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (132 samples, 0.03%)</title><rect x="0.0698%" y="1045" width="0.0348%" height="15" fill="rgb(236,23,11)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1055.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (132 samples, 0.03%)</title><rect x="0.0698%" y="1029" width="0.0348%" height="15" fill="rgb(205,117,38)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1039.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (132 samples, 0.03%)</title><rect x="0.0698%" y="1013" width="0.0348%" height="15" fill="rgb(237,72,25)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (132 samples, 0.03%)</title><rect x="0.0698%" y="997" width="0.0348%" height="15" fill="rgb(244,70,9)" fg:x="265" fg:w="132"/><text x="0.3198%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (132 samples, 0.03%)</title><rect x="0.0698%" y="981" width="0.0348%" height="15" fill="rgb(217,125,39)" fg:x="265" fg:w="132"/><text x="0.3198%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (132 samples, 0.03%)</title><rect x="0.0698%" y="965" width="0.0348%" height="15" fill="rgb(235,36,10)" fg:x="265" fg:w="132"/><text x="0.3198%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (132 samples, 0.03%)</title><rect x="0.0698%" y="949" width="0.0348%" height="15" fill="rgb(251,123,47)" fg:x="265" fg:w="132"/><text x="0.3198%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (132 samples, 0.03%)</title><rect x="0.0698%" y="933" width="0.0348%" height="15" fill="rgb(221,13,13)" fg:x="265" fg:w="132"/><text x="0.3198%" y="943.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (132 samples, 0.03%)</title><rect x="0.0698%" y="917" width="0.0348%" height="15" fill="rgb(238,131,9)" fg:x="265" fg:w="132"/><text x="0.3198%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (132 samples, 0.03%)</title><rect x="0.0698%" y="901" width="0.0348%" height="15" fill="rgb(211,50,8)" fg:x="265" fg:w="132"/><text x="0.3198%" y="911.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (132 samples, 0.03%)</title><rect x="0.0698%" y="885" width="0.0348%" height="15" fill="rgb(245,182,24)" fg:x="265" fg:w="132"/><text x="0.3198%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (132 samples, 0.03%)</title><rect x="0.0698%" y="869" width="0.0348%" height="15" fill="rgb(242,14,37)" fg:x="265" fg:w="132"/><text x="0.3198%" y="879.50"></text></g><g><title>criterion::analysis::estimates::stats (132 samples, 0.03%)</title><rect x="0.0698%" y="853" width="0.0348%" height="15" fill="rgb(246,228,12)" fg:x="265" fg:w="132"/><text x="0.3198%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (63 samples, 0.02%)</title><rect x="0.0880%" y="837" width="0.0166%" height="15" fill="rgb(213,55,15)" fg:x="334" fg:w="63"/><text x="0.3380%" y="847.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (63 samples, 0.02%)</title><rect x="0.0880%" y="821" width="0.0166%" height="15" fill="rgb(209,9,3)" fg:x="334" fg:w="63"/><text x="0.3380%" y="831.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (63 samples, 0.02%)</title><rect x="0.0880%" y="805" width="0.0166%" height="15" fill="rgb(230,59,30)" fg:x="334" fg:w="63"/><text x="0.3380%" y="815.50"></text></g><g><title>rayon::slice::quicksort::recurse (63 samples, 0.02%)</title><rect x="0.0880%" y="789" width="0.0166%" height="15" fill="rgb(209,121,21)" fg:x="334" fg:w="63"/><text x="0.3380%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (66 samples, 0.02%)</title><rect x="0.1049%" y="773" width="0.0174%" height="15" fill="rgb(220,109,13)" fg:x="398" fg:w="66"/><text x="0.3549%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (62 samples, 0.02%)</title><rect x="0.1060%" y="757" width="0.0163%" height="15" fill="rgb(232,18,1)" fg:x="402" fg:w="62"/><text x="0.3560%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (62 samples, 0.02%)</title><rect x="0.1060%" y="741" width="0.0163%" height="15" fill="rgb(215,41,42)" fg:x="402" fg:w="62"/><text x="0.3560%" y="751.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (62 samples, 0.02%)</title><rect x="0.1060%" y="725" width="0.0163%" height="15" fill="rgb(224,123,36)" fg:x="402" fg:w="62"/><text x="0.3560%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (62 samples, 0.02%)</title><rect x="0.1060%" y="709" width="0.0163%" height="15" fill="rgb(240,125,3)" fg:x="402" fg:w="62"/><text x="0.3560%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (62 samples, 0.02%)</title><rect x="0.1223%" y="773" width="0.0163%" height="15" fill="rgb(205,98,50)" fg:x="464" fg:w="62"/><text x="0.3723%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (62 samples, 0.02%)</title><rect x="0.1223%" y="757" width="0.0163%" height="15" fill="rgb(205,185,37)" fg:x="464" fg:w="62"/><text x="0.3723%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (62 samples, 0.02%)</title><rect x="0.1223%" y="741" width="0.0163%" height="15" fill="rgb(238,207,15)" fg:x="464" fg:w="62"/><text x="0.3723%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (62 samples, 0.02%)</title><rect x="0.1223%" y="725" width="0.0163%" height="15" fill="rgb(213,199,42)" fg:x="464" fg:w="62"/><text x="0.3723%" y="735.50"></text></g><g><title>core::ops::function::Fn::call (133 samples, 0.04%)</title><rect x="0.1046%" y="805" width="0.0351%" height="15" fill="rgb(235,201,11)" fg:x="397" fg:w="133"/><text x="0.3546%" y="815.50"></text></g><g><title>criterion::analysis::estimates::stats (133 samples, 0.04%)</title><rect x="0.1046%" y="789" width="0.0351%" height="15" fill="rgb(207,46,11)" fg:x="397" fg:w="133"/><text x="0.3546%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (279 samples, 0.07%)</title><rect x="0.0698%" y="1221" width="0.0735%" height="15" fill="rgb(241,35,35)" fg:x="265" fg:w="279"/><text x="0.3198%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (279 samples, 0.07%)</title><rect x="0.0698%" y="1205" width="0.0735%" height="15" fill="rgb(243,32,47)" fg:x="265" fg:w="279"/><text x="0.3198%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (279 samples, 0.07%)</title><rect x="0.0698%" y="1189" width="0.0735%" height="15" fill="rgb(247,202,23)" fg:x="265" fg:w="279"/><text x="0.3198%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (279 samples, 0.07%)</title><rect x="0.0698%" y="1173" width="0.0735%" height="15" fill="rgb(219,102,11)" fg:x="265" fg:w="279"/><text x="0.3198%" y="1183.50"></text></g><g><title>rayon_core::join::join_context (279 samples, 0.07%)</title><rect x="0.0698%" y="1157" width="0.0735%" height="15" fill="rgb(243,110,44)" fg:x="265" fg:w="279"/><text x="0.3198%" y="1167.50"></text></g><g><title>rayon_core::registry::in_worker (279 samples, 0.07%)</title><rect x="0.0698%" y="1141" width="0.0735%" height="15" fill="rgb(222,74,54)" fg:x="265" fg:w="279"/><text x="0.3198%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (279 samples, 0.07%)</title><rect x="0.0698%" y="1125" width="0.0735%" height="15" fill="rgb(216,99,12)" fg:x="265" fg:w="279"/><text x="0.3198%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (147 samples, 0.04%)</title><rect x="0.1046%" y="1109" width="0.0387%" height="15" fill="rgb(226,22,26)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (147 samples, 0.04%)</title><rect x="0.1046%" y="1093" width="0.0387%" height="15" fill="rgb(217,163,10)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1103.50"></text></g><g><title>std::panicking::try (147 samples, 0.04%)</title><rect x="0.1046%" y="1077" width="0.0387%" height="15" fill="rgb(213,25,53)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (147 samples, 0.04%)</title><rect x="0.1046%" y="1061" width="0.0387%" height="15" fill="rgb(252,105,26)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (147 samples, 0.04%)</title><rect x="0.1046%" y="1045" width="0.0387%" height="15" fill="rgb(220,39,43)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (147 samples, 0.04%)</title><rect x="0.1046%" y="1029" width="0.0387%" height="15" fill="rgb(229,68,48)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (147 samples, 0.04%)</title><rect x="0.1046%" y="1013" width="0.0387%" height="15" fill="rgb(252,8,32)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (147 samples, 0.04%)</title><rect x="0.1046%" y="997" width="0.0387%" height="15" fill="rgb(223,20,43)" fg:x="397" fg:w="147"/><text x="0.3546%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (147 samples, 0.04%)</title><rect x="0.1046%" y="981" width="0.0387%" height="15" fill="rgb(229,81,49)" fg:x="397" fg:w="147"/><text x="0.3546%" y="991.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (147 samples, 0.04%)</title><rect x="0.1046%" y="965" width="0.0387%" height="15" fill="rgb(236,28,36)" fg:x="397" fg:w="147"/><text x="0.3546%" y="975.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (147 samples, 0.04%)</title><rect x="0.1046%" y="949" width="0.0387%" height="15" fill="rgb(249,185,26)" fg:x="397" fg:w="147"/><text x="0.3546%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (147 samples, 0.04%)</title><rect x="0.1046%" y="933" width="0.0387%" height="15" fill="rgb(249,174,33)" fg:x="397" fg:w="147"/><text x="0.3546%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (147 samples, 0.04%)</title><rect x="0.1046%" y="917" width="0.0387%" height="15" fill="rgb(233,201,37)" fg:x="397" fg:w="147"/><text x="0.3546%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (147 samples, 0.04%)</title><rect x="0.1046%" y="901" width="0.0387%" height="15" fill="rgb(221,78,26)" fg:x="397" fg:w="147"/><text x="0.3546%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (147 samples, 0.04%)</title><rect x="0.1046%" y="885" width="0.0387%" height="15" fill="rgb(250,127,30)" fg:x="397" fg:w="147"/><text x="0.3546%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (147 samples, 0.04%)</title><rect x="0.1046%" y="869" width="0.0387%" height="15" fill="rgb(230,49,44)" fg:x="397" fg:w="147"/><text x="0.3546%" y="879.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (147 samples, 0.04%)</title><rect x="0.1046%" y="853" width="0.0387%" height="15" fill="rgb(229,67,23)" fg:x="397" fg:w="147"/><text x="0.3546%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (147 samples, 0.04%)</title><rect x="0.1046%" y="837" width="0.0387%" height="15" fill="rgb(249,83,47)" fg:x="397" fg:w="147"/><text x="0.3546%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (147 samples, 0.04%)</title><rect x="0.1046%" y="821" width="0.0387%" height="15" fill="rgb(215,43,3)" fg:x="397" fg:w="147"/><text x="0.3546%" y="831.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (62 samples, 0.02%)</title><rect x="0.1444%" y="773" width="0.0163%" height="15" fill="rgb(238,154,13)" fg:x="548" fg:w="62"/><text x="0.3944%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (58 samples, 0.02%)</title><rect x="0.1455%" y="757" width="0.0153%" height="15" fill="rgb(219,56,2)" fg:x="552" fg:w="58"/><text x="0.3955%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (56 samples, 0.01%)</title><rect x="0.1460%" y="741" width="0.0148%" height="15" fill="rgb(233,0,4)" fg:x="554" fg:w="56"/><text x="0.3960%" y="751.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (56 samples, 0.01%)</title><rect x="0.1460%" y="725" width="0.0148%" height="15" fill="rgb(235,30,7)" fg:x="554" fg:w="56"/><text x="0.3960%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (56 samples, 0.01%)</title><rect x="0.1460%" y="709" width="0.0148%" height="15" fill="rgb(250,79,13)" fg:x="554" fg:w="56"/><text x="0.3960%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (66 samples, 0.02%)</title><rect x="0.1608%" y="773" width="0.0174%" height="15" fill="rgb(211,146,34)" fg:x="610" fg:w="66"/><text x="0.4108%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (64 samples, 0.02%)</title><rect x="0.1613%" y="757" width="0.0169%" height="15" fill="rgb(228,22,38)" fg:x="612" fg:w="64"/><text x="0.4113%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (64 samples, 0.02%)</title><rect x="0.1613%" y="741" width="0.0169%" height="15" fill="rgb(235,168,5)" fg:x="612" fg:w="64"/><text x="0.4113%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (64 samples, 0.02%)</title><rect x="0.1613%" y="725" width="0.0169%" height="15" fill="rgb(221,155,16)" fg:x="612" fg:w="64"/><text x="0.4113%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (38 samples, 0.01%)</title><rect x="0.1682%" y="709" width="0.0100%" height="15" fill="rgb(215,215,53)" fg:x="638" fg:w="38"/><text x="0.4182%" y="719.50"></text></g><g><title>core::ops::function::Fn::call (134 samples, 0.04%)</title><rect x="0.1434%" y="805" width="0.0353%" height="15" fill="rgb(223,4,10)" fg:x="544" fg:w="134"/><text x="0.3934%" y="815.50"></text></g><g><title>criterion::analysis::estimates::stats (134 samples, 0.04%)</title><rect x="0.1434%" y="789" width="0.0353%" height="15" fill="rgb(234,103,6)" fg:x="544" fg:w="134"/><text x="0.3934%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (149 samples, 0.04%)</title><rect x="0.1434%" y="1045" width="0.0393%" height="15" fill="rgb(227,97,0)" fg:x="544" fg:w="149"/><text x="0.3934%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (149 samples, 0.04%)</title><rect x="0.1434%" y="1029" width="0.0393%" height="15" fill="rgb(234,150,53)" fg:x="544" fg:w="149"/><text x="0.3934%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (149 samples, 0.04%)</title><rect x="0.1434%" y="1013" width="0.0393%" height="15" fill="rgb(228,201,54)" fg:x="544" fg:w="149"/><text x="0.3934%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (149 samples, 0.04%)</title><rect x="0.1434%" y="997" width="0.0393%" height="15" fill="rgb(222,22,37)" fg:x="544" fg:w="149"/><text x="0.3934%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (149 samples, 0.04%)</title><rect x="0.1434%" y="981" width="0.0393%" height="15" fill="rgb(237,53,32)" fg:x="544" fg:w="149"/><text x="0.3934%" y="991.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (149 samples, 0.04%)</title><rect x="0.1434%" y="965" width="0.0393%" height="15" fill="rgb(233,25,53)" fg:x="544" fg:w="149"/><text x="0.3934%" y="975.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (149 samples, 0.04%)</title><rect x="0.1434%" y="949" width="0.0393%" height="15" fill="rgb(210,40,34)" fg:x="544" fg:w="149"/><text x="0.3934%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 0.04%)</title><rect x="0.1434%" y="933" width="0.0393%" height="15" fill="rgb(241,220,44)" fg:x="544" fg:w="149"/><text x="0.3934%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.04%)</title><rect x="0.1434%" y="917" width="0.0393%" height="15" fill="rgb(235,28,35)" fg:x="544" fg:w="149"/><text x="0.3934%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.04%)</title><rect x="0.1434%" y="901" width="0.0393%" height="15" fill="rgb(210,56,17)" fg:x="544" fg:w="149"/><text x="0.3934%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (149 samples, 0.04%)</title><rect x="0.1434%" y="885" width="0.0393%" height="15" fill="rgb(224,130,29)" fg:x="544" fg:w="149"/><text x="0.3934%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (149 samples, 0.04%)</title><rect x="0.1434%" y="869" width="0.0393%" height="15" fill="rgb(235,212,8)" fg:x="544" fg:w="149"/><text x="0.3934%" y="879.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (149 samples, 0.04%)</title><rect x="0.1434%" y="853" width="0.0393%" height="15" fill="rgb(223,33,50)" fg:x="544" fg:w="149"/><text x="0.3934%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (149 samples, 0.04%)</title><rect x="0.1434%" y="837" width="0.0393%" height="15" fill="rgb(219,149,13)" fg:x="544" fg:w="149"/><text x="0.3934%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (149 samples, 0.04%)</title><rect x="0.1434%" y="821" width="0.0393%" height="15" fill="rgb(250,156,29)" fg:x="544" fg:w="149"/><text x="0.3934%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (73 samples, 0.02%)</title><rect x="0.1829%" y="741" width="0.0192%" height="15" fill="rgb(216,193,19)" fg:x="694" fg:w="73"/><text x="0.4329%" y="751.50"></text></g><g><title>criterion::analysis::estimates::stats (73 samples, 0.02%)</title><rect x="0.1829%" y="725" width="0.0192%" height="15" fill="rgb(216,135,14)" fg:x="694" fg:w="73"/><text x="0.4329%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (515 samples, 0.14%)</title><rect x="0.0698%" y="1333" width="0.1357%" height="15" fill="rgb(241,47,5)" fg:x="265" fg:w="515"/><text x="0.3198%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (515 samples, 0.14%)</title><rect x="0.0698%" y="1317" width="0.1357%" height="15" fill="rgb(233,42,35)" fg:x="265" fg:w="515"/><text x="0.3198%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (515 samples, 0.14%)</title><rect x="0.0698%" y="1301" width="0.1357%" height="15" fill="rgb(231,13,6)" fg:x="265" fg:w="515"/><text x="0.3198%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (515 samples, 0.14%)</title><rect x="0.0698%" y="1285" width="0.1357%" height="15" fill="rgb(207,181,40)" fg:x="265" fg:w="515"/><text x="0.3198%" y="1295.50"></text></g><g><title>rayon_core::join::join_context (515 samples, 0.14%)</title><rect x="0.0698%" y="1269" width="0.1357%" height="15" fill="rgb(254,173,49)" fg:x="265" fg:w="515"/><text x="0.3198%" y="1279.50"></text></g><g><title>rayon_core::registry::in_worker (515 samples, 0.14%)</title><rect x="0.0698%" y="1253" width="0.1357%" height="15" fill="rgb(221,1,38)" fg:x="265" fg:w="515"/><text x="0.3198%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (515 samples, 0.14%)</title><rect x="0.0698%" y="1237" width="0.1357%" height="15" fill="rgb(206,124,46)" fg:x="265" fg:w="515"/><text x="0.3198%" y="1247.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (236 samples, 0.06%)</title><rect x="0.1434%" y="1221" width="0.0622%" height="15" fill="rgb(249,21,11)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (236 samples, 0.06%)</title><rect x="0.1434%" y="1205" width="0.0622%" height="15" fill="rgb(222,201,40)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1215.50"></text></g><g><title>std::panicking::try (236 samples, 0.06%)</title><rect x="0.1434%" y="1189" width="0.0622%" height="15" fill="rgb(235,61,29)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (236 samples, 0.06%)</title><rect x="0.1434%" y="1173" width="0.0622%" height="15" fill="rgb(219,207,3)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1183.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (236 samples, 0.06%)</title><rect x="0.1434%" y="1157" width="0.0622%" height="15" fill="rgb(222,56,46)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (236 samples, 0.06%)</title><rect x="0.1434%" y="1141" width="0.0622%" height="15" fill="rgb(239,76,54)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (236 samples, 0.06%)</title><rect x="0.1434%" y="1125" width="0.0622%" height="15" fill="rgb(231,124,27)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (236 samples, 0.06%)</title><rect x="0.1434%" y="1109" width="0.0622%" height="15" fill="rgb(249,195,6)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1119.50"></text></g><g><title>rayon_core::join::join_context (236 samples, 0.06%)</title><rect x="0.1434%" y="1093" width="0.0622%" height="15" fill="rgb(237,174,47)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (236 samples, 0.06%)</title><rect x="0.1434%" y="1077" width="0.0622%" height="15" fill="rgb(206,201,31)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (236 samples, 0.06%)</title><rect x="0.1434%" y="1061" width="0.0622%" height="15" fill="rgb(231,57,52)" fg:x="544" fg:w="236"/><text x="0.3934%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (87 samples, 0.02%)</title><rect x="0.1827%" y="1045" width="0.0229%" height="15" fill="rgb(248,177,22)" fg:x="693" fg:w="87"/><text x="0.4327%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (87 samples, 0.02%)</title><rect x="0.1827%" y="1029" width="0.0229%" height="15" fill="rgb(215,211,37)" fg:x="693" fg:w="87"/><text x="0.4327%" y="1039.50"></text></g><g><title>std::panicking::try (87 samples, 0.02%)</title><rect x="0.1827%" y="1013" width="0.0229%" height="15" fill="rgb(241,128,51)" fg:x="693" fg:w="87"/><text x="0.4327%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (87 samples, 0.02%)</title><rect x="0.1827%" y="997" width="0.0229%" height="15" fill="rgb(227,165,31)" fg:x="693" fg:w="87"/><text x="0.4327%" y="1007.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (87 samples, 0.02%)</title><rect x="0.1827%" y="981" width="0.0229%" height="15" fill="rgb(228,167,24)" fg:x="693" fg:w="87"/><text x="0.4327%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (87 samples, 0.02%)</title><rect x="0.1827%" y="965" width="0.0229%" height="15" fill="rgb(228,143,12)" fg:x="693" fg:w="87"/><text x="0.4327%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (87 samples, 0.02%)</title><rect x="0.1827%" y="949" width="0.0229%" height="15" fill="rgb(249,149,8)" fg:x="693" fg:w="87"/><text x="0.4327%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (87 samples, 0.02%)</title><rect x="0.1827%" y="933" width="0.0229%" height="15" fill="rgb(243,35,44)" fg:x="693" fg:w="87"/><text x="0.4327%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (87 samples, 0.02%)</title><rect x="0.1827%" y="917" width="0.0229%" height="15" fill="rgb(246,89,9)" fg:x="693" fg:w="87"/><text x="0.4327%" y="927.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (87 samples, 0.02%)</title><rect x="0.1827%" y="901" width="0.0229%" height="15" fill="rgb(233,213,13)" fg:x="693" fg:w="87"/><text x="0.4327%" y="911.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (87 samples, 0.02%)</title><rect x="0.1827%" y="885" width="0.0229%" height="15" fill="rgb(233,141,41)" fg:x="693" fg:w="87"/><text x="0.4327%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (87 samples, 0.02%)</title><rect x="0.1827%" y="869" width="0.0229%" height="15" fill="rgb(239,167,4)" fg:x="693" fg:w="87"/><text x="0.4327%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.02%)</title><rect x="0.1827%" y="853" width="0.0229%" height="15" fill="rgb(209,217,16)" fg:x="693" fg:w="87"/><text x="0.4327%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 0.02%)</title><rect x="0.1827%" y="837" width="0.0229%" height="15" fill="rgb(219,88,35)" fg:x="693" fg:w="87"/><text x="0.4327%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (87 samples, 0.02%)</title><rect x="0.1827%" y="821" width="0.0229%" height="15" fill="rgb(220,193,23)" fg:x="693" fg:w="87"/><text x="0.4327%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (87 samples, 0.02%)</title><rect x="0.1827%" y="805" width="0.0229%" height="15" fill="rgb(230,90,52)" fg:x="693" fg:w="87"/><text x="0.4327%" y="815.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (86 samples, 0.02%)</title><rect x="0.1829%" y="789" width="0.0227%" height="15" fill="rgb(252,106,19)" fg:x="694" fg:w="86"/><text x="0.4329%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (86 samples, 0.02%)</title><rect x="0.1829%" y="773" width="0.0227%" height="15" fill="rgb(206,74,20)" fg:x="694" fg:w="86"/><text x="0.4329%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (86 samples, 0.02%)</title><rect x="0.1829%" y="757" width="0.0227%" height="15" fill="rgb(230,138,44)" fg:x="694" fg:w="86"/><text x="0.4329%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (66 samples, 0.02%)</title><rect x="0.2064%" y="773" width="0.0174%" height="15" fill="rgb(235,182,43)" fg:x="783" fg:w="66"/><text x="0.4564%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (62 samples, 0.02%)</title><rect x="0.2074%" y="757" width="0.0163%" height="15" fill="rgb(242,16,51)" fg:x="787" fg:w="62"/><text x="0.4574%" y="767.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (62 samples, 0.02%)</title><rect x="0.2074%" y="741" width="0.0163%" height="15" fill="rgb(248,9,4)" fg:x="787" fg:w="62"/><text x="0.4574%" y="751.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (62 samples, 0.02%)</title><rect x="0.2074%" y="725" width="0.0163%" height="15" fill="rgb(210,31,22)" fg:x="787" fg:w="62"/><text x="0.4574%" y="735.50"></text></g><g><title>rayon::slice::quicksort::recurse (62 samples, 0.02%)</title><rect x="0.2074%" y="709" width="0.0163%" height="15" fill="rgb(239,54,39)" fg:x="787" fg:w="62"/><text x="0.4574%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (58 samples, 0.02%)</title><rect x="0.2238%" y="773" width="0.0153%" height="15" fill="rgb(230,99,41)" fg:x="849" fg:w="58"/><text x="0.4738%" y="783.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (58 samples, 0.02%)</title><rect x="0.2238%" y="757" width="0.0153%" height="15" fill="rgb(253,106,12)" fg:x="849" fg:w="58"/><text x="0.4738%" y="767.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (58 samples, 0.02%)</title><rect x="0.2238%" y="741" width="0.0153%" height="15" fill="rgb(213,46,41)" fg:x="849" fg:w="58"/><text x="0.4738%" y="751.50"></text></g><g><title>rayon::slice::quicksort::recurse (58 samples, 0.02%)</title><rect x="0.2238%" y="725" width="0.0153%" height="15" fill="rgb(215,133,35)" fg:x="849" fg:w="58"/><text x="0.4738%" y="735.50"></text></g><g><title>core::ops::function::Fn::call (133 samples, 0.04%)</title><rect x="0.2056%" y="805" width="0.0351%" height="15" fill="rgb(213,28,5)" fg:x="780" fg:w="133"/><text x="0.4556%" y="815.50"></text></g><g><title>criterion::analysis::estimates::stats (133 samples, 0.04%)</title><rect x="0.2056%" y="789" width="0.0351%" height="15" fill="rgb(215,77,49)" fg:x="780" fg:w="133"/><text x="0.4556%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (149 samples, 0.04%)</title><rect x="0.2056%" y="1045" width="0.0393%" height="15" fill="rgb(248,100,22)" fg:x="780" fg:w="149"/><text x="0.4556%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (149 samples, 0.04%)</title><rect x="0.2056%" y="1029" width="0.0393%" height="15" fill="rgb(208,67,9)" fg:x="780" fg:w="149"/><text x="0.4556%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (149 samples, 0.04%)</title><rect x="0.2056%" y="1013" width="0.0393%" height="15" fill="rgb(219,133,21)" fg:x="780" fg:w="149"/><text x="0.4556%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (149 samples, 0.04%)</title><rect x="0.2056%" y="997" width="0.0393%" height="15" fill="rgb(246,46,29)" fg:x="780" fg:w="149"/><text x="0.4556%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (149 samples, 0.04%)</title><rect x="0.2056%" y="981" width="0.0393%" height="15" fill="rgb(246,185,52)" fg:x="780" fg:w="149"/><text x="0.4556%" y="991.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (149 samples, 0.04%)</title><rect x="0.2056%" y="965" width="0.0393%" height="15" fill="rgb(252,136,11)" fg:x="780" fg:w="149"/><text x="0.4556%" y="975.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (149 samples, 0.04%)</title><rect x="0.2056%" y="949" width="0.0393%" height="15" fill="rgb(219,138,53)" fg:x="780" fg:w="149"/><text x="0.4556%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 0.04%)</title><rect x="0.2056%" y="933" width="0.0393%" height="15" fill="rgb(211,51,23)" fg:x="780" fg:w="149"/><text x="0.4556%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.04%)</title><rect x="0.2056%" y="917" width="0.0393%" height="15" fill="rgb(247,221,28)" fg:x="780" fg:w="149"/><text x="0.4556%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (149 samples, 0.04%)</title><rect x="0.2056%" y="901" width="0.0393%" height="15" fill="rgb(251,222,45)" fg:x="780" fg:w="149"/><text x="0.4556%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (149 samples, 0.04%)</title><rect x="0.2056%" y="885" width="0.0393%" height="15" fill="rgb(217,162,53)" fg:x="780" fg:w="149"/><text x="0.4556%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (149 samples, 0.04%)</title><rect x="0.2056%" y="869" width="0.0393%" height="15" fill="rgb(229,93,14)" fg:x="780" fg:w="149"/><text x="0.4556%" y="879.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (149 samples, 0.04%)</title><rect x="0.2056%" y="853" width="0.0393%" height="15" fill="rgb(209,67,49)" fg:x="780" fg:w="149"/><text x="0.4556%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (149 samples, 0.04%)</title><rect x="0.2056%" y="837" width="0.0393%" height="15" fill="rgb(213,87,29)" fg:x="780" fg:w="149"/><text x="0.4556%" y="847.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (149 samples, 0.04%)</title><rect x="0.2056%" y="821" width="0.0393%" height="15" fill="rgb(205,151,52)" fg:x="780" fg:w="149"/><text x="0.4556%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (70 samples, 0.02%)</title><rect x="0.2454%" y="741" width="0.0185%" height="15" fill="rgb(253,215,39)" fg:x="931" fg:w="70"/><text x="0.4954%" y="751.50"></text></g><g><title>criterion::analysis::estimates::stats (70 samples, 0.02%)</title><rect x="0.2454%" y="725" width="0.0185%" height="15" fill="rgb(221,220,41)" fg:x="931" fg:w="70"/><text x="0.4954%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (234 samples, 0.06%)</title><rect x="0.2056%" y="1157" width="0.0617%" height="15" fill="rgb(218,133,21)" fg:x="780" fg:w="234"/><text x="0.4556%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (234 samples, 0.06%)</title><rect x="0.2056%" y="1141" width="0.0617%" height="15" fill="rgb(221,193,43)" fg:x="780" fg:w="234"/><text x="0.4556%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (234 samples, 0.06%)</title><rect x="0.2056%" y="1125" width="0.0617%" height="15" fill="rgb(240,128,52)" fg:x="780" fg:w="234"/><text x="0.4556%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (234 samples, 0.06%)</title><rect x="0.2056%" y="1109" width="0.0617%" height="15" fill="rgb(253,114,12)" fg:x="780" fg:w="234"/><text x="0.4556%" y="1119.50"></text></g><g><title>rayon_core::join::join_context (234 samples, 0.06%)</title><rect x="0.2056%" y="1093" width="0.0617%" height="15" fill="rgb(215,223,47)" fg:x="780" fg:w="234"/><text x="0.4556%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (234 samples, 0.06%)</title><rect x="0.2056%" y="1077" width="0.0617%" height="15" fill="rgb(248,225,23)" fg:x="780" fg:w="234"/><text x="0.4556%" y="1087.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (234 samples, 0.06%)</title><rect x="0.2056%" y="1061" width="0.0617%" height="15" fill="rgb(250,108,0)" fg:x="780" fg:w="234"/><text x="0.4556%" y="1071.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (85 samples, 0.02%)</title><rect x="0.2449%" y="1045" width="0.0224%" height="15" fill="rgb(228,208,7)" fg:x="929" fg:w="85"/><text x="0.4949%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (85 samples, 0.02%)</title><rect x="0.2449%" y="1029" width="0.0224%" height="15" fill="rgb(244,45,10)" fg:x="929" fg:w="85"/><text x="0.4949%" y="1039.50"></text></g><g><title>std::panicking::try (85 samples, 0.02%)</title><rect x="0.2449%" y="1013" width="0.0224%" height="15" fill="rgb(207,125,25)" fg:x="929" fg:w="85"/><text x="0.4949%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (85 samples, 0.02%)</title><rect x="0.2449%" y="997" width="0.0224%" height="15" fill="rgb(210,195,18)" fg:x="929" fg:w="85"/><text x="0.4949%" y="1007.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (85 samples, 0.02%)</title><rect x="0.2449%" y="981" width="0.0224%" height="15" fill="rgb(249,80,12)" fg:x="929" fg:w="85"/><text x="0.4949%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (85 samples, 0.02%)</title><rect x="0.2449%" y="965" width="0.0224%" height="15" fill="rgb(221,65,9)" fg:x="929" fg:w="85"/><text x="0.4949%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (85 samples, 0.02%)</title><rect x="0.2449%" y="949" width="0.0224%" height="15" fill="rgb(235,49,36)" fg:x="929" fg:w="85"/><text x="0.4949%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (85 samples, 0.02%)</title><rect x="0.2449%" y="933" width="0.0224%" height="15" fill="rgb(225,32,20)" fg:x="929" fg:w="85"/><text x="0.4949%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (85 samples, 0.02%)</title><rect x="0.2449%" y="917" width="0.0224%" height="15" fill="rgb(215,141,46)" fg:x="929" fg:w="85"/><text x="0.4949%" y="927.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (85 samples, 0.02%)</title><rect x="0.2449%" y="901" width="0.0224%" height="15" fill="rgb(250,160,47)" fg:x="929" fg:w="85"/><text x="0.4949%" y="911.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (85 samples, 0.02%)</title><rect x="0.2449%" y="885" width="0.0224%" height="15" fill="rgb(216,222,40)" fg:x="929" fg:w="85"/><text x="0.4949%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85 samples, 0.02%)</title><rect x="0.2449%" y="869" width="0.0224%" height="15" fill="rgb(234,217,39)" fg:x="929" fg:w="85"/><text x="0.4949%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 0.02%)</title><rect x="0.2449%" y="853" width="0.0224%" height="15" fill="rgb(207,178,40)" fg:x="929" fg:w="85"/><text x="0.4949%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 0.02%)</title><rect x="0.2449%" y="837" width="0.0224%" height="15" fill="rgb(221,136,13)" fg:x="929" fg:w="85"/><text x="0.4949%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (85 samples, 0.02%)</title><rect x="0.2449%" y="821" width="0.0224%" height="15" fill="rgb(249,199,10)" fg:x="929" fg:w="85"/><text x="0.4949%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (85 samples, 0.02%)</title><rect x="0.2449%" y="805" width="0.0224%" height="15" fill="rgb(249,222,13)" fg:x="929" fg:w="85"/><text x="0.4949%" y="815.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (83 samples, 0.02%)</title><rect x="0.2454%" y="789" width="0.0219%" height="15" fill="rgb(244,185,38)" fg:x="931" fg:w="83"/><text x="0.4954%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (83 samples, 0.02%)</title><rect x="0.2454%" y="773" width="0.0219%" height="15" fill="rgb(236,202,9)" fg:x="931" fg:w="83"/><text x="0.4954%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (83 samples, 0.02%)</title><rect x="0.2454%" y="757" width="0.0219%" height="15" fill="rgb(250,229,37)" fg:x="931" fg:w="83"/><text x="0.4954%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (77 samples, 0.02%)</title><rect x="0.2673%" y="741" width="0.0203%" height="15" fill="rgb(206,174,23)" fg:x="1014" fg:w="77"/><text x="0.5173%" y="751.50"></text></g><g><title>criterion::analysis::estimates::stats (77 samples, 0.02%)</title><rect x="0.2673%" y="725" width="0.0203%" height="15" fill="rgb(211,33,43)" fg:x="1014" fg:w="77"/><text x="0.5173%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (91 samples, 0.02%)</title><rect x="0.2673%" y="981" width="0.0240%" height="15" fill="rgb(245,58,50)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="991.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (91 samples, 0.02%)</title><rect x="0.2673%" y="965" width="0.0240%" height="15" fill="rgb(244,68,36)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (91 samples, 0.02%)</title><rect x="0.2673%" y="949" width="0.0240%" height="15" fill="rgb(232,229,15)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (91 samples, 0.02%)</title><rect x="0.2673%" y="933" width="0.0240%" height="15" fill="rgb(254,30,23)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="943.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (91 samples, 0.02%)</title><rect x="0.2673%" y="917" width="0.0240%" height="15" fill="rgb(235,160,14)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="927.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (91 samples, 0.02%)</title><rect x="0.2673%" y="901" width="0.0240%" height="15" fill="rgb(212,155,44)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="911.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (91 samples, 0.02%)</title><rect x="0.2673%" y="885" width="0.0240%" height="15" fill="rgb(226,2,50)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (91 samples, 0.02%)</title><rect x="0.2673%" y="869" width="0.0240%" height="15" fill="rgb(234,177,6)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91 samples, 0.02%)</title><rect x="0.2673%" y="853" width="0.0240%" height="15" fill="rgb(217,24,9)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91 samples, 0.02%)</title><rect x="0.2673%" y="837" width="0.0240%" height="15" fill="rgb(220,13,46)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (91 samples, 0.02%)</title><rect x="0.2673%" y="821" width="0.0240%" height="15" fill="rgb(239,221,27)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (91 samples, 0.02%)</title><rect x="0.2673%" y="805" width="0.0240%" height="15" fill="rgb(222,198,25)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="815.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (91 samples, 0.02%)</title><rect x="0.2673%" y="789" width="0.0240%" height="15" fill="rgb(211,99,13)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (91 samples, 0.02%)</title><rect x="0.2673%" y="773" width="0.0240%" height="15" fill="rgb(232,111,31)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="783.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (91 samples, 0.02%)</title><rect x="0.2673%" y="757" width="0.0240%" height="15" fill="rgb(245,82,37)" fg:x="1014" fg:w="91"/><text x="0.5173%" y="767.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (41 samples, 0.01%)</title><rect x="0.2931%" y="645" width="0.0108%" height="15" fill="rgb(227,149,46)" fg:x="1112" fg:w="41"/><text x="0.5431%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (74 samples, 0.02%)</title><rect x="0.2918%" y="677" width="0.0195%" height="15" fill="rgb(218,36,50)" fg:x="1107" fg:w="74"/><text x="0.5418%" y="687.50"></text></g><g><title>criterion::analysis::estimates::stats (74 samples, 0.02%)</title><rect x="0.2918%" y="661" width="0.0195%" height="15" fill="rgb(226,80,48)" fg:x="1107" fg:w="74"/><text x="0.5418%" y="671.50"></text></g><g><title>rayon_core::join::join_context (933 samples, 0.25%)</title><rect x="0.0698%" y="1381" width="0.2459%" height="15" fill="rgb(238,224,15)" fg:x="265" fg:w="933"/><text x="0.3198%" y="1391.50"></text></g><g><title>rayon_core::registry::in_worker (933 samples, 0.25%)</title><rect x="0.0698%" y="1365" width="0.2459%" height="15" fill="rgb(241,136,10)" fg:x="265" fg:w="933"/><text x="0.3198%" y="1375.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (933 samples, 0.25%)</title><rect x="0.0698%" y="1349" width="0.2459%" height="15" fill="rgb(208,32,45)" fg:x="265" fg:w="933"/><text x="0.3198%" y="1359.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (418 samples, 0.11%)</title><rect x="0.2056%" y="1333" width="0.1102%" height="15" fill="rgb(207,135,9)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (418 samples, 0.11%)</title><rect x="0.2056%" y="1317" width="0.1102%" height="15" fill="rgb(206,86,44)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1327.50"></text></g><g><title>std::panicking::try (418 samples, 0.11%)</title><rect x="0.2056%" y="1301" width="0.1102%" height="15" fill="rgb(245,177,15)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (418 samples, 0.11%)</title><rect x="0.2056%" y="1285" width="0.1102%" height="15" fill="rgb(206,64,50)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1295.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (418 samples, 0.11%)</title><rect x="0.2056%" y="1269" width="0.1102%" height="15" fill="rgb(234,36,40)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (418 samples, 0.11%)</title><rect x="0.2056%" y="1253" width="0.1102%" height="15" fill="rgb(213,64,8)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (418 samples, 0.11%)</title><rect x="0.2056%" y="1237" width="0.1102%" height="15" fill="rgb(210,75,36)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (418 samples, 0.11%)</title><rect x="0.2056%" y="1221" width="0.1102%" height="15" fill="rgb(229,88,21)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1231.50"></text></g><g><title>rayon_core::join::join_context (418 samples, 0.11%)</title><rect x="0.2056%" y="1205" width="0.1102%" height="15" fill="rgb(252,204,47)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1215.50"></text></g><g><title>rayon_core::registry::in_worker (418 samples, 0.11%)</title><rect x="0.2056%" y="1189" width="0.1102%" height="15" fill="rgb(208,77,27)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1199.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (418 samples, 0.11%)</title><rect x="0.2056%" y="1173" width="0.1102%" height="15" fill="rgb(221,76,26)" fg:x="780" fg:w="418"/><text x="0.4556%" y="1183.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (184 samples, 0.05%)</title><rect x="0.2673%" y="1157" width="0.0485%" height="15" fill="rgb(225,139,18)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (184 samples, 0.05%)</title><rect x="0.2673%" y="1141" width="0.0485%" height="15" fill="rgb(230,137,11)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1151.50"></text></g><g><title>std::panicking::try (184 samples, 0.05%)</title><rect x="0.2673%" y="1125" width="0.0485%" height="15" fill="rgb(212,28,1)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (184 samples, 0.05%)</title><rect x="0.2673%" y="1109" width="0.0485%" height="15" fill="rgb(248,164,17)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (184 samples, 0.05%)</title><rect x="0.2673%" y="1093" width="0.0485%" height="15" fill="rgb(222,171,42)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (184 samples, 0.05%)</title><rect x="0.2673%" y="1077" width="0.0485%" height="15" fill="rgb(243,84,45)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (184 samples, 0.05%)</title><rect x="0.2673%" y="1061" width="0.0485%" height="15" fill="rgb(252,49,23)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (184 samples, 0.05%)</title><rect x="0.2673%" y="1045" width="0.0485%" height="15" fill="rgb(215,19,7)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1055.50"></text></g><g><title>rayon_core::join::join_context (184 samples, 0.05%)</title><rect x="0.2673%" y="1029" width="0.0485%" height="15" fill="rgb(238,81,41)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (184 samples, 0.05%)</title><rect x="0.2673%" y="1013" width="0.0485%" height="15" fill="rgb(210,199,37)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (184 samples, 0.05%)</title><rect x="0.2673%" y="997" width="0.0485%" height="15" fill="rgb(244,192,49)" fg:x="1014" fg:w="184"/><text x="0.5173%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (93 samples, 0.02%)</title><rect x="0.2913%" y="981" width="0.0245%" height="15" fill="rgb(226,211,11)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="991.50"></text></g><g><title>std::panic::catch_unwind (93 samples, 0.02%)</title><rect x="0.2913%" y="965" width="0.0245%" height="15" fill="rgb(236,162,54)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="975.50"></text></g><g><title>std::panicking::try (93 samples, 0.02%)</title><rect x="0.2913%" y="949" width="0.0245%" height="15" fill="rgb(220,229,9)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="959.50"></text></g><g><title>std::panicking::try::do_call (93 samples, 0.02%)</title><rect x="0.2913%" y="933" width="0.0245%" height="15" fill="rgb(250,87,22)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="943.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (93 samples, 0.02%)</title><rect x="0.2913%" y="917" width="0.0245%" height="15" fill="rgb(239,43,17)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (93 samples, 0.02%)</title><rect x="0.2913%" y="901" width="0.0245%" height="15" fill="rgb(231,177,25)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (93 samples, 0.02%)</title><rect x="0.2913%" y="885" width="0.0245%" height="15" fill="rgb(219,179,1)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (93 samples, 0.02%)</title><rect x="0.2913%" y="869" width="0.0245%" height="15" fill="rgb(238,219,53)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="879.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (93 samples, 0.02%)</title><rect x="0.2913%" y="853" width="0.0245%" height="15" fill="rgb(232,167,36)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="863.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (93 samples, 0.02%)</title><rect x="0.2913%" y="837" width="0.0245%" height="15" fill="rgb(244,19,51)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="847.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (93 samples, 0.02%)</title><rect x="0.2913%" y="821" width="0.0245%" height="15" fill="rgb(224,6,22)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (93 samples, 0.02%)</title><rect x="0.2913%" y="805" width="0.0245%" height="15" fill="rgb(224,145,5)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 0.02%)</title><rect x="0.2913%" y="789" width="0.0245%" height="15" fill="rgb(234,130,49)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (93 samples, 0.02%)</title><rect x="0.2913%" y="773" width="0.0245%" height="15" fill="rgb(254,6,2)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (93 samples, 0.02%)</title><rect x="0.2913%" y="757" width="0.0245%" height="15" fill="rgb(208,96,46)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (93 samples, 0.02%)</title><rect x="0.2913%" y="741" width="0.0245%" height="15" fill="rgb(239,3,39)" fg:x="1105" fg:w="93"/><text x="0.5413%" y="751.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (91 samples, 0.02%)</title><rect x="0.2918%" y="725" width="0.0240%" height="15" fill="rgb(233,210,1)" fg:x="1107" fg:w="91"/><text x="0.5418%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (91 samples, 0.02%)</title><rect x="0.2918%" y="709" width="0.0240%" height="15" fill="rgb(244,137,37)" fg:x="1107" fg:w="91"/><text x="0.5418%" y="719.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (91 samples, 0.02%)</title><rect x="0.2918%" y="693" width="0.0240%" height="15" fill="rgb(240,136,2)" fg:x="1107" fg:w="91"/><text x="0.5418%" y="703.50"></text></g><g><title>start_thread (42 samples, 0.01%)</title><rect x="0.3247%" y="1381" width="0.0111%" height="15" fill="rgb(239,18,37)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1391.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42 samples, 0.01%)</title><rect x="0.3247%" y="1365" width="0.0111%" height="15" fill="rgb(218,185,22)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1375.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.01%)</title><rect x="0.3247%" y="1349" width="0.0111%" height="15" fill="rgb(225,218,4)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.01%)</title><rect x="0.3247%" y="1333" width="0.0111%" height="15" fill="rgb(230,182,32)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1343.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (42 samples, 0.01%)</title><rect x="0.3247%" y="1317" width="0.0111%" height="15" fill="rgb(242,56,43)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1327.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (42 samples, 0.01%)</title><rect x="0.3247%" y="1301" width="0.0111%" height="15" fill="rgb(233,99,24)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.01%)</title><rect x="0.3247%" y="1285" width="0.0111%" height="15" fill="rgb(234,209,42)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1295.50"></text></g><g><title>std::panicking::try (42 samples, 0.01%)</title><rect x="0.3247%" y="1269" width="0.0111%" height="15" fill="rgb(227,7,12)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.01%)</title><rect x="0.3247%" y="1253" width="0.0111%" height="15" fill="rgb(245,203,43)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1263.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.01%)</title><rect x="0.3247%" y="1237" width="0.0111%" height="15" fill="rgb(238,205,33)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1247.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (42 samples, 0.01%)</title><rect x="0.3247%" y="1221" width="0.0111%" height="15" fill="rgb(231,56,7)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1231.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42 samples, 0.01%)</title><rect x="0.3247%" y="1205" width="0.0111%" height="15" fill="rgb(244,186,29)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1215.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (42 samples, 0.01%)</title><rect x="0.3247%" y="1189" width="0.0111%" height="15" fill="rgb(234,111,31)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1199.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (42 samples, 0.01%)</title><rect x="0.3247%" y="1173" width="0.0111%" height="15" fill="rgb(241,149,10)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1183.50"></text></g><g><title>rayon_core::registry::main_loop (42 samples, 0.01%)</title><rect x="0.3247%" y="1157" width="0.0111%" height="15" fill="rgb(249,206,44)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (42 samples, 0.01%)</title><rect x="0.3247%" y="1141" width="0.0111%" height="15" fill="rgb(251,153,30)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (42 samples, 0.01%)</title><rect x="0.3247%" y="1125" width="0.0111%" height="15" fill="rgb(239,152,38)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (42 samples, 0.01%)</title><rect x="0.3247%" y="1109" width="0.0111%" height="15" fill="rgb(249,139,47)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1119.50"></text></g><g><title>rayon_core::job::JobRef::execute (42 samples, 0.01%)</title><rect x="0.3247%" y="1093" width="0.0111%" height="15" fill="rgb(244,64,35)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1103.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (42 samples, 0.01%)</title><rect x="0.3247%" y="1077" width="0.0111%" height="15" fill="rgb(216,46,15)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.01%)</title><rect x="0.3247%" y="1061" width="0.0111%" height="15" fill="rgb(250,74,19)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.01%)</title><rect x="0.3247%" y="1045" width="0.0111%" height="15" fill="rgb(249,42,33)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1055.50"></text></g><g><title>std::panicking::try (42 samples, 0.01%)</title><rect x="0.3247%" y="1029" width="0.0111%" height="15" fill="rgb(242,149,17)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.01%)</title><rect x="0.3247%" y="1013" width="0.0111%" height="15" fill="rgb(244,29,21)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.01%)</title><rect x="0.3247%" y="997" width="0.0111%" height="15" fill="rgb(220,130,37)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="1007.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (42 samples, 0.01%)</title><rect x="0.3247%" y="981" width="0.0111%" height="15" fill="rgb(211,67,2)" fg:x="1232" fg:w="42"/><text x="0.5747%" y="991.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="965" width="0.0108%" height="15" fill="rgb(235,68,52)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="949" width="0.0108%" height="15" fill="rgb(246,142,3)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="959.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (41 samples, 0.01%)</title><rect x="0.3250%" y="933" width="0.0108%" height="15" fill="rgb(241,25,7)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="943.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.01%)</title><rect x="0.3250%" y="917" width="0.0108%" height="15" fill="rgb(242,119,39)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="927.50"></text></g><g><title>std::panicking::try (41 samples, 0.01%)</title><rect x="0.3250%" y="901" width="0.0108%" height="15" fill="rgb(241,98,45)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="911.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.01%)</title><rect x="0.3250%" y="885" width="0.0108%" height="15" fill="rgb(254,28,30)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.01%)</title><rect x="0.3250%" y="869" width="0.0108%" height="15" fill="rgb(241,142,54)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="879.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="853" width="0.0108%" height="15" fill="rgb(222,85,15)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="837" width="0.0108%" height="15" fill="rgb(210,85,47)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.01%)</title><rect x="0.3250%" y="821" width="0.0108%" height="15" fill="rgb(224,206,25)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="831.50"></text></g><g><title>rayon_core::join::join_context (41 samples, 0.01%)</title><rect x="0.3250%" y="805" width="0.0108%" height="15" fill="rgb(243,201,19)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="815.50"></text></g><g><title>rayon_core::registry::in_worker (41 samples, 0.01%)</title><rect x="0.3250%" y="789" width="0.0108%" height="15" fill="rgb(236,59,4)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="773" width="0.0108%" height="15" fill="rgb(254,179,45)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="783.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (41 samples, 0.01%)</title><rect x="0.3250%" y="757" width="0.0108%" height="15" fill="rgb(226,14,10)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="741" width="0.0108%" height="15" fill="rgb(244,27,41)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="725" width="0.0108%" height="15" fill="rgb(235,35,32)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.01%)</title><rect x="0.3250%" y="709" width="0.0108%" height="15" fill="rgb(218,68,31)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="719.50"></text></g><g><title>rayon_core::join::join_context (41 samples, 0.01%)</title><rect x="0.3250%" y="693" width="0.0108%" height="15" fill="rgb(207,120,37)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (41 samples, 0.01%)</title><rect x="0.3250%" y="677" width="0.0108%" height="15" fill="rgb(227,98,0)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="661" width="0.0108%" height="15" fill="rgb(207,7,3)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="671.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (41 samples, 0.01%)</title><rect x="0.3250%" y="645" width="0.0108%" height="15" fill="rgb(206,98,19)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (41 samples, 0.01%)</title><rect x="0.3250%" y="629" width="0.0108%" height="15" fill="rgb(217,5,26)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (41 samples, 0.01%)</title><rect x="0.3250%" y="613" width="0.0108%" height="15" fill="rgb(235,190,38)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="623.50"></text></g><g><title>rayon_core::job::JobRef::execute (41 samples, 0.01%)</title><rect x="0.3250%" y="597" width="0.0108%" height="15" fill="rgb(247,86,24)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (41 samples, 0.01%)</title><rect x="0.3250%" y="581" width="0.0108%" height="15" fill="rgb(205,101,16)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (41 samples, 0.01%)</title><rect x="0.3250%" y="565" width="0.0108%" height="15" fill="rgb(246,168,33)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="575.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.01%)</title><rect x="0.3250%" y="549" width="0.0108%" height="15" fill="rgb(231,114,1)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="559.50"></text></g><g><title>std::panicking::try (41 samples, 0.01%)</title><rect x="0.3250%" y="533" width="0.0108%" height="15" fill="rgb(207,184,53)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="543.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.01%)</title><rect x="0.3250%" y="517" width="0.0108%" height="15" fill="rgb(224,95,51)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="527.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.01%)</title><rect x="0.3250%" y="501" width="0.0108%" height="15" fill="rgb(212,188,45)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="511.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="485" width="0.0108%" height="15" fill="rgb(223,154,38)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="495.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="469" width="0.0108%" height="15" fill="rgb(251,22,52)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="453" width="0.0108%" height="15" fill="rgb(229,209,22)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (41 samples, 0.01%)</title><rect x="0.3250%" y="437" width="0.0108%" height="15" fill="rgb(234,138,34)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="447.50"></text></g><g><title>rayon_core::join::join_context (41 samples, 0.01%)</title><rect x="0.3250%" y="421" width="0.0108%" height="15" fill="rgb(212,95,11)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="431.50"></text></g><g><title>rayon_core::registry::in_worker (41 samples, 0.01%)</title><rect x="0.3250%" y="405" width="0.0108%" height="15" fill="rgb(240,179,47)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="415.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.01%)</title><rect x="0.3250%" y="389" width="0.0108%" height="15" fill="rgb(240,163,11)" fg:x="1233" fg:w="41"/><text x="0.5750%" y="399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (60 samples, 0.02%)</title><rect x="0.3358%" y="1237" width="0.0158%" height="15" fill="rgb(236,37,12)" fg:x="1274" fg:w="60"/><text x="0.5858%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (60 samples, 0.02%)</title><rect x="0.3358%" y="1221" width="0.0158%" height="15" fill="rgb(232,164,16)" fg:x="1274" fg:w="60"/><text x="0.5858%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (60 samples, 0.02%)</title><rect x="0.3358%" y="1205" width="0.0158%" height="15" fill="rgb(244,205,15)" fg:x="1274" fg:w="60"/><text x="0.5858%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (60 samples, 0.02%)</title><rect x="0.3358%" y="1189" width="0.0158%" height="15" fill="rgb(223,117,47)" fg:x="1274" fg:w="60"/><text x="0.5858%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (60 samples, 0.02%)</title><rect x="0.3358%" y="1173" width="0.0158%" height="15" fill="rgb(244,107,35)" fg:x="1274" fg:w="60"/><text x="0.5858%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (60 samples, 0.02%)</title><rect x="0.3358%" y="1157" width="0.0158%" height="15" fill="rgb(205,140,8)" fg:x="1274" fg:w="60"/><text x="0.5858%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (60 samples, 0.02%)</title><rect x="0.3358%" y="1141" width="0.0158%" height="15" fill="rgb(228,84,46)" fg:x="1274" fg:w="60"/><text x="0.5858%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (59 samples, 0.02%)</title><rect x="0.3361%" y="1125" width="0.0156%" height="15" fill="rgb(254,188,9)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (59 samples, 0.02%)</title><rect x="0.3361%" y="1109" width="0.0156%" height="15" fill="rgb(206,112,54)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1119.50"></text></g><g><title>std::panicking::try (59 samples, 0.02%)</title><rect x="0.3361%" y="1093" width="0.0156%" height="15" fill="rgb(216,84,49)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (59 samples, 0.02%)</title><rect x="0.3361%" y="1077" width="0.0156%" height="15" fill="rgb(214,194,35)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1087.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (59 samples, 0.02%)</title><rect x="0.3361%" y="1061" width="0.0156%" height="15" fill="rgb(249,28,3)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (59 samples, 0.02%)</title><rect x="0.3361%" y="1045" width="0.0156%" height="15" fill="rgb(222,56,52)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (59 samples, 0.02%)</title><rect x="0.3361%" y="1029" width="0.0156%" height="15" fill="rgb(245,217,50)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (59 samples, 0.02%)</title><rect x="0.3361%" y="1013" width="0.0156%" height="15" fill="rgb(213,201,24)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (59 samples, 0.02%)</title><rect x="0.3361%" y="997" width="0.0156%" height="15" fill="rgb(248,116,28)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (59 samples, 0.02%)</title><rect x="0.3361%" y="981" width="0.0156%" height="15" fill="rgb(219,72,43)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="991.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (59 samples, 0.02%)</title><rect x="0.3361%" y="965" width="0.0156%" height="15" fill="rgb(209,138,14)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (59 samples, 0.02%)</title><rect x="0.3361%" y="949" width="0.0156%" height="15" fill="rgb(222,18,33)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (59 samples, 0.02%)</title><rect x="0.3361%" y="933" width="0.0156%" height="15" fill="rgb(213,199,7)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (59 samples, 0.02%)</title><rect x="0.3361%" y="917" width="0.0156%" height="15" fill="rgb(250,110,10)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (59 samples, 0.02%)</title><rect x="0.3361%" y="901" width="0.0156%" height="15" fill="rgb(248,123,6)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (59 samples, 0.02%)</title><rect x="0.3361%" y="885" width="0.0156%" height="15" fill="rgb(206,91,31)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="895.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (59 samples, 0.02%)</title><rect x="0.3361%" y="869" width="0.0156%" height="15" fill="rgb(211,154,13)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (59 samples, 0.02%)</title><rect x="0.3361%" y="853" width="0.0156%" height="15" fill="rgb(225,148,7)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (59 samples, 0.02%)</title><rect x="0.3361%" y="837" width="0.0156%" height="15" fill="rgb(220,160,43)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (59 samples, 0.02%)</title><rect x="0.3361%" y="821" width="0.0156%" height="15" fill="rgb(213,52,39)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="831.50"></text></g><g><title>criterion::analysis::estimates::stats (59 samples, 0.02%)</title><rect x="0.3361%" y="805" width="0.0156%" height="15" fill="rgb(243,137,7)" fg:x="1275" fg:w="59"/><text x="0.5861%" y="815.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (49 samples, 0.01%)</title><rect x="0.3516%" y="1061" width="0.0129%" height="15" fill="rgb(230,79,13)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (49 samples, 0.01%)</title><rect x="0.3516%" y="1045" width="0.0129%" height="15" fill="rgb(247,105,23)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (49 samples, 0.01%)</title><rect x="0.3516%" y="1029" width="0.0129%" height="15" fill="rgb(223,179,41)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (49 samples, 0.01%)</title><rect x="0.3516%" y="1013" width="0.0129%" height="15" fill="rgb(218,9,34)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (49 samples, 0.01%)</title><rect x="0.3516%" y="997" width="0.0129%" height="15" fill="rgb(222,106,8)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.01%)</title><rect x="0.3516%" y="981" width="0.0129%" height="15" fill="rgb(211,220,0)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="991.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (49 samples, 0.01%)</title><rect x="0.3516%" y="965" width="0.0129%" height="15" fill="rgb(229,52,16)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.01%)</title><rect x="0.3516%" y="949" width="0.0129%" height="15" fill="rgb(212,155,18)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.01%)</title><rect x="0.3516%" y="933" width="0.0129%" height="15" fill="rgb(242,21,14)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (49 samples, 0.01%)</title><rect x="0.3516%" y="917" width="0.0129%" height="15" fill="rgb(222,19,48)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (49 samples, 0.01%)</title><rect x="0.3516%" y="901" width="0.0129%" height="15" fill="rgb(232,45,27)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (49 samples, 0.01%)</title><rect x="0.3516%" y="885" width="0.0129%" height="15" fill="rgb(249,103,42)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="895.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (49 samples, 0.01%)</title><rect x="0.3516%" y="869" width="0.0129%" height="15" fill="rgb(246,81,33)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (49 samples, 0.01%)</title><rect x="0.3516%" y="853" width="0.0129%" height="15" fill="rgb(252,33,42)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="863.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (49 samples, 0.01%)</title><rect x="0.3516%" y="837" width="0.0129%" height="15" fill="rgb(209,212,41)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (49 samples, 0.01%)</title><rect x="0.3516%" y="821" width="0.0129%" height="15" fill="rgb(207,154,6)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="831.50"></text></g><g><title>criterion::analysis::estimates::stats (49 samples, 0.01%)</title><rect x="0.3516%" y="805" width="0.0129%" height="15" fill="rgb(223,64,47)" fg:x="1334" fg:w="49"/><text x="0.6016%" y="815.50"></text></g><g><title>std::panicking::try (166 samples, 0.04%)</title><rect x="0.3358%" y="1381" width="0.0438%" height="15" fill="rgb(211,161,38)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (166 samples, 0.04%)</title><rect x="0.3358%" y="1365" width="0.0438%" height="15" fill="rgb(219,138,40)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1375.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (166 samples, 0.04%)</title><rect x="0.3358%" y="1349" width="0.0438%" height="15" fill="rgb(241,228,46)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (166 samples, 0.04%)</title><rect x="0.3358%" y="1333" width="0.0438%" height="15" fill="rgb(223,209,38)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (166 samples, 0.04%)</title><rect x="0.3358%" y="1317" width="0.0438%" height="15" fill="rgb(236,164,45)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (166 samples, 0.04%)</title><rect x="0.3358%" y="1301" width="0.0438%" height="15" fill="rgb(231,15,5)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (166 samples, 0.04%)</title><rect x="0.3358%" y="1285" width="0.0438%" height="15" fill="rgb(252,35,15)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (166 samples, 0.04%)</title><rect x="0.3358%" y="1269" width="0.0438%" height="15" fill="rgb(248,181,18)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (166 samples, 0.04%)</title><rect x="0.3358%" y="1253" width="0.0438%" height="15" fill="rgb(233,39,42)" fg:x="1274" fg:w="166"/><text x="0.5858%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (106 samples, 0.03%)</title><rect x="0.3516%" y="1237" width="0.0279%" height="15" fill="rgb(238,110,33)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (106 samples, 0.03%)</title><rect x="0.3516%" y="1221" width="0.0279%" height="15" fill="rgb(233,195,10)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1231.50"></text></g><g><title>std::panicking::try (106 samples, 0.03%)</title><rect x="0.3516%" y="1205" width="0.0279%" height="15" fill="rgb(254,105,3)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (106 samples, 0.03%)</title><rect x="0.3516%" y="1189" width="0.0279%" height="15" fill="rgb(221,225,9)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (106 samples, 0.03%)</title><rect x="0.3516%" y="1173" width="0.0279%" height="15" fill="rgb(224,227,45)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (106 samples, 0.03%)</title><rect x="0.3516%" y="1157" width="0.0279%" height="15" fill="rgb(229,198,43)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (106 samples, 0.03%)</title><rect x="0.3516%" y="1141" width="0.0279%" height="15" fill="rgb(206,209,35)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (106 samples, 0.03%)</title><rect x="0.3516%" y="1125" width="0.0279%" height="15" fill="rgb(245,195,53)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (106 samples, 0.03%)</title><rect x="0.3516%" y="1109" width="0.0279%" height="15" fill="rgb(240,92,26)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (106 samples, 0.03%)</title><rect x="0.3516%" y="1093" width="0.0279%" height="15" fill="rgb(207,40,23)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (106 samples, 0.03%)</title><rect x="0.3516%" y="1077" width="0.0279%" height="15" fill="rgb(223,111,35)" fg:x="1334" fg:w="106"/><text x="0.6016%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (57 samples, 0.02%)</title><rect x="0.3645%" y="1061" width="0.0150%" height="15" fill="rgb(229,147,28)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.02%)</title><rect x="0.3645%" y="1045" width="0.0150%" height="15" fill="rgb(211,29,28)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="1055.50"></text></g><g><title>std::panicking::try (57 samples, 0.02%)</title><rect x="0.3645%" y="1029" width="0.0150%" height="15" fill="rgb(228,72,33)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.02%)</title><rect x="0.3645%" y="1013" width="0.0150%" height="15" fill="rgb(205,214,31)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (57 samples, 0.02%)</title><rect x="0.3645%" y="997" width="0.0150%" height="15" fill="rgb(224,111,15)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (57 samples, 0.02%)</title><rect x="0.3645%" y="981" width="0.0150%" height="15" fill="rgb(253,21,26)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (57 samples, 0.02%)</title><rect x="0.3645%" y="965" width="0.0150%" height="15" fill="rgb(245,139,43)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.02%)</title><rect x="0.3645%" y="949" width="0.0150%" height="15" fill="rgb(252,170,7)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (57 samples, 0.02%)</title><rect x="0.3645%" y="933" width="0.0150%" height="15" fill="rgb(231,118,14)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="943.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.02%)</title><rect x="0.3645%" y="917" width="0.0150%" height="15" fill="rgb(238,83,0)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="927.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (57 samples, 0.02%)</title><rect x="0.3645%" y="901" width="0.0150%" height="15" fill="rgb(221,39,39)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 0.02%)</title><rect x="0.3645%" y="885" width="0.0150%" height="15" fill="rgb(222,119,46)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.02%)</title><rect x="0.3645%" y="869" width="0.0150%" height="15" fill="rgb(222,165,49)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.02%)</title><rect x="0.3645%" y="853" width="0.0150%" height="15" fill="rgb(219,113,52)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (57 samples, 0.02%)</title><rect x="0.3645%" y="837" width="0.0150%" height="15" fill="rgb(214,7,15)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (57 samples, 0.02%)</title><rect x="0.3645%" y="821" width="0.0150%" height="15" fill="rgb(235,32,4)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="831.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::{{closure}} (57 samples, 0.02%)</title><rect x="0.3645%" y="805" width="0.0150%" height="15" fill="rgb(238,90,54)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (57 samples, 0.02%)</title><rect x="0.3645%" y="789" width="0.0150%" height="15" fill="rgb(213,208,19)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="799.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::{{closure}} (57 samples, 0.02%)</title><rect x="0.3645%" y="773" width="0.0150%" height="15" fill="rgb(233,156,4)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (57 samples, 0.02%)</title><rect x="0.3645%" y="757" width="0.0150%" height="15" fill="rgb(207,194,5)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="767.50"></text></g><g><title>criterion::analysis::estimates::stats (57 samples, 0.02%)</title><rect x="0.3645%" y="741" width="0.0150%" height="15" fill="rgb(206,111,30)" fg:x="1383" fg:w="57"/><text x="0.6145%" y="751.50"></text></g><g><title>[unknown] (1,485 samples, 0.39%)</title><rect x="0.0000%" y="1397" width="0.3914%" height="15" fill="rgb(243,70,54)" fg:x="0" fg:w="1485"/><text x="0.2500%" y="1407.50"></text></g><g><title>&lt;usize as core::ops::arith::Sub&lt;&amp;usize&gt;&gt;::sub (2,688 samples, 0.71%)</title><rect x="0.7246%" y="837" width="0.7085%" height="15" fill="rgb(242,28,8)" fg:x="2749" fg:w="2688"/><text x="0.9746%" y="847.50"></text></g><g><title>&lt;usize as core::ops::arith::Sub&gt;::sub (2,688 samples, 0.71%)</title><rect x="0.7246%" y="821" width="0.7085%" height="15" fill="rgb(219,106,18)" fg:x="2749" fg:w="2688"/><text x="0.9746%" y="831.50"></text></g><g><title>__munmap (296 samples, 0.08%)</title><rect x="1.4389%" y="709" width="0.0780%" height="15" fill="rgb(244,222,10)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="719.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="693" width="0.0780%" height="15" fill="rgb(236,179,52)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="703.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="677" width="0.0780%" height="15" fill="rgb(213,23,39)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="687.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="661" width="0.0780%" height="15" fill="rgb(238,48,10)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="671.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="645" width="0.0780%" height="15" fill="rgb(251,196,23)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="655.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="629" width="0.0780%" height="15" fill="rgb(250,152,24)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="639.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="613" width="0.0780%" height="15" fill="rgb(209,150,17)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="623.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="597" width="0.0780%" height="15" fill="rgb(234,202,34)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="607.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="581" width="0.0780%" height="15" fill="rgb(253,148,53)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="591.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="565" width="0.0780%" height="15" fill="rgb(218,129,16)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="575.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="1.4389%" y="549" width="0.0780%" height="15" fill="rgb(216,85,19)" fg:x="5459" fg:w="296"/><text x="1.6889%" y="559.50"></text></g><g><title>[unknown] (284 samples, 0.07%)</title><rect x="1.4420%" y="533" width="0.0749%" height="15" fill="rgb(235,228,7)" fg:x="5471" fg:w="284"/><text x="1.6920%" y="543.50"></text></g><g><title>[unknown] (277 samples, 0.07%)</title><rect x="1.4439%" y="517" width="0.0730%" height="15" fill="rgb(245,175,0)" fg:x="5478" fg:w="277"/><text x="1.6939%" y="527.50"></text></g><g><title>[unknown] (268 samples, 0.07%)</title><rect x="1.4463%" y="501" width="0.0706%" height="15" fill="rgb(208,168,36)" fg:x="5487" fg:w="268"/><text x="1.6963%" y="511.50"></text></g><g><title>[unknown] (247 samples, 0.07%)</title><rect x="1.4518%" y="485" width="0.0651%" height="15" fill="rgb(246,171,24)" fg:x="5508" fg:w="247"/><text x="1.7018%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,usize&gt;&gt; (304 samples, 0.08%)</title><rect x="1.4373%" y="837" width="0.0801%" height="15" fill="rgb(215,142,24)" fg:x="5453" fg:w="304"/><text x="1.6873%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,usize,std::collections::hash::map::RandomState&gt;&gt; (304 samples, 0.08%)</title><rect x="1.4373%" y="821" width="0.0801%" height="15" fill="rgb(250,187,7)" fg:x="5453" fg:w="304"/><text x="1.6873%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,usize)&gt;&gt; (304 samples, 0.08%)</title><rect x="1.4373%" y="805" width="0.0801%" height="15" fill="rgb(228,66,33)" fg:x="5453" fg:w="304"/><text x="1.6873%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (304 samples, 0.08%)</title><rect x="1.4373%" y="789" width="0.0801%" height="15" fill="rgb(234,215,21)" fg:x="5453" fg:w="304"/><text x="1.6873%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (304 samples, 0.08%)</title><rect x="1.4373%" y="773" width="0.0801%" height="15" fill="rgb(222,191,20)" fg:x="5453" fg:w="304"/><text x="1.6873%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (304 samples, 0.08%)</title><rect x="1.4373%" y="757" width="0.0801%" height="15" fill="rgb(245,79,54)" fg:x="5453" fg:w="304"/><text x="1.6873%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (303 samples, 0.08%)</title><rect x="1.4376%" y="741" width="0.0799%" height="15" fill="rgb(240,10,37)" fg:x="5454" fg:w="303"/><text x="1.6876%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (303 samples, 0.08%)</title><rect x="1.4376%" y="725" width="0.0799%" height="15" fill="rgb(214,192,32)" fg:x="5454" fg:w="303"/><text x="1.6876%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,964 samples, 0.52%)</title><rect x="3.3448%" y="709" width="0.5177%" height="15" fill="rgb(209,36,54)" fg:x="12690" fg:w="1964"/><text x="3.5948%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,150 samples, 1.09%)</title><rect x="3.0467%" y="725" width="1.0938%" height="15" fill="rgb(220,10,11)" fg:x="11559" fg:w="4150"/><text x="3.2967%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,055 samples, 0.28%)</title><rect x="3.8625%" y="709" width="0.2781%" height="15" fill="rgb(221,106,17)" fg:x="14654" fg:w="1055"/><text x="4.1125%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,399 samples, 0.90%)</title><rect x="5.0038%" y="709" width="0.8959%" height="15" fill="rgb(251,142,44)" fg:x="18984" fg:w="3399"/><text x="5.2538%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10,912 samples, 2.88%)</title><rect x="4.1406%" y="725" width="2.8762%" height="15" fill="rgb(238,13,15)" fg:x="15709" fg:w="10912"/><text x="4.3906%" y="735.50">&lt;c..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4,238 samples, 1.12%)</title><rect x="5.8997%" y="709" width="1.1170%" height="15" fill="rgb(208,107,27)" fg:x="22383" fg:w="4238"/><text x="6.1497%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18,577 samples, 4.90%)</title><rect x="2.1210%" y="773" width="4.8965%" height="15" fill="rgb(205,136,37)" fg:x="8047" fg:w="18577"/><text x="2.3710%" y="783.50">&lt;std::..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18,577 samples, 4.90%)</title><rect x="2.1210%" y="757" width="4.8965%" height="15" fill="rgb(250,205,27)" fg:x="8047" fg:w="18577"/><text x="2.3710%" y="767.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18,577 samples, 4.90%)</title><rect x="2.1210%" y="741" width="4.8965%" height="15" fill="rgb(210,80,43)" fg:x="8047" fg:w="18577"/><text x="2.3710%" y="751.50">&lt;core:..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (33,998 samples, 8.96%)</title><rect x="7.0175%" y="773" width="8.9611%" height="15" fill="rgb(247,160,36)" fg:x="26624" fg:w="33998"/><text x="7.2675%" y="783.50">&lt;std::collect..</text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2,020 samples, 0.53%)</title><rect x="15.4462%" y="757" width="0.5324%" height="15" fill="rgb(234,13,49)" fg:x="58602" fg:w="2020"/><text x="15.6962%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (927 samples, 0.24%)</title><rect x="15.7343%" y="741" width="0.2443%" height="15" fill="rgb(234,122,0)" fg:x="59695" fg:w="927"/><text x="15.9843%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (927 samples, 0.24%)</title><rect x="15.7343%" y="725" width="0.2443%" height="15" fill="rgb(207,146,38)" fg:x="59695" fg:w="927"/><text x="15.9843%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,308 samples, 0.34%)</title><rect x="18.7409%" y="677" width="0.3448%" height="15" fill="rgb(207,177,25)" fg:x="71102" fg:w="1308"/><text x="18.9909%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,094 samples, 1.08%)</title><rect x="18.2723%" y="693" width="1.0791%" height="15" fill="rgb(211,178,42)" fg:x="69324" fg:w="4094"/><text x="18.5223%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,008 samples, 0.27%)</title><rect x="19.0857%" y="677" width="0.2657%" height="15" fill="rgb(230,69,54)" fg:x="72410" fg:w="1008"/><text x="19.3357%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (1,884 samples, 0.50%)</title><rect x="19.3519%" y="693" width="0.4966%" height="15" fill="rgb(214,135,41)" fg:x="73420" fg:w="1884"/><text x="19.6019%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (69,548 samples, 18.33%)</title><rect x="1.5174%" y="789" width="18.3313%" height="15" fill="rgb(237,67,25)" fg:x="5757" fg:w="69548"/><text x="1.7674%" y="799.50">hashbrown::map::make_hash</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (14,680 samples, 3.87%)</title><rect x="15.9794%" y="773" width="3.8693%" height="15" fill="rgb(222,189,50)" fg:x="60625" fg:w="14680"/><text x="16.2294%" y="783.50">core..</text></g><g><title>core::hash::Hasher::write_usize (13,731 samples, 3.62%)</title><rect x="16.2296%" y="757" width="3.6192%" height="15" fill="rgb(245,148,34)" fg:x="61574" fg:w="13731"/><text x="16.4796%" y="767.50">core..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13,562 samples, 3.57%)</title><rect x="16.2741%" y="741" width="3.5746%" height="15" fill="rgb(222,29,6)" fg:x="61743" fg:w="13562"/><text x="16.5241%" y="751.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13,562 samples, 3.57%)</title><rect x="16.2741%" y="725" width="3.5746%" height="15" fill="rgb(221,189,43)" fg:x="61743" fg:w="13562"/><text x="16.5241%" y="735.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13,562 samples, 3.57%)</title><rect x="16.2741%" y="709" width="3.5746%" height="15" fill="rgb(207,36,27)" fg:x="61743" fg:w="13562"/><text x="16.5241%" y="719.50">&lt;cor..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2,625 samples, 0.69%)</title><rect x="40.9210%" y="709" width="0.6919%" height="15" fill="rgb(217,90,24)" fg:x="155252" fg:w="2625"/><text x="41.1710%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,754 samples, 0.73%)</title><rect x="40.9210%" y="725" width="0.7259%" height="15" fill="rgb(224,66,35)" fg:x="155252" fg:w="2754"/><text x="41.1710%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (129 samples, 0.03%)</title><rect x="41.6129%" y="709" width="0.0340%" height="15" fill="rgb(221,13,50)" fg:x="157877" fg:w="129"/><text x="41.8629%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (367 samples, 0.10%)</title><rect x="41.6475%" y="725" width="0.0967%" height="15" fill="rgb(236,68,49)" fg:x="158008" fg:w="367"/><text x="41.8975%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,892 samples, 2.08%)</title><rect x="40.4440%" y="741" width="2.0802%" height="15" fill="rgb(229,146,28)" fg:x="153442" fg:w="7892"/><text x="40.6940%" y="751.50">&lt;..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2,959 samples, 0.78%)</title><rect x="41.7442%" y="725" width="0.7799%" height="15" fill="rgb(225,31,38)" fg:x="158375" fg:w="2959"/><text x="41.9942%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2,959 samples, 0.78%)</title><rect x="41.7442%" y="709" width="0.7799%" height="15" fill="rgb(250,208,3)" fg:x="158375" fg:w="2959"/><text x="41.9942%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,959 samples, 0.78%)</title><rect x="41.7442%" y="693" width="0.7799%" height="15" fill="rgb(246,54,23)" fg:x="158375" fg:w="2959"/><text x="41.9942%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,717 samples, 2.56%)</title><rect x="40.4440%" y="757" width="2.5612%" height="15" fill="rgb(243,76,11)" fg:x="153442" fg:w="9717"/><text x="40.6940%" y="767.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1,825 samples, 0.48%)</title><rect x="42.5241%" y="741" width="0.4810%" height="15" fill="rgb(245,21,50)" fg:x="161334" fg:w="1825"/><text x="42.7741%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1,825 samples, 0.48%)</title><rect x="42.5241%" y="725" width="0.4810%" height="15" fill="rgb(228,9,43)" fg:x="161334" fg:w="1825"/><text x="42.7741%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1,825 samples, 0.48%)</title><rect x="42.5241%" y="709" width="0.4810%" height="15" fill="rgb(208,100,47)" fg:x="161334" fg:w="1825"/><text x="42.7741%" y="719.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="43.0052%" y="757" width="0.0121%" height="15" fill="rgb(232,26,8)" fg:x="163159" fg:w="46"/><text x="43.2552%" y="767.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="43.0052%" y="741" width="0.0121%" height="15" fill="rgb(216,166,38)" fg:x="163159" fg:w="46"/><text x="43.2552%" y="751.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="43.0052%" y="725" width="0.0121%" height="15" fill="rgb(251,202,51)" fg:x="163159" fg:w="46"/><text x="43.2552%" y="735.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="43.0052%" y="709" width="0.0121%" height="15" fill="rgb(254,216,34)" fg:x="163159" fg:w="46"/><text x="43.2552%" y="719.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="43.0052%" y="693" width="0.0121%" height="15" fill="rgb(251,32,27)" fg:x="163159" fg:w="46"/><text x="43.2552%" y="703.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="43.0054%" y="677" width="0.0119%" height="15" fill="rgb(208,127,28)" fg:x="163160" fg:w="45"/><text x="43.2554%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (861 samples, 0.23%)</title><rect x="43.0173%" y="757" width="0.2269%" height="15" fill="rgb(224,137,22)" fg:x="163205" fg:w="861"/><text x="43.2673%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (861 samples, 0.23%)</title><rect x="43.0173%" y="741" width="0.2269%" height="15" fill="rgb(254,70,32)" fg:x="163205" fg:w="861"/><text x="43.2673%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,024 samples, 0.27%)</title><rect x="43.2458%" y="709" width="0.2699%" height="15" fill="rgb(229,75,37)" fg:x="164072" fg:w="1024"/><text x="43.4958%" y="719.50"></text></g><g><title>hashbrown::raw::h2 (147 samples, 0.04%)</title><rect x="43.5157%" y="709" width="0.0387%" height="15" fill="rgb(252,64,23)" fg:x="165096" fg:w="147"/><text x="43.7657%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (58 samples, 0.02%)</title><rect x="43.5545%" y="709" width="0.0153%" height="15" fill="rgb(232,162,48)" fg:x="165243" fg:w="58"/><text x="43.8045%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (58 samples, 0.02%)</title><rect x="43.5545%" y="693" width="0.0153%" height="15" fill="rgb(246,160,12)" fg:x="165243" fg:w="58"/><text x="43.8045%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.02%)</title><rect x="43.5545%" y="677" width="0.0153%" height="15" fill="rgb(247,166,0)" fg:x="165243" fg:w="58"/><text x="43.8045%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (262,334 samples, 69.15%)</title><rect x="1.5174%" y="837" width="69.1455%" height="15" fill="rgb(249,219,21)" fg:x="5757" fg:w="262334"/><text x="1.7674%" y="847.50">std::collections::hash::map::HashMap&lt;K,V,S&gt;::get</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (262,334 samples, 69.15%)</title><rect x="1.5174%" y="821" width="69.1455%" height="15" fill="rgb(205,209,3)" fg:x="5757" fg:w="262334"/><text x="1.7674%" y="831.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::get</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (262,334 samples, 69.15%)</title><rect x="1.5174%" y="805" width="69.1455%" height="15" fill="rgb(243,44,1)" fg:x="5757" fg:w="262334"/><text x="1.7674%" y="815.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (192,786 samples, 50.81%)</title><rect x="19.8488%" y="789" width="50.8142%" height="15" fill="rgb(206,159,16)" fg:x="75305" fg:w="192786"/><text x="20.0988%" y="799.50">hashbrown::raw::RawTable&lt;T,A&gt;::get</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (192,786 samples, 50.81%)</title><rect x="19.8488%" y="773" width="50.8142%" height="15" fill="rgb(244,77,30)" fg:x="75305" fg:w="192786"/><text x="20.0988%" y="783.50">hashbrown::raw::RawTable&lt;T,A&gt;::find</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (104,025 samples, 27.42%)</title><rect x="43.2442%" y="757" width="27.4187%" height="15" fill="rgb(218,69,12)" fg:x="164066" fg:w="104025"/><text x="43.4942%" y="767.50">hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash</text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (104,025 samples, 27.42%)</title><rect x="43.2442%" y="741" width="27.4187%" height="15" fill="rgb(212,87,7)" fg:x="164066" fg:w="104025"/><text x="43.4942%" y="751.50">hashbrown::raw::RawIterHash&lt;T,A&gt;::new</text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (104,025 samples, 27.42%)</title><rect x="43.2442%" y="725" width="27.4187%" height="15" fill="rgb(245,114,25)" fg:x="164066" fg:w="104025"/><text x="43.4942%" y="735.50">hashbrown::raw::RawIterHashInner&lt;A&gt;::new</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (102,790 samples, 27.09%)</title><rect x="43.5697%" y="709" width="27.0932%" height="15" fill="rgb(210,61,42)" fg:x="165301" fg:w="102790"/><text x="43.8197%" y="719.50">hashbrown::raw::sse2::Group::match_byte</text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (102,790 samples, 27.09%)</title><rect x="43.5697%" y="693" width="27.0932%" height="15" fill="rgb(211,52,33)" fg:x="165301" fg:w="102790"/><text x="43.8197%" y="703.50">core::core_arch::x86::sse2::_mm_set1_epi8</text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (102,790 samples, 27.09%)</title><rect x="43.5697%" y="677" width="27.0932%" height="15" fill="rgb(234,58,33)" fg:x="165301" fg:w="102790"/><text x="43.8197%" y="687.50">core::core_arch::x86::sse2::_mm_set_epi8</text></g><g><title>core::core_arch::simd::i8x16::new (102,790 samples, 27.09%)</title><rect x="43.5697%" y="661" width="27.0932%" height="15" fill="rgb(220,115,36)" fg:x="165301" fg:w="102790"/><text x="43.8197%" y="671.50">core::core_arch::simd::i8x16::new</text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="70.6419%" y="645" width="0.0211%" height="15" fill="rgb(243,153,54)" fg:x="268011" fg:w="80"/><text x="70.8919%" y="655.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="70.6419%" y="629" width="0.0211%" height="15" fill="rgb(251,47,18)" fg:x="268011" fg:w="80"/><text x="70.8919%" y="639.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="70.6419%" y="613" width="0.0211%" height="15" fill="rgb(242,102,42)" fg:x="268011" fg:w="80"/><text x="70.8919%" y="623.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="70.6419%" y="597" width="0.0211%" height="15" fill="rgb(234,31,38)" fg:x="268011" fg:w="80"/><text x="70.8919%" y="607.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="70.6419%" y="581" width="0.0211%" height="15" fill="rgb(221,117,51)" fg:x="268011" fg:w="80"/><text x="70.8919%" y="591.50"></text></g><g><title>[unknown] (79 samples, 0.02%)</title><rect x="70.6421%" y="565" width="0.0208%" height="15" fill="rgb(212,20,18)" fg:x="268012" fg:w="79"/><text x="70.8921%" y="575.50"></text></g><g><title>core::mem::replace (1,255 samples, 0.33%)</title><rect x="71.9144%" y="805" width="0.3308%" height="15" fill="rgb(245,133,36)" fg:x="272839" fg:w="1255"/><text x="72.1644%" y="815.50"></text></g><g><title>core::ptr::write (981 samples, 0.26%)</title><rect x="71.9866%" y="789" width="0.2586%" height="15" fill="rgb(212,6,19)" fg:x="273113" fg:w="981"/><text x="72.2366%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,293 samples, 0.60%)</title><rect x="73.6153%" y="725" width="0.6044%" height="15" fill="rgb(218,1,36)" fg:x="279292" fg:w="2293"/><text x="73.8653%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,353 samples, 1.15%)</title><rect x="73.3325%" y="741" width="1.1474%" height="15" fill="rgb(246,84,54)" fg:x="278219" fg:w="4353"/><text x="73.5825%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (987 samples, 0.26%)</title><rect x="74.2197%" y="725" width="0.2602%" height="15" fill="rgb(242,110,6)" fg:x="281585" fg:w="987"/><text x="74.4697%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4,086 samples, 1.08%)</title><rect x="75.2972%" y="725" width="1.0770%" height="15" fill="rgb(214,47,5)" fg:x="285673" fg:w="4086"/><text x="75.5472%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11,155 samples, 2.94%)</title><rect x="74.4798%" y="741" width="2.9402%" height="15" fill="rgb(218,159,25)" fg:x="282572" fg:w="11155"/><text x="74.7298%" y="751.50">&lt;c..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3,968 samples, 1.05%)</title><rect x="76.3742%" y="725" width="1.0459%" height="15" fill="rgb(215,211,28)" fg:x="289759" fg:w="3968"/><text x="76.6242%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18,672 samples, 4.92%)</title><rect x="72.5001%" y="789" width="4.9215%" height="15" fill="rgb(238,59,32)" fg:x="275061" fg:w="18672"/><text x="72.7501%" y="799.50">&lt;std::..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18,672 samples, 4.92%)</title><rect x="72.5001%" y="773" width="4.9215%" height="15" fill="rgb(226,82,3)" fg:x="275061" fg:w="18672"/><text x="72.7501%" y="783.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18,672 samples, 4.92%)</title><rect x="72.5001%" y="757" width="4.9215%" height="15" fill="rgb(240,164,32)" fg:x="275061" fg:w="18672"/><text x="72.7501%" y="767.50">&lt;core:..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,182 samples, 1.10%)</title><rect x="77.4216%" y="789" width="1.1023%" height="15" fill="rgb(232,46,7)" fg:x="293733" fg:w="4182"/><text x="77.6716%" y="799.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3,236 samples, 0.85%)</title><rect x="77.6710%" y="773" width="0.8529%" height="15" fill="rgb(229,129,53)" fg:x="294679" fg:w="3236"/><text x="77.9210%" y="783.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2,123 samples, 0.56%)</title><rect x="77.9643%" y="757" width="0.5596%" height="15" fill="rgb(234,188,29)" fg:x="295792" fg:w="2123"/><text x="78.2143%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2,123 samples, 0.56%)</title><rect x="77.9643%" y="741" width="0.5596%" height="15" fill="rgb(246,141,4)" fg:x="295792" fg:w="2123"/><text x="78.2143%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,123 samples, 0.30%)</title><rect x="81.3571%" y="693" width="0.2960%" height="15" fill="rgb(229,23,39)" fg:x="308664" fg:w="1123"/><text x="81.6071%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4,059 samples, 1.07%)</title><rect x="80.8642%" y="709" width="1.0699%" height="15" fill="rgb(206,12,3)" fg:x="306794" fg:w="4059"/><text x="81.1142%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,066 samples, 0.28%)</title><rect x="81.6531%" y="693" width="0.2810%" height="15" fill="rgb(252,226,20)" fg:x="309787" fg:w="1066"/><text x="81.9031%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (2,138 samples, 0.56%)</title><rect x="81.9354%" y="709" width="0.5635%" height="15" fill="rgb(216,123,35)" fg:x="310858" fg:w="2138"/><text x="82.1854%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (38,904 samples, 10.25%)</title><rect x="72.2452%" y="805" width="10.2542%" height="15" fill="rgb(212,68,40)" fg:x="274094" fg:w="38904"/><text x="72.4952%" y="815.50">hashbrown::map:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (15,080 samples, 3.97%)</title><rect x="78.5247%" y="789" width="3.9748%" height="15" fill="rgb(254,125,32)" fg:x="297918" fg:w="15080"/><text x="78.7747%" y="799.50">core..</text></g><g><title>core::hash::Hasher::write_usize (14,922 samples, 3.93%)</title><rect x="78.5663%" y="773" width="3.9331%" height="15" fill="rgb(253,97,22)" fg:x="298076" fg:w="14922"/><text x="78.8163%" y="783.50">core..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13,909 samples, 3.67%)</title><rect x="78.8334%" y="757" width="3.6661%" height="15" fill="rgb(241,101,14)" fg:x="299089" fg:w="13909"/><text x="79.0834%" y="767.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13,909 samples, 3.67%)</title><rect x="78.8334%" y="741" width="3.6661%" height="15" fill="rgb(238,103,29)" fg:x="299089" fg:w="13909"/><text x="79.0834%" y="751.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13,909 samples, 3.67%)</title><rect x="78.8334%" y="725" width="3.6661%" height="15" fill="rgb(233,195,47)" fg:x="299089" fg:w="13909"/><text x="79.0834%" y="735.50">&lt;cor..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (323 samples, 0.09%)</title><rect x="83.5461%" y="725" width="0.0851%" height="15" fill="rgb(246,218,30)" fg:x="316969" fg:w="323"/><text x="83.7961%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (340 samples, 0.09%)</title><rect x="83.5461%" y="741" width="0.0896%" height="15" fill="rgb(219,145,47)" fg:x="316969" fg:w="340"/><text x="83.7961%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,447 samples, 0.38%)</title><rect x="83.2557%" y="757" width="0.3814%" height="15" fill="rgb(243,12,26)" fg:x="315867" fg:w="1447"/><text x="83.5057%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,379 samples, 0.89%)</title><rect x="83.2557%" y="773" width="0.8906%" height="15" fill="rgb(214,87,16)" fg:x="315867" fg:w="3379"/><text x="83.5057%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1,932 samples, 0.51%)</title><rect x="83.6371%" y="757" width="0.5092%" height="15" fill="rgb(208,99,42)" fg:x="317314" fg:w="1932"/><text x="83.8871%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1,932 samples, 0.51%)</title><rect x="83.6371%" y="741" width="0.5092%" height="15" fill="rgb(253,99,2)" fg:x="317314" fg:w="1932"/><text x="83.8871%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1,932 samples, 0.51%)</title><rect x="83.6371%" y="725" width="0.5092%" height="15" fill="rgb(220,168,23)" fg:x="317314" fg:w="1932"/><text x="83.8871%" y="735.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (194 samples, 0.05%)</title><rect x="84.1466%" y="773" width="0.0511%" height="15" fill="rgb(242,38,24)" fg:x="319247" fg:w="194"/><text x="84.3966%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (194 samples, 0.05%)</title><rect x="84.1466%" y="757" width="0.0511%" height="15" fill="rgb(225,182,9)" fg:x="319247" fg:w="194"/><text x="84.3966%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (996 samples, 0.26%)</title><rect x="84.1987%" y="725" width="0.2625%" height="15" fill="rgb(243,178,37)" fg:x="319445" fg:w="996"/><text x="84.4487%" y="735.50"></text></g><g><title>hashbrown::raw::h2 (132 samples, 0.03%)</title><rect x="84.4613%" y="725" width="0.0348%" height="15" fill="rgb(232,139,19)" fg:x="320441" fg:w="132"/><text x="84.7113%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,108 samples, 0.29%)</title><rect x="84.4961%" y="725" width="0.2920%" height="15" fill="rgb(225,201,24)" fg:x="320573" fg:w="1108"/><text x="84.7461%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,108 samples, 0.29%)</title><rect x="84.4961%" y="709" width="0.2920%" height="15" fill="rgb(221,47,46)" fg:x="320573" fg:w="1108"/><text x="84.7461%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,108 samples, 0.29%)</title><rect x="84.4961%" y="693" width="0.2920%" height="15" fill="rgb(249,23,13)" fg:x="320573" fg:w="1108"/><text x="84.7461%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10,434 samples, 2.75%)</title><rect x="82.4995%" y="805" width="2.7502%" height="15" fill="rgb(219,9,5)" fg:x="312998" fg:w="10434"/><text x="82.7495%" y="815.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10,434 samples, 2.75%)</title><rect x="82.4995%" y="789" width="2.7502%" height="15" fill="rgb(254,171,16)" fg:x="312998" fg:w="10434"/><text x="82.7495%" y="799.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3,991 samples, 1.05%)</title><rect x="84.1977%" y="773" width="1.0519%" height="15" fill="rgb(230,171,20)" fg:x="319441" fg:w="3991"/><text x="84.4477%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3,991 samples, 1.05%)</title><rect x="84.1977%" y="757" width="1.0519%" height="15" fill="rgb(210,71,41)" fg:x="319441" fg:w="3991"/><text x="84.4477%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3,991 samples, 1.05%)</title><rect x="84.1977%" y="741" width="1.0519%" height="15" fill="rgb(206,173,20)" fg:x="319441" fg:w="3991"/><text x="84.4477%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,751 samples, 0.46%)</title><rect x="84.7881%" y="725" width="0.4615%" height="15" fill="rgb(233,88,34)" fg:x="321681" fg:w="1751"/><text x="85.0381%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1,751 samples, 0.46%)</title><rect x="84.7881%" y="709" width="0.4615%" height="15" fill="rgb(223,209,46)" fg:x="321681" fg:w="1751"/><text x="85.0381%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1,751 samples, 0.46%)</title><rect x="84.7881%" y="693" width="0.4615%" height="15" fill="rgb(250,43,18)" fg:x="321681" fg:w="1751"/><text x="85.0381%" y="703.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1,751 samples, 0.46%)</title><rect x="84.7881%" y="677" width="0.4615%" height="15" fill="rgb(208,13,10)" fg:x="321681" fg:w="1751"/><text x="85.0381%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (31,535 samples, 8.31%)</title><rect x="85.5778%" y="789" width="8.3119%" height="15" fill="rgb(212,200,36)" fg:x="324677" fg:w="31535"/><text x="85.8278%" y="799.50">hashbrown::r..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (31,535 samples, 8.31%)</title><rect x="85.5778%" y="773" width="8.3119%" height="15" fill="rgb(225,90,30)" fg:x="324677" fg:w="31535"/><text x="85.8278%" y="783.50">core::ptr::m..</text></g><g><title>core::ptr::write (31,535 samples, 8.31%)</title><rect x="85.5778%" y="757" width="8.3119%" height="15" fill="rgb(236,182,39)" fg:x="324677" fg:w="31535"/><text x="85.8278%" y="767.50">core::ptr::w..</text></g><g><title>[unknown] (30,699 samples, 8.09%)</title><rect x="85.7981%" y="741" width="8.0916%" height="15" fill="rgb(212,144,35)" fg:x="325513" fg:w="30699"/><text x="86.0481%" y="751.50">[unknown]</text></g><g><title>[unknown] (30,699 samples, 8.09%)</title><rect x="85.7981%" y="725" width="8.0916%" height="15" fill="rgb(228,63,44)" fg:x="325513" fg:w="30699"/><text x="86.0481%" y="735.50">[unknown]</text></g><g><title>[unknown] (30,699 samples, 8.09%)</title><rect x="85.7981%" y="709" width="8.0916%" height="15" fill="rgb(228,109,6)" fg:x="325513" fg:w="30699"/><text x="86.0481%" y="719.50">[unknown]</text></g><g><title>[unknown] (30,675 samples, 8.09%)</title><rect x="85.8045%" y="693" width="8.0853%" height="15" fill="rgb(238,117,24)" fg:x="325537" fg:w="30675"/><text x="86.0545%" y="703.50">[unknown]</text></g><g><title>[unknown] (30,674 samples, 8.08%)</title><rect x="85.8047%" y="677" width="8.0850%" height="15" fill="rgb(242,26,26)" fg:x="325538" fg:w="30674"/><text x="86.0547%" y="687.50">[unknown]</text></g><g><title>[unknown] (30,672 samples, 8.08%)</title><rect x="85.8053%" y="661" width="8.0845%" height="15" fill="rgb(221,92,48)" fg:x="325540" fg:w="30672"/><text x="86.0553%" y="671.50">[unknown]</text></g><g><title>[unknown] (30,660 samples, 8.08%)</title><rect x="85.8084%" y="645" width="8.0813%" height="15" fill="rgb(209,209,32)" fg:x="325552" fg:w="30660"/><text x="86.0584%" y="655.50">[unknown]</text></g><g><title>[unknown] (30,487 samples, 8.04%)</title><rect x="85.8540%" y="629" width="8.0357%" height="15" fill="rgb(221,70,22)" fg:x="325725" fg:w="30487"/><text x="86.1040%" y="639.50">[unknown]</text></g><g><title>[unknown] (24,740 samples, 6.52%)</title><rect x="87.3688%" y="613" width="6.5209%" height="15" fill="rgb(248,145,5)" fg:x="331472" fg:w="24740"/><text x="87.6188%" y="623.50">[unknown]</text></g><g><title>[unknown] (24,721 samples, 6.52%)</title><rect x="87.3738%" y="597" width="6.5159%" height="15" fill="rgb(226,116,26)" fg:x="331491" fg:w="24721"/><text x="87.6238%" y="607.50">[unknown]</text></g><g><title>[unknown] (150 samples, 0.04%)</title><rect x="93.8502%" y="581" width="0.0395%" height="15" fill="rgb(244,5,17)" fg:x="356062" fg:w="150"/><text x="94.1002%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (113 samples, 0.03%)</title><rect x="93.8897%" y="789" width="0.0298%" height="15" fill="rgb(252,159,33)" fg:x="356212" fg:w="113"/><text x="94.1397%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (113 samples, 0.03%)</title><rect x="93.8897%" y="773" width="0.0298%" height="15" fill="rgb(206,71,0)" fg:x="356212" fg:w="113"/><text x="94.1397%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (113 samples, 0.03%)</title><rect x="93.8897%" y="757" width="0.0298%" height="15" fill="rgb(233,118,54)" fg:x="356212" fg:w="113"/><text x="94.1397%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (122 samples, 0.03%)</title><rect x="93.9596%" y="773" width="0.0322%" height="15" fill="rgb(234,83,48)" fg:x="356477" fg:w="122"/><text x="94.2096%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (150 samples, 0.04%)</title><rect x="93.9917%" y="773" width="0.0395%" height="15" fill="rgb(228,3,54)" fg:x="356599" fg:w="150"/><text x="94.2417%" y="783.50"></text></g><g><title>hashbrown::raw::is_full (674 samples, 0.18%)</title><rect x="94.0313%" y="773" width="0.1777%" height="15" fill="rgb(226,155,13)" fg:x="356749" fg:w="674"/><text x="94.2813%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1,133 samples, 0.30%)</title><rect x="93.9195%" y="789" width="0.2986%" height="15" fill="rgb(241,28,37)" fg:x="356325" fg:w="1133"/><text x="94.1695%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (123 samples, 0.03%)</title><rect x="94.2527%" y="757" width="0.0324%" height="15" fill="rgb(233,93,10)" fg:x="357589" fg:w="123"/><text x="94.5027%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (89,888 samples, 23.69%)</title><rect x="70.6630%" y="837" width="23.6925%" height="15" fill="rgb(225,113,19)" fg:x="268091" fg:w="89888"/><text x="70.9130%" y="847.50">std::collections::hash::map::HashMap&lt;K..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88,747 samples, 23.39%)</title><rect x="70.9637%" y="821" width="23.3918%" height="15" fill="rgb(241,2,18)" fg:x="269232" fg:w="88747"/><text x="71.2137%" y="831.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::ins..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (34,547 samples, 9.11%)</title><rect x="85.2496%" y="805" width="9.1058%" height="15" fill="rgb(228,207,21)" fg:x="323432" fg:w="34547"/><text x="85.4996%" y="815.50">hashbrown::ra..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (521 samples, 0.14%)</title><rect x="94.2181%" y="789" width="0.1373%" height="15" fill="rgb(213,211,35)" fg:x="357458" fg:w="521"/><text x="94.4681%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (390 samples, 0.10%)</title><rect x="94.2527%" y="773" width="0.1028%" height="15" fill="rgb(209,83,10)" fg:x="357589" fg:w="390"/><text x="94.5027%" y="783.50"></text></g><g><title>hashbrown::raw::h2 (267 samples, 0.07%)</title><rect x="94.2851%" y="757" width="0.0704%" height="15" fill="rgb(209,164,1)" fg:x="357712" fg:w="267"/><text x="94.5351%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2,269 samples, 0.60%)</title><rect x="94.3555%" y="725" width="0.5981%" height="15" fill="rgb(213,184,43)" fg:x="357979" fg:w="2269"/><text x="94.6055%" y="735.50"></text></g><g><title>core::intrinsics::write_bytes (2,269 samples, 0.60%)</title><rect x="94.3555%" y="709" width="0.5981%" height="15" fill="rgb(231,61,34)" fg:x="357979" fg:w="2269"/><text x="94.6055%" y="719.50"></text></g><g><title>[libc-2.31.so] (2,269 samples, 0.60%)</title><rect x="94.3555%" y="693" width="0.5981%" height="15" fill="rgb(235,75,3)" fg:x="357979" fg:w="2269"/><text x="94.6055%" y="703.50"></text></g><g><title>[unknown] (1,929 samples, 0.51%)</title><rect x="94.4451%" y="677" width="0.5084%" height="15" fill="rgb(220,106,47)" fg:x="358319" fg:w="1929"/><text x="94.6951%" y="687.50"></text></g><g><title>[unknown] (1,929 samples, 0.51%)</title><rect x="94.4451%" y="661" width="0.5084%" height="15" fill="rgb(210,196,33)" fg:x="358319" fg:w="1929"/><text x="94.6951%" y="671.50"></text></g><g><title>[unknown] (1,929 samples, 0.51%)</title><rect x="94.4451%" y="645" width="0.5084%" height="15" fill="rgb(229,154,42)" fg:x="358319" fg:w="1929"/><text x="94.6951%" y="655.50"></text></g><g><title>[unknown] (1,925 samples, 0.51%)</title><rect x="94.4461%" y="629" width="0.5074%" height="15" fill="rgb(228,114,26)" fg:x="358323" fg:w="1925"/><text x="94.6961%" y="639.50"></text></g><g><title>[unknown] (1,925 samples, 0.51%)</title><rect x="94.4461%" y="613" width="0.5074%" height="15" fill="rgb(208,144,1)" fg:x="358323" fg:w="1925"/><text x="94.6961%" y="623.50"></text></g><g><title>[unknown] (1,925 samples, 0.51%)</title><rect x="94.4461%" y="597" width="0.5074%" height="15" fill="rgb(239,112,37)" fg:x="358323" fg:w="1925"/><text x="94.6961%" y="607.50"></text></g><g><title>[unknown] (1,925 samples, 0.51%)</title><rect x="94.4461%" y="581" width="0.5074%" height="15" fill="rgb(210,96,50)" fg:x="358323" fg:w="1925"/><text x="94.6961%" y="591.50"></text></g><g><title>[unknown] (1,918 samples, 0.51%)</title><rect x="94.4480%" y="565" width="0.5055%" height="15" fill="rgb(222,178,2)" fg:x="358330" fg:w="1918"/><text x="94.6980%" y="575.50"></text></g><g><title>[unknown] (1,553 samples, 0.41%)</title><rect x="94.5442%" y="549" width="0.4093%" height="15" fill="rgb(226,74,18)" fg:x="358695" fg:w="1553"/><text x="94.7942%" y="559.50"></text></g><g><title>[unknown] (1,553 samples, 0.41%)</title><rect x="94.5442%" y="533" width="0.4093%" height="15" fill="rgb(225,67,54)" fg:x="358695" fg:w="1553"/><text x="94.7942%" y="543.50"></text></g><g><title>bench_ex15::criterion_benchmark::{{closure}}::{{closure}} (358,756 samples, 94.56%)</title><rect x="0.3948%" y="869" width="94.5603%" height="15" fill="rgb(251,92,32)" fg:x="1498" fg:w="358756"/><text x="0.6448%" y="879.50">bench_ex15::criterion_benchmark::{{closure}}::{{closure}}</text></g><g><title>ex15::game (358,756 samples, 94.56%)</title><rect x="0.3948%" y="853" width="94.5603%" height="15" fill="rgb(228,149,22)" fg:x="1498" fg:w="358756"/><text x="0.6448%" y="863.50">ex15::game</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (2,275 samples, 0.60%)</title><rect x="94.3555%" y="837" width="0.5996%" height="15" fill="rgb(243,54,13)" fg:x="357979" fg:w="2275"/><text x="94.6055%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2,275 samples, 0.60%)</title><rect x="94.3555%" y="821" width="0.5996%" height="15" fill="rgb(243,180,28)" fg:x="357979" fg:w="2275"/><text x="94.6055%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2,275 samples, 0.60%)</title><rect x="94.3555%" y="805" width="0.5996%" height="15" fill="rgb(208,167,24)" fg:x="357979" fg:w="2275"/><text x="94.6055%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (2,275 samples, 0.60%)</title><rect x="94.3555%" y="789" width="0.5996%" height="15" fill="rgb(245,73,45)" fg:x="357979" fg:w="2275"/><text x="94.6055%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2,275 samples, 0.60%)</title><rect x="94.3555%" y="773" width="0.5996%" height="15" fill="rgb(237,203,48)" fg:x="357979" fg:w="2275"/><text x="94.6055%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (2,275 samples, 0.60%)</title><rect x="94.3555%" y="757" width="0.5996%" height="15" fill="rgb(211,197,16)" fg:x="357979" fg:w="2275"/><text x="94.6055%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2,275 samples, 0.60%)</title><rect x="94.3555%" y="741" width="0.5996%" height="15" fill="rgb(243,99,51)" fg:x="357979" fg:w="2275"/><text x="94.6055%" y="751.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (358,757 samples, 94.56%)</title><rect x="0.3948%" y="1093" width="94.5605%" height="15" fill="rgb(215,123,29)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="1103.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench</text></g><g><title>core::iter::traits::iterator::Iterator::collect (358,757 samples, 94.56%)</title><rect x="0.3948%" y="1077" width="94.5605%" height="15" fill="rgb(239,186,37)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="1087.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (358,757 samples, 94.56%)</title><rect x="0.3948%" y="1061" width="94.5605%" height="15" fill="rgb(252,136,39)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="1071.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (358,757 samples, 94.56%)</title><rect x="0.3948%" y="1045" width="94.5605%" height="15" fill="rgb(223,213,32)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="1055.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (358,757 samples, 94.56%)</title><rect x="0.3948%" y="1029" width="94.5605%" height="15" fill="rgb(233,115,5)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="1039.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (358,757 samples, 94.56%)</title><rect x="0.3948%" y="1013" width="94.5605%" height="15" fill="rgb(207,226,44)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="1023.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (358,757 samples, 94.56%)</title><rect x="0.3948%" y="997" width="94.5605%" height="15" fill="rgb(208,126,0)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="1007.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (358,757 samples, 94.56%)</title><rect x="0.3948%" y="981" width="94.5605%" height="15" fill="rgb(244,66,21)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="991.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (358,757 samples, 94.56%)</title><rect x="0.3948%" y="965" width="94.5605%" height="15" fill="rgb(222,97,12)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="975.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (358,757 samples, 94.56%)</title><rect x="0.3948%" y="949" width="94.5605%" height="15" fill="rgb(219,213,19)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="959.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::{{closure}} (358,757 samples, 94.56%)</title><rect x="0.3948%" y="933" width="94.5605%" height="15" fill="rgb(252,169,30)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="943.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::{{closure}}</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (358,757 samples, 94.56%)</title><rect x="0.3948%" y="917" width="94.5605%" height="15" fill="rgb(206,32,51)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="927.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}}</text></g><g><title>bench_ex15::criterion_benchmark::{{closure}} (358,757 samples, 94.56%)</title><rect x="0.3948%" y="901" width="94.5605%" height="15" fill="rgb(250,172,42)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="911.50">bench_ex15::criterion_benchmark::{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (358,757 samples, 94.56%)</title><rect x="0.3948%" y="885" width="94.5605%" height="15" fill="rgb(209,34,43)" fg:x="1498" fg:w="358757"/><text x="0.6448%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>&lt;usize as core::ops::arith::Sub&lt;&amp;usize&gt;&gt;::sub (68 samples, 0.02%)</title><rect x="94.9746%" y="997" width="0.0179%" height="15" fill="rgb(223,11,35)" fg:x="360328" fg:w="68"/><text x="95.2246%" y="1007.50"></text></g><g><title>&lt;usize as core::ops::arith::Sub&gt;::sub (68 samples, 0.02%)</title><rect x="94.9746%" y="981" width="0.0179%" height="15" fill="rgb(251,219,26)" fg:x="360328" fg:w="68"/><text x="95.2246%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (102 samples, 0.03%)</title><rect x="95.1032%" y="869" width="0.0269%" height="15" fill="rgb(231,119,3)" fg:x="360816" fg:w="102"/><text x="95.3532%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (224 samples, 0.06%)</title><rect x="95.0832%" y="885" width="0.0590%" height="15" fill="rgb(216,97,11)" fg:x="360740" fg:w="224"/><text x="95.3332%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (46 samples, 0.01%)</title><rect x="95.1301%" y="869" width="0.0121%" height="15" fill="rgb(223,59,9)" fg:x="360918" fg:w="46"/><text x="95.3801%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (177 samples, 0.05%)</title><rect x="95.1821%" y="869" width="0.0467%" height="15" fill="rgb(233,93,31)" fg:x="361115" fg:w="177"/><text x="95.4321%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (981 samples, 0.26%)</title><rect x="95.0276%" y="933" width="0.2586%" height="15" fill="rgb(239,81,33)" fg:x="360529" fg:w="981"/><text x="95.2776%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (981 samples, 0.26%)</title><rect x="95.0276%" y="917" width="0.2586%" height="15" fill="rgb(213,120,34)" fg:x="360529" fg:w="981"/><text x="95.2776%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (981 samples, 0.26%)</title><rect x="95.0276%" y="901" width="0.2586%" height="15" fill="rgb(243,49,53)" fg:x="360529" fg:w="981"/><text x="95.2776%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (546 samples, 0.14%)</title><rect x="95.1423%" y="885" width="0.1439%" height="15" fill="rgb(247,216,33)" fg:x="360964" fg:w="546"/><text x="95.3923%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (218 samples, 0.06%)</title><rect x="95.2287%" y="869" width="0.0575%" height="15" fill="rgb(226,26,14)" fg:x="361292" fg:w="218"/><text x="95.4787%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (456 samples, 0.12%)</title><rect x="95.2862%" y="933" width="0.1202%" height="15" fill="rgb(215,49,53)" fg:x="361510" fg:w="456"/><text x="95.5362%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (106 samples, 0.03%)</title><rect x="95.3784%" y="917" width="0.0279%" height="15" fill="rgb(245,162,40)" fg:x="361860" fg:w="106"/><text x="95.6284%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (53 samples, 0.01%)</title><rect x="95.3924%" y="901" width="0.0140%" height="15" fill="rgb(229,68,17)" fg:x="361913" fg:w="53"/><text x="95.6424%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (53 samples, 0.01%)</title><rect x="95.3924%" y="885" width="0.0140%" height="15" fill="rgb(213,182,10)" fg:x="361913" fg:w="53"/><text x="95.6424%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (77 samples, 0.02%)</title><rect x="95.5413%" y="837" width="0.0203%" height="15" fill="rgb(245,125,30)" fg:x="362478" fg:w="77"/><text x="95.7913%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (200 samples, 0.05%)</title><rect x="95.5234%" y="853" width="0.0527%" height="15" fill="rgb(232,202,2)" fg:x="362410" fg:w="200"/><text x="95.7734%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (55 samples, 0.01%)</title><rect x="95.5616%" y="837" width="0.0145%" height="15" fill="rgb(237,140,51)" fg:x="362555" fg:w="55"/><text x="95.8116%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (2,286 samples, 0.60%)</title><rect x="95.0023%" y="949" width="0.6025%" height="15" fill="rgb(236,157,25)" fg:x="360433" fg:w="2286"/><text x="95.2523%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (753 samples, 0.20%)</title><rect x="95.4064%" y="933" width="0.1985%" height="15" fill="rgb(219,209,0)" fg:x="361966" fg:w="753"/><text x="95.6564%" y="943.50"></text></g><g><title>core::hash::Hasher::write_usize (659 samples, 0.17%)</title><rect x="95.4311%" y="917" width="0.1737%" height="15" fill="rgb(240,116,54)" fg:x="362060" fg:w="659"/><text x="95.6811%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (652 samples, 0.17%)</title><rect x="95.4330%" y="901" width="0.1719%" height="15" fill="rgb(216,10,36)" fg:x="362067" fg:w="652"/><text x="95.6830%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (652 samples, 0.17%)</title><rect x="95.4330%" y="885" width="0.1719%" height="15" fill="rgb(222,72,44)" fg:x="362067" fg:w="652"/><text x="95.6830%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (652 samples, 0.17%)</title><rect x="95.4330%" y="869" width="0.1719%" height="15" fill="rgb(232,159,9)" fg:x="362067" fg:w="652"/><text x="95.6830%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (108 samples, 0.03%)</title><rect x="95.5764%" y="853" width="0.0285%" height="15" fill="rgb(210,39,32)" fg:x="362611" fg:w="108"/><text x="95.8264%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (160 samples, 0.04%)</title><rect x="95.9108%" y="869" width="0.0422%" height="15" fill="rgb(216,194,45)" fg:x="363880" fg:w="160"/><text x="96.1608%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (161 samples, 0.04%)</title><rect x="95.9108%" y="885" width="0.0424%" height="15" fill="rgb(218,18,35)" fg:x="363880" fg:w="161"/><text x="96.1608%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (430 samples, 0.11%)</title><rect x="95.8903%" y="901" width="0.1133%" height="15" fill="rgb(207,83,51)" fg:x="363802" fg:w="430"/><text x="96.1403%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (168 samples, 0.04%)</title><rect x="95.9593%" y="885" width="0.0443%" height="15" fill="rgb(225,63,43)" fg:x="364064" fg:w="168"/><text x="96.2093%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (168 samples, 0.04%)</title><rect x="95.9593%" y="869" width="0.0443%" height="15" fill="rgb(207,57,36)" fg:x="364064" fg:w="168"/><text x="96.2093%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (168 samples, 0.04%)</title><rect x="95.9593%" y="853" width="0.0443%" height="15" fill="rgb(216,99,33)" fg:x="364064" fg:w="168"/><text x="96.2093%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (518 samples, 0.14%)</title><rect x="95.8903%" y="917" width="0.1365%" height="15" fill="rgb(225,42,16)" fg:x="363802" fg:w="518"/><text x="96.1403%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (88 samples, 0.02%)</title><rect x="96.0036%" y="901" width="0.0232%" height="15" fill="rgb(220,201,45)" fg:x="364232" fg:w="88"/><text x="96.2536%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (88 samples, 0.02%)</title><rect x="96.0036%" y="885" width="0.0232%" height="15" fill="rgb(225,33,4)" fg:x="364232" fg:w="88"/><text x="96.2536%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (88 samples, 0.02%)</title><rect x="96.0036%" y="869" width="0.0232%" height="15" fill="rgb(224,33,50)" fg:x="364232" fg:w="88"/><text x="96.2536%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (41 samples, 0.01%)</title><rect x="96.0268%" y="917" width="0.0108%" height="15" fill="rgb(246,198,51)" fg:x="364320" fg:w="41"/><text x="96.2768%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (41 samples, 0.01%)</title><rect x="96.0268%" y="901" width="0.0108%" height="15" fill="rgb(205,22,4)" fg:x="364320" fg:w="41"/><text x="96.2768%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (56 samples, 0.01%)</title><rect x="96.0379%" y="869" width="0.0148%" height="15" fill="rgb(206,3,8)" fg:x="364362" fg:w="56"/><text x="96.2879%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,095 samples, 1.34%)</title><rect x="95.0023%" y="997" width="1.3429%" height="15" fill="rgb(251,23,15)" fg:x="360433" fg:w="5095"/><text x="95.2523%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,095 samples, 1.34%)</title><rect x="95.0023%" y="981" width="1.3429%" height="15" fill="rgb(252,88,28)" fg:x="360433" fg:w="5095"/><text x="95.2523%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,095 samples, 1.34%)</title><rect x="95.0023%" y="965" width="1.3429%" height="15" fill="rgb(212,127,14)" fg:x="360433" fg:w="5095"/><text x="95.2523%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,809 samples, 0.74%)</title><rect x="95.6048%" y="949" width="0.7404%" height="15" fill="rgb(247,145,37)" fg:x="362719" fg:w="2809"/><text x="95.8548%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,809 samples, 0.74%)</title><rect x="95.6048%" y="933" width="0.7404%" height="15" fill="rgb(209,117,53)" fg:x="362719" fg:w="2809"/><text x="95.8548%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,167 samples, 0.31%)</title><rect x="96.0376%" y="917" width="0.3076%" height="15" fill="rgb(212,90,42)" fg:x="364361" fg:w="1167"/><text x="96.2876%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,167 samples, 0.31%)</title><rect x="96.0376%" y="901" width="0.3076%" height="15" fill="rgb(218,164,37)" fg:x="364361" fg:w="1167"/><text x="96.2876%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,167 samples, 0.31%)</title><rect x="96.0376%" y="885" width="0.3076%" height="15" fill="rgb(246,65,34)" fg:x="364361" fg:w="1167"/><text x="96.2876%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,105 samples, 0.29%)</title><rect x="96.0540%" y="869" width="0.2913%" height="15" fill="rgb(231,100,33)" fg:x="364423" fg:w="1105"/><text x="96.3040%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1,105 samples, 0.29%)</title><rect x="96.0540%" y="853" width="0.2913%" height="15" fill="rgb(228,126,14)" fg:x="364423" fg:w="1105"/><text x="96.3040%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1,105 samples, 0.29%)</title><rect x="96.0540%" y="837" width="0.2913%" height="15" fill="rgb(215,173,21)" fg:x="364423" fg:w="1105"/><text x="96.3040%" y="847.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1,105 samples, 0.29%)</title><rect x="96.0540%" y="821" width="0.2913%" height="15" fill="rgb(210,6,40)" fg:x="364423" fg:w="1105"/><text x="96.3040%" y="831.50"></text></g><g><title>core::mem::replace (72 samples, 0.02%)</title><rect x="96.4037%" y="965" width="0.0190%" height="15" fill="rgb(212,48,18)" fg:x="365750" fg:w="72"/><text x="96.6537%" y="975.50"></text></g><g><title>core::ptr::write (72 samples, 0.02%)</title><rect x="96.4037%" y="949" width="0.0190%" height="15" fill="rgb(230,214,11)" fg:x="365750" fg:w="72"/><text x="96.6537%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (125 samples, 0.03%)</title><rect x="96.4976%" y="885" width="0.0329%" height="15" fill="rgb(254,105,39)" fg:x="366106" fg:w="125"/><text x="96.7476%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (239 samples, 0.06%)</title><rect x="96.4833%" y="901" width="0.0630%" height="15" fill="rgb(245,158,5)" fg:x="366052" fg:w="239"/><text x="96.7333%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (60 samples, 0.02%)</title><rect x="96.5305%" y="885" width="0.0158%" height="15" fill="rgb(249,208,11)" fg:x="366231" fg:w="60"/><text x="96.7805%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (222 samples, 0.06%)</title><rect x="96.5911%" y="885" width="0.0585%" height="15" fill="rgb(210,39,28)" fg:x="366461" fg:w="222"/><text x="96.8411%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1,036 samples, 0.27%)</title><rect x="96.4364%" y="949" width="0.2731%" height="15" fill="rgb(211,56,53)" fg:x="365874" fg:w="1036"/><text x="96.6864%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,036 samples, 0.27%)</title><rect x="96.4364%" y="933" width="0.2731%" height="15" fill="rgb(226,201,30)" fg:x="365874" fg:w="1036"/><text x="96.6864%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,036 samples, 0.27%)</title><rect x="96.4364%" y="917" width="0.2731%" height="15" fill="rgb(239,101,34)" fg:x="365874" fg:w="1036"/><text x="96.6864%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (619 samples, 0.16%)</title><rect x="96.5463%" y="901" width="0.1632%" height="15" fill="rgb(226,209,5)" fg:x="366291" fg:w="619"/><text x="96.7963%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (227 samples, 0.06%)</title><rect x="96.6497%" y="885" width="0.0598%" height="15" fill="rgb(250,105,47)" fg:x="366683" fg:w="227"/><text x="96.8997%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (243 samples, 0.06%)</title><rect x="96.7095%" y="949" width="0.0640%" height="15" fill="rgb(230,72,3)" fg:x="366910" fg:w="243"/><text x="96.9595%" y="959.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (178 samples, 0.05%)</title><rect x="96.7266%" y="933" width="0.0469%" height="15" fill="rgb(232,218,39)" fg:x="366975" fg:w="178"/><text x="96.9766%" y="943.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (114 samples, 0.03%)</title><rect x="96.7435%" y="917" width="0.0300%" height="15" fill="rgb(248,166,6)" fg:x="367039" fg:w="114"/><text x="96.9935%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (114 samples, 0.03%)</title><rect x="96.7435%" y="901" width="0.0300%" height="15" fill="rgb(247,89,20)" fg:x="367039" fg:w="114"/><text x="96.9935%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (75 samples, 0.02%)</title><rect x="96.9235%" y="853" width="0.0198%" height="15" fill="rgb(248,130,54)" fg:x="367722" fg:w="75"/><text x="97.1735%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (233 samples, 0.06%)</title><rect x="96.8969%" y="869" width="0.0614%" height="15" fill="rgb(234,196,4)" fg:x="367621" fg:w="233"/><text x="97.1469%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (57 samples, 0.02%)</title><rect x="96.9433%" y="853" width="0.0150%" height="15" fill="rgb(250,143,31)" fg:x="367797" fg:w="57"/><text x="97.1933%" y="863.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,154 samples, 0.57%)</title><rect x="96.4227%" y="965" width="0.5677%" height="15" fill="rgb(211,110,34)" fg:x="365822" fg:w="2154"/><text x="96.6727%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (823 samples, 0.22%)</title><rect x="96.7735%" y="949" width="0.2169%" height="15" fill="rgb(215,124,48)" fg:x="367153" fg:w="823"/><text x="97.0235%" y="959.50"></text></g><g><title>core::hash::Hasher::write_usize (810 samples, 0.21%)</title><rect x="96.7770%" y="933" width="0.2135%" height="15" fill="rgb(216,46,13)" fg:x="367166" fg:w="810"/><text x="97.0270%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (749 samples, 0.20%)</title><rect x="96.7930%" y="917" width="0.1974%" height="15" fill="rgb(205,184,25)" fg:x="367227" fg:w="749"/><text x="97.0430%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (749 samples, 0.20%)</title><rect x="96.7930%" y="901" width="0.1974%" height="15" fill="rgb(228,1,10)" fg:x="367227" fg:w="749"/><text x="97.0430%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (749 samples, 0.20%)</title><rect x="96.7930%" y="885" width="0.1974%" height="15" fill="rgb(213,116,27)" fg:x="367227" fg:w="749"/><text x="97.0430%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (122 samples, 0.03%)</title><rect x="96.9583%" y="869" width="0.0322%" height="15" fill="rgb(241,95,50)" fg:x="367854" fg:w="122"/><text x="97.2083%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.03%)</title><rect x="97.0632%" y="917" width="0.0343%" height="15" fill="rgb(238,48,32)" fg:x="368252" fg:w="130"/><text x="97.3132%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.02%)</title><rect x="97.0817%" y="901" width="0.0158%" height="15" fill="rgb(235,113,49)" fg:x="368322" fg:w="60"/><text x="97.3317%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (60 samples, 0.02%)</title><rect x="97.0817%" y="885" width="0.0158%" height="15" fill="rgb(205,127,43)" fg:x="368322" fg:w="60"/><text x="97.3317%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (203 samples, 0.05%)</title><rect x="97.0632%" y="933" width="0.0535%" height="15" fill="rgb(250,162,2)" fg:x="368252" fg:w="203"/><text x="97.3132%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (73 samples, 0.02%)</title><rect x="97.0975%" y="917" width="0.0192%" height="15" fill="rgb(220,13,41)" fg:x="368382" fg:w="73"/><text x="97.3475%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (73 samples, 0.02%)</title><rect x="97.0975%" y="901" width="0.0192%" height="15" fill="rgb(249,221,25)" fg:x="368382" fg:w="73"/><text x="97.3475%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (73 samples, 0.02%)</title><rect x="97.0975%" y="885" width="0.0192%" height="15" fill="rgb(215,208,19)" fg:x="368382" fg:w="73"/><text x="97.3475%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (45 samples, 0.01%)</title><rect x="97.1167%" y="933" width="0.0119%" height="15" fill="rgb(236,175,2)" fg:x="368455" fg:w="45"/><text x="97.3667%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (45 samples, 0.01%)</title><rect x="97.1167%" y="917" width="0.0119%" height="15" fill="rgb(241,52,2)" fg:x="368455" fg:w="45"/><text x="97.3667%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (55 samples, 0.01%)</title><rect x="97.1286%" y="885" width="0.0145%" height="15" fill="rgb(248,140,14)" fg:x="368500" fg:w="55"/><text x="97.3786%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (59 samples, 0.02%)</title><rect x="97.1454%" y="885" width="0.0156%" height="15" fill="rgb(253,22,42)" fg:x="368564" fg:w="59"/><text x="97.3954%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (59 samples, 0.02%)</title><rect x="97.1454%" y="869" width="0.0156%" height="15" fill="rgb(234,61,47)" fg:x="368564" fg:w="59"/><text x="97.3954%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.02%)</title><rect x="97.1454%" y="853" width="0.0156%" height="15" fill="rgb(208,226,15)" fg:x="368564" fg:w="59"/><text x="97.3954%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (742 samples, 0.20%)</title><rect x="96.9905%" y="965" width="0.1956%" height="15" fill="rgb(217,221,4)" fg:x="367976" fg:w="742"/><text x="97.2405%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (742 samples, 0.20%)</title><rect x="96.9905%" y="949" width="0.1956%" height="15" fill="rgb(212,174,34)" fg:x="367976" fg:w="742"/><text x="97.2405%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (218 samples, 0.06%)</title><rect x="97.1286%" y="933" width="0.0575%" height="15" fill="rgb(253,83,4)" fg:x="368500" fg:w="218"/><text x="97.3786%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (218 samples, 0.06%)</title><rect x="97.1286%" y="917" width="0.0575%" height="15" fill="rgb(250,195,49)" fg:x="368500" fg:w="218"/><text x="97.3786%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (218 samples, 0.06%)</title><rect x="97.1286%" y="901" width="0.0575%" height="15" fill="rgb(241,192,25)" fg:x="368500" fg:w="218"/><text x="97.3786%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (95 samples, 0.03%)</title><rect x="97.1610%" y="885" width="0.0250%" height="15" fill="rgb(208,124,10)" fg:x="368623" fg:w="95"/><text x="97.4110%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (95 samples, 0.03%)</title><rect x="97.1610%" y="869" width="0.0250%" height="15" fill="rgb(222,33,0)" fg:x="368623" fg:w="95"/><text x="97.4110%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (95 samples, 0.03%)</title><rect x="97.1610%" y="853" width="0.0250%" height="15" fill="rgb(234,209,28)" fg:x="368623" fg:w="95"/><text x="97.4110%" y="863.50"></text></g><g><title>core::core_arch::simd::i8x16::new (95 samples, 0.03%)</title><rect x="97.1610%" y="837" width="0.0250%" height="15" fill="rgb(224,11,23)" fg:x="368623" fg:w="95"/><text x="97.4110%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (323 samples, 0.09%)</title><rect x="97.2024%" y="949" width="0.0851%" height="15" fill="rgb(232,99,1)" fg:x="368780" fg:w="323"/><text x="97.4524%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (323 samples, 0.09%)</title><rect x="97.2024%" y="933" width="0.0851%" height="15" fill="rgb(237,95,45)" fg:x="368780" fg:w="323"/><text x="97.4524%" y="943.50"></text></g><g><title>core::ptr::write (323 samples, 0.09%)</title><rect x="97.2024%" y="917" width="0.0851%" height="15" fill="rgb(208,109,11)" fg:x="368780" fg:w="323"/><text x="97.4524%" y="927.50"></text></g><g><title>[unknown] (298 samples, 0.08%)</title><rect x="97.2090%" y="901" width="0.0785%" height="15" fill="rgb(216,190,48)" fg:x="368805" fg:w="298"/><text x="97.4590%" y="911.50"></text></g><g><title>[unknown] (298 samples, 0.08%)</title><rect x="97.2090%" y="885" width="0.0785%" height="15" fill="rgb(251,171,36)" fg:x="368805" fg:w="298"/><text x="97.4590%" y="895.50"></text></g><g><title>[unknown] (298 samples, 0.08%)</title><rect x="97.2090%" y="869" width="0.0785%" height="15" fill="rgb(230,62,22)" fg:x="368805" fg:w="298"/><text x="97.4590%" y="879.50"></text></g><g><title>[unknown] (298 samples, 0.08%)</title><rect x="97.2090%" y="853" width="0.0785%" height="15" fill="rgb(225,114,35)" fg:x="368805" fg:w="298"/><text x="97.4590%" y="863.50"></text></g><g><title>[unknown] (298 samples, 0.08%)</title><rect x="97.2090%" y="837" width="0.0785%" height="15" fill="rgb(215,118,42)" fg:x="368805" fg:w="298"/><text x="97.4590%" y="847.50"></text></g><g><title>[unknown] (297 samples, 0.08%)</title><rect x="97.2092%" y="821" width="0.0783%" height="15" fill="rgb(243,119,21)" fg:x="368806" fg:w="297"/><text x="97.4592%" y="831.50"></text></g><g><title>[unknown] (297 samples, 0.08%)</title><rect x="97.2092%" y="805" width="0.0783%" height="15" fill="rgb(252,177,53)" fg:x="368806" fg:w="297"/><text x="97.4592%" y="815.50"></text></g><g><title>[unknown] (295 samples, 0.08%)</title><rect x="97.2098%" y="789" width="0.0778%" height="15" fill="rgb(237,209,29)" fg:x="368808" fg:w="295"/><text x="97.4598%" y="799.50"></text></g><g><title>[unknown] (238 samples, 0.06%)</title><rect x="97.2248%" y="773" width="0.0627%" height="15" fill="rgb(212,65,23)" fg:x="368865" fg:w="238"/><text x="97.4748%" y="783.50"></text></g><g><title>[unknown] (238 samples, 0.06%)</title><rect x="97.2248%" y="757" width="0.0627%" height="15" fill="rgb(230,222,46)" fg:x="368865" fg:w="238"/><text x="97.4748%" y="767.50"></text></g><g><title>hashbrown::raw::is_full (52 samples, 0.01%)</title><rect x="97.3002%" y="933" width="0.0137%" height="15" fill="rgb(215,135,32)" fg:x="369151" fg:w="52"/><text x="97.5502%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (93 samples, 0.02%)</title><rect x="97.2896%" y="949" width="0.0245%" height="15" fill="rgb(246,101,22)" fg:x="369111" fg:w="93"/><text x="97.5396%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3,711 samples, 0.98%)</title><rect x="96.3452%" y="997" width="0.9781%" height="15" fill="rgb(206,107,13)" fg:x="365528" fg:w="3711"/><text x="96.5952%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,664 samples, 0.97%)</title><rect x="96.3576%" y="981" width="0.9658%" height="15" fill="rgb(250,100,44)" fg:x="365575" fg:w="3664"/><text x="96.6076%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (521 samples, 0.14%)</title><rect x="97.1860%" y="965" width="0.1373%" height="15" fill="rgb(231,147,38)" fg:x="368718" fg:w="521"/><text x="97.4360%" y="975.50"></text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (9,020 samples, 2.38%)</title><rect x="94.9554%" y="1093" width="2.3775%" height="15" fill="rgb(229,8,40)" fg:x="360255" fg:w="9020"/><text x="95.2054%" y="1103.50">&lt;c..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::{{closure}} (9,020 samples, 2.38%)</title><rect x="94.9554%" y="1077" width="2.3775%" height="15" fill="rgb(221,135,30)" fg:x="360255" fg:w="9020"/><text x="95.2054%" y="1087.50">cr..</text></g><g><title>bench_ex15::criterion_benchmark::{{closure}} (9,020 samples, 2.38%)</title><rect x="94.9554%" y="1061" width="2.3775%" height="15" fill="rgb(249,193,18)" fg:x="360255" fg:w="9020"/><text x="95.2054%" y="1071.50">be..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (9,020 samples, 2.38%)</title><rect x="94.9554%" y="1045" width="2.3775%" height="15" fill="rgb(209,133,39)" fg:x="360255" fg:w="9020"/><text x="95.2054%" y="1055.50">cr..</text></g><g><title>bench_ex15::criterion_benchmark::{{closure}}::{{closure}} (9,020 samples, 2.38%)</title><rect x="94.9554%" y="1029" width="2.3775%" height="15" fill="rgb(232,100,14)" fg:x="360255" fg:w="9020"/><text x="95.2054%" y="1039.50">be..</text></g><g><title>ex15::game (9,020 samples, 2.38%)</title><rect x="94.9554%" y="1013" width="2.3775%" height="15" fill="rgb(224,185,1)" fg:x="360255" fg:w="9020"/><text x="95.2054%" y="1023.50">ex..</text></g><g><title>_start (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1397" width="96.9417%" height="15" fill="rgb(223,139,8)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1407.50">_start</text></g><g><title>__libc_start_main (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1381" width="96.9417%" height="15" fill="rgb(232,213,38)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1391.50">__libc_start_main</text></g><g><title>main (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1365" width="96.9417%" height="15" fill="rgb(207,94,22)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1375.50">main</text></g><g><title>std::rt::lang_start_internal (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1349" width="96.9417%" height="15" fill="rgb(219,183,54)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1359.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1333" width="96.9417%" height="15" fill="rgb(216,185,54)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1343.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1317" width="96.9417%" height="15" fill="rgb(254,217,39)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1327.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1301" width="96.9417%" height="15" fill="rgb(240,178,23)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1311.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1285" width="96.9417%" height="15" fill="rgb(218,11,47)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1295.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1269" width="96.9417%" height="15" fill="rgb(218,51,51)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1279.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1253" width="96.9417%" height="15" fill="rgb(238,126,27)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1263.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1237" width="96.9417%" height="15" fill="rgb(249,202,22)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1247.50">core::ops::function::FnOnce::call_once</text></g><g><title>bench_ex15::main (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1221" width="96.9417%" height="15" fill="rgb(254,195,49)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1231.50">bench_ex15::main</text></g><g><title>bench_ex15::benches (367,791 samples, 96.94%)</title><rect x="0.3914%" y="1205" width="96.9417%" height="15" fill="rgb(208,123,14)" fg:x="1485" fg:w="367791"/><text x="0.6414%" y="1215.50">bench_ex15::benches</text></g><g><title>bench_ex15::criterion_benchmark (367,789 samples, 96.94%)</title><rect x="0.3919%" y="1189" width="96.9412%" height="15" fill="rgb(224,200,8)" fg:x="1487" fg:w="367789"/><text x="0.6419%" y="1199.50">bench_ex15::criterion_benchmark</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (367,789 samples, 96.94%)</title><rect x="0.3919%" y="1173" width="96.9412%" height="15" fill="rgb(217,61,36)" fg:x="1487" fg:w="367789"/><text x="0.6419%" y="1183.50">criterion::Criterion&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (367,789 samples, 96.94%)</title><rect x="0.3919%" y="1157" width="96.9412%" height="15" fill="rgb(206,35,45)" fg:x="1487" fg:w="367789"/><text x="0.6419%" y="1167.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (367,789 samples, 96.94%)</title><rect x="0.3919%" y="1141" width="96.9412%" height="15" fill="rgb(217,65,33)" fg:x="1487" fg:w="367789"/><text x="0.6419%" y="1151.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench</text></g><g><title>criterion::analysis::common (367,789 samples, 96.94%)</title><rect x="0.3919%" y="1125" width="96.9412%" height="15" fill="rgb(222,158,48)" fg:x="1487" fg:w="367789"/><text x="0.6419%" y="1135.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (367,778 samples, 96.94%)</title><rect x="0.3948%" y="1109" width="96.9383%" height="15" fill="rgb(254,2,54)" fg:x="1498" fg:w="367778"/><text x="0.6448%" y="1119.50">criterion::routine::Routine::sample</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.01%)</title><rect x="97.3389%" y="421" width="0.0127%" height="15" fill="rgb(250,143,38)" fg:x="369298" fg:w="48"/><text x="97.5889%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (523 samples, 0.14%)</title><rect x="97.3545%" y="389" width="0.1379%" height="15" fill="rgb(248,25,0)" fg:x="369357" fg:w="523"/><text x="97.6045%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (523 samples, 0.14%)</title><rect x="97.3545%" y="373" width="0.1379%" height="15" fill="rgb(206,152,27)" fg:x="369357" fg:w="523"/><text x="97.6045%" y="383.50"></text></g><g><title>exp (492 samples, 0.13%)</title><rect x="97.3626%" y="357" width="0.1297%" height="15" fill="rgb(240,77,30)" fg:x="369388" fg:w="492"/><text x="97.6126%" y="367.50"></text></g><g><title>[libm-2.31.so] (379 samples, 0.10%)</title><rect x="97.3924%" y="341" width="0.0999%" height="15" fill="rgb(231,5,3)" fg:x="369501" fg:w="379"/><text x="97.6424%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (139 samples, 0.04%)</title><rect x="97.4926%" y="389" width="0.0366%" height="15" fill="rgb(207,226,32)" fg:x="369881" fg:w="139"/><text x="97.7426%" y="399.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (139 samples, 0.04%)</title><rect x="97.4926%" y="373" width="0.0366%" height="15" fill="rgb(222,207,47)" fg:x="369881" fg:w="139"/><text x="97.7426%" y="383.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (675 samples, 0.18%)</title><rect x="97.3516%" y="405" width="0.1779%" height="15" fill="rgb(229,115,45)" fg:x="369346" fg:w="675"/><text x="97.6016%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (151 samples, 0.04%)</title><rect x="97.5295%" y="405" width="0.0398%" height="15" fill="rgb(224,191,6)" fg:x="370021" fg:w="151"/><text x="97.7795%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (894 samples, 0.24%)</title><rect x="97.3339%" y="565" width="0.2356%" height="15" fill="rgb(230,227,24)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="575.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (894 samples, 0.24%)</title><rect x="97.3339%" y="549" width="0.2356%" height="15" fill="rgb(228,80,19)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (894 samples, 0.24%)</title><rect x="97.3339%" y="533" width="0.2356%" height="15" fill="rgb(247,229,0)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (894 samples, 0.24%)</title><rect x="97.3339%" y="517" width="0.2356%" height="15" fill="rgb(237,194,15)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (894 samples, 0.24%)</title><rect x="97.3339%" y="501" width="0.2356%" height="15" fill="rgb(219,203,20)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (894 samples, 0.24%)</title><rect x="97.3339%" y="485" width="0.2356%" height="15" fill="rgb(234,128,8)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (894 samples, 0.24%)</title><rect x="97.3339%" y="469" width="0.2356%" height="15" fill="rgb(248,202,8)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (894 samples, 0.24%)</title><rect x="97.3339%" y="453" width="0.2356%" height="15" fill="rgb(206,104,37)" fg:x="369279" fg:w="894"/><text x="97.5839%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (875 samples, 0.23%)</title><rect x="97.3389%" y="437" width="0.2306%" height="15" fill="rgb(223,8,27)" fg:x="369298" fg:w="875"/><text x="97.5889%" y="447.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (827 samples, 0.22%)</title><rect x="97.3516%" y="421" width="0.2180%" height="15" fill="rgb(216,217,28)" fg:x="369346" fg:w="827"/><text x="97.6016%" y="431.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (901 samples, 0.24%)</title><rect x="97.3339%" y="645" width="0.2375%" height="15" fill="rgb(249,199,1)" fg:x="369279" fg:w="901"/><text x="97.5839%" y="655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (901 samples, 0.24%)</title><rect x="97.3339%" y="629" width="0.2375%" height="15" fill="rgb(240,85,17)" fg:x="369279" fg:w="901"/><text x="97.5839%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (901 samples, 0.24%)</title><rect x="97.3339%" y="613" width="0.2375%" height="15" fill="rgb(206,108,45)" fg:x="369279" fg:w="901"/><text x="97.5839%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (901 samples, 0.24%)</title><rect x="97.3339%" y="597" width="0.2375%" height="15" fill="rgb(245,210,41)" fg:x="369279" fg:w="901"/><text x="97.5839%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (901 samples, 0.24%)</title><rect x="97.3339%" y="581" width="0.2375%" height="15" fill="rgb(206,13,37)" fg:x="369279" fg:w="901"/><text x="97.5839%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.01%)</title><rect x="97.5746%" y="357" width="0.0124%" height="15" fill="rgb(250,61,18)" fg:x="370192" fg:w="47"/><text x="97.8246%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (446 samples, 0.12%)</title><rect x="97.5906%" y="325" width="0.1176%" height="15" fill="rgb(235,172,48)" fg:x="370253" fg:w="446"/><text x="97.8406%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (446 samples, 0.12%)</title><rect x="97.5906%" y="309" width="0.1176%" height="15" fill="rgb(249,201,17)" fg:x="370253" fg:w="446"/><text x="97.8406%" y="319.50"></text></g><g><title>exp (414 samples, 0.11%)</title><rect x="97.5991%" y="293" width="0.1091%" height="15" fill="rgb(219,208,6)" fg:x="370285" fg:w="414"/><text x="97.8491%" y="303.50"></text></g><g><title>[libm-2.31.so] (335 samples, 0.09%)</title><rect x="97.6199%" y="277" width="0.0883%" height="15" fill="rgb(248,31,23)" fg:x="370364" fg:w="335"/><text x="97.8699%" y="287.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (576 samples, 0.15%)</title><rect x="97.5869%" y="341" width="0.1518%" height="15" fill="rgb(245,15,42)" fg:x="370239" fg:w="576"/><text x="97.8369%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (113 samples, 0.03%)</title><rect x="97.7090%" y="325" width="0.0298%" height="15" fill="rgb(222,217,39)" fg:x="370702" fg:w="113"/><text x="97.9590%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (113 samples, 0.03%)</title><rect x="97.7090%" y="309" width="0.0298%" height="15" fill="rgb(210,219,27)" fg:x="370702" fg:w="113"/><text x="97.9590%" y="319.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (787 samples, 0.21%)</title><rect x="97.5714%" y="501" width="0.2074%" height="15" fill="rgb(252,166,36)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (787 samples, 0.21%)</title><rect x="97.5714%" y="485" width="0.2074%" height="15" fill="rgb(245,132,34)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (787 samples, 0.21%)</title><rect x="97.5714%" y="469" width="0.2074%" height="15" fill="rgb(236,54,3)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (787 samples, 0.21%)</title><rect x="97.5714%" y="453" width="0.2074%" height="15" fill="rgb(241,173,43)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (787 samples, 0.21%)</title><rect x="97.5714%" y="437" width="0.2074%" height="15" fill="rgb(215,190,9)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (787 samples, 0.21%)</title><rect x="97.5714%" y="421" width="0.2074%" height="15" fill="rgb(242,101,16)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (787 samples, 0.21%)</title><rect x="97.5714%" y="405" width="0.2074%" height="15" fill="rgb(223,190,21)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (787 samples, 0.21%)</title><rect x="97.5714%" y="389" width="0.2074%" height="15" fill="rgb(215,228,25)" fg:x="370180" fg:w="787"/><text x="97.8214%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (775 samples, 0.20%)</title><rect x="97.5746%" y="373" width="0.2043%" height="15" fill="rgb(225,36,22)" fg:x="370192" fg:w="775"/><text x="97.8246%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (728 samples, 0.19%)</title><rect x="97.5869%" y="357" width="0.1919%" height="15" fill="rgb(251,106,46)" fg:x="370239" fg:w="728"/><text x="97.8369%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (152 samples, 0.04%)</title><rect x="97.7388%" y="341" width="0.0401%" height="15" fill="rgb(208,90,1)" fg:x="370815" fg:w="152"/><text x="97.9888%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,694 samples, 0.45%)</title><rect x="97.3336%" y="757" width="0.4465%" height="15" fill="rgb(243,10,4)" fg:x="369278" fg:w="1694"/><text x="97.5836%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,694 samples, 0.45%)</title><rect x="97.3336%" y="741" width="0.4465%" height="15" fill="rgb(212,137,27)" fg:x="369278" fg:w="1694"/><text x="97.5836%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,694 samples, 0.45%)</title><rect x="97.3336%" y="725" width="0.4465%" height="15" fill="rgb(231,220,49)" fg:x="369278" fg:w="1694"/><text x="97.5836%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,694 samples, 0.45%)</title><rect x="97.3336%" y="709" width="0.4465%" height="15" fill="rgb(237,96,20)" fg:x="369278" fg:w="1694"/><text x="97.5836%" y="719.50"></text></g><g><title>rayon_core::join::join_context (1,693 samples, 0.45%)</title><rect x="97.3339%" y="693" width="0.4462%" height="15" fill="rgb(239,229,30)" fg:x="369279" fg:w="1693"/><text x="97.5839%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (1,693 samples, 0.45%)</title><rect x="97.3339%" y="677" width="0.4462%" height="15" fill="rgb(219,65,33)" fg:x="369279" fg:w="1693"/><text x="97.5839%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,693 samples, 0.45%)</title><rect x="97.3339%" y="661" width="0.4462%" height="15" fill="rgb(243,134,7)" fg:x="369279" fg:w="1693"/><text x="97.5839%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (792 samples, 0.21%)</title><rect x="97.5714%" y="645" width="0.2088%" height="15" fill="rgb(216,177,54)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="655.50"></text></g><g><title>std::panic::catch_unwind (792 samples, 0.21%)</title><rect x="97.5714%" y="629" width="0.2088%" height="15" fill="rgb(211,160,20)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="639.50"></text></g><g><title>std::panicking::try (792 samples, 0.21%)</title><rect x="97.5714%" y="613" width="0.2088%" height="15" fill="rgb(239,85,39)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="623.50"></text></g><g><title>std::panicking::try::do_call (792 samples, 0.21%)</title><rect x="97.5714%" y="597" width="0.2088%" height="15" fill="rgb(232,125,22)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="607.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (792 samples, 0.21%)</title><rect x="97.5714%" y="581" width="0.2088%" height="15" fill="rgb(244,57,34)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (792 samples, 0.21%)</title><rect x="97.5714%" y="565" width="0.2088%" height="15" fill="rgb(214,203,32)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (792 samples, 0.21%)</title><rect x="97.5714%" y="549" width="0.2088%" height="15" fill="rgb(207,58,43)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (792 samples, 0.21%)</title><rect x="97.5714%" y="533" width="0.2088%" height="15" fill="rgb(215,193,15)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (792 samples, 0.21%)</title><rect x="97.5714%" y="517" width="0.2088%" height="15" fill="rgb(232,15,44)" fg:x="370180" fg:w="792"/><text x="97.8214%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.01%)</title><rect x="97.7836%" y="357" width="0.0103%" height="15" fill="rgb(212,3,48)" fg:x="370985" fg:w="39"/><text x="98.0336%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (363 samples, 0.10%)</title><rect x="97.7996%" y="325" width="0.0957%" height="15" fill="rgb(218,128,7)" fg:x="371046" fg:w="363"/><text x="98.0496%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (363 samples, 0.10%)</title><rect x="97.7996%" y="309" width="0.0957%" height="15" fill="rgb(226,216,39)" fg:x="371046" fg:w="363"/><text x="98.0496%" y="319.50"></text></g><g><title>exp (342 samples, 0.09%)</title><rect x="97.8052%" y="293" width="0.0901%" height="15" fill="rgb(243,47,51)" fg:x="371067" fg:w="342"/><text x="98.0552%" y="303.50"></text></g><g><title>[libm-2.31.so] (264 samples, 0.07%)</title><rect x="97.8257%" y="277" width="0.0696%" height="15" fill="rgb(241,183,40)" fg:x="371145" fg:w="264"/><text x="98.0757%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (75 samples, 0.02%)</title><rect x="97.8953%" y="325" width="0.0198%" height="15" fill="rgb(231,217,32)" fg:x="371409" fg:w="75"/><text x="98.1453%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (75 samples, 0.02%)</title><rect x="97.8953%" y="309" width="0.0198%" height="15" fill="rgb(229,61,38)" fg:x="371409" fg:w="75"/><text x="98.1453%" y="319.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (461 samples, 0.12%)</title><rect x="97.7939%" y="341" width="0.1215%" height="15" fill="rgb(225,210,5)" fg:x="371024" fg:w="461"/><text x="98.0439%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (681 samples, 0.18%)</title><rect x="97.7801%" y="501" width="0.1795%" height="15" fill="rgb(231,79,45)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (681 samples, 0.18%)</title><rect x="97.7801%" y="485" width="0.1795%" height="15" fill="rgb(224,100,7)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (681 samples, 0.18%)</title><rect x="97.7801%" y="469" width="0.1795%" height="15" fill="rgb(241,198,18)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (681 samples, 0.18%)</title><rect x="97.7801%" y="453" width="0.1795%" height="15" fill="rgb(252,97,53)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (681 samples, 0.18%)</title><rect x="97.7801%" y="437" width="0.1795%" height="15" fill="rgb(220,88,7)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (681 samples, 0.18%)</title><rect x="97.7801%" y="421" width="0.1795%" height="15" fill="rgb(213,176,14)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (681 samples, 0.18%)</title><rect x="97.7801%" y="405" width="0.1795%" height="15" fill="rgb(246,73,7)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (681 samples, 0.18%)</title><rect x="97.7801%" y="389" width="0.1795%" height="15" fill="rgb(245,64,36)" fg:x="370972" fg:w="681"/><text x="98.0301%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (668 samples, 0.18%)</title><rect x="97.7836%" y="373" width="0.1761%" height="15" fill="rgb(245,80,10)" fg:x="370985" fg:w="668"/><text x="98.0336%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (629 samples, 0.17%)</title><rect x="97.7939%" y="357" width="0.1658%" height="15" fill="rgb(232,107,50)" fg:x="371024" fg:w="629"/><text x="98.0439%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (168 samples, 0.04%)</title><rect x="97.9154%" y="341" width="0.0443%" height="15" fill="rgb(253,3,0)" fg:x="371485" fg:w="168"/><text x="98.1654%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (686 samples, 0.18%)</title><rect x="97.7801%" y="581" width="0.1808%" height="15" fill="rgb(212,99,53)" fg:x="370972" fg:w="686"/><text x="98.0301%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (686 samples, 0.18%)</title><rect x="97.7801%" y="565" width="0.1808%" height="15" fill="rgb(249,111,54)" fg:x="370972" fg:w="686"/><text x="98.0301%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (686 samples, 0.18%)</title><rect x="97.7801%" y="549" width="0.1808%" height="15" fill="rgb(249,55,30)" fg:x="370972" fg:w="686"/><text x="98.0301%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (686 samples, 0.18%)</title><rect x="97.7801%" y="533" width="0.1808%" height="15" fill="rgb(237,47,42)" fg:x="370972" fg:w="686"/><text x="98.0301%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (686 samples, 0.18%)</title><rect x="97.7801%" y="517" width="0.1808%" height="15" fill="rgb(211,20,18)" fg:x="370972" fg:w="686"/><text x="98.0301%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.01%)</title><rect x="97.9652%" y="293" width="0.0140%" height="15" fill="rgb(231,203,46)" fg:x="371674" fg:w="53"/><text x="98.2152%" y="303.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (336 samples, 0.09%)</title><rect x="97.9818%" y="261" width="0.0886%" height="15" fill="rgb(237,142,3)" fg:x="371737" fg:w="336"/><text x="98.2318%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (336 samples, 0.09%)</title><rect x="97.9818%" y="245" width="0.0886%" height="15" fill="rgb(241,107,1)" fg:x="371737" fg:w="336"/><text x="98.2318%" y="255.50"></text></g><g><title>exp (298 samples, 0.08%)</title><rect x="97.9918%" y="229" width="0.0785%" height="15" fill="rgb(229,83,13)" fg:x="371775" fg:w="298"/><text x="98.2418%" y="239.50"></text></g><g><title>[libm-2.31.so] (221 samples, 0.06%)</title><rect x="98.0121%" y="213" width="0.0583%" height="15" fill="rgb(241,91,40)" fg:x="371852" fg:w="221"/><text x="98.2621%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (410 samples, 0.11%)</title><rect x="97.9791%" y="277" width="0.1081%" height="15" fill="rgb(225,3,45)" fg:x="371727" fg:w="410"/><text x="98.2291%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (64 samples, 0.02%)</title><rect x="98.0703%" y="261" width="0.0169%" height="15" fill="rgb(244,223,14)" fg:x="372073" fg:w="64"/><text x="98.3203%" y="271.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (64 samples, 0.02%)</title><rect x="98.0703%" y="245" width="0.0169%" height="15" fill="rgb(224,124,37)" fg:x="372073" fg:w="64"/><text x="98.3203%" y="255.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (628 samples, 0.17%)</title><rect x="97.9610%" y="437" width="0.1655%" height="15" fill="rgb(251,171,30)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (628 samples, 0.17%)</title><rect x="97.9610%" y="421" width="0.1655%" height="15" fill="rgb(236,46,54)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (628 samples, 0.17%)</title><rect x="97.9610%" y="405" width="0.1655%" height="15" fill="rgb(245,213,5)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (628 samples, 0.17%)</title><rect x="97.9610%" y="389" width="0.1655%" height="15" fill="rgb(230,144,27)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (628 samples, 0.17%)</title><rect x="97.9610%" y="373" width="0.1655%" height="15" fill="rgb(220,86,6)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (628 samples, 0.17%)</title><rect x="97.9610%" y="357" width="0.1655%" height="15" fill="rgb(240,20,13)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (628 samples, 0.17%)</title><rect x="97.9610%" y="341" width="0.1655%" height="15" fill="rgb(217,89,34)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="351.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (628 samples, 0.17%)</title><rect x="97.9610%" y="325" width="0.1655%" height="15" fill="rgb(229,13,5)" fg:x="371658" fg:w="628"/><text x="98.2110%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (612 samples, 0.16%)</title><rect x="97.9652%" y="309" width="0.1613%" height="15" fill="rgb(244,67,35)" fg:x="371674" fg:w="612"/><text x="98.2152%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (559 samples, 0.15%)</title><rect x="97.9791%" y="293" width="0.1473%" height="15" fill="rgb(221,40,2)" fg:x="371727" fg:w="559"/><text x="98.2291%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (149 samples, 0.04%)</title><rect x="98.0872%" y="277" width="0.0393%" height="15" fill="rgb(237,157,21)" fg:x="372137" fg:w="149"/><text x="98.3372%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3,016 samples, 0.79%)</title><rect x="97.3331%" y="869" width="0.7950%" height="15" fill="rgb(222,94,11)" fg:x="369276" fg:w="3016"/><text x="97.5831%" y="879.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3,016 samples, 0.79%)</title><rect x="97.3331%" y="853" width="0.7950%" height="15" fill="rgb(249,113,6)" fg:x="369276" fg:w="3016"/><text x="97.5831%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3,016 samples, 0.79%)</title><rect x="97.3331%" y="837" width="0.7950%" height="15" fill="rgb(238,137,36)" fg:x="369276" fg:w="3016"/><text x="97.5831%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,016 samples, 0.79%)</title><rect x="97.3331%" y="821" width="0.7950%" height="15" fill="rgb(210,102,26)" fg:x="369276" fg:w="3016"/><text x="97.5831%" y="831.50"></text></g><g><title>rayon_core::join::join_context (3,014 samples, 0.79%)</title><rect x="97.3336%" y="805" width="0.7944%" height="15" fill="rgb(218,30,30)" fg:x="369278" fg:w="3014"/><text x="97.5836%" y="815.50"></text></g><g><title>rayon_core::registry::in_worker (3,014 samples, 0.79%)</title><rect x="97.3336%" y="789" width="0.7944%" height="15" fill="rgb(214,67,26)" fg:x="369278" fg:w="3014"/><text x="97.5836%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3,014 samples, 0.79%)</title><rect x="97.3336%" y="773" width="0.7944%" height="15" fill="rgb(251,9,53)" fg:x="369278" fg:w="3014"/><text x="97.5836%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,320 samples, 0.35%)</title><rect x="97.7801%" y="757" width="0.3479%" height="15" fill="rgb(228,204,25)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1,320 samples, 0.35%)</title><rect x="97.7801%" y="741" width="0.3479%" height="15" fill="rgb(207,153,8)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="751.50"></text></g><g><title>std::panicking::try (1,320 samples, 0.35%)</title><rect x="97.7801%" y="725" width="0.3479%" height="15" fill="rgb(242,9,16)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1,320 samples, 0.35%)</title><rect x="97.7801%" y="709" width="0.3479%" height="15" fill="rgb(217,211,10)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="719.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,320 samples, 0.35%)</title><rect x="97.7801%" y="693" width="0.3479%" height="15" fill="rgb(219,228,52)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,320 samples, 0.35%)</title><rect x="97.7801%" y="677" width="0.3479%" height="15" fill="rgb(231,92,29)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,320 samples, 0.35%)</title><rect x="97.7801%" y="661" width="0.3479%" height="15" fill="rgb(232,8,23)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,320 samples, 0.35%)</title><rect x="97.7801%" y="645" width="0.3479%" height="15" fill="rgb(216,211,34)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="655.50"></text></g><g><title>rayon_core::join::join_context (1,320 samples, 0.35%)</title><rect x="97.7801%" y="629" width="0.3479%" height="15" fill="rgb(236,151,0)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (1,320 samples, 0.35%)</title><rect x="97.7801%" y="613" width="0.3479%" height="15" fill="rgb(209,168,3)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,320 samples, 0.35%)</title><rect x="97.7801%" y="597" width="0.3479%" height="15" fill="rgb(208,129,28)" fg:x="370972" fg:w="1320"/><text x="98.0301%" y="607.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (634 samples, 0.17%)</title><rect x="97.9610%" y="581" width="0.1671%" height="15" fill="rgb(229,78,22)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="591.50"></text></g><g><title>std::panic::catch_unwind (634 samples, 0.17%)</title><rect x="97.9610%" y="565" width="0.1671%" height="15" fill="rgb(228,187,13)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="575.50"></text></g><g><title>std::panicking::try (634 samples, 0.17%)</title><rect x="97.9610%" y="549" width="0.1671%" height="15" fill="rgb(240,119,24)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="559.50"></text></g><g><title>std::panicking::try::do_call (634 samples, 0.17%)</title><rect x="97.9610%" y="533" width="0.1671%" height="15" fill="rgb(209,194,42)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="543.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (634 samples, 0.17%)</title><rect x="97.9610%" y="517" width="0.1671%" height="15" fill="rgb(247,200,46)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (634 samples, 0.17%)</title><rect x="97.9610%" y="501" width="0.1671%" height="15" fill="rgb(218,76,16)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (634 samples, 0.17%)</title><rect x="97.9610%" y="485" width="0.1671%" height="15" fill="rgb(225,21,48)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (634 samples, 0.17%)</title><rect x="97.9610%" y="469" width="0.1671%" height="15" fill="rgb(239,223,50)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (634 samples, 0.17%)</title><rect x="97.9610%" y="453" width="0.1671%" height="15" fill="rgb(244,45,21)" fg:x="371658" fg:w="634"/><text x="98.2110%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.01%)</title><rect x="98.1318%" y="357" width="0.0132%" height="15" fill="rgb(232,33,43)" fg:x="372306" fg:w="50"/><text x="98.3818%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (293 samples, 0.08%)</title><rect x="98.1478%" y="325" width="0.0772%" height="15" fill="rgb(209,8,3)" fg:x="372367" fg:w="293"/><text x="98.3978%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (293 samples, 0.08%)</title><rect x="98.1478%" y="309" width="0.0772%" height="15" fill="rgb(214,25,53)" fg:x="372367" fg:w="293"/><text x="98.3978%" y="319.50"></text></g><g><title>exp (264 samples, 0.07%)</title><rect x="98.1555%" y="293" width="0.0696%" height="15" fill="rgb(254,186,54)" fg:x="372396" fg:w="264"/><text x="98.4055%" y="303.50"></text></g><g><title>[libm-2.31.so] (183 samples, 0.05%)</title><rect x="98.1768%" y="277" width="0.0482%" height="15" fill="rgb(208,174,49)" fg:x="372477" fg:w="183"/><text x="98.4268%" y="287.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (362 samples, 0.10%)</title><rect x="98.1449%" y="341" width="0.0954%" height="15" fill="rgb(233,191,51)" fg:x="372356" fg:w="362"/><text x="98.3949%" y="351.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (57 samples, 0.02%)</title><rect x="98.2253%" y="325" width="0.0150%" height="15" fill="rgb(222,134,10)" fg:x="372661" fg:w="57"/><text x="98.4753%" y="335.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (57 samples, 0.02%)</title><rect x="98.2253%" y="309" width="0.0150%" height="15" fill="rgb(230,226,20)" fg:x="372661" fg:w="57"/><text x="98.4753%" y="319.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (598 samples, 0.16%)</title><rect x="98.1281%" y="501" width="0.1576%" height="15" fill="rgb(251,111,25)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (598 samples, 0.16%)</title><rect x="98.1281%" y="485" width="0.1576%" height="15" fill="rgb(224,40,46)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (598 samples, 0.16%)</title><rect x="98.1281%" y="469" width="0.1576%" height="15" fill="rgb(236,108,47)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (598 samples, 0.16%)</title><rect x="98.1281%" y="453" width="0.1576%" height="15" fill="rgb(234,93,0)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (598 samples, 0.16%)</title><rect x="98.1281%" y="437" width="0.1576%" height="15" fill="rgb(224,213,32)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (598 samples, 0.16%)</title><rect x="98.1281%" y="421" width="0.1576%" height="15" fill="rgb(251,11,48)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (598 samples, 0.16%)</title><rect x="98.1281%" y="405" width="0.1576%" height="15" fill="rgb(236,173,5)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (598 samples, 0.16%)</title><rect x="98.1281%" y="389" width="0.1576%" height="15" fill="rgb(230,95,12)" fg:x="372292" fg:w="598"/><text x="98.3781%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (584 samples, 0.15%)</title><rect x="98.1318%" y="373" width="0.1539%" height="15" fill="rgb(232,209,1)" fg:x="372306" fg:w="584"/><text x="98.3818%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (534 samples, 0.14%)</title><rect x="98.1449%" y="357" width="0.1408%" height="15" fill="rgb(232,6,1)" fg:x="372356" fg:w="534"/><text x="98.3949%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (172 samples, 0.05%)</title><rect x="98.2404%" y="341" width="0.0453%" height="15" fill="rgb(210,224,50)" fg:x="372718" fg:w="172"/><text x="98.4904%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (604 samples, 0.16%)</title><rect x="98.1281%" y="581" width="0.1592%" height="15" fill="rgb(228,127,35)" fg:x="372292" fg:w="604"/><text x="98.3781%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (604 samples, 0.16%)</title><rect x="98.1281%" y="565" width="0.1592%" height="15" fill="rgb(245,102,45)" fg:x="372292" fg:w="604"/><text x="98.3781%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (604 samples, 0.16%)</title><rect x="98.1281%" y="549" width="0.1592%" height="15" fill="rgb(214,1,49)" fg:x="372292" fg:w="604"/><text x="98.3781%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (604 samples, 0.16%)</title><rect x="98.1281%" y="533" width="0.1592%" height="15" fill="rgb(226,163,40)" fg:x="372292" fg:w="604"/><text x="98.3781%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (604 samples, 0.16%)</title><rect x="98.1281%" y="517" width="0.1592%" height="15" fill="rgb(239,212,28)" fg:x="372292" fg:w="604"/><text x="98.3781%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.01%)</title><rect x="98.2915%" y="293" width="0.0132%" height="15" fill="rgb(220,20,13)" fg:x="372912" fg:w="50"/><text x="98.5415%" y="303.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (248 samples, 0.07%)</title><rect x="98.3094%" y="261" width="0.0654%" height="15" fill="rgb(210,164,35)" fg:x="372980" fg:w="248"/><text x="98.5594%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (248 samples, 0.07%)</title><rect x="98.3094%" y="245" width="0.0654%" height="15" fill="rgb(248,109,41)" fg:x="372980" fg:w="248"/><text x="98.5594%" y="255.50"></text></g><g><title>exp (219 samples, 0.06%)</title><rect x="98.3171%" y="229" width="0.0577%" height="15" fill="rgb(238,23,50)" fg:x="373009" fg:w="219"/><text x="98.5671%" y="239.50"></text></g><g><title>[libm-2.31.so] (151 samples, 0.04%)</title><rect x="98.3350%" y="213" width="0.0398%" height="15" fill="rgb(211,48,49)" fg:x="373077" fg:w="151"/><text x="98.5850%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (308 samples, 0.08%)</title><rect x="98.3047%" y="277" width="0.0812%" height="15" fill="rgb(223,36,21)" fg:x="372962" fg:w="308"/><text x="98.5547%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (41 samples, 0.01%)</title><rect x="98.3750%" y="261" width="0.0108%" height="15" fill="rgb(207,123,46)" fg:x="373229" fg:w="41"/><text x="98.6250%" y="271.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (41 samples, 0.01%)</title><rect x="98.3750%" y="245" width="0.0108%" height="15" fill="rgb(240,218,32)" fg:x="373229" fg:w="41"/><text x="98.6250%" y="255.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (539 samples, 0.14%)</title><rect x="98.2873%" y="437" width="0.1421%" height="15" fill="rgb(252,5,43)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (539 samples, 0.14%)</title><rect x="98.2873%" y="421" width="0.1421%" height="15" fill="rgb(252,84,19)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 0.14%)</title><rect x="98.2873%" y="405" width="0.1421%" height="15" fill="rgb(243,152,39)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (539 samples, 0.14%)</title><rect x="98.2873%" y="389" width="0.1421%" height="15" fill="rgb(234,160,15)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (539 samples, 0.14%)</title><rect x="98.2873%" y="373" width="0.1421%" height="15" fill="rgb(237,34,20)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (539 samples, 0.14%)</title><rect x="98.2873%" y="357" width="0.1421%" height="15" fill="rgb(229,97,13)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (539 samples, 0.14%)</title><rect x="98.2873%" y="341" width="0.1421%" height="15" fill="rgb(234,71,50)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="351.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (539 samples, 0.14%)</title><rect x="98.2873%" y="325" width="0.1421%" height="15" fill="rgb(253,155,4)" fg:x="372896" fg:w="539"/><text x="98.5373%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (523 samples, 0.14%)</title><rect x="98.2915%" y="309" width="0.1379%" height="15" fill="rgb(222,185,37)" fg:x="372912" fg:w="523"/><text x="98.5415%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (473 samples, 0.12%)</title><rect x="98.3047%" y="293" width="0.1247%" height="15" fill="rgb(251,177,13)" fg:x="372962" fg:w="473"/><text x="98.5547%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (165 samples, 0.04%)</title><rect x="98.3858%" y="277" width="0.0435%" height="15" fill="rgb(250,179,40)" fg:x="373270" fg:w="165"/><text x="98.6358%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,148 samples, 0.30%)</title><rect x="98.1281%" y="693" width="0.3026%" height="15" fill="rgb(242,44,2)" fg:x="372292" fg:w="1148"/><text x="98.3781%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,148 samples, 0.30%)</title><rect x="98.1281%" y="677" width="0.3026%" height="15" fill="rgb(216,177,13)" fg:x="372292" fg:w="1148"/><text x="98.3781%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,148 samples, 0.30%)</title><rect x="98.1281%" y="661" width="0.3026%" height="15" fill="rgb(216,106,43)" fg:x="372292" fg:w="1148"/><text x="98.3781%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,148 samples, 0.30%)</title><rect x="98.1281%" y="645" width="0.3026%" height="15" fill="rgb(216,183,2)" fg:x="372292" fg:w="1148"/><text x="98.3781%" y="655.50"></text></g><g><title>rayon_core::join::join_context (1,148 samples, 0.30%)</title><rect x="98.1281%" y="629" width="0.3026%" height="15" fill="rgb(249,75,3)" fg:x="372292" fg:w="1148"/><text x="98.3781%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (1,148 samples, 0.30%)</title><rect x="98.1281%" y="613" width="0.3026%" height="15" fill="rgb(219,67,39)" fg:x="372292" fg:w="1148"/><text x="98.3781%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,148 samples, 0.30%)</title><rect x="98.1281%" y="597" width="0.3026%" height="15" fill="rgb(253,228,2)" fg:x="372292" fg:w="1148"/><text x="98.3781%" y="607.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (544 samples, 0.14%)</title><rect x="98.2873%" y="581" width="0.1434%" height="15" fill="rgb(235,138,27)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="591.50"></text></g><g><title>std::panic::catch_unwind (544 samples, 0.14%)</title><rect x="98.2873%" y="565" width="0.1434%" height="15" fill="rgb(236,97,51)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="575.50"></text></g><g><title>std::panicking::try (544 samples, 0.14%)</title><rect x="98.2873%" y="549" width="0.1434%" height="15" fill="rgb(240,80,30)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="559.50"></text></g><g><title>std::panicking::try::do_call (544 samples, 0.14%)</title><rect x="98.2873%" y="533" width="0.1434%" height="15" fill="rgb(230,178,19)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="543.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (544 samples, 0.14%)</title><rect x="98.2873%" y="517" width="0.1434%" height="15" fill="rgb(210,190,27)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (544 samples, 0.14%)</title><rect x="98.2873%" y="501" width="0.1434%" height="15" fill="rgb(222,107,31)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (544 samples, 0.14%)</title><rect x="98.2873%" y="485" width="0.1434%" height="15" fill="rgb(216,127,34)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (544 samples, 0.14%)</title><rect x="98.2873%" y="469" width="0.1434%" height="15" fill="rgb(234,116,52)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (544 samples, 0.14%)</title><rect x="98.2873%" y="453" width="0.1434%" height="15" fill="rgb(222,124,15)" fg:x="372896" fg:w="544"/><text x="98.5373%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.01%)</title><rect x="98.4346%" y="293" width="0.0142%" height="15" fill="rgb(231,179,28)" fg:x="373455" fg:w="54"/><text x="98.6846%" y="303.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (251 samples, 0.07%)</title><rect x="98.4533%" y="261" width="0.0662%" height="15" fill="rgb(226,93,45)" fg:x="373526" fg:w="251"/><text x="98.7033%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (251 samples, 0.07%)</title><rect x="98.4533%" y="245" width="0.0662%" height="15" fill="rgb(215,8,51)" fg:x="373526" fg:w="251"/><text x="98.7033%" y="255.50"></text></g><g><title>exp (221 samples, 0.06%)</title><rect x="98.4612%" y="229" width="0.0583%" height="15" fill="rgb(223,106,5)" fg:x="373556" fg:w="221"/><text x="98.7112%" y="239.50"></text></g><g><title>[libm-2.31.so] (153 samples, 0.04%)</title><rect x="98.4792%" y="213" width="0.0403%" height="15" fill="rgb(250,191,5)" fg:x="373624" fg:w="153"/><text x="98.7292%" y="223.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (295 samples, 0.08%)</title><rect x="98.4488%" y="277" width="0.0778%" height="15" fill="rgb(242,132,44)" fg:x="373509" fg:w="295"/><text x="98.6988%" y="287.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (510 samples, 0.13%)</title><rect x="98.4309%" y="437" width="0.1344%" height="15" fill="rgb(251,152,29)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (510 samples, 0.13%)</title><rect x="98.4309%" y="421" width="0.1344%" height="15" fill="rgb(218,179,5)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (510 samples, 0.13%)</title><rect x="98.4309%" y="405" width="0.1344%" height="15" fill="rgb(227,67,19)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (510 samples, 0.13%)</title><rect x="98.4309%" y="389" width="0.1344%" height="15" fill="rgb(233,119,31)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (510 samples, 0.13%)</title><rect x="98.4309%" y="373" width="0.1344%" height="15" fill="rgb(241,120,22)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (510 samples, 0.13%)</title><rect x="98.4309%" y="357" width="0.1344%" height="15" fill="rgb(224,102,30)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (510 samples, 0.13%)</title><rect x="98.4309%" y="341" width="0.1344%" height="15" fill="rgb(210,164,37)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="351.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (510 samples, 0.13%)</title><rect x="98.4309%" y="325" width="0.1344%" height="15" fill="rgb(226,191,16)" fg:x="373441" fg:w="510"/><text x="98.6809%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (496 samples, 0.13%)</title><rect x="98.4346%" y="309" width="0.1307%" height="15" fill="rgb(214,40,45)" fg:x="373455" fg:w="496"/><text x="98.6846%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (442 samples, 0.12%)</title><rect x="98.4488%" y="293" width="0.1165%" height="15" fill="rgb(244,29,26)" fg:x="373509" fg:w="442"/><text x="98.6988%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (147 samples, 0.04%)</title><rect x="98.5266%" y="277" width="0.0387%" height="15" fill="rgb(216,16,5)" fg:x="373804" fg:w="147"/><text x="98.7766%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (516 samples, 0.14%)</title><rect x="98.4309%" y="517" width="0.1360%" height="15" fill="rgb(249,76,35)" fg:x="373441" fg:w="516"/><text x="98.6809%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (516 samples, 0.14%)</title><rect x="98.4309%" y="501" width="0.1360%" height="15" fill="rgb(207,11,44)" fg:x="373441" fg:w="516"/><text x="98.6809%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (516 samples, 0.14%)</title><rect x="98.4309%" y="485" width="0.1360%" height="15" fill="rgb(228,190,49)" fg:x="373441" fg:w="516"/><text x="98.6809%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (516 samples, 0.14%)</title><rect x="98.4309%" y="469" width="0.1360%" height="15" fill="rgb(214,173,12)" fg:x="373441" fg:w="516"/><text x="98.6809%" y="479.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (516 samples, 0.14%)</title><rect x="98.4309%" y="453" width="0.1360%" height="15" fill="rgb(218,26,35)" fg:x="373441" fg:w="516"/><text x="98.6809%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.01%)</title><rect x="98.5714%" y="229" width="0.0105%" height="15" fill="rgb(220,200,19)" fg:x="373974" fg:w="40"/><text x="98.8214%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (255 samples, 0.07%)</title><rect x="98.5848%" y="197" width="0.0672%" height="15" fill="rgb(239,95,49)" fg:x="374025" fg:w="255"/><text x="98.8348%" y="207.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (255 samples, 0.07%)</title><rect x="98.5848%" y="181" width="0.0672%" height="15" fill="rgb(235,85,53)" fg:x="374025" fg:w="255"/><text x="98.8348%" y="191.50"></text></g><g><title>exp (227 samples, 0.06%)</title><rect x="98.5922%" y="165" width="0.0598%" height="15" fill="rgb(233,133,31)" fg:x="374053" fg:w="227"/><text x="98.8422%" y="175.50"></text></g><g><title>[libm-2.31.so] (152 samples, 0.04%)</title><rect x="98.6120%" y="149" width="0.0401%" height="15" fill="rgb(218,25,20)" fg:x="374128" fg:w="152"/><text x="98.8620%" y="159.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (287 samples, 0.08%)</title><rect x="98.5819%" y="213" width="0.0756%" height="15" fill="rgb(252,210,38)" fg:x="374014" fg:w="287"/><text x="98.8319%" y="223.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (505 samples, 0.13%)</title><rect x="98.5669%" y="373" width="0.1331%" height="15" fill="rgb(242,134,21)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="383.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (505 samples, 0.13%)</title><rect x="98.5669%" y="357" width="0.1331%" height="15" fill="rgb(213,28,48)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (505 samples, 0.13%)</title><rect x="98.5669%" y="341" width="0.1331%" height="15" fill="rgb(250,196,2)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (505 samples, 0.13%)</title><rect x="98.5669%" y="325" width="0.1331%" height="15" fill="rgb(227,5,17)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (505 samples, 0.13%)</title><rect x="98.5669%" y="309" width="0.1331%" height="15" fill="rgb(221,226,24)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (505 samples, 0.13%)</title><rect x="98.5669%" y="293" width="0.1331%" height="15" fill="rgb(211,5,48)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (505 samples, 0.13%)</title><rect x="98.5669%" y="277" width="0.1331%" height="15" fill="rgb(219,150,6)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="287.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (505 samples, 0.13%)</title><rect x="98.5669%" y="261" width="0.1331%" height="15" fill="rgb(251,46,16)" fg:x="373957" fg:w="505"/><text x="98.8169%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (488 samples, 0.13%)</title><rect x="98.5714%" y="245" width="0.1286%" height="15" fill="rgb(220,204,40)" fg:x="373974" fg:w="488"/><text x="98.8214%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (448 samples, 0.12%)</title><rect x="98.5819%" y="229" width="0.1181%" height="15" fill="rgb(211,85,2)" fg:x="374014" fg:w="448"/><text x="98.8319%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (161 samples, 0.04%)</title><rect x="98.6576%" y="213" width="0.0424%" height="15" fill="rgb(229,17,7)" fg:x="374301" fg:w="161"/><text x="98.9076%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5,192 samples, 1.37%)</title><rect x="97.3331%" y="949" width="1.3685%" height="15" fill="rgb(239,72,28)" fg:x="369276" fg:w="5192"/><text x="97.5831%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5,192 samples, 1.37%)</title><rect x="97.3331%" y="933" width="1.3685%" height="15" fill="rgb(230,47,54)" fg:x="369276" fg:w="5192"/><text x="97.5831%" y="943.50"></text></g><g><title>rayon_core::join::join_context (5,192 samples, 1.37%)</title><rect x="97.3331%" y="917" width="1.3685%" height="15" fill="rgb(214,50,8)" fg:x="369276" fg:w="5192"/><text x="97.5831%" y="927.50"></text></g><g><title>rayon_core::registry::in_worker (5,192 samples, 1.37%)</title><rect x="97.3331%" y="901" width="1.3685%" height="15" fill="rgb(216,198,43)" fg:x="369276" fg:w="5192"/><text x="97.5831%" y="911.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5,192 samples, 1.37%)</title><rect x="97.3331%" y="885" width="1.3685%" height="15" fill="rgb(234,20,35)" fg:x="369276" fg:w="5192"/><text x="97.5831%" y="895.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2,176 samples, 0.57%)</title><rect x="98.1281%" y="869" width="0.5735%" height="15" fill="rgb(254,45,19)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="879.50"></text></g><g><title>std::panic::catch_unwind (2,176 samples, 0.57%)</title><rect x="98.1281%" y="853" width="0.5735%" height="15" fill="rgb(219,14,44)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="863.50"></text></g><g><title>std::panicking::try (2,176 samples, 0.57%)</title><rect x="98.1281%" y="837" width="0.5735%" height="15" fill="rgb(217,220,26)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="847.50"></text></g><g><title>std::panicking::try::do_call (2,176 samples, 0.57%)</title><rect x="98.1281%" y="821" width="0.5735%" height="15" fill="rgb(213,158,28)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="831.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,176 samples, 0.57%)</title><rect x="98.1281%" y="805" width="0.5735%" height="15" fill="rgb(252,51,52)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="815.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2,176 samples, 0.57%)</title><rect x="98.1281%" y="789" width="0.5735%" height="15" fill="rgb(246,89,16)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,176 samples, 0.57%)</title><rect x="98.1281%" y="773" width="0.5735%" height="15" fill="rgb(216,158,49)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,176 samples, 0.57%)</title><rect x="98.1281%" y="757" width="0.5735%" height="15" fill="rgb(236,107,19)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="767.50"></text></g><g><title>rayon_core::join::join_context (2,176 samples, 0.57%)</title><rect x="98.1281%" y="741" width="0.5735%" height="15" fill="rgb(228,185,30)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="751.50"></text></g><g><title>rayon_core::registry::in_worker (2,176 samples, 0.57%)</title><rect x="98.1281%" y="725" width="0.5735%" height="15" fill="rgb(246,134,8)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="735.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,176 samples, 0.57%)</title><rect x="98.1281%" y="709" width="0.5735%" height="15" fill="rgb(214,143,50)" fg:x="372292" fg:w="2176"/><text x="98.3781%" y="719.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,027 samples, 0.27%)</title><rect x="98.4309%" y="693" width="0.2707%" height="15" fill="rgb(228,75,8)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="703.50"></text></g><g><title>std::panic::catch_unwind (1,027 samples, 0.27%)</title><rect x="98.4309%" y="677" width="0.2707%" height="15" fill="rgb(207,175,4)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="687.50"></text></g><g><title>std::panicking::try (1,027 samples, 0.27%)</title><rect x="98.4309%" y="661" width="0.2707%" height="15" fill="rgb(205,108,24)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="671.50"></text></g><g><title>std::panicking::try::do_call (1,027 samples, 0.27%)</title><rect x="98.4309%" y="645" width="0.2707%" height="15" fill="rgb(244,120,49)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="655.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,027 samples, 0.27%)</title><rect x="98.4309%" y="629" width="0.2707%" height="15" fill="rgb(223,47,38)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,027 samples, 0.27%)</title><rect x="98.4309%" y="613" width="0.2707%" height="15" fill="rgb(229,179,11)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,027 samples, 0.27%)</title><rect x="98.4309%" y="597" width="0.2707%" height="15" fill="rgb(231,122,1)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,027 samples, 0.27%)</title><rect x="98.4309%" y="581" width="0.2707%" height="15" fill="rgb(245,119,9)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="591.50"></text></g><g><title>rayon_core::join::join_context (1,027 samples, 0.27%)</title><rect x="98.4309%" y="565" width="0.2707%" height="15" fill="rgb(241,163,25)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (1,027 samples, 0.27%)</title><rect x="98.4309%" y="549" width="0.2707%" height="15" fill="rgb(217,214,3)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="559.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,027 samples, 0.27%)</title><rect x="98.4309%" y="533" width="0.2707%" height="15" fill="rgb(240,86,28)" fg:x="373441" fg:w="1027"/><text x="98.6809%" y="543.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (511 samples, 0.13%)</title><rect x="98.5669%" y="517" width="0.1347%" height="15" fill="rgb(215,47,9)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="527.50"></text></g><g><title>std::panic::catch_unwind (511 samples, 0.13%)</title><rect x="98.5669%" y="501" width="0.1347%" height="15" fill="rgb(252,25,45)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="511.50"></text></g><g><title>std::panicking::try (511 samples, 0.13%)</title><rect x="98.5669%" y="485" width="0.1347%" height="15" fill="rgb(251,164,9)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="495.50"></text></g><g><title>std::panicking::try::do_call (511 samples, 0.13%)</title><rect x="98.5669%" y="469" width="0.1347%" height="15" fill="rgb(233,194,0)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="479.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (511 samples, 0.13%)</title><rect x="98.5669%" y="453" width="0.1347%" height="15" fill="rgb(249,111,24)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="463.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (511 samples, 0.13%)</title><rect x="98.5669%" y="437" width="0.1347%" height="15" fill="rgb(250,223,3)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (511 samples, 0.13%)</title><rect x="98.5669%" y="421" width="0.1347%" height="15" fill="rgb(236,178,37)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (511 samples, 0.13%)</title><rect x="98.5669%" y="405" width="0.1347%" height="15" fill="rgb(241,158,50)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="415.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (511 samples, 0.13%)</title><rect x="98.5669%" y="389" width="0.1347%" height="15" fill="rgb(213,121,41)" fg:x="373957" fg:w="511"/><text x="98.8169%" y="399.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5,210 samples, 1.37%)</title><rect x="97.3331%" y="965" width="1.3732%" height="15" fill="rgb(240,92,3)" fg:x="369276" fg:w="5210"/><text x="97.5831%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.01%)</title><rect x="98.7100%" y="309" width="0.0100%" height="15" fill="rgb(205,123,3)" fg:x="374500" fg:w="38"/><text x="98.9600%" y="319.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (224 samples, 0.06%)</title><rect x="98.7235%" y="277" width="0.0590%" height="15" fill="rgb(205,97,47)" fg:x="374551" fg:w="224"/><text x="98.9735%" y="287.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (224 samples, 0.06%)</title><rect x="98.7235%" y="261" width="0.0590%" height="15" fill="rgb(247,152,14)" fg:x="374551" fg:w="224"/><text x="98.9735%" y="271.50"></text></g><g><title>exp (200 samples, 0.05%)</title><rect x="98.7298%" y="245" width="0.0527%" height="15" fill="rgb(248,195,53)" fg:x="374575" fg:w="200"/><text x="98.9798%" y="255.50"></text></g><g><title>[libm-2.31.so] (145 samples, 0.04%)</title><rect x="98.7443%" y="229" width="0.0382%" height="15" fill="rgb(226,201,16)" fg:x="374630" fg:w="145"/><text x="98.9943%" y="239.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (266 samples, 0.07%)</title><rect x="98.7201%" y="293" width="0.0701%" height="15" fill="rgb(205,98,0)" fg:x="374538" fg:w="266"/><text x="98.9701%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (471 samples, 0.12%)</title><rect x="98.7074%" y="533" width="0.1241%" height="15" fill="rgb(214,191,48)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (471 samples, 0.12%)</title><rect x="98.7074%" y="517" width="0.1241%" height="15" fill="rgb(237,112,39)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (471 samples, 0.12%)</title><rect x="98.7074%" y="501" width="0.1241%" height="15" fill="rgb(247,203,27)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (471 samples, 0.12%)</title><rect x="98.7074%" y="485" width="0.1241%" height="15" fill="rgb(235,124,28)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (471 samples, 0.12%)</title><rect x="98.7074%" y="469" width="0.1241%" height="15" fill="rgb(208,207,46)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (471 samples, 0.12%)</title><rect x="98.7074%" y="453" width="0.1241%" height="15" fill="rgb(234,176,4)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="463.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (471 samples, 0.12%)</title><rect x="98.7074%" y="437" width="0.1241%" height="15" fill="rgb(230,133,28)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (471 samples, 0.12%)</title><rect x="98.7074%" y="421" width="0.1241%" height="15" fill="rgb(211,137,40)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (471 samples, 0.12%)</title><rect x="98.7074%" y="405" width="0.1241%" height="15" fill="rgb(254,35,13)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (471 samples, 0.12%)</title><rect x="98.7074%" y="389" width="0.1241%" height="15" fill="rgb(225,49,51)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (471 samples, 0.12%)</title><rect x="98.7074%" y="373" width="0.1241%" height="15" fill="rgb(251,10,15)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (471 samples, 0.12%)</title><rect x="98.7074%" y="357" width="0.1241%" height="15" fill="rgb(228,207,15)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (471 samples, 0.12%)</title><rect x="98.7074%" y="341" width="0.1241%" height="15" fill="rgb(241,99,19)" fg:x="374490" fg:w="471"/><text x="98.9574%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (461 samples, 0.12%)</title><rect x="98.7100%" y="325" width="0.1215%" height="15" fill="rgb(207,104,49)" fg:x="374500" fg:w="461"/><text x="98.9600%" y="335.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (423 samples, 0.11%)</title><rect x="98.7201%" y="309" width="0.1115%" height="15" fill="rgb(234,99,18)" fg:x="374538" fg:w="423"/><text x="98.9701%" y="319.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (157 samples, 0.04%)</title><rect x="98.7902%" y="293" width="0.0414%" height="15" fill="rgb(213,191,49)" fg:x="374804" fg:w="157"/><text x="99.0402%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.01%)</title><rect x="98.8339%" y="245" width="0.0108%" height="15" fill="rgb(210,226,19)" fg:x="374970" fg:w="41"/><text x="99.0839%" y="255.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (220 samples, 0.06%)</title><rect x="98.8471%" y="213" width="0.0580%" height="15" fill="rgb(229,97,18)" fg:x="375020" fg:w="220"/><text x="99.0971%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (220 samples, 0.06%)</title><rect x="98.8471%" y="197" width="0.0580%" height="15" fill="rgb(211,167,15)" fg:x="375020" fg:w="220"/><text x="99.0971%" y="207.50"></text></g><g><title>exp (201 samples, 0.05%)</title><rect x="98.8521%" y="181" width="0.0530%" height="15" fill="rgb(210,169,34)" fg:x="375039" fg:w="201"/><text x="99.1021%" y="191.50"></text></g><g><title>[libm-2.31.so] (143 samples, 0.04%)</title><rect x="98.8674%" y="165" width="0.0377%" height="15" fill="rgb(241,121,31)" fg:x="375097" fg:w="143"/><text x="99.1174%" y="175.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (250 samples, 0.07%)</title><rect x="98.8447%" y="229" width="0.0659%" height="15" fill="rgb(232,40,11)" fg:x="375011" fg:w="250"/><text x="99.0947%" y="239.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (934 samples, 0.25%)</title><rect x="98.7074%" y="645" width="0.2462%" height="15" fill="rgb(205,86,26)" fg:x="374490" fg:w="934"/><text x="98.9574%" y="655.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (934 samples, 0.25%)</title><rect x="98.7074%" y="629" width="0.2462%" height="15" fill="rgb(231,126,28)" fg:x="374490" fg:w="934"/><text x="98.9574%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (934 samples, 0.25%)</title><rect x="98.7074%" y="613" width="0.2462%" height="15" fill="rgb(219,221,18)" fg:x="374490" fg:w="934"/><text x="98.9574%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (934 samples, 0.25%)</title><rect x="98.7074%" y="597" width="0.2462%" height="15" fill="rgb(211,40,0)" fg:x="374490" fg:w="934"/><text x="98.9574%" y="607.50"></text></g><g><title>rayon_core::join::join_context (934 samples, 0.25%)</title><rect x="98.7074%" y="581" width="0.2462%" height="15" fill="rgb(239,85,43)" fg:x="374490" fg:w="934"/><text x="98.9574%" y="591.50"></text></g><g><title>rayon_core::registry::in_worker (934 samples, 0.25%)</title><rect x="98.7074%" y="565" width="0.2462%" height="15" fill="rgb(231,55,21)" fg:x="374490" fg:w="934"/><text x="98.9574%" y="575.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (934 samples, 0.25%)</title><rect x="98.7074%" y="549" width="0.2462%" height="15" fill="rgb(225,184,43)" fg:x="374490" fg:w="934"/><text x="98.9574%" y="559.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (463 samples, 0.12%)</title><rect x="98.8316%" y="533" width="0.1220%" height="15" fill="rgb(251,158,41)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="543.50"></text></g><g><title>std::panic::catch_unwind (463 samples, 0.12%)</title><rect x="98.8316%" y="517" width="0.1220%" height="15" fill="rgb(234,159,37)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="527.50"></text></g><g><title>std::panicking::try (463 samples, 0.12%)</title><rect x="98.8316%" y="501" width="0.1220%" height="15" fill="rgb(216,204,22)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="511.50"></text></g><g><title>std::panicking::try::do_call (463 samples, 0.12%)</title><rect x="98.8316%" y="485" width="0.1220%" height="15" fill="rgb(214,17,3)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="495.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (463 samples, 0.12%)</title><rect x="98.8316%" y="469" width="0.1220%" height="15" fill="rgb(212,111,17)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (463 samples, 0.12%)</title><rect x="98.8316%" y="453" width="0.1220%" height="15" fill="rgb(221,157,24)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (463 samples, 0.12%)</title><rect x="98.8316%" y="437" width="0.1220%" height="15" fill="rgb(252,16,13)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (463 samples, 0.12%)</title><rect x="98.8316%" y="421" width="0.1220%" height="15" fill="rgb(221,62,2)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (463 samples, 0.12%)</title><rect x="98.8316%" y="405" width="0.1220%" height="15" fill="rgb(247,87,22)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (463 samples, 0.12%)</title><rect x="98.8316%" y="389" width="0.1220%" height="15" fill="rgb(215,73,9)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (463 samples, 0.12%)</title><rect x="98.8316%" y="373" width="0.1220%" height="15" fill="rgb(207,175,33)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (463 samples, 0.12%)</title><rect x="98.8316%" y="357" width="0.1220%" height="15" fill="rgb(243,129,54)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (463 samples, 0.12%)</title><rect x="98.8316%" y="341" width="0.1220%" height="15" fill="rgb(227,119,45)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (463 samples, 0.12%)</title><rect x="98.8316%" y="325" width="0.1220%" height="15" fill="rgb(205,109,36)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (463 samples, 0.12%)</title><rect x="98.8316%" y="309" width="0.1220%" height="15" fill="rgb(205,6,39)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (463 samples, 0.12%)</title><rect x="98.8316%" y="293" width="0.1220%" height="15" fill="rgb(221,32,16)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (463 samples, 0.12%)</title><rect x="98.8316%" y="277" width="0.1220%" height="15" fill="rgb(228,144,50)" fg:x="374961" fg:w="463"/><text x="99.0816%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (454 samples, 0.12%)</title><rect x="98.8339%" y="261" width="0.1197%" height="15" fill="rgb(229,201,53)" fg:x="374970" fg:w="454"/><text x="99.0839%" y="271.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (413 samples, 0.11%)</title><rect x="98.8447%" y="245" width="0.1089%" height="15" fill="rgb(249,153,27)" fg:x="375011" fg:w="413"/><text x="99.0947%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (163 samples, 0.04%)</title><rect x="98.9106%" y="229" width="0.0430%" height="15" fill="rgb(227,106,25)" fg:x="375261" fg:w="163"/><text x="99.1606%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.01%)</title><rect x="98.9562%" y="245" width="0.0127%" height="15" fill="rgb(230,65,29)" fg:x="375434" fg:w="48"/><text x="99.2062%" y="255.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (280 samples, 0.07%)</title><rect x="98.9728%" y="213" width="0.0738%" height="15" fill="rgb(221,57,46)" fg:x="375497" fg:w="280"/><text x="99.2228%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (280 samples, 0.07%)</title><rect x="98.9728%" y="197" width="0.0738%" height="15" fill="rgb(229,161,17)" fg:x="375497" fg:w="280"/><text x="99.2228%" y="207.50"></text></g><g><title>exp (249 samples, 0.07%)</title><rect x="98.9810%" y="181" width="0.0656%" height="15" fill="rgb(222,213,11)" fg:x="375528" fg:w="249"/><text x="99.2310%" y="191.50"></text></g><g><title>[libm-2.31.so] (162 samples, 0.04%)</title><rect x="99.0039%" y="165" width="0.0427%" height="15" fill="rgb(235,35,13)" fg:x="375615" fg:w="162"/><text x="99.2539%" y="175.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (336 samples, 0.09%)</title><rect x="98.9689%" y="229" width="0.0886%" height="15" fill="rgb(233,158,34)" fg:x="375482" fg:w="336"/><text x="99.2189%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (41 samples, 0.01%)</title><rect x="99.0466%" y="213" width="0.0108%" height="15" fill="rgb(215,151,48)" fg:x="375777" fg:w="41"/><text x="99.2966%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (41 samples, 0.01%)</title><rect x="99.0466%" y="197" width="0.0108%" height="15" fill="rgb(229,84,14)" fg:x="375777" fg:w="41"/><text x="99.2966%" y="207.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (535 samples, 0.14%)</title><rect x="98.9536%" y="469" width="0.1410%" height="15" fill="rgb(229,68,14)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (535 samples, 0.14%)</title><rect x="98.9536%" y="453" width="0.1410%" height="15" fill="rgb(243,106,26)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (535 samples, 0.14%)</title><rect x="98.9536%" y="437" width="0.1410%" height="15" fill="rgb(206,45,38)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (535 samples, 0.14%)</title><rect x="98.9536%" y="421" width="0.1410%" height="15" fill="rgb(226,6,15)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (535 samples, 0.14%)</title><rect x="98.9536%" y="405" width="0.1410%" height="15" fill="rgb(232,22,54)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (535 samples, 0.14%)</title><rect x="98.9536%" y="389" width="0.1410%" height="15" fill="rgb(229,222,32)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (535 samples, 0.14%)</title><rect x="98.9536%" y="373" width="0.1410%" height="15" fill="rgb(228,62,29)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (535 samples, 0.14%)</title><rect x="98.9536%" y="357" width="0.1410%" height="15" fill="rgb(251,103,34)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (535 samples, 0.14%)</title><rect x="98.9536%" y="341" width="0.1410%" height="15" fill="rgb(233,12,30)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (535 samples, 0.14%)</title><rect x="98.9536%" y="325" width="0.1410%" height="15" fill="rgb(238,52,0)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (535 samples, 0.14%)</title><rect x="98.9536%" y="309" width="0.1410%" height="15" fill="rgb(223,98,5)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (535 samples, 0.14%)</title><rect x="98.9536%" y="293" width="0.1410%" height="15" fill="rgb(228,75,37)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (535 samples, 0.14%)</title><rect x="98.9536%" y="277" width="0.1410%" height="15" fill="rgb(205,115,49)" fg:x="375424" fg:w="535"/><text x="99.2036%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (525 samples, 0.14%)</title><rect x="98.9562%" y="261" width="0.1384%" height="15" fill="rgb(250,154,43)" fg:x="375434" fg:w="525"/><text x="99.2062%" y="271.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (477 samples, 0.13%)</title><rect x="98.9689%" y="245" width="0.1257%" height="15" fill="rgb(226,43,29)" fg:x="375482" fg:w="477"/><text x="99.2189%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (141 samples, 0.04%)</title><rect x="99.0574%" y="229" width="0.0372%" height="15" fill="rgb(249,228,39)" fg:x="375818" fg:w="141"/><text x="99.3074%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.01%)</title><rect x="99.0972%" y="181" width="0.0129%" height="15" fill="rgb(216,79,43)" fg:x="375969" fg:w="49"/><text x="99.3472%" y="191.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (275 samples, 0.07%)</title><rect x="99.1152%" y="149" width="0.0725%" height="15" fill="rgb(228,95,12)" fg:x="376037" fg:w="275"/><text x="99.3652%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (275 samples, 0.07%)</title><rect x="99.1152%" y="133" width="0.0725%" height="15" fill="rgb(249,221,15)" fg:x="376037" fg:w="275"/><text x="99.3652%" y="143.50"></text></g><g><title>exp (247 samples, 0.07%)</title><rect x="99.1225%" y="117" width="0.0651%" height="15" fill="rgb(233,34,13)" fg:x="376065" fg:w="247"/><text x="99.3725%" y="127.50"></text></g><g><title>[libm-2.31.so] (188 samples, 0.05%)</title><rect x="99.1381%" y="101" width="0.0496%" height="15" fill="rgb(214,103,39)" fg:x="376124" fg:w="188"/><text x="99.3881%" y="111.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (336 samples, 0.09%)</title><rect x="99.1102%" y="165" width="0.0886%" height="15" fill="rgb(251,126,39)" fg:x="376018" fg:w="336"/><text x="99.3602%" y="175.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (42 samples, 0.01%)</title><rect x="99.1877%" y="149" width="0.0111%" height="15" fill="rgb(214,216,36)" fg:x="376312" fg:w="42"/><text x="99.4377%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (42 samples, 0.01%)</title><rect x="99.1877%" y="133" width="0.0111%" height="15" fill="rgb(220,221,8)" fg:x="376312" fg:w="42"/><text x="99.4377%" y="143.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2,017 samples, 0.53%)</title><rect x="98.7074%" y="757" width="0.5316%" height="15" fill="rgb(240,216,3)" fg:x="374490" fg:w="2017"/><text x="98.9574%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (2,017 samples, 0.53%)</title><rect x="98.7074%" y="741" width="0.5316%" height="15" fill="rgb(232,218,17)" fg:x="374490" fg:w="2017"/><text x="98.9574%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,017 samples, 0.53%)</title><rect x="98.7074%" y="725" width="0.5316%" height="15" fill="rgb(229,163,45)" fg:x="374490" fg:w="2017"/><text x="98.9574%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,017 samples, 0.53%)</title><rect x="98.7074%" y="709" width="0.5316%" height="15" fill="rgb(231,110,42)" fg:x="374490" fg:w="2017"/><text x="98.9574%" y="719.50"></text></g><g><title>rayon_core::join::join_context (2,017 samples, 0.53%)</title><rect x="98.7074%" y="693" width="0.5316%" height="15" fill="rgb(208,170,48)" fg:x="374490" fg:w="2017"/><text x="98.9574%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (2,017 samples, 0.53%)</title><rect x="98.7074%" y="677" width="0.5316%" height="15" fill="rgb(239,116,25)" fg:x="374490" fg:w="2017"/><text x="98.9574%" y="687.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,017 samples, 0.53%)</title><rect x="98.7074%" y="661" width="0.5316%" height="15" fill="rgb(219,200,50)" fg:x="374490" fg:w="2017"/><text x="98.9574%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,083 samples, 0.29%)</title><rect x="98.9536%" y="645" width="0.2855%" height="15" fill="rgb(245,200,0)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="655.50"></text></g><g><title>std::panic::catch_unwind (1,083 samples, 0.29%)</title><rect x="98.9536%" y="629" width="0.2855%" height="15" fill="rgb(245,119,33)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="639.50"></text></g><g><title>std::panicking::try (1,083 samples, 0.29%)</title><rect x="98.9536%" y="613" width="0.2855%" height="15" fill="rgb(231,125,12)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="623.50"></text></g><g><title>std::panicking::try::do_call (1,083 samples, 0.29%)</title><rect x="98.9536%" y="597" width="0.2855%" height="15" fill="rgb(216,96,41)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="607.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,083 samples, 0.29%)</title><rect x="98.9536%" y="581" width="0.2855%" height="15" fill="rgb(248,43,45)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,083 samples, 0.29%)</title><rect x="98.9536%" y="565" width="0.2855%" height="15" fill="rgb(217,222,7)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,083 samples, 0.29%)</title><rect x="98.9536%" y="549" width="0.2855%" height="15" fill="rgb(233,28,6)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,083 samples, 0.29%)</title><rect x="98.9536%" y="533" width="0.2855%" height="15" fill="rgb(231,218,15)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="543.50"></text></g><g><title>rayon_core::join::join_context (1,083 samples, 0.29%)</title><rect x="98.9536%" y="517" width="0.2855%" height="15" fill="rgb(226,171,48)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (1,083 samples, 0.29%)</title><rect x="98.9536%" y="501" width="0.2855%" height="15" fill="rgb(235,201,9)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,083 samples, 0.29%)</title><rect x="98.9536%" y="485" width="0.2855%" height="15" fill="rgb(217,80,15)" fg:x="375424" fg:w="1083"/><text x="99.2036%" y="495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (548 samples, 0.14%)</title><rect x="99.0946%" y="469" width="0.1444%" height="15" fill="rgb(219,152,8)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="479.50"></text></g><g><title>std::panic::catch_unwind (548 samples, 0.14%)</title><rect x="99.0946%" y="453" width="0.1444%" height="15" fill="rgb(243,107,38)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="463.50"></text></g><g><title>std::panicking::try (548 samples, 0.14%)</title><rect x="99.0946%" y="437" width="0.1444%" height="15" fill="rgb(231,17,5)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="447.50"></text></g><g><title>std::panicking::try::do_call (548 samples, 0.14%)</title><rect x="99.0946%" y="421" width="0.1444%" height="15" fill="rgb(209,25,54)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="431.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (548 samples, 0.14%)</title><rect x="99.0946%" y="405" width="0.1444%" height="15" fill="rgb(219,0,2)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (548 samples, 0.14%)</title><rect x="99.0946%" y="389" width="0.1444%" height="15" fill="rgb(246,9,5)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (548 samples, 0.14%)</title><rect x="99.0946%" y="373" width="0.1444%" height="15" fill="rgb(226,159,4)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (548 samples, 0.14%)</title><rect x="99.0946%" y="357" width="0.1444%" height="15" fill="rgb(219,175,34)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="367.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (548 samples, 0.14%)</title><rect x="99.0946%" y="341" width="0.1444%" height="15" fill="rgb(236,10,46)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (548 samples, 0.14%)</title><rect x="99.0946%" y="325" width="0.1444%" height="15" fill="rgb(240,211,16)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="335.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (548 samples, 0.14%)</title><rect x="99.0946%" y="309" width="0.1444%" height="15" fill="rgb(205,3,43)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (548 samples, 0.14%)</title><rect x="99.0946%" y="293" width="0.1444%" height="15" fill="rgb(245,7,22)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (548 samples, 0.14%)</title><rect x="99.0946%" y="277" width="0.1444%" height="15" fill="rgb(239,132,32)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (548 samples, 0.14%)</title><rect x="99.0946%" y="261" width="0.1444%" height="15" fill="rgb(228,202,34)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (548 samples, 0.14%)</title><rect x="99.0946%" y="245" width="0.1444%" height="15" fill="rgb(254,200,22)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (548 samples, 0.14%)</title><rect x="99.0946%" y="229" width="0.1444%" height="15" fill="rgb(219,10,39)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="239.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (548 samples, 0.14%)</title><rect x="99.0946%" y="213" width="0.1444%" height="15" fill="rgb(226,210,39)" fg:x="375959" fg:w="548"/><text x="99.3446%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (538 samples, 0.14%)</title><rect x="99.0972%" y="197" width="0.1418%" height="15" fill="rgb(208,219,16)" fg:x="375969" fg:w="538"/><text x="99.3472%" y="207.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (489 samples, 0.13%)</title><rect x="99.1102%" y="181" width="0.1289%" height="15" fill="rgb(216,158,51)" fg:x="376018" fg:w="489"/><text x="99.3602%" y="191.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (153 samples, 0.04%)</title><rect x="99.1987%" y="165" width="0.0403%" height="15" fill="rgb(233,14,44)" fg:x="376354" fg:w="153"/><text x="99.4487%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.01%)</title><rect x="99.2433%" y="245" width="0.0129%" height="15" fill="rgb(237,97,39)" fg:x="376523" fg:w="49"/><text x="99.4933%" y="255.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (317 samples, 0.08%)</title><rect x="99.2601%" y="213" width="0.0836%" height="15" fill="rgb(218,198,43)" fg:x="376587" fg:w="317"/><text x="99.5101%" y="223.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (317 samples, 0.08%)</title><rect x="99.2601%" y="197" width="0.0836%" height="15" fill="rgb(231,104,20)" fg:x="376587" fg:w="317"/><text x="99.5101%" y="207.50"></text></g><g><title>exp (288 samples, 0.08%)</title><rect x="99.2678%" y="181" width="0.0759%" height="15" fill="rgb(254,36,13)" fg:x="376616" fg:w="288"/><text x="99.5178%" y="191.50"></text></g><g><title>[libm-2.31.so] (229 samples, 0.06%)</title><rect x="99.2833%" y="165" width="0.0604%" height="15" fill="rgb(248,14,50)" fg:x="376675" fg:w="229"/><text x="99.5333%" y="175.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (398 samples, 0.10%)</title><rect x="99.2562%" y="229" width="0.1049%" height="15" fill="rgb(217,107,29)" fg:x="376572" fg:w="398"/><text x="99.5062%" y="239.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (66 samples, 0.02%)</title><rect x="99.3437%" y="213" width="0.0174%" height="15" fill="rgb(251,169,33)" fg:x="376904" fg:w="66"/><text x="99.5937%" y="223.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (66 samples, 0.02%)</title><rect x="99.3437%" y="197" width="0.0174%" height="15" fill="rgb(217,108,32)" fg:x="376904" fg:w="66"/><text x="99.5937%" y="207.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (628 samples, 0.17%)</title><rect x="99.2390%" y="469" width="0.1655%" height="15" fill="rgb(219,66,42)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="479.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (628 samples, 0.17%)</title><rect x="99.2390%" y="453" width="0.1655%" height="15" fill="rgb(206,180,7)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (628 samples, 0.17%)</title><rect x="99.2390%" y="437" width="0.1655%" height="15" fill="rgb(208,226,31)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (628 samples, 0.17%)</title><rect x="99.2390%" y="421" width="0.1655%" height="15" fill="rgb(218,26,49)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (628 samples, 0.17%)</title><rect x="99.2390%" y="405" width="0.1655%" height="15" fill="rgb(233,197,48)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="415.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (628 samples, 0.17%)</title><rect x="99.2390%" y="389" width="0.1655%" height="15" fill="rgb(252,181,51)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (628 samples, 0.17%)</title><rect x="99.2390%" y="373" width="0.1655%" height="15" fill="rgb(253,90,19)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (628 samples, 0.17%)</title><rect x="99.2390%" y="357" width="0.1655%" height="15" fill="rgb(215,171,30)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (628 samples, 0.17%)</title><rect x="99.2390%" y="341" width="0.1655%" height="15" fill="rgb(214,222,9)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (628 samples, 0.17%)</title><rect x="99.2390%" y="325" width="0.1655%" height="15" fill="rgb(223,3,22)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (628 samples, 0.17%)</title><rect x="99.2390%" y="309" width="0.1655%" height="15" fill="rgb(225,196,46)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="319.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (628 samples, 0.17%)</title><rect x="99.2390%" y="293" width="0.1655%" height="15" fill="rgb(209,110,37)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (628 samples, 0.17%)</title><rect x="99.2390%" y="277" width="0.1655%" height="15" fill="rgb(249,89,12)" fg:x="376507" fg:w="628"/><text x="99.4890%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (612 samples, 0.16%)</title><rect x="99.2433%" y="261" width="0.1613%" height="15" fill="rgb(226,27,33)" fg:x="376523" fg:w="612"/><text x="99.4933%" y="271.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (563 samples, 0.15%)</title><rect x="99.2562%" y="245" width="0.1484%" height="15" fill="rgb(213,82,22)" fg:x="376572" fg:w="563"/><text x="99.5062%" y="255.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (165 samples, 0.04%)</title><rect x="99.3611%" y="229" width="0.0435%" height="15" fill="rgb(248,140,0)" fg:x="376970" fg:w="165"/><text x="99.6111%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.01%)</title><rect x="99.4077%" y="181" width="0.0113%" height="15" fill="rgb(228,106,3)" fg:x="377147" fg:w="43"/><text x="99.6577%" y="191.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (347 samples, 0.09%)</title><rect x="99.4220%" y="149" width="0.0915%" height="15" fill="rgb(209,23,37)" fg:x="377201" fg:w="347"/><text x="99.6720%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (347 samples, 0.09%)</title><rect x="99.4220%" y="133" width="0.0915%" height="15" fill="rgb(241,93,50)" fg:x="377201" fg:w="347"/><text x="99.6720%" y="143.50"></text></g><g><title>exp (314 samples, 0.08%)</title><rect x="99.4307%" y="117" width="0.0828%" height="15" fill="rgb(253,46,43)" fg:x="377234" fg:w="314"/><text x="99.6807%" y="127.50"></text></g><g><title>[libm-2.31.so] (253 samples, 0.07%)</title><rect x="99.4467%" y="101" width="0.0667%" height="15" fill="rgb(226,206,43)" fg:x="377295" fg:w="253"/><text x="99.6967%" y="111.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (90 samples, 0.02%)</title><rect x="99.5134%" y="149" width="0.0237%" height="15" fill="rgb(217,54,7)" fg:x="377548" fg:w="90"/><text x="99.7634%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (90 samples, 0.02%)</title><rect x="99.5134%" y="133" width="0.0237%" height="15" fill="rgb(223,5,52)" fg:x="377548" fg:w="90"/><text x="99.7634%" y="143.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (449 samples, 0.12%)</title><rect x="99.4191%" y="165" width="0.1183%" height="15" fill="rgb(206,52,46)" fg:x="377190" fg:w="449"/><text x="99.6691%" y="175.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (165 samples, 0.04%)</title><rect x="99.5374%" y="165" width="0.0435%" height="15" fill="rgb(253,136,11)" fg:x="377639" fg:w="165"/><text x="99.7874%" y="175.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1,298 samples, 0.34%)</title><rect x="99.2390%" y="581" width="0.3421%" height="15" fill="rgb(208,106,33)" fg:x="376507" fg:w="1298"/><text x="99.4890%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (1,298 samples, 0.34%)</title><rect x="99.2390%" y="565" width="0.3421%" height="15" fill="rgb(206,54,4)" fg:x="376507" fg:w="1298"/><text x="99.4890%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,298 samples, 0.34%)</title><rect x="99.2390%" y="549" width="0.3421%" height="15" fill="rgb(213,3,15)" fg:x="376507" fg:w="1298"/><text x="99.4890%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,298 samples, 0.34%)</title><rect x="99.2390%" y="533" width="0.3421%" height="15" fill="rgb(252,211,39)" fg:x="376507" fg:w="1298"/><text x="99.4890%" y="543.50"></text></g><g><title>rayon_core::join::join_context (1,298 samples, 0.34%)</title><rect x="99.2390%" y="517" width="0.3421%" height="15" fill="rgb(223,6,36)" fg:x="376507" fg:w="1298"/><text x="99.4890%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (1,298 samples, 0.34%)</title><rect x="99.2390%" y="501" width="0.3421%" height="15" fill="rgb(252,169,45)" fg:x="376507" fg:w="1298"/><text x="99.4890%" y="511.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,298 samples, 0.34%)</title><rect x="99.2390%" y="485" width="0.3421%" height="15" fill="rgb(212,48,26)" fg:x="376507" fg:w="1298"/><text x="99.4890%" y="495.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (670 samples, 0.18%)</title><rect x="99.4046%" y="469" width="0.1766%" height="15" fill="rgb(251,102,48)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="479.50"></text></g><g><title>std::panic::catch_unwind (670 samples, 0.18%)</title><rect x="99.4046%" y="453" width="0.1766%" height="15" fill="rgb(243,208,16)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="463.50"></text></g><g><title>std::panicking::try (670 samples, 0.18%)</title><rect x="99.4046%" y="437" width="0.1766%" height="15" fill="rgb(219,96,24)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="447.50"></text></g><g><title>std::panicking::try::do_call (670 samples, 0.18%)</title><rect x="99.4046%" y="421" width="0.1766%" height="15" fill="rgb(219,33,29)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="431.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (670 samples, 0.18%)</title><rect x="99.4046%" y="405" width="0.1766%" height="15" fill="rgb(223,176,5)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (670 samples, 0.18%)</title><rect x="99.4046%" y="389" width="0.1766%" height="15" fill="rgb(228,140,14)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (670 samples, 0.18%)</title><rect x="99.4046%" y="373" width="0.1766%" height="15" fill="rgb(217,179,31)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (670 samples, 0.18%)</title><rect x="99.4046%" y="357" width="0.1766%" height="15" fill="rgb(230,9,30)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="367.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (670 samples, 0.18%)</title><rect x="99.4046%" y="341" width="0.1766%" height="15" fill="rgb(230,136,20)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (670 samples, 0.18%)</title><rect x="99.4046%" y="325" width="0.1766%" height="15" fill="rgb(215,210,22)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="335.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (670 samples, 0.18%)</title><rect x="99.4046%" y="309" width="0.1766%" height="15" fill="rgb(218,43,5)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (670 samples, 0.18%)</title><rect x="99.4046%" y="293" width="0.1766%" height="15" fill="rgb(216,11,5)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (670 samples, 0.18%)</title><rect x="99.4046%" y="277" width="0.1766%" height="15" fill="rgb(209,82,29)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (670 samples, 0.18%)</title><rect x="99.4046%" y="261" width="0.1766%" height="15" fill="rgb(244,115,12)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (670 samples, 0.18%)</title><rect x="99.4046%" y="245" width="0.1766%" height="15" fill="rgb(222,82,18)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (670 samples, 0.18%)</title><rect x="99.4046%" y="229" width="0.1766%" height="15" fill="rgb(249,227,8)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="239.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (670 samples, 0.18%)</title><rect x="99.4046%" y="213" width="0.1766%" height="15" fill="rgb(253,141,45)" fg:x="377135" fg:w="670"/><text x="99.6546%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (658 samples, 0.17%)</title><rect x="99.4077%" y="197" width="0.1734%" height="15" fill="rgb(234,184,4)" fg:x="377147" fg:w="658"/><text x="99.6577%" y="207.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (615 samples, 0.16%)</title><rect x="99.4191%" y="181" width="0.1621%" height="15" fill="rgb(218,194,23)" fg:x="377190" fg:w="615"/><text x="99.6691%" y="191.50"></text></g><g><title>[libm-2.31.so] (296 samples, 0.08%)</title><rect x="99.6310%" y="101" width="0.0780%" height="15" fill="rgb(235,66,41)" fg:x="377994" fg:w="296"/><text x="99.8810%" y="111.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (425 samples, 0.11%)</title><rect x="99.5973%" y="149" width="0.1120%" height="15" fill="rgb(245,217,1)" fg:x="377866" fg:w="425"/><text x="99.8473%" y="159.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (425 samples, 0.11%)</title><rect x="99.5973%" y="133" width="0.1120%" height="15" fill="rgb(229,91,1)" fg:x="377866" fg:w="425"/><text x="99.8473%" y="143.50"></text></g><g><title>exp (394 samples, 0.10%)</title><rect x="99.6054%" y="117" width="0.1038%" height="15" fill="rgb(207,101,30)" fg:x="377897" fg:w="394"/><text x="99.8554%" y="127.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (532 samples, 0.14%)</title><rect x="99.5933%" y="165" width="0.1402%" height="15" fill="rgb(223,82,49)" fg:x="377851" fg:w="532"/><text x="99.8433%" y="175.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (92 samples, 0.02%)</title><rect x="99.7093%" y="149" width="0.0242%" height="15" fill="rgb(218,167,17)" fg:x="378291" fg:w="92"/><text x="99.9593%" y="159.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (92 samples, 0.02%)</title><rect x="99.7093%" y="133" width="0.0242%" height="15" fill="rgb(208,103,14)" fg:x="378291" fg:w="92"/><text x="99.9593%" y="143.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (148 samples, 0.04%)</title><rect x="99.7335%" y="165" width="0.0390%" height="15" fill="rgb(238,20,8)" fg:x="378383" fg:w="148"/><text x="99.9835%" y="175.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (727 samples, 0.19%)</title><rect x="99.5812%" y="405" width="0.1916%" height="15" fill="rgb(218,80,54)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="415.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (727 samples, 0.19%)</title><rect x="99.5812%" y="389" width="0.1916%" height="15" fill="rgb(240,144,17)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (727 samples, 0.19%)</title><rect x="99.5812%" y="373" width="0.1916%" height="15" fill="rgb(245,27,50)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (727 samples, 0.19%)</title><rect x="99.5812%" y="357" width="0.1916%" height="15" fill="rgb(251,51,7)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="367.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (727 samples, 0.19%)</title><rect x="99.5812%" y="341" width="0.1916%" height="15" fill="rgb(245,217,29)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="351.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (727 samples, 0.19%)</title><rect x="99.5812%" y="325" width="0.1916%" height="15" fill="rgb(221,176,29)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="335.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (727 samples, 0.19%)</title><rect x="99.5812%" y="309" width="0.1916%" height="15" fill="rgb(212,180,24)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (727 samples, 0.19%)</title><rect x="99.5812%" y="293" width="0.1916%" height="15" fill="rgb(254,24,2)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (727 samples, 0.19%)</title><rect x="99.5812%" y="277" width="0.1916%" height="15" fill="rgb(230,100,2)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (727 samples, 0.19%)</title><rect x="99.5812%" y="261" width="0.1916%" height="15" fill="rgb(219,142,25)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (727 samples, 0.19%)</title><rect x="99.5812%" y="245" width="0.1916%" height="15" fill="rgb(240,73,43)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="255.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (727 samples, 0.19%)</title><rect x="99.5812%" y="229" width="0.1916%" height="15" fill="rgb(214,114,15)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="239.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (727 samples, 0.19%)</title><rect x="99.5812%" y="213" width="0.1916%" height="15" fill="rgb(207,130,4)" fg:x="377805" fg:w="727"/><text x="99.8312%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (717 samples, 0.19%)</title><rect x="99.5838%" y="197" width="0.1890%" height="15" fill="rgb(221,25,40)" fg:x="377815" fg:w="717"/><text x="99.8338%" y="207.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (681 samples, 0.18%)</title><rect x="99.5933%" y="181" width="0.1795%" height="15" fill="rgb(241,184,7)" fg:x="377851" fg:w="681"/><text x="99.8433%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.01%)</title><rect x="99.7757%" y="117" width="0.0111%" height="15" fill="rgb(235,159,4)" fg:x="378543" fg:w="42"/><text x="100.0257%" y="127.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (441 samples, 0.12%)</title><rect x="99.7912%" y="85" width="0.1162%" height="15" fill="rgb(214,87,48)" fg:x="378602" fg:w="441"/><text x="100.0412%" y="95.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (441 samples, 0.12%)</title><rect x="99.7912%" y="69" width="0.1162%" height="15" fill="rgb(246,198,24)" fg:x="378602" fg:w="441"/><text x="100.0412%" y="79.50"></text></g><g><title>exp (421 samples, 0.11%)</title><rect x="99.7965%" y="53" width="0.1110%" height="15" fill="rgb(209,66,40)" fg:x="378622" fg:w="421"/><text x="100.0465%" y="63.50"></text></g><g><title>[libm-2.31.so] (327 samples, 0.09%)</title><rect x="99.8213%" y="37" width="0.0862%" height="15" fill="rgb(233,147,39)" fg:x="378716" fg:w="327"/><text x="100.0713%" y="47.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::recip (112 samples, 0.03%)</title><rect x="99.9075%" y="85" width="0.0295%" height="15" fill="rgb(231,145,52)" fg:x="379043" fg:w="112"/><text x="100.1575%" y="95.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::recip (112 samples, 0.03%)</title><rect x="99.9075%" y="69" width="0.0295%" height="15" fill="rgb(206,20,26)" fg:x="379043" fg:w="112"/><text x="100.1575%" y="79.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (573 samples, 0.15%)</title><rect x="99.7868%" y="101" width="0.1510%" height="15" fill="rgb(238,220,4)" fg:x="378585" fg:w="573"/><text x="100.0368%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4,837 samples, 1.27%)</title><rect x="98.7069%" y="837" width="1.2749%" height="15" fill="rgb(252,195,42)" fg:x="374488" fg:w="4837"/><text x="98.9569%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,837 samples, 1.27%)</title><rect x="98.7069%" y="821" width="1.2749%" height="15" fill="rgb(209,10,6)" fg:x="374488" fg:w="4837"/><text x="98.9569%" y="831.50"></text></g><g><title>rayon_core::join::join_context (4,835 samples, 1.27%)</title><rect x="98.7074%" y="805" width="1.2744%" height="15" fill="rgb(229,3,52)" fg:x="374490" fg:w="4835"/><text x="98.9574%" y="815.50"></text></g><g><title>rayon_core::registry::in_worker (4,835 samples, 1.27%)</title><rect x="98.7074%" y="789" width="1.2744%" height="15" fill="rgb(253,49,37)" fg:x="374490" fg:w="4835"/><text x="98.9574%" y="799.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,835 samples, 1.27%)</title><rect x="98.7074%" y="773" width="1.2744%" height="15" fill="rgb(240,103,49)" fg:x="374490" fg:w="4835"/><text x="98.9574%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2,818 samples, 0.74%)</title><rect x="99.2390%" y="757" width="0.7428%" height="15" fill="rgb(250,182,30)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="767.50"></text></g><g><title>std::panic::catch_unwind (2,818 samples, 0.74%)</title><rect x="99.2390%" y="741" width="0.7428%" height="15" fill="rgb(248,8,30)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="751.50"></text></g><g><title>std::panicking::try (2,818 samples, 0.74%)</title><rect x="99.2390%" y="725" width="0.7428%" height="15" fill="rgb(237,120,30)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="735.50"></text></g><g><title>std::panicking::try::do_call (2,818 samples, 0.74%)</title><rect x="99.2390%" y="709" width="0.7428%" height="15" fill="rgb(221,146,34)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="719.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,818 samples, 0.74%)</title><rect x="99.2390%" y="693" width="0.7428%" height="15" fill="rgb(242,55,13)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (2,818 samples, 0.74%)</title><rect x="99.2390%" y="677" width="0.7428%" height="15" fill="rgb(242,112,31)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (2,818 samples, 0.74%)</title><rect x="99.2390%" y="661" width="0.7428%" height="15" fill="rgb(249,192,27)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,818 samples, 0.74%)</title><rect x="99.2390%" y="645" width="0.7428%" height="15" fill="rgb(208,204,44)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="655.50"></text></g><g><title>rayon_core::join::join_context (2,818 samples, 0.74%)</title><rect x="99.2390%" y="629" width="0.7428%" height="15" fill="rgb(208,93,54)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (2,818 samples, 0.74%)</title><rect x="99.2390%" y="613" width="0.7428%" height="15" fill="rgb(242,1,31)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="623.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (2,818 samples, 0.74%)</title><rect x="99.2390%" y="597" width="0.7428%" height="15" fill="rgb(241,83,25)" fg:x="376507" fg:w="2818"/><text x="99.4890%" y="607.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,520 samples, 0.40%)</title><rect x="99.5812%" y="581" width="0.4006%" height="15" fill="rgb(205,169,50)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="591.50"></text></g><g><title>std::panic::catch_unwind (1,520 samples, 0.40%)</title><rect x="99.5812%" y="565" width="0.4006%" height="15" fill="rgb(239,186,37)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="575.50"></text></g><g><title>std::panicking::try (1,520 samples, 0.40%)</title><rect x="99.5812%" y="549" width="0.4006%" height="15" fill="rgb(205,221,10)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="559.50"></text></g><g><title>std::panicking::try::do_call (1,520 samples, 0.40%)</title><rect x="99.5812%" y="533" width="0.4006%" height="15" fill="rgb(218,196,15)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="543.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,520 samples, 0.40%)</title><rect x="99.5812%" y="517" width="0.4006%" height="15" fill="rgb(218,196,35)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="527.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (1,520 samples, 0.40%)</title><rect x="99.5812%" y="501" width="0.4006%" height="15" fill="rgb(233,63,24)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (1,520 samples, 0.40%)</title><rect x="99.5812%" y="485" width="0.4006%" height="15" fill="rgb(225,8,4)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,520 samples, 0.40%)</title><rect x="99.5812%" y="469" width="0.4006%" height="15" fill="rgb(234,105,35)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="479.50"></text></g><g><title>rayon_core::join::join_context (1,520 samples, 0.40%)</title><rect x="99.5812%" y="453" width="0.4006%" height="15" fill="rgb(236,21,32)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="463.50"></text></g><g><title>rayon_core::registry::in_worker (1,520 samples, 0.40%)</title><rect x="99.5812%" y="437" width="0.4006%" height="15" fill="rgb(228,109,6)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="447.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (1,520 samples, 0.40%)</title><rect x="99.5812%" y="421" width="0.4006%" height="15" fill="rgb(229,215,31)" fg:x="377805" fg:w="1520"/><text x="99.8312%" y="431.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (793 samples, 0.21%)</title><rect x="99.7728%" y="405" width="0.2090%" height="15" fill="rgb(221,52,54)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="415.50"></text></g><g><title>std::panic::catch_unwind (793 samples, 0.21%)</title><rect x="99.7728%" y="389" width="0.2090%" height="15" fill="rgb(252,129,43)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="399.50"></text></g><g><title>std::panicking::try (793 samples, 0.21%)</title><rect x="99.7728%" y="373" width="0.2090%" height="15" fill="rgb(248,183,27)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="383.50"></text></g><g><title>std::panicking::try::do_call (793 samples, 0.21%)</title><rect x="99.7728%" y="357" width="0.2090%" height="15" fill="rgb(250,0,22)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="367.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (793 samples, 0.21%)</title><rect x="99.7728%" y="341" width="0.2090%" height="15" fill="rgb(213,166,10)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="351.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (793 samples, 0.21%)</title><rect x="99.7728%" y="325" width="0.2090%" height="15" fill="rgb(207,163,36)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (793 samples, 0.21%)</title><rect x="99.7728%" y="309" width="0.2090%" height="15" fill="rgb(208,122,22)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (793 samples, 0.21%)</title><rect x="99.7728%" y="293" width="0.2090%" height="15" fill="rgb(207,104,49)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="303.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (793 samples, 0.21%)</title><rect x="99.7728%" y="277" width="0.2090%" height="15" fill="rgb(248,211,50)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="287.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (793 samples, 0.21%)</title><rect x="99.7728%" y="261" width="0.2090%" height="15" fill="rgb(217,13,45)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (793 samples, 0.21%)</title><rect x="99.7728%" y="245" width="0.2090%" height="15" fill="rgb(211,216,49)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (793 samples, 0.21%)</title><rect x="99.7728%" y="229" width="0.2090%" height="15" fill="rgb(221,58,53)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (793 samples, 0.21%)</title><rect x="99.7728%" y="213" width="0.2090%" height="15" fill="rgb(220,112,41)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (793 samples, 0.21%)</title><rect x="99.7728%" y="197" width="0.2090%" height="15" fill="rgb(236,38,28)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (793 samples, 0.21%)</title><rect x="99.7728%" y="181" width="0.2090%" height="15" fill="rgb(227,195,22)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="191.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::{{closure}} (793 samples, 0.21%)</title><rect x="99.7728%" y="165" width="0.2090%" height="15" fill="rgb(214,55,33)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="175.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (793 samples, 0.21%)</title><rect x="99.7728%" y="149" width="0.2090%" height="15" fill="rgb(248,80,13)" fg:x="378532" fg:w="793"/><text x="100.0228%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (782 samples, 0.21%)</title><rect x="99.7757%" y="133" width="0.2061%" height="15" fill="rgb(238,52,6)" fg:x="378543" fg:w="782"/><text x="100.0257%" y="143.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::{{closure}} (740 samples, 0.20%)</title><rect x="99.7868%" y="117" width="0.1950%" height="15" fill="rgb(224,198,47)" fg:x="378585" fg:w="740"/><text x="100.0368%" y="127.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (167 samples, 0.04%)</title><rect x="99.9378%" y="101" width="0.0440%" height="15" fill="rgb(233,171,20)" fg:x="379158" fg:w="167"/><text x="100.1878%" y="111.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (10,067 samples, 2.65%)</title><rect x="97.3331%" y="1109" width="2.6534%" height="15" fill="rgb(241,30,25)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1119.50">ra..</text></g><g><title>rayon_core::job::JobRef::execute (10,067 samples, 2.65%)</title><rect x="97.3331%" y="1093" width="2.6534%" height="15" fill="rgb(207,171,38)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1103.50">ra..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10,067 samples, 2.65%)</title><rect x="97.3331%" y="1077" width="2.6534%" height="15" fill="rgb(234,70,1)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1087.50">&lt;r..</text></g><g><title>rayon_core::unwind::halt_unwinding (10,067 samples, 2.65%)</title><rect x="97.3331%" y="1061" width="2.6534%" height="15" fill="rgb(232,178,18)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1071.50">ra..</text></g><g><title>std::panic::catch_unwind (10,067 samples, 2.65%)</title><rect x="97.3331%" y="1045" width="2.6534%" height="15" fill="rgb(241,78,40)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1055.50">st..</text></g><g><title>std::panicking::try (10,067 samples, 2.65%)</title><rect x="97.3331%" y="1029" width="2.6534%" height="15" fill="rgb(222,35,25)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1039.50">st..</text></g><g><title>std::panicking::try::do_call (10,067 samples, 2.65%)</title><rect x="97.3331%" y="1013" width="2.6534%" height="15" fill="rgb(207,92,16)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1023.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,067 samples, 2.65%)</title><rect x="97.3331%" y="997" width="2.6534%" height="15" fill="rgb(216,59,51)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="1007.50">&lt;s..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (10,067 samples, 2.65%)</title><rect x="97.3331%" y="981" width="2.6534%" height="15" fill="rgb(213,80,28)" fg:x="369276" fg:w="10067"/><text x="97.5831%" y="991.50">&lt;r..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (4,857 samples, 1.28%)</title><rect x="98.7064%" y="965" width="1.2802%" height="15" fill="rgb(220,93,7)" fg:x="374486" fg:w="4857"/><text x="98.9564%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4,857 samples, 1.28%)</title><rect x="98.7064%" y="949" width="1.2802%" height="15" fill="rgb(225,24,44)" fg:x="374486" fg:w="4857"/><text x="98.9564%" y="959.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4,855 samples, 1.28%)</title><rect x="98.7069%" y="933" width="1.2797%" height="15" fill="rgb(243,74,40)" fg:x="374488" fg:w="4855"/><text x="98.9569%" y="943.50"></text></g><g><title>std::panic::catch_unwind (4,855 samples, 1.28%)</title><rect x="98.7069%" y="917" width="1.2797%" height="15" fill="rgb(228,39,7)" fg:x="374488" fg:w="4855"/><text x="98.9569%" y="927.50"></text></g><g><title>std::panicking::try (4,855 samples, 1.28%)</title><rect x="98.7069%" y="901" width="1.2797%" height="15" fill="rgb(227,79,8)" fg:x="374488" fg:w="4855"/><text x="98.9569%" y="911.50"></text></g><g><title>std::panicking::try::do_call (4,855 samples, 1.28%)</title><rect x="98.7069%" y="885" width="1.2797%" height="15" fill="rgb(236,58,11)" fg:x="374488" fg:w="4855"/><text x="98.9569%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,855 samples, 1.28%)</title><rect x="98.7069%" y="869" width="1.2797%" height="15" fill="rgb(249,63,35)" fg:x="374488" fg:w="4855"/><text x="98.9569%" y="879.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4,855 samples, 1.28%)</title><rect x="98.7069%" y="853" width="1.2797%" height="15" fill="rgb(252,114,16)" fg:x="374488" fg:w="4855"/><text x="98.9569%" y="863.50"></text></g><g><title>bench_ex15-de4c (379,344 samples, 99.99%)</title><rect x="0.0000%" y="1413" width="99.9868%" height="15" fill="rgb(254,151,24)" fg:x="0" fg:w="379344"/><text x="0.2500%" y="1423.50">bench_ex15-de4c</text></g><g><title>clone (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1397" width="2.6537%" height="15" fill="rgb(253,54,39)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1407.50">cl..</text></g><g><title>start_thread (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1381" width="2.6537%" height="15" fill="rgb(243,25,45)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1391.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1365" width="2.6537%" height="15" fill="rgb(234,134,9)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1375.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1349" width="2.6537%" height="15" fill="rgb(227,166,31)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1359.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1333" width="2.6537%" height="15" fill="rgb(245,143,41)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1343.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1317" width="2.6537%" height="15" fill="rgb(238,181,32)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1327.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1301" width="2.6537%" height="15" fill="rgb(224,113,18)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1311.50">st..</text></g><g><title>std::panic::catch_unwind (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1285" width="2.6537%" height="15" fill="rgb(240,229,28)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1295.50">st..</text></g><g><title>std::panicking::try (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1269" width="2.6537%" height="15" fill="rgb(250,185,3)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1279.50">st..</text></g><g><title>std::panicking::try::do_call (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1253" width="2.6537%" height="15" fill="rgb(212,59,25)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1263.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1237" width="2.6537%" height="15" fill="rgb(221,87,20)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1247.50">&lt;s..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1221" width="2.6537%" height="15" fill="rgb(213,74,28)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1231.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1205" width="2.6537%" height="15" fill="rgb(224,132,34)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1215.50">st..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1189" width="2.6537%" height="15" fill="rgb(222,101,24)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1199.50">&lt;r..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1173" width="2.6537%" height="15" fill="rgb(254,142,4)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1183.50">ra..</text></g><g><title>rayon_core::registry::main_loop (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1157" width="2.6537%" height="15" fill="rgb(230,229,49)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1167.50">ra..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1141" width="2.6537%" height="15" fill="rgb(238,70,47)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1151.50">ra..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10,068 samples, 2.65%)</title><rect x="97.3331%" y="1125" width="2.6537%" height="15" fill="rgb(231,160,17)" fg:x="369276" fg:w="10068"/><text x="97.5831%" y="1135.50">ra..</text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="99.9871%" y="1397" width="0.0108%" height="15" fill="rgb(218,68,53)" fg:x="379345" fg:w="41"/><text x="100.2371%" y="1407.50"></text></g><g><title>all (379,394 samples, 100%)</title><rect x="0.0000%" y="1429" width="100.0000%" height="15" fill="rgb(236,111,10)" fg:x="0" fg:w="379394"/><text x="0.2500%" y="1439.50"></text></g><g><title>cargo (50 samples, 0.01%)</title><rect x="99.9868%" y="1413" width="0.0132%" height="15" fill="rgb(224,34,41)" fg:x="379344" fg:w="50"/><text x="100.2368%" y="1423.50"></text></g></svg></svg>